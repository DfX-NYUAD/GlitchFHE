	.text
	.file	"4_ckks_basics.cpp"
	.section	.text.startup,"ax",@progbits
	.p2align	4, 0x90                         # -- Begin function __cxx_global_var_init
	.type	__cxx_global_var_init,@function
__cxx_global_var_init:                  # @__cxx_global_var_init
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	leaq	_ZStL8__ioinit(%rip), %rdi
	callq	_ZNSt8ios_base4InitC1Ev@PLT
	movq	_ZNSt8ios_base4InitD1Ev@GOTPCREL(%rip), %rdi
	leaq	_ZStL8__ioinit(%rip), %rsi
	leaq	__dso_handle(%rip), %rdx
	callq	__cxa_atexit@PLT
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end0:
	.size	__cxx_global_var_init, .Lfunc_end0-__cxx_global_var_init
	.cfi_endproc
                                        # -- End function
	.text
	.globl	_Z9toBinary1B5cxx11m            # -- Begin function _Z9toBinary1B5cxx11m
	.p2align	4, 0x90
	.type	_Z9toBinary1B5cxx11m,@function
_Z9toBinary1B5cxx11m:                   # @_Z9toBinary1B5cxx11m
.Lfunc_begin0:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception0
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$160, %rsp
	movq	%rdi, -152(%rbp)                # 8-byte Spill
	movq	%rdi, %rax
	movq	%rax, -144(%rbp)                # 8-byte Spill
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jne	.LBB1_4
# %bb.1:
	leaq	-24(%rbp), %rdi
	movq	%rdi, -160(%rbp)                # 8-byte Spill
	callq	_ZNSaIcEC1Ev@PLT
	movq	-152(%rbp), %rdi                # 8-byte Reload
	movq	-160(%rbp), %rdx                # 8-byte Reload
.Ltmp5:
	leaq	.L.str(%rip), %rsi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_
.Ltmp6:
	jmp	.LBB1_2
.LBB1_2:
	leaq	-24(%rbp), %rdi
	callq	_ZNSaIcED1Ev@PLT
	jmp	.LBB1_14
.LBB1_3:
.Ltmp7:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -32(%rbp)
	movl	%eax, -36(%rbp)
	leaq	-24(%rbp), %rdi
	callq	_ZNSaIcED1Ev@PLT
	jmp	.LBB1_15
.LBB1_4:
	leaq	-72(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@PLT
.LBB1_5:                                # =>This Inner Loop Header: Depth=1
	cmpq	$0, -16(%rbp)
	jbe	.LBB1_13
# %bb.6:                                #   in Loop: Header=BB1_5 Depth=1
	movq	-16(%rbp), %rax
	andq	$1, %rax
	cmpq	$0, %rax
	je	.LBB1_10
# %bb.7:                                #   in Loop: Header=BB1_5 Depth=1
.Ltmp2:
	leaq	.L.str.1(%rip), %rsi
	leaq	-104(%rbp), %rdi
	leaq	-72(%rbp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_
.Ltmp3:
	jmp	.LBB1_8
.LBB1_8:                                #   in Loop: Header=BB1_5 Depth=1
	leaq	-72(%rbp), %rdi
	leaq	-104(%rbp), %rsi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_@PLT
	leaq	-104(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
	jmp	.LBB1_12
.LBB1_9:
.Ltmp4:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -32(%rbp)
	movl	%eax, -36(%rbp)
	leaq	-72(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
	jmp	.LBB1_15
.LBB1_10:                               #   in Loop: Header=BB1_5 Depth=1
.Ltmp0:
	leaq	.L.str(%rip), %rsi
	leaq	-136(%rbp), %rdi
	leaq	-72(%rbp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_
.Ltmp1:
	jmp	.LBB1_11
.LBB1_11:                               #   in Loop: Header=BB1_5 Depth=1
	leaq	-72(%rbp), %rdi
	leaq	-136(%rbp), %rsi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_@PLT
	leaq	-136(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
.LBB1_12:                               #   in Loop: Header=BB1_5 Depth=1
	movq	-16(%rbp), %rax
	shrq	$1, %rax
	movq	%rax, -16(%rbp)
	jmp	.LBB1_5
.LBB1_13:
	movq	-152(%rbp), %rdi                # 8-byte Reload
	leaq	-72(%rbp), %rsi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@PLT
	leaq	-72(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
.LBB1_14:
	movq	-144(%rbp), %rax                # 8-byte Reload
	addq	$160, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB1_15:
	.cfi_def_cfa %rbp, 16
	movq	-32(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end1:
	.size	_Z9toBinary1B5cxx11m, .Lfunc_end1-_Z9toBinary1B5cxx11m
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table1:
.Lexception0:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end0-.Lcst_begin0
.Lcst_begin0:
	.uleb128 .Ltmp5-.Lfunc_begin0           # >> Call Site 1 <<
	.uleb128 .Ltmp6-.Ltmp5                  #   Call between .Ltmp5 and .Ltmp6
	.uleb128 .Ltmp7-.Lfunc_begin0           #     jumps to .Ltmp7
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2-.Lfunc_begin0           # >> Call Site 2 <<
	.uleb128 .Ltmp1-.Ltmp2                  #   Call between .Ltmp2 and .Ltmp1
	.uleb128 .Ltmp4-.Lfunc_begin0           #     jumps to .Ltmp4
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1-.Lfunc_begin0           # >> Call Site 3 <<
	.uleb128 .Lfunc_end1-.Ltmp1             #   Call between .Ltmp1 and .Lfunc_end1
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end0:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_,"axG",@progbits,_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_,comdat
	.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_ # -- Begin function _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_
	.p2align	4, 0x90
	.type	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_,@function
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_: # @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_
.Lfunc_begin1:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception1
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -64(%rbp)                 # 8-byte Spill
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@PLT
	movq	-64(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rsi
	movq	-24(%rbp), %rdx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@PLT
	cmpq	$0, -16(%rbp)
	je	.LBB2_3
# %bb.1:
	movq	-16(%rbp), %rdi
	movq	%rdi, -80(%rbp)                 # 8-byte Spill
.Ltmp8:
	callq	_ZNSt11char_traitsIcE6lengthEPKc
.Ltmp9:
	movq	%rax, -72(%rbp)                 # 8-byte Spill
	jmp	.LBB2_2
.LBB2_2:
	movq	-72(%rbp), %rcx                 # 8-byte Reload
	movq	-80(%rbp), %rax                 # 8-byte Reload
	addq	%rcx, %rax
	movq	%rax, -88(%rbp)                 # 8-byte Spill
	jmp	.LBB2_4
.LBB2_3:
	movl	$1, %eax
	movq	%rax, -88(%rbp)                 # 8-byte Spill
	jmp	.LBB2_4
.LBB2_4:
	movq	-64(%rbp), %rdi                 # 8-byte Reload
	movq	-88(%rbp), %rax                 # 8-byte Reload
	movq	%rax, -32(%rbp)
	movq	-16(%rbp), %rsi
	movq	-32(%rbp), %rdx
.Ltmp10:
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag
.Ltmp11:
	jmp	.LBB2_5
.LBB2_5:
	addq	$96, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB2_6:
	.cfi_def_cfa %rbp, 16
.Ltmp12:
	movq	-64(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -40(%rbp)
	movl	%eax, -44(%rbp)
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev
# %bb.7:
	movq	-40(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end2:
	.size	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_, .Lfunc_end2-_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_,"aG",@progbits,_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_,comdat
	.p2align	2
GCC_except_table2:
.Lexception1:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end1-.Lcst_begin1
.Lcst_begin1:
	.uleb128 .Lfunc_begin1-.Lfunc_begin1    # >> Call Site 1 <<
	.uleb128 .Ltmp8-.Lfunc_begin1           #   Call between .Lfunc_begin1 and .Ltmp8
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp8-.Lfunc_begin1           # >> Call Site 2 <<
	.uleb128 .Ltmp11-.Ltmp8                 #   Call between .Ltmp8 and .Ltmp11
	.uleb128 .Ltmp12-.Lfunc_begin1          #     jumps to .Ltmp12
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp11-.Lfunc_begin1          # >> Call Site 3 <<
	.uleb128 .Lfunc_end2-.Ltmp11            #   Call between .Ltmp11 and .Lfunc_end2
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end1:
	.p2align	2
                                        # -- End function
	.section	.text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_,"axG",@progbits,_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_,comdat
	.weak	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_ # -- Begin function _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_
	.p2align	4, 0x90
	.type	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_,@function
_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_: # @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_
.Lfunc_begin2:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception2
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$112, %rsp
	movq	%rdi, -88(%rbp)                 # 8-byte Spill
	movq	%rdi, %rax
	movq	%rax, -80(%rbp)                 # 8-byte Spill
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZNSt11char_traitsIcE6lengthEPKc
	movq	%rax, -32(%rbp)
	movb	$0, -33(%rbp)
	movq	-24(%rbp), %rsi
	leaq	-48(%rbp), %rdi
	movq	%rdi, -72(%rbp)                 # 8-byte Spill
	callq	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv@PLT
	movq	-72(%rbp), %rsi                 # 8-byte Reload
.Ltmp13:
	leaq	-40(%rbp), %rdi
	callq	_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_
.Ltmp14:
	jmp	.LBB3_1
.LBB3_1:
	movq	-88(%rbp), %rdi                 # 8-byte Reload
	leaq	-40(%rbp), %rsi
	movq	%rsi, -104(%rbp)                # 8-byte Spill
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_@PLT
	movq	-104(%rbp), %rdi                # 8-byte Reload
	callq	_ZNSaIcED1Ev@PLT
	leaq	-48(%rbp), %rdi
	callq	_ZNSaIcED1Ev@PLT
	movq	-32(%rbp), %rax
	movq	%rax, -96(%rbp)                 # 8-byte Spill
	movq	-24(%rbp), %rdi
	callq	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@PLT
	movq	-96(%rbp), %rsi                 # 8-byte Reload
	movq	-88(%rbp), %rdi                 # 8-byte Reload
	addq	%rax, %rsi
.Ltmp16:
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@PLT
.Ltmp17:
	jmp	.LBB3_2
.LBB3_2:
	movq	-88(%rbp), %rdi                 # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	-32(%rbp), %rdx
.Ltmp18:
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm@PLT
.Ltmp19:
	jmp	.LBB3_3
.LBB3_3:
	movq	-88(%rbp), %rdi                 # 8-byte Reload
	movq	-24(%rbp), %rsi
.Ltmp20:
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_@PLT
.Ltmp21:
	jmp	.LBB3_4
.LBB3_4:
	movb	$1, -33(%rbp)
	testb	$1, -33(%rbp)
	jne	.LBB3_8
	jmp	.LBB3_7
.LBB3_5:
.Ltmp15:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -56(%rbp)
	movl	%eax, -60(%rbp)
	leaq	-48(%rbp), %rdi
	callq	_ZNSaIcED1Ev@PLT
	jmp	.LBB3_9
.LBB3_6:
.Ltmp22:
	movq	-88(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -56(%rbp)
	movl	%eax, -60(%rbp)
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
	jmp	.LBB3_9
.LBB3_7:
	movq	-88(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
.LBB3_8:
	movq	-80(%rbp), %rax                 # 8-byte Reload
	addq	$112, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB3_9:
	.cfi_def_cfa %rbp, 16
	movq	-56(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end3:
	.size	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_, .Lfunc_end3-_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_
	.cfi_endproc
	.section	.gcc_except_table._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_,"aG",@progbits,_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_,comdat
	.p2align	2
GCC_except_table3:
.Lexception2:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end2-.Lcst_begin2
.Lcst_begin2:
	.uleb128 .Lfunc_begin2-.Lfunc_begin2    # >> Call Site 1 <<
	.uleb128 .Ltmp13-.Lfunc_begin2          #   Call between .Lfunc_begin2 and .Ltmp13
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp13-.Lfunc_begin2          # >> Call Site 2 <<
	.uleb128 .Ltmp14-.Ltmp13                #   Call between .Ltmp13 and .Ltmp14
	.uleb128 .Ltmp15-.Lfunc_begin2          #     jumps to .Ltmp15
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp16-.Lfunc_begin2          # >> Call Site 3 <<
	.uleb128 .Ltmp21-.Ltmp16                #   Call between .Ltmp16 and .Ltmp21
	.uleb128 .Ltmp22-.Lfunc_begin2          #     jumps to .Ltmp22
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp21-.Lfunc_begin2          # >> Call Site 4 <<
	.uleb128 .Lfunc_end3-.Ltmp21            #   Call between .Ltmp21 and .Lfunc_end3
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end2:
	.p2align	2
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3                               # -- Begin function _Z10toDecimal1NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.LCPI4_0:
	.quad	0x43e0000000000000              # double 9.2233720368547758E+18
	.text
	.globl	_Z10toDecimal1NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.p2align	4, 0x90
	.type	_Z10toDecimal1NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,@function
_Z10toDecimal1NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE: # @_Z10toDecimal1NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)                 # 8-byte Spill
	movl	$0, -8(%rbp)
	movq	$0, -24(%rbp)
	callq	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@PLT
                                        # kill: def $eax killed $eax killed $rax
	movl	%eax, -4(%rbp)
	movl	-4(%rbp), %eax
	subl	$1, %eax
	movl	%eax, -12(%rbp)
	movl	$0, -8(%rbp)
	movl	-4(%rbp), %eax
	subl	$1, %eax
	movl	%eax, -12(%rbp)
.LBB4_1:                                # =>This Inner Loop Header: Depth=1
	cmpl	$0, -12(%rbp)
	jl	.LBB4_6
# %bb.2:                                #   in Loop: Header=BB4_1 Depth=1
	movq	-40(%rbp), %rdi                 # 8-byte Reload
	movslq	-12(%rbp), %rsi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm@PLT
	movsbl	(%rax), %eax
	cmpl	$49, %eax
	jne	.LBB4_4
# %bb.3:                                #   in Loop: Header=BB4_1 Depth=1
	movl	-8(%rbp), %esi
	movl	$2, %edi
	callq	_ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_Xsr3std12__is_integerIS2_EE7__valueEE6__typeENS4_IS3_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEE6__typeES2_S3_
	movaps	%xmm0, %xmm1
	cvttsd2si	%xmm1, %rax
	movq	%rax, %rdx
	sarq	$63, %rdx
	movsd	.LCPI4_0(%rip), %xmm1           # xmm1 = mem[0],zero
	subsd	%xmm1, %xmm0
	cvttsd2si	%xmm0, %rcx
	andq	%rdx, %rcx
	orq	%rcx, %rax
	movq	%rax, -32(%rbp)
	movq	-24(%rbp), %rax
	addq	-32(%rbp), %rax
	movq	%rax, -24(%rbp)
.LBB4_4:                                #   in Loop: Header=BB4_1 Depth=1
	movl	-8(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -8(%rbp)
# %bb.5:                                #   in Loop: Header=BB4_1 Depth=1
	movl	-12(%rbp), %eax
	addl	$-1, %eax
	movl	%eax, -12(%rbp)
	jmp	.LBB4_1
.LBB4_6:
	movq	-24(%rbp), %rax
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end4:
	.size	_Z10toDecimal1NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, .Lfunc_end4-_Z10toDecimal1NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_Xsr3std12__is_integerIS2_EE7__valueEE6__typeENS4_IS3_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEE6__typeES2_S3_,"axG",@progbits,_ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_Xsr3std12__is_integerIS2_EE7__valueEE6__typeENS4_IS3_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEE6__typeES2_S3_,comdat
	.weak	_ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_Xsr3std12__is_integerIS2_EE7__valueEE6__typeENS4_IS3_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEE6__typeES2_S3_ # -- Begin function _ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_Xsr3std12__is_integerIS2_EE7__valueEE6__typeENS4_IS3_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEE6__typeES2_S3_
	.p2align	4, 0x90
	.type	_ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_Xsr3std12__is_integerIS2_EE7__valueEE6__typeENS4_IS3_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEE6__typeES2_S3_,@function
_ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_Xsr3std12__is_integerIS2_EE7__valueEE6__typeENS4_IS3_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEE6__typeES2_S3_: # @_ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_Xsr3std12__is_integerIS2_EE7__valueEE6__typeENS4_IS3_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEE6__typeES2_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movl	%edi, -4(%rbp)
	movl	%esi, -8(%rbp)
	cvtsi2sdl	-4(%rbp), %xmm0
	cvtsi2sdl	-8(%rbp), %xmm1
	callq	pow@PLT
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end5:
	.size	_ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_Xsr3std12__is_integerIS2_EE7__valueEE6__typeENS4_IS3_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEE6__typeES2_S3_, .Lfunc_end5-_ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_Xsr3std12__is_integerIS2_EE7__valueEE6__typeENS4_IS3_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEE6__typeES2_S3_
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3                               # -- Begin function _Z19example_ckks_basicsv
.LCPI6_0:
	.quad	0x4000000000000000              # double 2
.LCPI6_1:
	.quad	0x3ff0000000000000              # double 1
.LCPI6_4:
	.quad	0x400921fb53c8d4f1              # double 3.1415926500000002
.LCPI6_5:
	.quad	0x3fd999999999999a              # double 0.40000000000000002
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4
.LCPI6_2:
	.long	1127219200                      # 0x43300000
	.long	1160773632                      # 0x45300000
	.long	0                               # 0x0
	.long	0                               # 0x0
.LCPI6_3:
	.quad	0x4330000000000000              # double 4503599627370496
	.quad	0x4530000000000000              # double 1.9342813113834067E+25
	.text
	.globl	_Z19example_ckks_basicsv
	.p2align	4, 0x90
	.type	_Z19example_ckks_basicsv,@function
_Z19example_ckks_basicsv:               # @_Z19example_ckks_basicsv
.Lfunc_begin3:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception3
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$6128, %rsp                     # imm = 0x17F0
	leaq	-40(%rbp), %rdi
	movq	%rdi, -5408(%rbp)               # 8-byte Spill
	callq	_ZNSaIcEC1Ev@PLT
	movq	-5408(%rbp), %rdx               # 8-byte Reload
.Ltmp23:
	leaq	.L.str.2(%rip), %rsi
	leaq	-32(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_
.Ltmp24:
	jmp	.LBB6_1
.LBB6_1:
.Ltmp26:
	leaq	-32(%rbp), %rdi
	callq	_Z20print_example_bannerNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp27:
	jmp	.LBB6_2
.LBB6_2:
	leaq	-32(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
	leaq	-40(%rbp), %rdi
	callq	_ZNSaIcED1Ev@PLT
	leaq	-568(%rbp), %rdi
	leaq	.L.str.3(%rip), %rsi
	movl	$16, %edx
	callq	_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1EPKcSt13_Ios_Openmode@PLT
	xorl	%eax, %eax
	movl	%eax, %edi
	callq	time@PLT
	movl	%eax, %edi
	callq	srand@PLT
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -576(%rbp)
	movl	$0, -580(%rbp)
.LBB6_3:                                # =>This Loop Header: Depth=1
                                        #     Child Loop BB6_5 Depth 2
                                        #       Child Loop BB6_16 Depth 3
                                        #       Child Loop BB6_52 Depth 3
                                        #       Child Loop BB6_148 Depth 3
                                        #       Child Loop BB6_264 Depth 3
                                        #       Child Loop BB6_292 Depth 3
	cmpl	$1, -580(%rbp)
	jge	.LBB6_339
# %bb.4:                                #   in Loop: Header=BB6_3 Depth=1
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -592(%rbp)
	movl	$0, -596(%rbp)
.LBB6_5:                                #   Parent Loop BB6_3 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB6_16 Depth 3
                                        #       Child Loop BB6_52 Depth 3
                                        #       Child Loop BB6_148 Depth 3
                                        #       Child Loop BB6_264 Depth 3
                                        #       Child Loop BB6_292 Depth 3
	cmpl	$2, -596(%rbp)
	jge	.LBB6_337
# %bb.6:                                #   in Loop: Header=BB6_5 Depth=2
.Ltmp29:
	leaq	-752(%rbp), %rdi
	movl	$2, %esi
	callq	_ZN4seal20EncryptionParametersC2ENS_11scheme_typeE
.Ltmp30:
	jmp	.LBB6_7
.LBB6_7:                                #   in Loop: Header=BB6_5 Depth=2
	movslq	-596(%rbp), %rax
	movabsq	$773092966401, %rcx             # imm = 0xB3FFEE8001
	imulq	%rcx, %rax
	cvtsi2sd	%rax, %xmm0
	movsd	%xmm0, -760(%rbp)
	movq	$8192, -768(%rbp)               # imm = 0x2000
	movq	-768(%rbp), %rsi
.Ltmp32:
	leaq	-752(%rbp), %rdi
	callq	_ZN4seal20EncryptionParameters23set_poly_modulus_degreeEm
.Ltmp33:
	jmp	.LBB6_8
.LBB6_8:                                #   in Loop: Header=BB6_5 Depth=2
	movq	-768(%rbp), %rax
	movq	%rax, -5424(%rbp)               # 8-byte Spill
	movl	$60, -848(%rbp)
	movl	$40, -844(%rbp)
	movl	$40, -840(%rbp)
	movl	$60, -836(%rbp)
	leaq	-848(%rbp), %rax
	movq	%rax, -832(%rbp)
	movq	$4, -824(%rbp)
	leaq	-856(%rbp), %rdi
	movq	%rdi, -5416(%rbp)               # 8-byte Spill
	callq	_ZNSaIiEC2Ev
	movq	-5416(%rbp), %rcx               # 8-byte Reload
	movq	-832(%rbp), %rsi
	movq	-824(%rbp), %rdx
.Ltmp34:
	leaq	-816(%rbp), %rdi
	callq	_ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_
.Ltmp35:
	jmp	.LBB6_9
.LBB6_9:                                #   in Loop: Header=BB6_5 Depth=2
.Ltmp37:
	movq	-5424(%rbp), %rsi               # 8-byte Reload
	leaq	-792(%rbp), %rdi
	leaq	-816(%rbp), %rdx
	callq	_ZN4seal12CoeffModulus6CreateEmSt6vectorIiSaIiEE@PLT
.Ltmp38:
	jmp	.LBB6_10
.LBB6_10:                               #   in Loop: Header=BB6_5 Depth=2
.Ltmp40:
	leaq	-752(%rbp), %rdi
	leaq	-792(%rbp), %rsi
	callq	_ZN4seal20EncryptionParameters17set_coeff_modulusERKSt6vectorINS_7ModulusESaIS2_EE
.Ltmp41:
	jmp	.LBB6_11
.LBB6_11:                               #   in Loop: Header=BB6_5 Depth=2
	leaq	-792(%rbp), %rdi
	callq	_ZNSt6vectorIN4seal7ModulusESaIS1_EED2Ev
	leaq	-816(%rbp), %rdi
	callq	_ZNSt6vectorIiSaIiEED2Ev
	leaq	-856(%rbp), %rdi
	callq	_ZNSaIiED2Ev
.Ltmp43:
	movsd	.LCPI6_0(%rip), %xmm0           # xmm0 = mem[0],zero
	movl	$40, %edi
	callq	_ZSt3powIdiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_Xsr3std12__is_integerIS2_EE7__valueEE6__typeENS4_IS3_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEE6__typeES2_S3_
.Ltmp44:
	movsd	%xmm0, -5432(%rbp)              # 8-byte Spill
	jmp	.LBB6_12
.LBB6_12:                               #   in Loop: Header=BB6_5 Depth=2
	movsd	-5432(%rbp), %xmm0              # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movsd	%xmm0, -864(%rbp)
.Ltmp45:
	leaq	-1040(%rbp), %rdi
	leaq	-752(%rbp), %rsi
	movl	$1, %edx
	movl	$128, %ecx
	callq	_ZN4seal11SEALContextC2ERKNS_20EncryptionParametersEbNS_14sec_level_typeE
.Ltmp46:
	jmp	.LBB6_13
.LBB6_13:                               #   in Loop: Header=BB6_5 Depth=2
.Ltmp48:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.4(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp49:
	movq	%rax, -5440(%rbp)               # 8-byte Spill
	jmp	.LBB6_14
.LBB6_14:                               #   in Loop: Header=BB6_5 Depth=2
.Ltmp50:
	movq	-5440(%rbp), %rdi               # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp51:
	jmp	.LBB6_15
.LBB6_15:                               #   in Loop: Header=BB6_5 Depth=2
	leaq	-752(%rbp), %rdi
	callq	_ZNK4seal20EncryptionParameters13coeff_modulusEv
	movq	%rax, -1048(%rbp)
	movq	-1048(%rbp), %rdi
	callq	_ZNKSt6vectorIN4seal7ModulusESaIS1_EE5beginEv
	movq	%rax, -1056(%rbp)
	movq	-1048(%rbp), %rdi
	callq	_ZNKSt6vectorIN4seal7ModulusESaIS1_EE3endEv
	movq	%rax, -1064(%rbp)
.LBB6_16:                               #   Parent Loop BB6_3 Depth=1
                                        #     Parent Loop BB6_5 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	leaq	-1056(%rbp), %rdi
	leaq	-1064(%rbp), %rsi
	callq	_ZN9__gnu_cxxneIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_
	testb	$1, %al
	jne	.LBB6_17
	jmp	.LBB6_32
.LBB6_17:                               #   in Loop: Header=BB6_16 Depth=3
	leaq	-1056(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEdeEv
	movq	%rax, -1072(%rbp)
	movq	-1072(%rbp), %rdi
	callq	_ZNK4seal7Modulus5valueEv
	movq	%rax, %rsi
.Ltmp520:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	callq	_ZNSolsEm@PLT
.Ltmp521:
	movq	%rax, -5448(%rbp)               # 8-byte Spill
	jmp	.LBB6_18
.LBB6_18:                               #   in Loop: Header=BB6_16 Depth=3
.Ltmp522:
	movq	-5448(%rbp), %rdi               # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp523:
	jmp	.LBB6_19
.LBB6_19:                               #   in Loop: Header=BB6_16 Depth=3
	jmp	.LBB6_20
.LBB6_20:                               #   in Loop: Header=BB6_16 Depth=3
	leaq	-1056(%rbp), %rdi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEppEv
	jmp	.LBB6_16
.LBB6_21:
.Ltmp25:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	jmp	.LBB6_23
.LBB6_22:
.Ltmp28:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	leaq	-32(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
.LBB6_23:
	leaq	-40(%rbp), %rdi
	callq	_ZNSaIcED1Ev@PLT
	jmp	.LBB6_341
.LBB6_24:
.Ltmp31:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	jmp	.LBB6_340
.LBB6_25:
.Ltmp47:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	jmp	.LBB6_336
.LBB6_26:
.Ltmp36:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	jmp	.LBB6_30
.LBB6_27:
.Ltmp39:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	jmp	.LBB6_29
.LBB6_28:
.Ltmp42:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	leaq	-792(%rbp), %rdi
	callq	_ZNSt6vectorIN4seal7ModulusESaIS1_EED2Ev
.LBB6_29:
	leaq	-816(%rbp), %rdi
	callq	_ZNSt6vectorIiSaIiEED2Ev
.LBB6_30:
	leaq	-856(%rbp), %rdi
	callq	_ZNSaIiED2Ev
	jmp	.LBB6_336
.LBB6_31:
.Ltmp524:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	jmp	.LBB6_335
.LBB6_32:                               #   in Loop: Header=BB6_5 Depth=2
.Ltmp52:
	leaq	-1040(%rbp), %rdi
	callq	_Z16print_parametersRKN4seal11SEALContextE
.Ltmp53:
	jmp	.LBB6_33
.LBB6_33:                               #   in Loop: Header=BB6_5 Depth=2
.Ltmp54:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp55:
	jmp	.LBB6_34
.LBB6_34:                               #   in Loop: Header=BB6_5 Depth=2
.Ltmp56:
	leaq	-1480(%rbp), %rdi
	leaq	-1040(%rbp), %rsi
	callq	_ZN4seal12KeyGeneratorC1ERKNS_11SEALContextE@PLT
.Ltmp57:
	jmp	.LBB6_35
.LBB6_35:                               #   in Loop: Header=BB6_5 Depth=2
.Ltmp58:
	leaq	-1480(%rbp), %rdi
	callq	_ZNK4seal12KeyGenerator10secret_keyEv@PLT
.Ltmp59:
	movq	%rax, -5456(%rbp)               # 8-byte Spill
	jmp	.LBB6_36
.LBB6_36:                               #   in Loop: Header=BB6_5 Depth=2
.Ltmp60:
	movq	-5456(%rbp), %rsi               # 8-byte Reload
	leaq	-1592(%rbp), %rdi
	callq	_ZN4seal9SecretKeyC2ERKS0_
.Ltmp61:
	jmp	.LBB6_37
.LBB6_37:                               #   in Loop: Header=BB6_5 Depth=2
.Ltmp63:
	leaq	-1728(%rbp), %rdi
	callq	_ZN4seal9PublicKeyC2Ev
.Ltmp64:
	jmp	.LBB6_38
.LBB6_38:                               #   in Loop: Header=BB6_5 Depth=2
.Ltmp66:
	leaq	-1480(%rbp), %rdi
	leaq	-1728(%rbp), %rsi
	callq	_ZNK4seal12KeyGenerator17create_public_keyERNS_9PublicKeyE
.Ltmp67:
	jmp	.LBB6_39
.LBB6_39:                               #   in Loop: Header=BB6_5 Depth=2
.Ltmp68:
	leaq	-1800(%rbp), %rdi
	callq	_ZN4seal9RelinKeysC2Ev
.Ltmp69:
	jmp	.LBB6_40
.LBB6_40:                               #   in Loop: Header=BB6_5 Depth=2
.Ltmp71:
	leaq	-1480(%rbp), %rdi
	leaq	-1800(%rbp), %rsi
	callq	_ZN4seal12KeyGenerator17create_relin_keysERNS_9RelinKeysE
.Ltmp72:
	jmp	.LBB6_41
.LBB6_41:                               #   in Loop: Header=BB6_5 Depth=2
.Ltmp73:
	leaq	-1872(%rbp), %rdi
	callq	_ZN4seal10GaloisKeysC2Ev
.Ltmp74:
	jmp	.LBB6_42
.LBB6_42:                               #   in Loop: Header=BB6_5 Depth=2
.Ltmp76:
	leaq	-1480(%rbp), %rdi
	leaq	-1872(%rbp), %rsi
	callq	_ZN4seal12KeyGenerator18create_galois_keysERNS_10GaloisKeysE
.Ltmp77:
	jmp	.LBB6_43
.LBB6_43:                               #   in Loop: Header=BB6_5 Depth=2
.Ltmp78:
	leaq	-2296(%rbp), %rdi
	leaq	-1040(%rbp), %rsi
	leaq	-1728(%rbp), %rdx
	callq	_ZN4seal9EncryptorC1ERKNS_11SEALContextERKNS_9PublicKeyE@PLT
.Ltmp79:
	jmp	.LBB6_44
.LBB6_44:                               #   in Loop: Header=BB6_5 Depth=2
.Ltmp81:
	leaq	-2520(%rbp), %rdi
	leaq	-1040(%rbp), %rsi
	callq	_ZN4seal9EvaluatorC1ERKNS_11SEALContextE@PLT
.Ltmp82:
	jmp	.LBB6_45
.LBB6_45:                               #   in Loop: Header=BB6_5 Depth=2
.Ltmp84:
	leaq	-2808(%rbp), %rdi
	leaq	-1040(%rbp), %rsi
	leaq	-1592(%rbp), %rdx
	callq	_ZN4seal9DecryptorC1ERKNS_11SEALContextERKNS_9SecretKeyE@PLT
.Ltmp85:
	jmp	.LBB6_46
.LBB6_46:                               #   in Loop: Header=BB6_5 Depth=2
.Ltmp87:
	leaq	-3128(%rbp), %rdi
	leaq	-1040(%rbp), %rsi
	callq	_ZN4seal11CKKSEncoderC1ERKNS_11SEALContextE@PLT
.Ltmp88:
	jmp	.LBB6_47
.LBB6_47:                               #   in Loop: Header=BB6_5 Depth=2
	leaq	-3128(%rbp), %rdi
	callq	_ZNK4seal11CKKSEncoder10slot_countEv
	movq	%rax, -3136(%rbp)
.Ltmp90:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.5(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp91:
	movq	%rax, -5464(%rbp)               # 8-byte Spill
	jmp	.LBB6_48
.LBB6_48:                               #   in Loop: Header=BB6_5 Depth=2
	movq	-5464(%rbp), %rdi               # 8-byte Reload
	movq	-3136(%rbp), %rsi
.Ltmp92:
	callq	_ZNSolsEm@PLT
.Ltmp93:
	movq	%rax, -5472(%rbp)               # 8-byte Spill
	jmp	.LBB6_49
.LBB6_49:                               #   in Loop: Header=BB6_5 Depth=2
.Ltmp94:
	movq	-5472(%rbp), %rdi               # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp95:
	jmp	.LBB6_50
.LBB6_50:                               #   in Loop: Header=BB6_5 Depth=2
	leaq	-3160(%rbp), %rdi
	movq	%rdi, -5480(%rbp)               # 8-byte Spill
	callq	_ZNSt6vectorIdSaIdEEC2Ev
	movq	-5480(%rbp), %rdi               # 8-byte Reload
	movq	-3136(%rbp), %rsi
.Ltmp97:
	callq	_ZNSt6vectorIdSaIdEE7reserveEm
.Ltmp98:
	jmp	.LBB6_51
.LBB6_51:                               #   in Loop: Header=BB6_5 Depth=2
	movsd	-592(%rbp), %xmm0               # xmm0 = mem[0],zero
	movsd	%xmm0, -3168(%rbp)
	movaps	.LCPI6_2(%rip), %xmm0           # xmm0 = [1127219200,1160773632,0,0]
	movq	-3136(%rbp), %xmm1              # xmm1 = mem[0],zero
	punpckldq	%xmm0, %xmm1            # xmm1 = xmm1[0],xmm0[0],xmm1[1],xmm0[1]
	movapd	.LCPI6_3(%rip), %xmm0           # xmm0 = [4.503599627370496E+15,1.9342813113834067E+25]
	subpd	%xmm0, %xmm1
	movaps	%xmm1, %xmm0
	unpckhpd	%xmm1, %xmm1                    # xmm1 = xmm1[1,1]
	addsd	%xmm0, %xmm1
	movsd	.LCPI6_1(%rip), %xmm0           # xmm0 = mem[0],zero
	subsd	%xmm0, %xmm1
	movsd	.LCPI6_1(%rip), %xmm0           # xmm0 = mem[0],zero
	divsd	%xmm1, %xmm0
	movsd	%xmm0, -3176(%rbp)
	movq	$0, -3184(%rbp)
.LBB6_52:                               #   Parent Loop BB6_3 Depth=1
                                        #     Parent Loop BB6_5 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movq	-3184(%rbp), %rax
	cmpq	-3136(%rbp), %rax
	jae	.LBB6_66
# %bb.53:                               #   in Loop: Header=BB6_52 Depth=3
.Ltmp517:
	leaq	-3160(%rbp), %rdi
	leaq	-3168(%rbp), %rsi
	callq	_ZNSt6vectorIdSaIdEE9push_backERKd
.Ltmp518:
	jmp	.LBB6_54
.LBB6_54:                               #   in Loop: Header=BB6_52 Depth=3
	movsd	-3176(%rbp), %xmm0              # xmm0 = mem[0],zero
	addsd	-3168(%rbp), %xmm0
	movsd	%xmm0, -3168(%rbp)
# %bb.55:                               #   in Loop: Header=BB6_52 Depth=3
	movq	-3184(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -3184(%rbp)
	jmp	.LBB6_52
.LBB6_56:
.Ltmp62:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	jmp	.LBB6_334
.LBB6_57:
.Ltmp65:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	jmp	.LBB6_333
.LBB6_58:
.Ltmp70:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	jmp	.LBB6_332
.LBB6_59:
.Ltmp75:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	jmp	.LBB6_331
.LBB6_60:
.Ltmp80:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	jmp	.LBB6_330
.LBB6_61:
.Ltmp83:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	jmp	.LBB6_329
.LBB6_62:
.Ltmp86:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	jmp	.LBB6_328
.LBB6_63:
.Ltmp89:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	jmp	.LBB6_327
.LBB6_64:
.Ltmp96:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	jmp	.LBB6_326
.LBB6_65:
.Ltmp519:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	jmp	.LBB6_325
.LBB6_66:                               #   in Loop: Header=BB6_5 Depth=2
.Ltmp99:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.6(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp100:
	movq	%rax, -5488(%rbp)               # 8-byte Spill
	jmp	.LBB6_67
.LBB6_67:                               #   in Loop: Header=BB6_5 Depth=2
.Ltmp101:
	movq	-5488(%rbp), %rdi               # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp102:
	jmp	.LBB6_68
.LBB6_68:                               #   in Loop: Header=BB6_5 Depth=2
.Ltmp103:
	leaq	-3208(%rbp), %rdi
	leaq	-3160(%rbp), %rsi
	callq	_ZNSt6vectorIdSaIdEEC2ERKS1_
.Ltmp104:
	jmp	.LBB6_69
.LBB6_69:                               #   in Loop: Header=BB6_5 Depth=2
.Ltmp105:
	leaq	-3208(%rbp), %rdi
	movl	$3, %esi
	movl	$7, %edx
	callq	_Z12print_vectorIdEvSt6vectorIT_SaIS1_EEmi
.Ltmp106:
	jmp	.LBB6_70
.LBB6_70:                               #   in Loop: Header=BB6_5 Depth=2
	leaq	-3208(%rbp), %rdi
	callq	_ZNSt6vectorIdSaIdEED2Ev
.Ltmp108:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.7(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp109:
	movq	%rax, -5496(%rbp)               # 8-byte Spill
	jmp	.LBB6_71
.LBB6_71:                               #   in Loop: Header=BB6_5 Depth=2
.Ltmp110:
	movq	-5496(%rbp), %rdi               # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp111:
	jmp	.LBB6_72
.LBB6_72:                               #   in Loop: Header=BB6_5 Depth=2
.Ltmp112:
	leaq	-3336(%rbp), %rdi
	callq	_ZN4seal13MemoryManager7GetPoolEv
.Ltmp113:
	jmp	.LBB6_73
.LBB6_73:                               #   in Loop: Header=BB6_5 Depth=2
.Ltmp114:
	leaq	-3320(%rbp), %rdi
	leaq	-3336(%rbp), %rsi
	callq	_ZN4seal9PlaintextC2ENS_16MemoryPoolHandleE
.Ltmp115:
	jmp	.LBB6_74
.LBB6_74:                               #   in Loop: Header=BB6_5 Depth=2
	leaq	-3336(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
.Ltmp117:
	leaq	-3464(%rbp), %rdi
	callq	_ZN4seal13MemoryManager7GetPoolEv
.Ltmp118:
	jmp	.LBB6_75
.LBB6_75:                               #   in Loop: Header=BB6_5 Depth=2
.Ltmp120:
	leaq	-3448(%rbp), %rdi
	leaq	-3464(%rbp), %rsi
	callq	_ZN4seal9PlaintextC2ENS_16MemoryPoolHandleE
.Ltmp121:
	jmp	.LBB6_76
.LBB6_76:                               #   in Loop: Header=BB6_5 Depth=2
	leaq	-3464(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
.Ltmp123:
	leaq	-3592(%rbp), %rdi
	callq	_ZN4seal13MemoryManager7GetPoolEv
.Ltmp124:
	jmp	.LBB6_77
.LBB6_77:                               #   in Loop: Header=BB6_5 Depth=2
.Ltmp126:
	leaq	-3576(%rbp), %rdi
	leaq	-3592(%rbp), %rsi
	callq	_ZN4seal9PlaintextC2ENS_16MemoryPoolHandleE
.Ltmp127:
	jmp	.LBB6_78
.LBB6_78:                               #   in Loop: Header=BB6_5 Depth=2
	leaq	-3592(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	movsd	-864(%rbp), %xmm0               # xmm0 = mem[0],zero
	movsd	%xmm0, -5504(%rbp)              # 8-byte Spill
.Ltmp129:
	leaq	-3608(%rbp), %rdi
	callq	_ZN4seal13MemoryManager7GetPoolEv
.Ltmp130:
	jmp	.LBB6_79
.LBB6_79:                               #   in Loop: Header=BB6_5 Depth=2
.Ltmp131:
	movsd	-5504(%rbp), %xmm1              # 8-byte Reload
                                        # xmm1 = mem[0],zero
	leaq	-3128(%rbp), %rdi
	movsd	.LCPI6_4(%rip), %xmm0           # xmm0 = mem[0],zero
	leaq	-3320(%rbp), %rsi
	leaq	-3608(%rbp), %rdx
	callq	_ZN4seal11CKKSEncoder6encodeEddRNS_9PlaintextENS_16MemoryPoolHandleE
.Ltmp132:
	jmp	.LBB6_80
.LBB6_80:                               #   in Loop: Header=BB6_5 Depth=2
	leaq	-3608(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	movsd	-864(%rbp), %xmm0               # xmm0 = mem[0],zero
	movsd	%xmm0, -5512(%rbp)              # 8-byte Spill
.Ltmp134:
	leaq	-3624(%rbp), %rdi
	callq	_ZN4seal13MemoryManager7GetPoolEv
.Ltmp135:
	jmp	.LBB6_81
.LBB6_81:                               #   in Loop: Header=BB6_5 Depth=2
.Ltmp136:
	movsd	-5512(%rbp), %xmm1              # 8-byte Reload
                                        # xmm1 = mem[0],zero
	leaq	-3128(%rbp), %rdi
	movsd	.LCPI6_5(%rip), %xmm0           # xmm0 = mem[0],zero
	leaq	-3448(%rbp), %rsi
	leaq	-3624(%rbp), %rdx
	callq	_ZN4seal11CKKSEncoder6encodeEddRNS_9PlaintextENS_16MemoryPoolHandleE
.Ltmp137:
	jmp	.LBB6_82
.LBB6_82:                               #   in Loop: Header=BB6_5 Depth=2
	leaq	-3624(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	movsd	-864(%rbp), %xmm0               # xmm0 = mem[0],zero
	movsd	%xmm0, -5520(%rbp)              # 8-byte Spill
.Ltmp139:
	leaq	-3640(%rbp), %rdi
	callq	_ZN4seal13MemoryManager7GetPoolEv
.Ltmp140:
	jmp	.LBB6_83
.LBB6_83:                               #   in Loop: Header=BB6_5 Depth=2
.Ltmp141:
	movsd	-5520(%rbp), %xmm1              # 8-byte Reload
                                        # xmm1 = mem[0],zero
	leaq	-3128(%rbp), %rdi
	movsd	.LCPI6_1(%rip), %xmm0           # xmm0 = mem[0],zero
	leaq	-3576(%rbp), %rsi
	leaq	-3640(%rbp), %rdx
	callq	_ZN4seal11CKKSEncoder6encodeEddRNS_9PlaintextENS_16MemoryPoolHandleE
.Ltmp142:
	jmp	.LBB6_84
.LBB6_84:                               #   in Loop: Header=BB6_5 Depth=2
	leaq	-3640(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
.Ltmp144:
	leaq	-3768(%rbp), %rdi
	callq	_ZN4seal13MemoryManager7GetPoolEv
.Ltmp145:
	jmp	.LBB6_85
.LBB6_85:                               #   in Loop: Header=BB6_5 Depth=2
.Ltmp147:
	leaq	-3752(%rbp), %rdi
	leaq	-3768(%rbp), %rsi
	callq	_ZN4seal9PlaintextC2ENS_16MemoryPoolHandleE
.Ltmp148:
	jmp	.LBB6_86
.LBB6_86:                               #   in Loop: Header=BB6_5 Depth=2
	leaq	-3768(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
.Ltmp150:
	movl	$203, %edi
	callq	_Z10print_linei
.Ltmp151:
	jmp	.LBB6_87
.LBB6_87:                               #   in Loop: Header=BB6_5 Depth=2
.Ltmp152:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.8(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp153:
	movq	%rax, -5528(%rbp)               # 8-byte Spill
	jmp	.LBB6_88
.LBB6_88:                               #   in Loop: Header=BB6_5 Depth=2
.Ltmp154:
	movq	-5528(%rbp), %rdi               # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp155:
	jmp	.LBB6_89
.LBB6_89:                               #   in Loop: Header=BB6_5 Depth=2
	movsd	-864(%rbp), %xmm0               # xmm0 = mem[0],zero
	movsd	%xmm0, -5536(%rbp)              # 8-byte Spill
.Ltmp156:
	leaq	-3784(%rbp), %rdi
	callq	_ZN4seal13MemoryManager7GetPoolEv
.Ltmp157:
	jmp	.LBB6_90
.LBB6_90:                               #   in Loop: Header=BB6_5 Depth=2
.Ltmp158:
	movsd	-5536(%rbp), %xmm0              # 8-byte Reload
                                        # xmm0 = mem[0],zero
	leaq	-3128(%rbp), %rdi
	leaq	-3160(%rbp), %rsi
	leaq	-3752(%rbp), %rdx
	leaq	-3784(%rbp), %rcx
	callq	_ZN4seal11CKKSEncoder6encodeIdvEEvRKSt6vectorIT_SaIS3_EEdRNS_9PlaintextENS_16MemoryPoolHandleE
.Ltmp159:
	jmp	.LBB6_91
.LBB6_91:                               #   in Loop: Header=BB6_5 Depth=2
	leaq	-3784(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
.Ltmp161:
	leaq	-3936(%rbp), %rdi
	callq	_ZN4seal13MemoryManager7GetPoolEv
.Ltmp162:
	jmp	.LBB6_92
.LBB6_92:                               #   in Loop: Header=BB6_5 Depth=2
.Ltmp164:
	leaq	-3920(%rbp), %rdi
	leaq	-3936(%rbp), %rsi
	callq	_ZN4seal10CiphertextC2ENS_16MemoryPoolHandleE
.Ltmp165:
	jmp	.LBB6_93
.LBB6_93:                               #   in Loop: Header=BB6_5 Depth=2
	leaq	-3936(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
.Ltmp167:
	leaq	-3952(%rbp), %rdi
	callq	_ZN4seal13MemoryManager7GetPoolEv
.Ltmp168:
	jmp	.LBB6_94
.LBB6_94:                               #   in Loop: Header=BB6_5 Depth=2
.Ltmp169:
	leaq	-2296(%rbp), %rdi
	leaq	-3752(%rbp), %rsi
	leaq	-3920(%rbp), %rdx
	leaq	-3952(%rbp), %rcx
	callq	_ZNK4seal9Encryptor7encryptERKNS_9PlaintextERNS_10CiphertextENS_16MemoryPoolHandleE
.Ltmp170:
	jmp	.LBB6_95
.LBB6_95:                               #   in Loop: Header=BB6_5 Depth=2
	leaq	-3952(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
.Ltmp172:
	leaq	-4112(%rbp), %rdi
	callq	_ZN4seal13MemoryManager7GetPoolEv
.Ltmp173:
	jmp	.LBB6_96
.LBB6_96:                               #   in Loop: Header=BB6_5 Depth=2
.Ltmp175:
	leaq	-4096(%rbp), %rdi
	leaq	-4112(%rbp), %rsi
	callq	_ZN4seal10CiphertextC2ENS_16MemoryPoolHandleE
.Ltmp176:
	jmp	.LBB6_97
.LBB6_97:                               #   in Loop: Header=BB6_5 Depth=2
	leaq	-4112(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
.Ltmp178:
	movl	$229, %edi
	callq	_Z10print_linei
.Ltmp179:
	jmp	.LBB6_98
.LBB6_98:                               #   in Loop: Header=BB6_5 Depth=2
.Ltmp180:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.9(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp181:
	movq	%rax, -5544(%rbp)               # 8-byte Spill
	jmp	.LBB6_99
.LBB6_99:                               #   in Loop: Header=BB6_5 Depth=2
.Ltmp182:
	movq	-5544(%rbp), %rdi               # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp183:
	jmp	.LBB6_100
.LBB6_100:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp184:
	leaq	-4128(%rbp), %rdi
	callq	_ZN4seal13MemoryManager7GetPoolEv
.Ltmp185:
	jmp	.LBB6_101
.LBB6_101:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp186:
	leaq	-2520(%rbp), %rdi
	leaq	-3920(%rbp), %rsi
	leaq	-4096(%rbp), %rdx
	leaq	-4128(%rbp), %rcx
	callq	_ZN4seal9Evaluator6squareERKNS_10CiphertextERS1_NS_16MemoryPoolHandleE
.Ltmp187:
	jmp	.LBB6_102
.LBB6_102:                              #   in Loop: Header=BB6_5 Depth=2
	leaq	-4128(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
.Ltmp189:
	leaq	-4144(%rbp), %rdi
	callq	_ZN4seal13MemoryManager7GetPoolEv
.Ltmp190:
	jmp	.LBB6_103
.LBB6_103:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp191:
	leaq	-2520(%rbp), %rdi
	leaq	-4096(%rbp), %rsi
	leaq	-1800(%rbp), %rdx
	xorps	%xmm1, %xmm1
	xorl	%ecx, %ecx
	leaq	-4144(%rbp), %r8
	movaps	%xmm1, %xmm0
	callq	_ZN4seal9Evaluator19relinearize_inplaceERNS_10CiphertextERKNS_9RelinKeysEddiNS_16MemoryPoolHandleE
.Ltmp192:
	jmp	.LBB6_104
.LBB6_104:                              #   in Loop: Header=BB6_5 Depth=2
	leaq	-4144(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
.Ltmp194:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.10(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp195:
	movq	%rax, -5552(%rbp)               # 8-byte Spill
	jmp	.LBB6_105
.LBB6_105:                              #   in Loop: Header=BB6_5 Depth=2
	leaq	-4096(%rbp), %rdi
	callq	_ZN4seal10Ciphertext5scaleEv
	movsd	(%rax), %xmm0                   # xmm0 = mem[0],zero
	callq	log2@PLT
	movq	-5552(%rbp), %rdi               # 8-byte Reload
.Ltmp196:
	callq	_ZNSolsEd@PLT
.Ltmp197:
	movq	%rax, -5560(%rbp)               # 8-byte Spill
	jmp	.LBB6_106
.LBB6_106:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp198:
	movq	-5560(%rbp), %rdi               # 8-byte Reload
	leaq	.L.str.11(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp199:
	movq	%rax, -5568(%rbp)               # 8-byte Spill
	jmp	.LBB6_107
.LBB6_107:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp200:
	movq	-5568(%rbp), %rdi               # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp201:
	jmp	.LBB6_108
.LBB6_108:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp202:
	movl	$249, %edi
	callq	_Z10print_linei
.Ltmp203:
	jmp	.LBB6_109
.LBB6_109:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp204:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.12(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp205:
	movq	%rax, -5576(%rbp)               # 8-byte Spill
	jmp	.LBB6_110
.LBB6_110:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp206:
	movq	-5576(%rbp), %rdi               # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp207:
	jmp	.LBB6_111
.LBB6_111:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp208:
	leaq	-4160(%rbp), %rdi
	callq	_ZN4seal13MemoryManager7GetPoolEv
.Ltmp209:
	jmp	.LBB6_112
.LBB6_112:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp210:
	leaq	-2520(%rbp), %rdi
	leaq	-4096(%rbp), %rsi
	xorps	%xmm1, %xmm1
	xorl	%edx, %edx
	leaq	-4160(%rbp), %rcx
	movaps	%xmm1, %xmm0
	callq	_ZN4seal9Evaluator23rescale_to_next_inplaceERNS_10CiphertextEddiNS_16MemoryPoolHandleE
.Ltmp211:
	jmp	.LBB6_113
.LBB6_113:                              #   in Loop: Header=BB6_5 Depth=2
	leaq	-4160(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
.Ltmp213:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.13(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp214:
	movq	%rax, -5584(%rbp)               # 8-byte Spill
	jmp	.LBB6_114
.LBB6_114:                              #   in Loop: Header=BB6_5 Depth=2
	leaq	-4096(%rbp), %rdi
	callq	_ZN4seal10Ciphertext5scaleEv
	movsd	(%rax), %xmm0                   # xmm0 = mem[0],zero
	callq	log2@PLT
	movq	-5584(%rbp), %rdi               # 8-byte Reload
.Ltmp215:
	callq	_ZNSolsEd@PLT
.Ltmp216:
	movq	%rax, -5592(%rbp)               # 8-byte Spill
	jmp	.LBB6_115
.LBB6_115:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp217:
	movq	-5592(%rbp), %rdi               # 8-byte Reload
	leaq	.L.str.11(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp218:
	movq	%rax, -5600(%rbp)               # 8-byte Spill
	jmp	.LBB6_116
.LBB6_116:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp219:
	movq	-5600(%rbp), %rdi               # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp220:
	jmp	.LBB6_117
.LBB6_117:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp221:
	movl	$262, %edi                      # imm = 0x106
	callq	_Z10print_linei
.Ltmp222:
	jmp	.LBB6_118
.LBB6_118:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp223:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.14(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp224:
	movq	%rax, -5608(%rbp)               # 8-byte Spill
	jmp	.LBB6_119
.LBB6_119:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp225:
	movq	-5608(%rbp), %rdi               # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp226:
	jmp	.LBB6_120
.LBB6_120:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp227:
	leaq	-4312(%rbp), %rdi
	callq	_ZN4seal13MemoryManager7GetPoolEv
.Ltmp228:
	jmp	.LBB6_121
.LBB6_121:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp230:
	leaq	-4296(%rbp), %rdi
	leaq	-4312(%rbp), %rsi
	callq	_ZN4seal10CiphertextC2ENS_16MemoryPoolHandleE
.Ltmp231:
	jmp	.LBB6_122
.LBB6_122:                              #   in Loop: Header=BB6_5 Depth=2
	leaq	-4312(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
.Ltmp233:
	leaq	-4328(%rbp), %rdi
	callq	_ZN4seal13MemoryManager7GetPoolEv
.Ltmp234:
	jmp	.LBB6_123
.LBB6_123:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp235:
	leaq	-2520(%rbp), %rdi
	leaq	-3920(%rbp), %rsi
	leaq	-3320(%rbp), %rdx
	leaq	-4296(%rbp), %rcx
	leaq	-4328(%rbp), %r8
	callq	_ZN4seal9Evaluator14multiply_plainERKNS_10CiphertextERKNS_9PlaintextERS1_NS_16MemoryPoolHandleE
.Ltmp236:
	jmp	.LBB6_124
.LBB6_124:                              #   in Loop: Header=BB6_5 Depth=2
	leaq	-4328(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
.Ltmp238:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.15(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp239:
	movq	%rax, -5616(%rbp)               # 8-byte Spill
	jmp	.LBB6_125
.LBB6_125:                              #   in Loop: Header=BB6_5 Depth=2
	leaq	-4296(%rbp), %rdi
	callq	_ZN4seal10Ciphertext5scaleEv
	movsd	(%rax), %xmm0                   # xmm0 = mem[0],zero
	callq	log2@PLT
	movq	-5616(%rbp), %rdi               # 8-byte Reload
.Ltmp240:
	callq	_ZNSolsEd@PLT
.Ltmp241:
	movq	%rax, -5624(%rbp)               # 8-byte Spill
	jmp	.LBB6_126
.LBB6_126:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp242:
	movq	-5624(%rbp), %rdi               # 8-byte Reload
	leaq	.L.str.11(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp243:
	movq	%rax, -5632(%rbp)               # 8-byte Spill
	jmp	.LBB6_127
.LBB6_127:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp244:
	movq	-5632(%rbp), %rdi               # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp245:
	jmp	.LBB6_128
.LBB6_128:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp246:
	leaq	-4344(%rbp), %rdi
	callq	_ZN4seal13MemoryManager7GetPoolEv
.Ltmp247:
	jmp	.LBB6_129
.LBB6_129:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp248:
	leaq	-2520(%rbp), %rdi
	leaq	-4296(%rbp), %rsi
	xorps	%xmm1, %xmm1
	xorl	%edx, %edx
	leaq	-4344(%rbp), %rcx
	movaps	%xmm1, %xmm0
	callq	_ZN4seal9Evaluator23rescale_to_next_inplaceERNS_10CiphertextEddiNS_16MemoryPoolHandleE
.Ltmp249:
	jmp	.LBB6_130
.LBB6_130:                              #   in Loop: Header=BB6_5 Depth=2
	leaq	-4344(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
.Ltmp251:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.16(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp252:
	movq	%rax, -5640(%rbp)               # 8-byte Spill
	jmp	.LBB6_131
.LBB6_131:                              #   in Loop: Header=BB6_5 Depth=2
	leaq	-4296(%rbp), %rdi
	callq	_ZN4seal10Ciphertext5scaleEv
	movsd	(%rax), %xmm0                   # xmm0 = mem[0],zero
	callq	log2@PLT
	movq	-5640(%rbp), %rdi               # 8-byte Reload
.Ltmp253:
	callq	_ZNSolsEd@PLT
.Ltmp254:
	movq	%rax, -5648(%rbp)               # 8-byte Spill
	jmp	.LBB6_132
.LBB6_132:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp255:
	movq	-5648(%rbp), %rdi               # 8-byte Reload
	leaq	.L.str.11(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp256:
	movq	%rax, -5656(%rbp)               # 8-byte Spill
	jmp	.LBB6_133
.LBB6_133:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp257:
	movq	-5656(%rbp), %rdi               # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp258:
	jmp	.LBB6_134
.LBB6_134:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp259:
	movl	$277, %edi                      # imm = 0x115
	callq	_Z10print_linei
.Ltmp260:
	jmp	.LBB6_135
.LBB6_135:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp261:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.17(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp262:
	movq	%rax, -5664(%rbp)               # 8-byte Spill
	jmp	.LBB6_136
.LBB6_136:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp263:
	movq	-5664(%rbp), %rdi               # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp264:
	jmp	.LBB6_137
.LBB6_137:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp265:
	leaq	-4360(%rbp), %rdi
	callq	_ZN4seal13MemoryManager7GetPoolEv
.Ltmp266:
	jmp	.LBB6_138
.LBB6_138:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp267:
	leaq	-2520(%rbp), %rdi
	leaq	-4096(%rbp), %rsi
	leaq	-4296(%rbp), %rdx
	leaq	-4360(%rbp), %rcx
	callq	_ZN4seal9Evaluator16multiply_inplaceERNS_10CiphertextERKS1_NS_16MemoryPoolHandleE@PLT
.Ltmp268:
	jmp	.LBB6_139
.LBB6_139:                              #   in Loop: Header=BB6_5 Depth=2
	leaq	-4360(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
.Ltmp270:
	leaq	-4376(%rbp), %rdi
	callq	_ZN4seal13MemoryManager7GetPoolEv
.Ltmp271:
	jmp	.LBB6_140
.LBB6_140:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp272:
	leaq	-2520(%rbp), %rdi
	leaq	-4096(%rbp), %rsi
	leaq	-1800(%rbp), %rdx
	xorps	%xmm1, %xmm1
	xorl	%ecx, %ecx
	leaq	-4376(%rbp), %r8
	movaps	%xmm1, %xmm0
	callq	_ZN4seal9Evaluator19relinearize_inplaceERNS_10CiphertextERKNS_9RelinKeysEddiNS_16MemoryPoolHandleE
.Ltmp273:
	jmp	.LBB6_141
.LBB6_141:                              #   in Loop: Header=BB6_5 Depth=2
	leaq	-4376(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
.Ltmp275:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.18(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp276:
	movq	%rax, -5672(%rbp)               # 8-byte Spill
	jmp	.LBB6_142
.LBB6_142:                              #   in Loop: Header=BB6_5 Depth=2
	leaq	-4096(%rbp), %rdi
	callq	_ZN4seal10Ciphertext5scaleEv
	movsd	(%rax), %xmm0                   # xmm0 = mem[0],zero
	callq	log2@PLT
	movq	-5672(%rbp), %rdi               # 8-byte Reload
.Ltmp277:
	callq	_ZNSolsEd@PLT
.Ltmp278:
	movq	%rax, -5680(%rbp)               # 8-byte Spill
	jmp	.LBB6_143
.LBB6_143:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp279:
	movq	-5680(%rbp), %rdi               # 8-byte Reload
	leaq	.L.str.11(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp280:
	movq	%rax, -5688(%rbp)               # 8-byte Spill
	jmp	.LBB6_144
.LBB6_144:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp281:
	movq	-5688(%rbp), %rdi               # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp282:
	jmp	.LBB6_145
.LBB6_145:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp283:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.19(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp284:
	movq	%rax, -5696(%rbp)               # 8-byte Spill
	jmp	.LBB6_146
.LBB6_146:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp285:
	movq	-5696(%rbp), %rdi               # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp286:
	jmp	.LBB6_147
.LBB6_147:                              #   in Loop: Header=BB6_5 Depth=2
	movq	$0, -4384(%rbp)
.LBB6_148:                              #   Parent Loop BB6_3 Depth=1
                                        #     Parent Loop BB6_5 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movq	-4384(%rbp), %rax
	movq	%rax, -5704(%rbp)               # 8-byte Spill
	leaq	-4096(%rbp), %rdi
	callq	_ZNK4seal10Ciphertext9dyn_arrayEv
	movq	%rax, %rdi
	callq	_ZNK4seal8DynArrayImE4sizeEv
	movq	%rax, %rcx
	movq	-5704(%rbp), %rax               # 8-byte Reload
	cmpq	%rcx, %rax
	jae	.LBB6_180
# %bb.149:                              #   in Loop: Header=BB6_148 Depth=3
	leaq	-4096(%rbp), %rdi
	callq	_ZN4seal10Ciphertext4dataEv
	movq	-4384(%rbp), %rcx
	movq	(%rax,%rcx,8), %rsi
.Ltmp512:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	callq	_ZNSolsEm@PLT
.Ltmp513:
	movq	%rax, -5712(%rbp)               # 8-byte Spill
	jmp	.LBB6_150
.LBB6_150:                              #   in Loop: Header=BB6_148 Depth=3
.Ltmp514:
	movq	-5712(%rbp), %rdi               # 8-byte Reload
	leaq	.L.str.20(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp515:
	jmp	.LBB6_151
.LBB6_151:                              #   in Loop: Header=BB6_148 Depth=3
	jmp	.LBB6_152
.LBB6_152:                              #   in Loop: Header=BB6_148 Depth=3
	movq	-4384(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -4384(%rbp)
	jmp	.LBB6_148
.LBB6_153:
.Ltmp107:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	leaq	-3208(%rbp), %rdi
	callq	_ZNSt6vectorIdSaIdEED2Ev
	jmp	.LBB6_325
.LBB6_154:
.Ltmp116:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	leaq	-3336(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	jmp	.LBB6_325
.LBB6_155:
.Ltmp119:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	jmp	.LBB6_324
.LBB6_156:
.Ltmp122:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	leaq	-3464(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	jmp	.LBB6_324
.LBB6_157:
.Ltmp125:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	jmp	.LBB6_323
.LBB6_158:
.Ltmp128:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	leaq	-3592(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	jmp	.LBB6_323
.LBB6_159:
.Ltmp146:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	jmp	.LBB6_322
.LBB6_160:
.Ltmp133:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	leaq	-3608(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	jmp	.LBB6_322
.LBB6_161:
.Ltmp138:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	leaq	-3624(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	jmp	.LBB6_322
.LBB6_162:
.Ltmp143:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	leaq	-3640(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	jmp	.LBB6_322
.LBB6_163:
.Ltmp149:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	leaq	-3768(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	jmp	.LBB6_322
.LBB6_164:
.Ltmp163:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	jmp	.LBB6_321
.LBB6_165:
.Ltmp160:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	leaq	-3784(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	jmp	.LBB6_321
.LBB6_166:
.Ltmp166:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	leaq	-3936(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	jmp	.LBB6_321
.LBB6_167:
.Ltmp174:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	jmp	.LBB6_320
.LBB6_168:
.Ltmp171:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	leaq	-3952(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	jmp	.LBB6_320
.LBB6_169:
.Ltmp177:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	leaq	-4112(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	jmp	.LBB6_320
.LBB6_170:
.Ltmp229:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	jmp	.LBB6_319
.LBB6_171:
.Ltmp188:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	leaq	-4128(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	jmp	.LBB6_319
.LBB6_172:
.Ltmp193:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	leaq	-4144(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	jmp	.LBB6_319
.LBB6_173:
.Ltmp212:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	leaq	-4160(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	jmp	.LBB6_319
.LBB6_174:
.Ltmp232:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	leaq	-4312(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	jmp	.LBB6_319
.LBB6_175:
.Ltmp516:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	jmp	.LBB6_318
.LBB6_176:
.Ltmp237:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	leaq	-4328(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	jmp	.LBB6_318
.LBB6_177:
.Ltmp250:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	leaq	-4344(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	jmp	.LBB6_318
.LBB6_178:
.Ltmp269:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	leaq	-4360(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	jmp	.LBB6_318
.LBB6_179:
.Ltmp274:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	leaq	-4376(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	jmp	.LBB6_318
.LBB6_180:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp287:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp288:
	jmp	.LBB6_181
.LBB6_181:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp289:
	leaq	-4400(%rbp), %rdi
	callq	_ZN4seal13MemoryManager7GetPoolEv
.Ltmp290:
	jmp	.LBB6_182
.LBB6_182:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp291:
	leaq	-2520(%rbp), %rdi
	leaq	-4096(%rbp), %rsi
	xorps	%xmm1, %xmm1
	xorl	%edx, %edx
	leaq	-4400(%rbp), %rcx
	movaps	%xmm1, %xmm0
	callq	_ZN4seal9Evaluator23rescale_to_next_inplaceERNS_10CiphertextEddiNS_16MemoryPoolHandleE
.Ltmp292:
	jmp	.LBB6_183
.LBB6_183:                              #   in Loop: Header=BB6_5 Depth=2
	leaq	-4400(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
.Ltmp294:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.21(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp295:
	movq	%rax, -5720(%rbp)               # 8-byte Spill
	jmp	.LBB6_184
.LBB6_184:                              #   in Loop: Header=BB6_5 Depth=2
	leaq	-4096(%rbp), %rdi
	callq	_ZN4seal10Ciphertext5scaleEv
	movsd	(%rax), %xmm0                   # xmm0 = mem[0],zero
	callq	log2@PLT
	movq	-5720(%rbp), %rdi               # 8-byte Reload
.Ltmp296:
	callq	_ZNSolsEd@PLT
.Ltmp297:
	movq	%rax, -5728(%rbp)               # 8-byte Spill
	jmp	.LBB6_185
.LBB6_185:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp298:
	movq	-5728(%rbp), %rdi               # 8-byte Reload
	leaq	.L.str.11(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp299:
	movq	%rax, -5736(%rbp)               # 8-byte Spill
	jmp	.LBB6_186
.LBB6_186:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp300:
	movq	-5736(%rbp), %rdi               # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp301:
	jmp	.LBB6_187
.LBB6_187:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp302:
	movl	$334, %edi                      # imm = 0x14E
	callq	_Z10print_linei
.Ltmp303:
	jmp	.LBB6_188
.LBB6_188:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp304:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.22(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp305:
	movq	%rax, -5744(%rbp)               # 8-byte Spill
	jmp	.LBB6_189
.LBB6_189:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp306:
	movq	-5744(%rbp), %rdi               # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp307:
	jmp	.LBB6_190
.LBB6_190:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp308:
	leaq	-4416(%rbp), %rdi
	callq	_ZN4seal13MemoryManager7GetPoolEv
.Ltmp309:
	jmp	.LBB6_191
.LBB6_191:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp310:
	leaq	-2520(%rbp), %rdi
	leaq	-3920(%rbp), %rsi
	leaq	-3448(%rbp), %rdx
	leaq	-4416(%rbp), %rcx
	callq	_ZN4seal9Evaluator22multiply_plain_inplaceERNS_10CiphertextERKNS_9PlaintextENS_16MemoryPoolHandleE@PLT
.Ltmp311:
	jmp	.LBB6_192
.LBB6_192:                              #   in Loop: Header=BB6_5 Depth=2
	leaq	-4416(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
.Ltmp313:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.23(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp314:
	movq	%rax, -5752(%rbp)               # 8-byte Spill
	jmp	.LBB6_193
.LBB6_193:                              #   in Loop: Header=BB6_5 Depth=2
	leaq	-3920(%rbp), %rdi
	callq	_ZN4seal10Ciphertext5scaleEv
	movsd	(%rax), %xmm0                   # xmm0 = mem[0],zero
	callq	log2@PLT
	movq	-5752(%rbp), %rdi               # 8-byte Reload
.Ltmp315:
	callq	_ZNSolsEd@PLT
.Ltmp316:
	movq	%rax, -5760(%rbp)               # 8-byte Spill
	jmp	.LBB6_194
.LBB6_194:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp317:
	movq	-5760(%rbp), %rdi               # 8-byte Reload
	leaq	.L.str.11(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp318:
	movq	%rax, -5768(%rbp)               # 8-byte Spill
	jmp	.LBB6_195
.LBB6_195:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp319:
	movq	-5768(%rbp), %rdi               # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp320:
	jmp	.LBB6_196
.LBB6_196:                              #   in Loop: Header=BB6_5 Depth=2
	movsd	-760(%rbp), %xmm0               # xmm0 = mem[0],zero
	movsd	%xmm0, -5776(%rbp)              # 8-byte Spill
.Ltmp321:
	leaq	-4432(%rbp), %rdi
	callq	_ZN4seal13MemoryManager7GetPoolEv
.Ltmp322:
	jmp	.LBB6_197
.LBB6_197:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp323:
	movsd	-5776(%rbp), %xmm1              # 8-byte Reload
                                        # xmm1 = mem[0],zero
	leaq	-2520(%rbp), %rdi
	leaq	-3920(%rbp), %rsi
	xorps	%xmm0, %xmm0
	movl	$1, %edx
	leaq	-4432(%rbp), %rcx
	callq	_ZN4seal9Evaluator23rescale_to_next_inplaceERNS_10CiphertextEddiNS_16MemoryPoolHandleE
.Ltmp324:
	jmp	.LBB6_198
.LBB6_198:                              #   in Loop: Header=BB6_5 Depth=2
	leaq	-4432(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
.Ltmp326:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.24(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp327:
	movq	%rax, -5784(%rbp)               # 8-byte Spill
	jmp	.LBB6_199
.LBB6_199:                              #   in Loop: Header=BB6_5 Depth=2
	leaq	-3920(%rbp), %rdi
	callq	_ZN4seal10Ciphertext5scaleEv
	movsd	(%rax), %xmm0                   # xmm0 = mem[0],zero
	callq	log2@PLT
	movq	-5784(%rbp), %rdi               # 8-byte Reload
.Ltmp328:
	callq	_ZNSolsEd@PLT
.Ltmp329:
	movq	%rax, -5792(%rbp)               # 8-byte Spill
	jmp	.LBB6_200
.LBB6_200:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp330:
	movq	-5792(%rbp), %rdi               # 8-byte Reload
	leaq	.L.str.11(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp331:
	movq	%rax, -5800(%rbp)               # 8-byte Spill
	jmp	.LBB6_201
.LBB6_201:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp332:
	movq	-5800(%rbp), %rdi               # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp333:
	jmp	.LBB6_202
.LBB6_202:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp334:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp335:
	jmp	.LBB6_203
.LBB6_203:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp336:
	movl	$352, %edi                      # imm = 0x160
	callq	_Z10print_linei
.Ltmp337:
	jmp	.LBB6_204
.LBB6_204:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp338:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.25(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp339:
	movq	%rax, -5808(%rbp)               # 8-byte Spill
	jmp	.LBB6_205
.LBB6_205:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp340:
	movq	-5808(%rbp), %rdi               # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp341:
	jmp	.LBB6_206
.LBB6_206:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp342:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.26(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp343:
	movq	%rax, -5816(%rbp)               # 8-byte Spill
	jmp	.LBB6_207
.LBB6_207:                              #   in Loop: Header=BB6_5 Depth=2
	leaq	-4096(%rbp), %rdi
	callq	_ZN4seal10Ciphertext8parms_idEv
	movups	(%rax), %xmm0
	movups	16(%rax), %xmm1
	movaps	%xmm1, -4464(%rbp)
	movaps	%xmm0, -4480(%rbp)
.Ltmp344:
	movaps	-4480(%rbp), %xmm0
	movaps	-4464(%rbp), %xmm1
	movq	%rsp, %rax
	movups	%xmm1, 16(%rax)
	movups	%xmm0, (%rax)
	leaq	-4448(%rbp), %rdi
	leaq	-1040(%rbp), %rsi
	callq	_ZNK4seal11SEALContext16get_context_dataESt5arrayImLm4EE
.Ltmp345:
	jmp	.LBB6_208
.LBB6_208:                              #   in Loop: Header=BB6_5 Depth=2
	leaq	-4448(%rbp), %rdi
	callq	_ZNKSt19__shared_ptr_accessIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2ELb0ELb0EEptEv
	movq	%rax, %rdi
	callq	_ZNK4seal11SEALContext11ContextData11chain_indexEv
	movq	-5816(%rbp), %rdi               # 8-byte Reload
	movq	%rax, %rsi
.Ltmp346:
	callq	_ZNSolsEm@PLT
.Ltmp347:
	movq	%rax, -5824(%rbp)               # 8-byte Spill
	jmp	.LBB6_209
.LBB6_209:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp348:
	movq	-5824(%rbp), %rdi               # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp349:
	jmp	.LBB6_210
.LBB6_210:                              #   in Loop: Header=BB6_5 Depth=2
	leaq	-4448(%rbp), %rdi
	callq	_ZNSt10shared_ptrIKN4seal11SEALContext11ContextDataEED2Ev
.Ltmp351:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.27(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp352:
	movq	%rax, -5832(%rbp)               # 8-byte Spill
	jmp	.LBB6_211
.LBB6_211:                              #   in Loop: Header=BB6_5 Depth=2
	leaq	-3920(%rbp), %rdi
	callq	_ZN4seal10Ciphertext8parms_idEv
	movups	(%rax), %xmm0
	movups	16(%rax), %xmm1
	movaps	%xmm1, -4512(%rbp)
	movaps	%xmm0, -4528(%rbp)
.Ltmp353:
	movaps	-4528(%rbp), %xmm0
	movaps	-4512(%rbp), %xmm1
	movq	%rsp, %rax
	movups	%xmm1, 16(%rax)
	movups	%xmm0, (%rax)
	leaq	-4496(%rbp), %rdi
	leaq	-1040(%rbp), %rsi
	callq	_ZNK4seal11SEALContext16get_context_dataESt5arrayImLm4EE
.Ltmp354:
	jmp	.LBB6_212
.LBB6_212:                              #   in Loop: Header=BB6_5 Depth=2
	leaq	-4496(%rbp), %rdi
	callq	_ZNKSt19__shared_ptr_accessIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2ELb0ELb0EEptEv
	movq	%rax, %rdi
	callq	_ZNK4seal11SEALContext11ContextData11chain_indexEv
	movq	-5832(%rbp), %rdi               # 8-byte Reload
	movq	%rax, %rsi
.Ltmp355:
	callq	_ZNSolsEm@PLT
.Ltmp356:
	movq	%rax, -5840(%rbp)               # 8-byte Spill
	jmp	.LBB6_213
.LBB6_213:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp357:
	movq	-5840(%rbp), %rdi               # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp358:
	jmp	.LBB6_214
.LBB6_214:                              #   in Loop: Header=BB6_5 Depth=2
	leaq	-4496(%rbp), %rdi
	callq	_ZNSt10shared_ptrIKN4seal11SEALContext11ContextDataEED2Ev
.Ltmp360:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.28(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp361:
	movq	%rax, -5848(%rbp)               # 8-byte Spill
	jmp	.LBB6_215
.LBB6_215:                              #   in Loop: Header=BB6_5 Depth=2
	leaq	-3576(%rbp), %rdi
	callq	_ZN4seal9Plaintext8parms_idEv
	movups	(%rax), %xmm0
	movups	16(%rax), %xmm1
	movaps	%xmm1, -4560(%rbp)
	movaps	%xmm0, -4576(%rbp)
.Ltmp362:
	movaps	-4576(%rbp), %xmm0
	movaps	-4560(%rbp), %xmm1
	movq	%rsp, %rax
	movups	%xmm1, 16(%rax)
	movups	%xmm0, (%rax)
	leaq	-4544(%rbp), %rdi
	leaq	-1040(%rbp), %rsi
	callq	_ZNK4seal11SEALContext16get_context_dataESt5arrayImLm4EE
.Ltmp363:
	jmp	.LBB6_216
.LBB6_216:                              #   in Loop: Header=BB6_5 Depth=2
	leaq	-4544(%rbp), %rdi
	callq	_ZNKSt19__shared_ptr_accessIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2ELb0ELb0EEptEv
	movq	%rax, %rdi
	callq	_ZNK4seal11SEALContext11ContextData11chain_indexEv
	movq	-5848(%rbp), %rdi               # 8-byte Reload
	movq	%rax, %rsi
.Ltmp364:
	callq	_ZNSolsEm@PLT
.Ltmp365:
	movq	%rax, -5856(%rbp)               # 8-byte Spill
	jmp	.LBB6_217
.LBB6_217:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp366:
	movq	-5856(%rbp), %rdi               # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp367:
	jmp	.LBB6_218
.LBB6_218:                              #   in Loop: Header=BB6_5 Depth=2
	leaq	-4544(%rbp), %rdi
	callq	_ZNSt10shared_ptrIKN4seal11SEALContext11ContextDataEED2Ev
.Ltmp369:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp370:
	jmp	.LBB6_219
.LBB6_219:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp371:
	movl	$380, %edi                      # imm = 0x17C
	callq	_Z10print_linei
.Ltmp372:
	jmp	.LBB6_220
.LBB6_220:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp373:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.29(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp374:
	movq	%rax, -5864(%rbp)               # 8-byte Spill
	jmp	.LBB6_221
.LBB6_221:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp375:
	movq	-5864(%rbp), %rdi               # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp376:
	jmp	.LBB6_222
.LBB6_222:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp377:
	xorl	%eax, %eax
	movl	%eax, %esi
	leaq	-4840(%rbp), %rdi
	callq	_ZNSt9basic_iosIcSt11char_traitsIcEEC1EPSt15basic_streambufIcS1_E@PLT
.Ltmp378:
	jmp	.LBB6_223
.LBB6_223:                              #   in Loop: Header=BB6_5 Depth=2
	movq	_ZSt4cout@GOTPCREL(%rip), %rsi
	movq	(%rsi), %rax
	movq	-24(%rax), %rax
	addq	%rax, %rsi
.Ltmp379:
	leaq	-4840(%rbp), %rdi
	callq	_ZNSt9basic_iosIcSt11char_traitsIcEE7copyfmtERKS2_@PLT
.Ltmp380:
	jmp	.LBB6_224
.LBB6_224:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp381:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	_ZSt5fixedRSt8ios_base(%rip), %rsi
	callq	_ZNSolsEPFRSt8ios_baseS0_E@PLT
.Ltmp382:
	movq	%rax, -5872(%rbp)               # 8-byte Spill
	jmp	.LBB6_225
.LBB6_225:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp383:
	movl	$10, %edi
	callq	_ZSt12setprecisioni
.Ltmp384:
	movl	%eax, -5876(%rbp)               # 4-byte Spill
	jmp	.LBB6_226
.LBB6_226:                              #   in Loop: Header=BB6_5 Depth=2
	movq	-5872(%rbp), %rdi               # 8-byte Reload
	movl	-5876(%rbp), %eax               # 4-byte Reload
	movl	%eax, -4848(%rbp)
	movl	-4848(%rbp), %esi
.Ltmp385:
	callq	_ZStlsIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_St13_Setprecision@PLT
.Ltmp386:
	jmp	.LBB6_227
.LBB6_227:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp387:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.30(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp388:
	movq	%rax, -5888(%rbp)               # 8-byte Spill
	jmp	.LBB6_228
.LBB6_228:                              #   in Loop: Header=BB6_5 Depth=2
	leaq	-4096(%rbp), %rdi
	callq	_ZN4seal10Ciphertext5scaleEv
	movq	-5888(%rbp), %rdi               # 8-byte Reload
	movsd	(%rax), %xmm0                   # xmm0 = mem[0],zero
.Ltmp389:
	callq	_ZNSolsEd@PLT
.Ltmp390:
	movq	%rax, -5896(%rbp)               # 8-byte Spill
	jmp	.LBB6_229
.LBB6_229:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp391:
	movq	-5896(%rbp), %rdi               # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp392:
	jmp	.LBB6_230
.LBB6_230:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp393:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.31(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp394:
	movq	%rax, -5904(%rbp)               # 8-byte Spill
	jmp	.LBB6_231
.LBB6_231:                              #   in Loop: Header=BB6_5 Depth=2
	leaq	-3920(%rbp), %rdi
	callq	_ZN4seal10Ciphertext5scaleEv
	movq	-5904(%rbp), %rdi               # 8-byte Reload
	movsd	(%rax), %xmm0                   # xmm0 = mem[0],zero
.Ltmp395:
	callq	_ZNSolsEd@PLT
.Ltmp396:
	movq	%rax, -5912(%rbp)               # 8-byte Spill
	jmp	.LBB6_232
.LBB6_232:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp397:
	movq	-5912(%rbp), %rdi               # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp398:
	jmp	.LBB6_233
.LBB6_233:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp399:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.32(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp400:
	movq	%rax, -5920(%rbp)               # 8-byte Spill
	jmp	.LBB6_234
.LBB6_234:                              #   in Loop: Header=BB6_5 Depth=2
	leaq	-3576(%rbp), %rdi
	callq	_ZN4seal9Plaintext5scaleEv
	movq	-5920(%rbp), %rdi               # 8-byte Reload
	movsd	(%rax), %xmm0                   # xmm0 = mem[0],zero
.Ltmp401:
	callq	_ZNSolsEd@PLT
.Ltmp402:
	movq	%rax, -5928(%rbp)               # 8-byte Spill
	jmp	.LBB6_235
.LBB6_235:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp403:
	movq	-5928(%rbp), %rdi               # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp404:
	jmp	.LBB6_236
.LBB6_236:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp405:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp406:
	jmp	.LBB6_237
.LBB6_237:                              #   in Loop: Header=BB6_5 Depth=2
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	movq	(%rdi), %rax
	movq	-24(%rax), %rax
	addq	%rax, %rdi
.Ltmp407:
	leaq	-4840(%rbp), %rsi
	callq	_ZNSt9basic_iosIcSt11char_traitsIcEE7copyfmtERKS2_@PLT
.Ltmp408:
	jmp	.LBB6_238
.LBB6_238:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp409:
	movl	$408, %edi                      # imm = 0x198
	callq	_Z10print_linei
.Ltmp410:
	jmp	.LBB6_239
.LBB6_239:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp411:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.33(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp412:
	movq	%rax, -5936(%rbp)               # 8-byte Spill
	jmp	.LBB6_240
.LBB6_240:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp413:
	movq	-5936(%rbp), %rdi               # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp414:
	jmp	.LBB6_241
.LBB6_241:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp415:
	movsd	.LCPI6_0(%rip), %xmm0           # xmm0 = mem[0],zero
	movl	$40, %edi
	callq	_ZSt3powIdiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_Xsr3std12__is_integerIS2_EE7__valueEE6__typeENS4_IS3_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEE6__typeES2_S3_
.Ltmp416:
	movsd	%xmm0, -5944(%rbp)              # 8-byte Spill
	jmp	.LBB6_242
.LBB6_242:                              #   in Loop: Header=BB6_5 Depth=2
	leaq	-4096(%rbp), %rdi
	callq	_ZN4seal10Ciphertext5scaleEv
	movsd	-5944(%rbp), %xmm0              # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movsd	%xmm0, (%rax)
.Ltmp417:
	movsd	.LCPI6_0(%rip), %xmm0           # xmm0 = mem[0],zero
	movl	$40, %edi
	callq	_ZSt3powIdiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_Xsr3std12__is_integerIS2_EE7__valueEE6__typeENS4_IS3_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEE6__typeES2_S3_
.Ltmp418:
	movsd	%xmm0, -5952(%rbp)              # 8-byte Spill
	jmp	.LBB6_243
.LBB6_243:                              #   in Loop: Header=BB6_5 Depth=2
	leaq	-3920(%rbp), %rdi
	callq	_ZN4seal10Ciphertext5scaleEv
	movsd	-5952(%rbp), %xmm0              # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movsd	%xmm0, (%rax)
.Ltmp419:
	movl	$419, %edi                      # imm = 0x1A3
	callq	_Z10print_linei
.Ltmp420:
	jmp	.LBB6_244
.LBB6_244:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp421:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.34(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp422:
	movq	%rax, -5960(%rbp)               # 8-byte Spill
	jmp	.LBB6_245
.LBB6_245:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp423:
	movq	-5960(%rbp), %rdi               # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp424:
	jmp	.LBB6_246
.LBB6_246:                              #   in Loop: Header=BB6_5 Depth=2
	leaq	-4096(%rbp), %rdi
	callq	_ZN4seal10Ciphertext8parms_idEv
	movups	(%rax), %xmm0
	movups	16(%rax), %xmm1
	movaps	%xmm1, -4864(%rbp)
	movaps	%xmm0, -4880(%rbp)
	movaps	-4880(%rbp), %xmm0
	movaps	-4864(%rbp), %xmm1
	movaps	%xmm1, -4896(%rbp)
	movaps	%xmm0, -4912(%rbp)
.Ltmp425:
	leaq	-4928(%rbp), %rdi
	callq	_ZN4seal13MemoryManager7GetPoolEv
.Ltmp426:
	jmp	.LBB6_247
.LBB6_247:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp427:
	movaps	-4912(%rbp), %xmm0
	movaps	-4896(%rbp), %xmm1
	movq	%rsp, %rax
	movups	%xmm1, 16(%rax)
	movups	%xmm0, (%rax)
	leaq	-2520(%rbp), %rdi
	leaq	-3920(%rbp), %rsi
	leaq	-4928(%rbp), %rdx
	callq	_ZN4seal9Evaluator21mod_switch_to_inplaceERNS_10CiphertextESt5arrayImLm4EENS_16MemoryPoolHandleE@PLT
.Ltmp428:
	jmp	.LBB6_248
.LBB6_248:                              #   in Loop: Header=BB6_5 Depth=2
	leaq	-4928(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	movaps	-4880(%rbp), %xmm0
	movaps	-4864(%rbp), %xmm1
	movaps	%xmm1, -4944(%rbp)
	movaps	%xmm0, -4960(%rbp)
.Ltmp430:
	movaps	-4960(%rbp), %xmm0
	movaps	-4944(%rbp), %xmm1
	movq	%rsp, %rax
	movups	%xmm1, 16(%rax)
	movups	%xmm0, (%rax)
	leaq	-2520(%rbp), %rdi
	leaq	-3576(%rbp), %rsi
	callq	_ZN4seal9Evaluator21mod_switch_to_inplaceERNS_9PlaintextESt5arrayImLm4EE@PLT
.Ltmp431:
	jmp	.LBB6_249
.LBB6_249:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp432:
	movl	$428, %edi                      # imm = 0x1AC
	callq	_Z10print_linei
.Ltmp433:
	jmp	.LBB6_250
.LBB6_250:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp434:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.35(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp435:
	movq	%rax, -5968(%rbp)               # 8-byte Spill
	jmp	.LBB6_251
.LBB6_251:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp436:
	movq	-5968(%rbp), %rdi               # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp437:
	jmp	.LBB6_252
.LBB6_252:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp438:
	leaq	-5112(%rbp), %rdi
	callq	_ZN4seal13MemoryManager7GetPoolEv
.Ltmp439:
	jmp	.LBB6_253
.LBB6_253:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp441:
	leaq	-5096(%rbp), %rdi
	leaq	-5112(%rbp), %rsi
	callq	_ZN4seal10CiphertextC2ENS_16MemoryPoolHandleE
.Ltmp442:
	jmp	.LBB6_254
.LBB6_254:                              #   in Loop: Header=BB6_5 Depth=2
	leaq	-5112(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
.Ltmp444:
	leaq	-2520(%rbp), %rdi
	leaq	-4096(%rbp), %rsi
	leaq	-3920(%rbp), %rdx
	leaq	-5096(%rbp), %rcx
	callq	_ZN4seal9Evaluator3addERKNS_10CiphertextES3_RS1_
.Ltmp445:
	jmp	.LBB6_255
.LBB6_255:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp446:
	leaq	-2520(%rbp), %rdi
	leaq	-5096(%rbp), %rsi
	leaq	-3576(%rbp), %rdx
	callq	_ZN4seal9Evaluator17add_plain_inplaceERNS_10CiphertextERKNS_9PlaintextE@PLT
.Ltmp447:
	jmp	.LBB6_256
.LBB6_256:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp448:
	leaq	-5240(%rbp), %rdi
	callq	_ZN4seal13MemoryManager7GetPoolEv
.Ltmp449:
	jmp	.LBB6_257
.LBB6_257:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp451:
	leaq	-5224(%rbp), %rdi
	leaq	-5240(%rbp), %rsi
	callq	_ZN4seal9PlaintextC2ENS_16MemoryPoolHandleE
.Ltmp452:
	jmp	.LBB6_258
.LBB6_258:                              #   in Loop: Header=BB6_5 Depth=2
	leaq	-5240(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
.Ltmp454:
	movl	$438, %edi                      # imm = 0x1B6
	callq	_Z10print_linei
.Ltmp455:
	jmp	.LBB6_259
.LBB6_259:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp456:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.36(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp457:
	movq	%rax, -5976(%rbp)               # 8-byte Spill
	jmp	.LBB6_260
.LBB6_260:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp458:
	movq	-5976(%rbp), %rdi               # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp459:
	jmp	.LBB6_261
.LBB6_261:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp460:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.37(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp461:
	movq	%rax, -5984(%rbp)               # 8-byte Spill
	jmp	.LBB6_262
.LBB6_262:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp462:
	movq	-5984(%rbp), %rdi               # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp463:
	jmp	.LBB6_263
.LBB6_263:                              #   in Loop: Header=BB6_5 Depth=2
	leaq	-5264(%rbp), %rdi
	callq	_ZNSt6vectorIdSaIdEEC2Ev
	movq	$0, -5272(%rbp)
.LBB6_264:                              #   Parent Loop BB6_3 Depth=1
                                        #     Parent Loop BB6_5 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movq	-5272(%rbp), %rax
	movq	%rax, -5992(%rbp)               # 8-byte Spill
	leaq	-3160(%rbp), %rdi
	callq	_ZNKSt6vectorIdSaIdEE4sizeEv
	movq	%rax, %rcx
	movq	-5992(%rbp), %rax               # 8-byte Reload
	cmpq	%rcx, %rax
	jae	.LBB6_281
# %bb.265:                              #   in Loop: Header=BB6_264 Depth=3
	movq	-5272(%rbp), %rsi
	leaq	-3160(%rbp), %rdi
	callq	_ZNSt6vectorIdSaIdEEixEm
	movsd	(%rax), %xmm0                   # xmm0 = mem[0],zero
	movsd	%xmm0, -5280(%rbp)
	movsd	-5280(%rbp), %xmm1              # xmm1 = mem[0],zero
	movsd	.LCPI6_4(%rip), %xmm2           # xmm2 = mem[0],zero
	movaps	%xmm1, %xmm0
	mulsd	%xmm2, %xmm0
	mulsd	%xmm1, %xmm0
	movsd	.LCPI6_5(%rip), %xmm2           # xmm2 = mem[0],zero
	addsd	%xmm2, %xmm0
	mulsd	%xmm1, %xmm0
	movsd	.LCPI6_1(%rip), %xmm1           # xmm1 = mem[0],zero
	addsd	%xmm1, %xmm0
	movsd	%xmm0, -5288(%rbp)
.Ltmp509:
	leaq	-5264(%rbp), %rdi
	leaq	-5288(%rbp), %rsi
	callq	_ZNSt6vectorIdSaIdEE9push_backEOd
.Ltmp510:
	jmp	.LBB6_266
.LBB6_266:                              #   in Loop: Header=BB6_264 Depth=3
	jmp	.LBB6_267
.LBB6_267:                              #   in Loop: Header=BB6_264 Depth=3
	movq	-5272(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -5272(%rbp)
	jmp	.LBB6_264
.LBB6_268:
.Ltmp293:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	leaq	-4400(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	jmp	.LBB6_318
.LBB6_269:
.Ltmp312:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	leaq	-4416(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	jmp	.LBB6_318
.LBB6_270:
.Ltmp325:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	leaq	-4432(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	jmp	.LBB6_318
.LBB6_271:
.Ltmp350:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	leaq	-4448(%rbp), %rdi
	callq	_ZNSt10shared_ptrIKN4seal11SEALContext11ContextDataEED2Ev
	jmp	.LBB6_318
.LBB6_272:
.Ltmp359:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	leaq	-4496(%rbp), %rdi
	callq	_ZNSt10shared_ptrIKN4seal11SEALContext11ContextDataEED2Ev
	jmp	.LBB6_318
.LBB6_273:
.Ltmp368:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	leaq	-4544(%rbp), %rdi
	callq	_ZNSt10shared_ptrIKN4seal11SEALContext11ContextDataEED2Ev
	jmp	.LBB6_318
.LBB6_274:
.Ltmp440:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	jmp	.LBB6_317
.LBB6_275:
.Ltmp429:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	leaq	-4928(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	jmp	.LBB6_317
.LBB6_276:
.Ltmp443:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	leaq	-5112(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	jmp	.LBB6_317
.LBB6_277:
.Ltmp450:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	jmp	.LBB6_316
.LBB6_278:
.Ltmp453:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	leaq	-5240(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	jmp	.LBB6_316
.LBB6_279:
.Ltmp464:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	jmp	.LBB6_315
.LBB6_280:
.Ltmp511:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	jmp	.LBB6_314
.LBB6_281:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp465:
	leaq	-5312(%rbp), %rdi
	leaq	-5264(%rbp), %rsi
	callq	_ZNSt6vectorIdSaIdEEC2ERKS1_
.Ltmp466:
	jmp	.LBB6_282
.LBB6_282:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp467:
	leaq	-5312(%rbp), %rdi
	movl	$3, %esi
	movl	$7, %edx
	callq	_Z12print_vectorIdEvSt6vectorIT_SaIS1_EEmi
.Ltmp468:
	jmp	.LBB6_283
.LBB6_283:                              #   in Loop: Header=BB6_5 Depth=2
	leaq	-5312(%rbp), %rdi
	callq	_ZNSt6vectorIdSaIdEED2Ev
.Ltmp470:
	leaq	-2808(%rbp), %rdi
	leaq	-5096(%rbp), %rsi
	leaq	-5224(%rbp), %rdx
	callq	_ZN4seal9Decryptor7decryptERKNS_10CiphertextERNS_9PlaintextE@PLT
.Ltmp471:
	jmp	.LBB6_284
.LBB6_284:                              #   in Loop: Header=BB6_5 Depth=2
	leaq	-5336(%rbp), %rdi
	callq	_ZNSt6vectorIdSaIdEEC2Ev
.Ltmp472:
	leaq	-5352(%rbp), %rdi
	callq	_ZN4seal13MemoryManager7GetPoolEv
.Ltmp473:
	jmp	.LBB6_285
.LBB6_285:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp474:
	leaq	-3128(%rbp), %rdi
	leaq	-5224(%rbp), %rsi
	leaq	-5336(%rbp), %rdx
	leaq	-5352(%rbp), %rcx
	callq	_ZN4seal11CKKSEncoder6decodeIdvEEvRKNS_9PlaintextERSt6vectorIT_SaIS6_EENS_16MemoryPoolHandleE
.Ltmp475:
	jmp	.LBB6_286
.LBB6_286:                              #   in Loop: Header=BB6_5 Depth=2
	leaq	-5352(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
.Ltmp477:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.38(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp478:
	movq	%rax, -6000(%rbp)               # 8-byte Spill
	jmp	.LBB6_287
.LBB6_287:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp479:
	movq	-6000(%rbp), %rdi               # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp480:
	jmp	.LBB6_288
.LBB6_288:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp481:
	leaq	-5376(%rbp), %rdi
	leaq	-5336(%rbp), %rsi
	callq	_ZNSt6vectorIdSaIdEEC2ERKS1_
.Ltmp482:
	jmp	.LBB6_289
.LBB6_289:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp483:
	leaq	-5376(%rbp), %rdi
	movl	$3, %esi
	movl	$7, %edx
	callq	_Z12print_vectorIdEvSt6vectorIT_SaIS1_EEmi
.Ltmp484:
	jmp	.LBB6_290
.LBB6_290:                              #   in Loop: Header=BB6_5 Depth=2
	leaq	-5376(%rbp), %rdi
	callq	_ZNSt6vectorIdSaIdEED2Ev
	leaq	-5336(%rbp), %rdi
	callq	_ZNKSt6vectorIdSaIdEE4sizeEv
	movq	%rax, -6008(%rbp)               # 8-byte Spill
	leaq	-5264(%rbp), %rdi
	callq	_ZNKSt6vectorIdSaIdEE4sizeEv
	movq	%rax, %rcx
	movq	-6008(%rbp), %rax               # 8-byte Reload
	cmpq	%rcx, %rax
	jne	.LBB6_311
# %bb.291:                              #   in Loop: Header=BB6_5 Depth=2
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -5384(%rbp)
	movl	$0, -5396(%rbp)
.LBB6_292:                              #   Parent Loop BB6_3 Depth=1
                                        #     Parent Loop BB6_5 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movslq	-5396(%rbp), %rax
	movq	%rax, -6016(%rbp)               # 8-byte Spill
	leaq	-5336(%rbp), %rdi
	callq	_ZNKSt6vectorIdSaIdEE4sizeEv
	movq	%rax, %rcx
	movq	-6016(%rbp), %rax               # 8-byte Reload
	cmpq	%rcx, %rax
	jae	.LBB6_300
# %bb.293:                              #   in Loop: Header=BB6_292 Depth=3
	movslq	-5396(%rbp), %rsi
	leaq	-5336(%rbp), %rdi
	callq	_ZNSt6vectorIdSaIdEEixEm
	movsd	(%rax), %xmm0                   # xmm0 = mem[0],zero
	movsd	%xmm0, -6032(%rbp)              # 8-byte Spill
	movslq	-5396(%rbp), %rsi
	leaq	-5264(%rbp), %rdi
	callq	_ZNSt6vectorIdSaIdEEixEm
	movsd	-6032(%rbp), %xmm0              # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movsd	(%rax), %xmm1                   # xmm1 = mem[0],zero
	subsd	%xmm1, %xmm0
.Ltmp506:
	movl	$2, %edi
	callq	_ZSt3powIdiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_Xsr3std12__is_integerIS2_EE7__valueEE6__typeENS4_IS3_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEE6__typeES2_S3_
.Ltmp507:
	movsd	%xmm0, -6024(%rbp)              # 8-byte Spill
	jmp	.LBB6_294
.LBB6_294:                              #   in Loop: Header=BB6_292 Depth=3
	movsd	-6024(%rbp), %xmm0              # 8-byte Reload
                                        # xmm0 = mem[0],zero
	addsd	-5384(%rbp), %xmm0
	movsd	%xmm0, -5384(%rbp)
# %bb.295:                              #   in Loop: Header=BB6_292 Depth=3
	movl	-5396(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -5396(%rbp)
	jmp	.LBB6_292
.LBB6_296:
.Ltmp469:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	leaq	-5312(%rbp), %rdi
	callq	_ZNSt6vectorIdSaIdEED2Ev
	jmp	.LBB6_314
.LBB6_297:
.Ltmp508:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	jmp	.LBB6_313
.LBB6_298:
.Ltmp476:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	leaq	-5352(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	jmp	.LBB6_313
.LBB6_299:
.Ltmp485:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	leaq	-5376(%rbp), %rdi
	callq	_ZNSt6vectorIdSaIdEED2Ev
	jmp	.LBB6_313
.LBB6_300:                              #   in Loop: Header=BB6_5 Depth=2
	movsd	-5384(%rbp), %xmm0              # xmm0 = mem[0],zero
.Ltmp486:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	callq	_ZNSolsEd@PLT
.Ltmp487:
	movq	%rax, -6040(%rbp)               # 8-byte Spill
	jmp	.LBB6_301
.LBB6_301:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp488:
	movq	-6040(%rbp), %rdi               # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp489:
	jmp	.LBB6_302
.LBB6_302:                              #   in Loop: Header=BB6_5 Depth=2
	movsd	-5384(%rbp), %xmm0              # xmm0 = mem[0],zero
	movsd	%xmm0, -6064(%rbp)              # 8-byte Spill
	leaq	-5336(%rbp), %rdi
	movq	%rdi, -6056(%rbp)               # 8-byte Spill
	callq	_ZNKSt6vectorIdSaIdEE4sizeEv
	movsd	-6064(%rbp), %xmm0              # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movq	-6056(%rbp), %rdi               # 8-byte Reload
	movq	%rax, %xmm1
	movaps	.LCPI6_2(%rip), %xmm2           # xmm2 = [1127219200,1160773632,0,0]
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	movapd	.LCPI6_3(%rip), %xmm2           # xmm2 = [4.503599627370496E+15,1.9342813113834067E+25]
	subpd	%xmm2, %xmm1
	movaps	%xmm1, %xmm2
	unpckhpd	%xmm1, %xmm1                    # xmm1 = xmm1[1,1]
	addsd	%xmm2, %xmm1
	divsd	%xmm1, %xmm0
	movsd	%xmm0, -5392(%rbp)
	callq	_ZNKSt6vectorIdSaIdEE4sizeEv
	movq	%rax, %rsi
.Ltmp490:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	callq	_ZNSolsEm@PLT
.Ltmp491:
	movq	%rax, -6048(%rbp)               # 8-byte Spill
	jmp	.LBB6_303
.LBB6_303:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp492:
	movq	-6048(%rbp), %rdi               # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp493:
	jmp	.LBB6_304
.LBB6_304:                              #   in Loop: Header=BB6_5 Depth=2
	movsd	-5392(%rbp), %xmm0              # xmm0 = mem[0],zero
.Ltmp494:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	callq	_ZNSolsEd@PLT
.Ltmp495:
	movq	%rax, -6072(%rbp)               # 8-byte Spill
	jmp	.LBB6_305
.LBB6_305:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp496:
	movq	-6072(%rbp), %rdi               # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp497:
	jmp	.LBB6_306
.LBB6_306:                              #   in Loop: Header=BB6_5 Depth=2
	movl	-596(%rbp), %esi
.Ltmp498:
	leaq	-568(%rbp), %rdi
	callq	_ZNSolsEi@PLT
.Ltmp499:
	movq	%rax, -6080(%rbp)               # 8-byte Spill
	jmp	.LBB6_307
.LBB6_307:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp500:
	movq	-6080(%rbp), %rdi               # 8-byte Reload
	leaq	.L.str.20(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp501:
	movq	%rax, -6088(%rbp)               # 8-byte Spill
	jmp	.LBB6_308
.LBB6_308:                              #   in Loop: Header=BB6_5 Depth=2
	movq	-6088(%rbp), %rdi               # 8-byte Reload
	movsd	-5392(%rbp), %xmm0              # xmm0 = mem[0],zero
.Ltmp502:
	callq	_ZNSolsEd@PLT
.Ltmp503:
	movq	%rax, -6096(%rbp)               # 8-byte Spill
	jmp	.LBB6_309
.LBB6_309:                              #   in Loop: Header=BB6_5 Depth=2
.Ltmp504:
	movq	-6096(%rbp), %rdi               # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp505:
	jmp	.LBB6_310
.LBB6_310:                              #   in Loop: Header=BB6_5 Depth=2
	movsd	-576(%rbp), %xmm0               # xmm0 = mem[0],zero
	addsd	-5392(%rbp), %xmm0
	movsd	%xmm0, -576(%rbp)
.LBB6_311:                              #   in Loop: Header=BB6_5 Depth=2
	leaq	-5336(%rbp), %rdi
	callq	_ZNSt6vectorIdSaIdEED2Ev
	leaq	-5264(%rbp), %rdi
	callq	_ZNSt6vectorIdSaIdEED2Ev
	leaq	-5224(%rbp), %rdi
	callq	_ZN4seal9PlaintextD2Ev
	leaq	-5096(%rbp), %rdi
	callq	_ZN4seal10CiphertextD2Ev
	leaq	-4840(%rbp), %rdi
	callq	_ZNSt9basic_iosIcSt11char_traitsIcEED1Ev@PLT
	leaq	-4296(%rbp), %rdi
	callq	_ZN4seal10CiphertextD2Ev
	leaq	-4096(%rbp), %rdi
	callq	_ZN4seal10CiphertextD2Ev
	leaq	-3920(%rbp), %rdi
	callq	_ZN4seal10CiphertextD2Ev
	leaq	-3752(%rbp), %rdi
	callq	_ZN4seal9PlaintextD2Ev
	leaq	-3576(%rbp), %rdi
	callq	_ZN4seal9PlaintextD2Ev
	leaq	-3448(%rbp), %rdi
	callq	_ZN4seal9PlaintextD2Ev
	leaq	-3320(%rbp), %rdi
	callq	_ZN4seal9PlaintextD2Ev
	leaq	-3160(%rbp), %rdi
	callq	_ZNSt6vectorIdSaIdEED2Ev
	leaq	-3128(%rbp), %rdi
	callq	_ZN4seal11CKKSEncoderD2Ev
	leaq	-2808(%rbp), %rdi
	callq	_ZN4seal9DecryptorD2Ev
	leaq	-2520(%rbp), %rdi
	callq	_ZN4seal9EvaluatorD2Ev
	leaq	-2296(%rbp), %rdi
	callq	_ZN4seal9EncryptorD2Ev
	leaq	-1872(%rbp), %rdi
	callq	_ZN4seal10GaloisKeysD2Ev
	leaq	-1800(%rbp), %rdi
	callq	_ZN4seal9RelinKeysD2Ev
	leaq	-1728(%rbp), %rdi
	callq	_ZN4seal9PublicKeyD2Ev
	leaq	-1592(%rbp), %rdi
	callq	_ZN4seal9SecretKeyD2Ev
	leaq	-1480(%rbp), %rdi
	callq	_ZN4seal12KeyGeneratorD2Ev
	leaq	-1040(%rbp), %rdi
	callq	_ZN4seal11SEALContextD2Ev
	leaq	-752(%rbp), %rdi
	callq	_ZN4seal20EncryptionParametersD2Ev
# %bb.312:                              #   in Loop: Header=BB6_5 Depth=2
	movl	-596(%rbp), %eax
	addl	$100, %eax
	movl	%eax, -596(%rbp)
	jmp	.LBB6_5
.LBB6_313:
	leaq	-5336(%rbp), %rdi
	callq	_ZNSt6vectorIdSaIdEED2Ev
.LBB6_314:
	leaq	-5264(%rbp), %rdi
	callq	_ZNSt6vectorIdSaIdEED2Ev
.LBB6_315:
	leaq	-5224(%rbp), %rdi
	callq	_ZN4seal9PlaintextD2Ev
.LBB6_316:
	leaq	-5096(%rbp), %rdi
	callq	_ZN4seal10CiphertextD2Ev
.LBB6_317:
	leaq	-4840(%rbp), %rdi
	callq	_ZNSt9basic_iosIcSt11char_traitsIcEED1Ev@PLT
.LBB6_318:
	leaq	-4296(%rbp), %rdi
	callq	_ZN4seal10CiphertextD2Ev
.LBB6_319:
	leaq	-4096(%rbp), %rdi
	callq	_ZN4seal10CiphertextD2Ev
.LBB6_320:
	leaq	-3920(%rbp), %rdi
	callq	_ZN4seal10CiphertextD2Ev
.LBB6_321:
	leaq	-3752(%rbp), %rdi
	callq	_ZN4seal9PlaintextD2Ev
.LBB6_322:
	leaq	-3576(%rbp), %rdi
	callq	_ZN4seal9PlaintextD2Ev
.LBB6_323:
	leaq	-3448(%rbp), %rdi
	callq	_ZN4seal9PlaintextD2Ev
.LBB6_324:
	leaq	-3320(%rbp), %rdi
	callq	_ZN4seal9PlaintextD2Ev
.LBB6_325:
	leaq	-3160(%rbp), %rdi
	callq	_ZNSt6vectorIdSaIdEED2Ev
.LBB6_326:
	leaq	-3128(%rbp), %rdi
	callq	_ZN4seal11CKKSEncoderD2Ev
.LBB6_327:
	leaq	-2808(%rbp), %rdi
	callq	_ZN4seal9DecryptorD2Ev
.LBB6_328:
	leaq	-2520(%rbp), %rdi
	callq	_ZN4seal9EvaluatorD2Ev
.LBB6_329:
	leaq	-2296(%rbp), %rdi
	callq	_ZN4seal9EncryptorD2Ev
.LBB6_330:
	leaq	-1872(%rbp), %rdi
	callq	_ZN4seal10GaloisKeysD2Ev
.LBB6_331:
	leaq	-1800(%rbp), %rdi
	callq	_ZN4seal9RelinKeysD2Ev
.LBB6_332:
	leaq	-1728(%rbp), %rdi
	callq	_ZN4seal9PublicKeyD2Ev
.LBB6_333:
	leaq	-1592(%rbp), %rdi
	callq	_ZN4seal9SecretKeyD2Ev
.LBB6_334:
	leaq	-1480(%rbp), %rdi
	callq	_ZN4seal12KeyGeneratorD2Ev
.LBB6_335:
	leaq	-1040(%rbp), %rdi
	callq	_ZN4seal11SEALContextD2Ev
.LBB6_336:
	leaq	-752(%rbp), %rdi
	callq	_ZN4seal20EncryptionParametersD2Ev
	jmp	.LBB6_340
.LBB6_337:                              #   in Loop: Header=BB6_3 Depth=1
	jmp	.LBB6_338
.LBB6_338:                              #   in Loop: Header=BB6_3 Depth=1
	movl	-580(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -580(%rbp)
	jmp	.LBB6_3
.LBB6_339:
	leaq	-568(%rbp), %rdi
	callq	_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev@PLT
	addq	$6128, %rsp                     # imm = 0x17F0
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB6_340:
	.cfi_def_cfa %rbp, 16
	leaq	-568(%rbp), %rdi
	callq	_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev@PLT
.LBB6_341:
	movq	-48(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end6:
	.size	_Z19example_ckks_basicsv, .Lfunc_end6-_Z19example_ckks_basicsv
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table6:
.Lexception3:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end3-.Lcst_begin3
.Lcst_begin3:
	.uleb128 .Ltmp23-.Lfunc_begin3          # >> Call Site 1 <<
	.uleb128 .Ltmp24-.Ltmp23                #   Call between .Ltmp23 and .Ltmp24
	.uleb128 .Ltmp25-.Lfunc_begin3          #     jumps to .Ltmp25
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp26-.Lfunc_begin3          # >> Call Site 2 <<
	.uleb128 .Ltmp27-.Ltmp26                #   Call between .Ltmp26 and .Ltmp27
	.uleb128 .Ltmp28-.Lfunc_begin3          #     jumps to .Ltmp28
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp27-.Lfunc_begin3          # >> Call Site 3 <<
	.uleb128 .Ltmp29-.Ltmp27                #   Call between .Ltmp27 and .Ltmp29
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp29-.Lfunc_begin3          # >> Call Site 4 <<
	.uleb128 .Ltmp30-.Ltmp29                #   Call between .Ltmp29 and .Ltmp30
	.uleb128 .Ltmp31-.Lfunc_begin3          #     jumps to .Ltmp31
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp32-.Lfunc_begin3          # >> Call Site 5 <<
	.uleb128 .Ltmp33-.Ltmp32                #   Call between .Ltmp32 and .Ltmp33
	.uleb128 .Ltmp47-.Lfunc_begin3          #     jumps to .Ltmp47
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp34-.Lfunc_begin3          # >> Call Site 6 <<
	.uleb128 .Ltmp35-.Ltmp34                #   Call between .Ltmp34 and .Ltmp35
	.uleb128 .Ltmp36-.Lfunc_begin3          #     jumps to .Ltmp36
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp37-.Lfunc_begin3          # >> Call Site 7 <<
	.uleb128 .Ltmp38-.Ltmp37                #   Call between .Ltmp37 and .Ltmp38
	.uleb128 .Ltmp39-.Lfunc_begin3          #     jumps to .Ltmp39
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp40-.Lfunc_begin3          # >> Call Site 8 <<
	.uleb128 .Ltmp41-.Ltmp40                #   Call between .Ltmp40 and .Ltmp41
	.uleb128 .Ltmp42-.Lfunc_begin3          #     jumps to .Ltmp42
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp43-.Lfunc_begin3          # >> Call Site 9 <<
	.uleb128 .Ltmp46-.Ltmp43                #   Call between .Ltmp43 and .Ltmp46
	.uleb128 .Ltmp47-.Lfunc_begin3          #     jumps to .Ltmp47
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp48-.Lfunc_begin3          # >> Call Site 10 <<
	.uleb128 .Ltmp57-.Ltmp48                #   Call between .Ltmp48 and .Ltmp57
	.uleb128 .Ltmp524-.Lfunc_begin3         #     jumps to .Ltmp524
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp58-.Lfunc_begin3          # >> Call Site 11 <<
	.uleb128 .Ltmp61-.Ltmp58                #   Call between .Ltmp58 and .Ltmp61
	.uleb128 .Ltmp62-.Lfunc_begin3          #     jumps to .Ltmp62
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp63-.Lfunc_begin3          # >> Call Site 12 <<
	.uleb128 .Ltmp64-.Ltmp63                #   Call between .Ltmp63 and .Ltmp64
	.uleb128 .Ltmp65-.Lfunc_begin3          #     jumps to .Ltmp65
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp66-.Lfunc_begin3          # >> Call Site 13 <<
	.uleb128 .Ltmp69-.Ltmp66                #   Call between .Ltmp66 and .Ltmp69
	.uleb128 .Ltmp70-.Lfunc_begin3          #     jumps to .Ltmp70
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp71-.Lfunc_begin3          # >> Call Site 14 <<
	.uleb128 .Ltmp74-.Ltmp71                #   Call between .Ltmp71 and .Ltmp74
	.uleb128 .Ltmp75-.Lfunc_begin3          #     jumps to .Ltmp75
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp76-.Lfunc_begin3          # >> Call Site 15 <<
	.uleb128 .Ltmp79-.Ltmp76                #   Call between .Ltmp76 and .Ltmp79
	.uleb128 .Ltmp80-.Lfunc_begin3          #     jumps to .Ltmp80
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp81-.Lfunc_begin3          # >> Call Site 16 <<
	.uleb128 .Ltmp82-.Ltmp81                #   Call between .Ltmp81 and .Ltmp82
	.uleb128 .Ltmp83-.Lfunc_begin3          #     jumps to .Ltmp83
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp84-.Lfunc_begin3          # >> Call Site 17 <<
	.uleb128 .Ltmp85-.Ltmp84                #   Call between .Ltmp84 and .Ltmp85
	.uleb128 .Ltmp86-.Lfunc_begin3          #     jumps to .Ltmp86
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp87-.Lfunc_begin3          # >> Call Site 18 <<
	.uleb128 .Ltmp88-.Ltmp87                #   Call between .Ltmp87 and .Ltmp88
	.uleb128 .Ltmp89-.Lfunc_begin3          #     jumps to .Ltmp89
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp90-.Lfunc_begin3          # >> Call Site 19 <<
	.uleb128 .Ltmp95-.Ltmp90                #   Call between .Ltmp90 and .Ltmp95
	.uleb128 .Ltmp96-.Lfunc_begin3          #     jumps to .Ltmp96
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp97-.Lfunc_begin3          # >> Call Site 20 <<
	.uleb128 .Ltmp104-.Ltmp97               #   Call between .Ltmp97 and .Ltmp104
	.uleb128 .Ltmp519-.Lfunc_begin3         #     jumps to .Ltmp519
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp105-.Lfunc_begin3         # >> Call Site 21 <<
	.uleb128 .Ltmp106-.Ltmp105              #   Call between .Ltmp105 and .Ltmp106
	.uleb128 .Ltmp107-.Lfunc_begin3         #     jumps to .Ltmp107
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp108-.Lfunc_begin3         # >> Call Site 22 <<
	.uleb128 .Ltmp113-.Ltmp108              #   Call between .Ltmp108 and .Ltmp113
	.uleb128 .Ltmp519-.Lfunc_begin3         #     jumps to .Ltmp519
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp114-.Lfunc_begin3         # >> Call Site 23 <<
	.uleb128 .Ltmp115-.Ltmp114              #   Call between .Ltmp114 and .Ltmp115
	.uleb128 .Ltmp116-.Lfunc_begin3         #     jumps to .Ltmp116
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp117-.Lfunc_begin3         # >> Call Site 24 <<
	.uleb128 .Ltmp118-.Ltmp117              #   Call between .Ltmp117 and .Ltmp118
	.uleb128 .Ltmp119-.Lfunc_begin3         #     jumps to .Ltmp119
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp120-.Lfunc_begin3         # >> Call Site 25 <<
	.uleb128 .Ltmp121-.Ltmp120              #   Call between .Ltmp120 and .Ltmp121
	.uleb128 .Ltmp122-.Lfunc_begin3         #     jumps to .Ltmp122
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp123-.Lfunc_begin3         # >> Call Site 26 <<
	.uleb128 .Ltmp124-.Ltmp123              #   Call between .Ltmp123 and .Ltmp124
	.uleb128 .Ltmp125-.Lfunc_begin3         #     jumps to .Ltmp125
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp126-.Lfunc_begin3         # >> Call Site 27 <<
	.uleb128 .Ltmp127-.Ltmp126              #   Call between .Ltmp126 and .Ltmp127
	.uleb128 .Ltmp128-.Lfunc_begin3         #     jumps to .Ltmp128
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp129-.Lfunc_begin3         # >> Call Site 28 <<
	.uleb128 .Ltmp130-.Ltmp129              #   Call between .Ltmp129 and .Ltmp130
	.uleb128 .Ltmp146-.Lfunc_begin3         #     jumps to .Ltmp146
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp131-.Lfunc_begin3         # >> Call Site 29 <<
	.uleb128 .Ltmp132-.Ltmp131              #   Call between .Ltmp131 and .Ltmp132
	.uleb128 .Ltmp133-.Lfunc_begin3         #     jumps to .Ltmp133
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp134-.Lfunc_begin3         # >> Call Site 30 <<
	.uleb128 .Ltmp135-.Ltmp134              #   Call between .Ltmp134 and .Ltmp135
	.uleb128 .Ltmp146-.Lfunc_begin3         #     jumps to .Ltmp146
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp136-.Lfunc_begin3         # >> Call Site 31 <<
	.uleb128 .Ltmp137-.Ltmp136              #   Call between .Ltmp136 and .Ltmp137
	.uleb128 .Ltmp138-.Lfunc_begin3         #     jumps to .Ltmp138
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp139-.Lfunc_begin3         # >> Call Site 32 <<
	.uleb128 .Ltmp140-.Ltmp139              #   Call between .Ltmp139 and .Ltmp140
	.uleb128 .Ltmp146-.Lfunc_begin3         #     jumps to .Ltmp146
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp141-.Lfunc_begin3         # >> Call Site 33 <<
	.uleb128 .Ltmp142-.Ltmp141              #   Call between .Ltmp141 and .Ltmp142
	.uleb128 .Ltmp143-.Lfunc_begin3         #     jumps to .Ltmp143
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp144-.Lfunc_begin3         # >> Call Site 34 <<
	.uleb128 .Ltmp145-.Ltmp144              #   Call between .Ltmp144 and .Ltmp145
	.uleb128 .Ltmp146-.Lfunc_begin3         #     jumps to .Ltmp146
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp147-.Lfunc_begin3         # >> Call Site 35 <<
	.uleb128 .Ltmp148-.Ltmp147              #   Call between .Ltmp147 and .Ltmp148
	.uleb128 .Ltmp149-.Lfunc_begin3         #     jumps to .Ltmp149
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp150-.Lfunc_begin3         # >> Call Site 36 <<
	.uleb128 .Ltmp157-.Ltmp150              #   Call between .Ltmp150 and .Ltmp157
	.uleb128 .Ltmp163-.Lfunc_begin3         #     jumps to .Ltmp163
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp158-.Lfunc_begin3         # >> Call Site 37 <<
	.uleb128 .Ltmp159-.Ltmp158              #   Call between .Ltmp158 and .Ltmp159
	.uleb128 .Ltmp160-.Lfunc_begin3         #     jumps to .Ltmp160
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp161-.Lfunc_begin3         # >> Call Site 38 <<
	.uleb128 .Ltmp162-.Ltmp161              #   Call between .Ltmp161 and .Ltmp162
	.uleb128 .Ltmp163-.Lfunc_begin3         #     jumps to .Ltmp163
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp164-.Lfunc_begin3         # >> Call Site 39 <<
	.uleb128 .Ltmp165-.Ltmp164              #   Call between .Ltmp164 and .Ltmp165
	.uleb128 .Ltmp166-.Lfunc_begin3         #     jumps to .Ltmp166
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp167-.Lfunc_begin3         # >> Call Site 40 <<
	.uleb128 .Ltmp168-.Ltmp167              #   Call between .Ltmp167 and .Ltmp168
	.uleb128 .Ltmp174-.Lfunc_begin3         #     jumps to .Ltmp174
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp169-.Lfunc_begin3         # >> Call Site 41 <<
	.uleb128 .Ltmp170-.Ltmp169              #   Call between .Ltmp169 and .Ltmp170
	.uleb128 .Ltmp171-.Lfunc_begin3         #     jumps to .Ltmp171
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp172-.Lfunc_begin3         # >> Call Site 42 <<
	.uleb128 .Ltmp173-.Ltmp172              #   Call between .Ltmp172 and .Ltmp173
	.uleb128 .Ltmp174-.Lfunc_begin3         #     jumps to .Ltmp174
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp175-.Lfunc_begin3         # >> Call Site 43 <<
	.uleb128 .Ltmp176-.Ltmp175              #   Call between .Ltmp175 and .Ltmp176
	.uleb128 .Ltmp177-.Lfunc_begin3         #     jumps to .Ltmp177
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp178-.Lfunc_begin3         # >> Call Site 44 <<
	.uleb128 .Ltmp185-.Ltmp178              #   Call between .Ltmp178 and .Ltmp185
	.uleb128 .Ltmp229-.Lfunc_begin3         #     jumps to .Ltmp229
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp186-.Lfunc_begin3         # >> Call Site 45 <<
	.uleb128 .Ltmp187-.Ltmp186              #   Call between .Ltmp186 and .Ltmp187
	.uleb128 .Ltmp188-.Lfunc_begin3         #     jumps to .Ltmp188
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp189-.Lfunc_begin3         # >> Call Site 46 <<
	.uleb128 .Ltmp190-.Ltmp189              #   Call between .Ltmp189 and .Ltmp190
	.uleb128 .Ltmp229-.Lfunc_begin3         #     jumps to .Ltmp229
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp191-.Lfunc_begin3         # >> Call Site 47 <<
	.uleb128 .Ltmp192-.Ltmp191              #   Call between .Ltmp191 and .Ltmp192
	.uleb128 .Ltmp193-.Lfunc_begin3         #     jumps to .Ltmp193
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp194-.Lfunc_begin3         # >> Call Site 48 <<
	.uleb128 .Ltmp209-.Ltmp194              #   Call between .Ltmp194 and .Ltmp209
	.uleb128 .Ltmp229-.Lfunc_begin3         #     jumps to .Ltmp229
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp210-.Lfunc_begin3         # >> Call Site 49 <<
	.uleb128 .Ltmp211-.Ltmp210              #   Call between .Ltmp210 and .Ltmp211
	.uleb128 .Ltmp212-.Lfunc_begin3         #     jumps to .Ltmp212
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp213-.Lfunc_begin3         # >> Call Site 50 <<
	.uleb128 .Ltmp228-.Ltmp213              #   Call between .Ltmp213 and .Ltmp228
	.uleb128 .Ltmp229-.Lfunc_begin3         #     jumps to .Ltmp229
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp230-.Lfunc_begin3         # >> Call Site 51 <<
	.uleb128 .Ltmp231-.Ltmp230              #   Call between .Ltmp230 and .Ltmp231
	.uleb128 .Ltmp232-.Lfunc_begin3         #     jumps to .Ltmp232
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp233-.Lfunc_begin3         # >> Call Site 52 <<
	.uleb128 .Ltmp234-.Ltmp233              #   Call between .Ltmp233 and .Ltmp234
	.uleb128 .Ltmp516-.Lfunc_begin3         #     jumps to .Ltmp516
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp235-.Lfunc_begin3         # >> Call Site 53 <<
	.uleb128 .Ltmp236-.Ltmp235              #   Call between .Ltmp235 and .Ltmp236
	.uleb128 .Ltmp237-.Lfunc_begin3         #     jumps to .Ltmp237
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp238-.Lfunc_begin3         # >> Call Site 54 <<
	.uleb128 .Ltmp247-.Ltmp238              #   Call between .Ltmp238 and .Ltmp247
	.uleb128 .Ltmp516-.Lfunc_begin3         #     jumps to .Ltmp516
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp248-.Lfunc_begin3         # >> Call Site 55 <<
	.uleb128 .Ltmp249-.Ltmp248              #   Call between .Ltmp248 and .Ltmp249
	.uleb128 .Ltmp250-.Lfunc_begin3         #     jumps to .Ltmp250
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp251-.Lfunc_begin3         # >> Call Site 56 <<
	.uleb128 .Ltmp266-.Ltmp251              #   Call between .Ltmp251 and .Ltmp266
	.uleb128 .Ltmp516-.Lfunc_begin3         #     jumps to .Ltmp516
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp267-.Lfunc_begin3         # >> Call Site 57 <<
	.uleb128 .Ltmp268-.Ltmp267              #   Call between .Ltmp267 and .Ltmp268
	.uleb128 .Ltmp269-.Lfunc_begin3         #     jumps to .Ltmp269
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp270-.Lfunc_begin3         # >> Call Site 58 <<
	.uleb128 .Ltmp271-.Ltmp270              #   Call between .Ltmp270 and .Ltmp271
	.uleb128 .Ltmp516-.Lfunc_begin3         #     jumps to .Ltmp516
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp272-.Lfunc_begin3         # >> Call Site 59 <<
	.uleb128 .Ltmp273-.Ltmp272              #   Call between .Ltmp272 and .Ltmp273
	.uleb128 .Ltmp274-.Lfunc_begin3         #     jumps to .Ltmp274
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp275-.Lfunc_begin3         # >> Call Site 60 <<
	.uleb128 .Ltmp290-.Ltmp275              #   Call between .Ltmp275 and .Ltmp290
	.uleb128 .Ltmp516-.Lfunc_begin3         #     jumps to .Ltmp516
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp291-.Lfunc_begin3         # >> Call Site 61 <<
	.uleb128 .Ltmp292-.Ltmp291              #   Call between .Ltmp291 and .Ltmp292
	.uleb128 .Ltmp293-.Lfunc_begin3         #     jumps to .Ltmp293
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp294-.Lfunc_begin3         # >> Call Site 62 <<
	.uleb128 .Ltmp309-.Ltmp294              #   Call between .Ltmp294 and .Ltmp309
	.uleb128 .Ltmp516-.Lfunc_begin3         #     jumps to .Ltmp516
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp310-.Lfunc_begin3         # >> Call Site 63 <<
	.uleb128 .Ltmp311-.Ltmp310              #   Call between .Ltmp310 and .Ltmp311
	.uleb128 .Ltmp312-.Lfunc_begin3         #     jumps to .Ltmp312
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp313-.Lfunc_begin3         # >> Call Site 64 <<
	.uleb128 .Ltmp322-.Ltmp313              #   Call between .Ltmp313 and .Ltmp322
	.uleb128 .Ltmp516-.Lfunc_begin3         #     jumps to .Ltmp516
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp323-.Lfunc_begin3         # >> Call Site 65 <<
	.uleb128 .Ltmp324-.Ltmp323              #   Call between .Ltmp323 and .Ltmp324
	.uleb128 .Ltmp325-.Lfunc_begin3         #     jumps to .Ltmp325
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp326-.Lfunc_begin3         # >> Call Site 66 <<
	.uleb128 .Ltmp345-.Ltmp326              #   Call between .Ltmp326 and .Ltmp345
	.uleb128 .Ltmp516-.Lfunc_begin3         #     jumps to .Ltmp516
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp346-.Lfunc_begin3         # >> Call Site 67 <<
	.uleb128 .Ltmp349-.Ltmp346              #   Call between .Ltmp346 and .Ltmp349
	.uleb128 .Ltmp350-.Lfunc_begin3         #     jumps to .Ltmp350
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp351-.Lfunc_begin3         # >> Call Site 68 <<
	.uleb128 .Ltmp354-.Ltmp351              #   Call between .Ltmp351 and .Ltmp354
	.uleb128 .Ltmp516-.Lfunc_begin3         #     jumps to .Ltmp516
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp355-.Lfunc_begin3         # >> Call Site 69 <<
	.uleb128 .Ltmp358-.Ltmp355              #   Call between .Ltmp355 and .Ltmp358
	.uleb128 .Ltmp359-.Lfunc_begin3         #     jumps to .Ltmp359
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp360-.Lfunc_begin3         # >> Call Site 70 <<
	.uleb128 .Ltmp363-.Ltmp360              #   Call between .Ltmp360 and .Ltmp363
	.uleb128 .Ltmp516-.Lfunc_begin3         #     jumps to .Ltmp516
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp364-.Lfunc_begin3         # >> Call Site 71 <<
	.uleb128 .Ltmp367-.Ltmp364              #   Call between .Ltmp364 and .Ltmp367
	.uleb128 .Ltmp368-.Lfunc_begin3         #     jumps to .Ltmp368
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp369-.Lfunc_begin3         # >> Call Site 72 <<
	.uleb128 .Ltmp378-.Ltmp369              #   Call between .Ltmp369 and .Ltmp378
	.uleb128 .Ltmp516-.Lfunc_begin3         #     jumps to .Ltmp516
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp379-.Lfunc_begin3         # >> Call Site 73 <<
	.uleb128 .Ltmp426-.Ltmp379              #   Call between .Ltmp379 and .Ltmp426
	.uleb128 .Ltmp440-.Lfunc_begin3         #     jumps to .Ltmp440
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp427-.Lfunc_begin3         # >> Call Site 74 <<
	.uleb128 .Ltmp428-.Ltmp427              #   Call between .Ltmp427 and .Ltmp428
	.uleb128 .Ltmp429-.Lfunc_begin3         #     jumps to .Ltmp429
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp430-.Lfunc_begin3         # >> Call Site 75 <<
	.uleb128 .Ltmp439-.Ltmp430              #   Call between .Ltmp430 and .Ltmp439
	.uleb128 .Ltmp440-.Lfunc_begin3         #     jumps to .Ltmp440
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp441-.Lfunc_begin3         # >> Call Site 76 <<
	.uleb128 .Ltmp442-.Ltmp441              #   Call between .Ltmp441 and .Ltmp442
	.uleb128 .Ltmp443-.Lfunc_begin3         #     jumps to .Ltmp443
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp444-.Lfunc_begin3         # >> Call Site 77 <<
	.uleb128 .Ltmp449-.Ltmp444              #   Call between .Ltmp444 and .Ltmp449
	.uleb128 .Ltmp450-.Lfunc_begin3         #     jumps to .Ltmp450
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp451-.Lfunc_begin3         # >> Call Site 78 <<
	.uleb128 .Ltmp452-.Ltmp451              #   Call between .Ltmp451 and .Ltmp452
	.uleb128 .Ltmp453-.Lfunc_begin3         #     jumps to .Ltmp453
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp454-.Lfunc_begin3         # >> Call Site 79 <<
	.uleb128 .Ltmp463-.Ltmp454              #   Call between .Ltmp454 and .Ltmp463
	.uleb128 .Ltmp464-.Lfunc_begin3         #     jumps to .Ltmp464
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp509-.Lfunc_begin3         # >> Call Site 80 <<
	.uleb128 .Ltmp466-.Ltmp509              #   Call between .Ltmp509 and .Ltmp466
	.uleb128 .Ltmp511-.Lfunc_begin3         #     jumps to .Ltmp511
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp467-.Lfunc_begin3         # >> Call Site 81 <<
	.uleb128 .Ltmp468-.Ltmp467              #   Call between .Ltmp467 and .Ltmp468
	.uleb128 .Ltmp469-.Lfunc_begin3         #     jumps to .Ltmp469
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp470-.Lfunc_begin3         # >> Call Site 82 <<
	.uleb128 .Ltmp471-.Ltmp470              #   Call between .Ltmp470 and .Ltmp471
	.uleb128 .Ltmp511-.Lfunc_begin3         #     jumps to .Ltmp511
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp472-.Lfunc_begin3         # >> Call Site 83 <<
	.uleb128 .Ltmp473-.Ltmp472              #   Call between .Ltmp472 and .Ltmp473
	.uleb128 .Ltmp508-.Lfunc_begin3         #     jumps to .Ltmp508
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp474-.Lfunc_begin3         # >> Call Site 84 <<
	.uleb128 .Ltmp475-.Ltmp474              #   Call between .Ltmp474 and .Ltmp475
	.uleb128 .Ltmp476-.Lfunc_begin3         #     jumps to .Ltmp476
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp477-.Lfunc_begin3         # >> Call Site 85 <<
	.uleb128 .Ltmp482-.Ltmp477              #   Call between .Ltmp477 and .Ltmp482
	.uleb128 .Ltmp508-.Lfunc_begin3         #     jumps to .Ltmp508
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp483-.Lfunc_begin3         # >> Call Site 86 <<
	.uleb128 .Ltmp484-.Ltmp483              #   Call between .Ltmp483 and .Ltmp484
	.uleb128 .Ltmp485-.Lfunc_begin3         #     jumps to .Ltmp485
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp506-.Lfunc_begin3         # >> Call Site 87 <<
	.uleb128 .Ltmp505-.Ltmp506              #   Call between .Ltmp506 and .Ltmp505
	.uleb128 .Ltmp508-.Lfunc_begin3         #     jumps to .Ltmp508
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp505-.Lfunc_begin3         # >> Call Site 88 <<
	.uleb128 .Lfunc_end6-.Ltmp505           #   Call between .Ltmp505 and .Lfunc_end6
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end3:
	.p2align	2
                                        # -- End function
	.section	.text._Z20print_example_bannerNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,"axG",@progbits,_Z20print_example_bannerNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.weak	_Z20print_example_bannerNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # -- Begin function _Z20print_example_bannerNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.p2align	4, 0x90
	.type	_Z20print_example_bannerNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,@function
_Z20print_example_bannerNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE: # @_Z20print_example_bannerNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Lfunc_begin4:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception4
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$432, %rsp                      # imm = 0x1B0
	movq	%rdi, -352(%rbp)                # 8-byte Spill
	callq	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5emptyEv@PLT
	testb	$1, %al
	jne	.LBB7_36
# %bb.1:
	movq	-352(%rbp), %rdi                # 8-byte Reload
	callq	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv@PLT
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	addq	$20, %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	addq	$-2, %rax
	movq	%rax, -368(%rbp)                # 8-byte Spill
	leaq	-120(%rbp), %rdi
	movq	%rdi, -360(%rbp)                # 8-byte Spill
	callq	_ZNSaIcEC1Ev@PLT
	movq	-368(%rbp), %rsi                # 8-byte Reload
	movq	-360(%rbp), %rcx                # 8-byte Reload
.Ltmp525:
	leaq	-112(%rbp), %rdi
	movl	$45, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEmcRKS3_
.Ltmp526:
	jmp	.LBB7_2
.LBB7_2:
.Ltmp528:
	leaq	.L.str.39(%rip), %rsi
	leaq	-80(%rbp), %rdi
	leaq	-112(%rbp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_
.Ltmp529:
	jmp	.LBB7_3
.LBB7_3:
.Ltmp531:
	leaq	.L.str.39(%rip), %rdx
	leaq	-48(%rbp), %rdi
	leaq	-80(%rbp), %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
.Ltmp532:
	jmp	.LBB7_4
.LBB7_4:
	leaq	-80(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
	leaq	-112(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
	leaq	-120(%rbp), %rdi
	callq	_ZNSaIcED1Ev@PLT
	leaq	-304(%rbp), %rdi
	movq	%rdi, -376(%rbp)                # 8-byte Spill
	callq	_ZNSaIcEC1Ev@PLT
	movq	-376(%rbp), %rcx                # 8-byte Reload
.Ltmp534:
	leaq	-296(%rbp), %rdi
	movl	$9, %esi
	movl	$32, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEmcRKS3_
.Ltmp535:
	jmp	.LBB7_5
.LBB7_5:
.Ltmp537:
	leaq	.L.str.40(%rip), %rsi
	leaq	-264(%rbp), %rdi
	leaq	-296(%rbp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_
.Ltmp538:
	jmp	.LBB7_6
.LBB7_6:
.Ltmp540:
	movq	-352(%rbp), %rdx                # 8-byte Reload
	leaq	-232(%rbp), %rdi
	leaq	-264(%rbp), %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_
.Ltmp541:
	jmp	.LBB7_7
.LBB7_7:
	leaq	-344(%rbp), %rdi
	movq	%rdi, -384(%rbp)                # 8-byte Spill
	callq	_ZNSaIcEC1Ev@PLT
	movq	-384(%rbp), %rcx                # 8-byte Reload
.Ltmp543:
	leaq	-336(%rbp), %rdi
	movl	$9, %esi
	movl	$32, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEmcRKS3_
.Ltmp544:
	jmp	.LBB7_8
.LBB7_8:
.Ltmp546:
	leaq	-200(%rbp), %rdi
	leaq	-232(%rbp), %rsi
	leaq	-336(%rbp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_
.Ltmp547:
	jmp	.LBB7_9
.LBB7_9:
.Ltmp549:
	leaq	.L.str.40(%rip), %rdx
	leaq	-168(%rbp), %rdi
	leaq	-200(%rbp), %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
.Ltmp550:
	jmp	.LBB7_10
.LBB7_10:
	leaq	-200(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
	leaq	-336(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
	leaq	-344(%rbp), %rdi
	callq	_ZNSaIcED1Ev@PLT
	leaq	-232(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
	leaq	-264(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
	leaq	-296(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
	leaq	-304(%rbp), %rdi
	callq	_ZNSaIcED1Ev@PLT
.Ltmp552:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp553:
	movq	%rax, -392(%rbp)                # 8-byte Spill
	jmp	.LBB7_11
.LBB7_11:
.Ltmp554:
	movq	-392(%rbp), %rdi                # 8-byte Reload
	leaq	-48(%rbp), %rsi
	callq	_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@PLT
.Ltmp555:
	movq	%rax, -400(%rbp)                # 8-byte Spill
	jmp	.LBB7_12
.LBB7_12:
.Ltmp556:
	movq	-400(%rbp), %rdi                # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp557:
	movq	%rax, -408(%rbp)                # 8-byte Spill
	jmp	.LBB7_13
.LBB7_13:
.Ltmp558:
	movq	-408(%rbp), %rdi                # 8-byte Reload
	leaq	-168(%rbp), %rsi
	callq	_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@PLT
.Ltmp559:
	movq	%rax, -416(%rbp)                # 8-byte Spill
	jmp	.LBB7_14
.LBB7_14:
.Ltmp560:
	movq	-416(%rbp), %rdi                # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp561:
	movq	%rax, -424(%rbp)                # 8-byte Spill
	jmp	.LBB7_15
.LBB7_15:
.Ltmp562:
	movq	-424(%rbp), %rdi                # 8-byte Reload
	leaq	-48(%rbp), %rsi
	callq	_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@PLT
.Ltmp563:
	movq	%rax, -432(%rbp)                # 8-byte Spill
	jmp	.LBB7_16
.LBB7_16:
.Ltmp564:
	movq	-432(%rbp), %rdi                # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp565:
	jmp	.LBB7_17
.LBB7_17:
	leaq	-168(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
	leaq	-48(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
	jmp	.LBB7_36
.LBB7_18:
.Ltmp527:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -128(%rbp)
	movl	%eax, -132(%rbp)
	jmp	.LBB7_22
.LBB7_19:
.Ltmp530:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -128(%rbp)
	movl	%eax, -132(%rbp)
	jmp	.LBB7_21
.LBB7_20:
.Ltmp533:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -128(%rbp)
	movl	%eax, -132(%rbp)
	leaq	-80(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
.LBB7_21:
	leaq	-112(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
.LBB7_22:
	leaq	-120(%rbp), %rdi
	callq	_ZNSaIcED1Ev@PLT
	jmp	.LBB7_37
.LBB7_23:
.Ltmp536:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -128(%rbp)
	movl	%eax, -132(%rbp)
	jmp	.LBB7_33
.LBB7_24:
.Ltmp539:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -128(%rbp)
	movl	%eax, -132(%rbp)
	jmp	.LBB7_32
.LBB7_25:
.Ltmp542:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -128(%rbp)
	movl	%eax, -132(%rbp)
	jmp	.LBB7_31
.LBB7_26:
.Ltmp545:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -128(%rbp)
	movl	%eax, -132(%rbp)
	jmp	.LBB7_30
.LBB7_27:
.Ltmp548:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -128(%rbp)
	movl	%eax, -132(%rbp)
	jmp	.LBB7_29
.LBB7_28:
.Ltmp551:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -128(%rbp)
	movl	%eax, -132(%rbp)
	leaq	-200(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
.LBB7_29:
	leaq	-336(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
.LBB7_30:
	leaq	-344(%rbp), %rdi
	callq	_ZNSaIcED1Ev@PLT
	leaq	-232(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
.LBB7_31:
	leaq	-264(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
.LBB7_32:
	leaq	-296(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
.LBB7_33:
	leaq	-304(%rbp), %rdi
	callq	_ZNSaIcED1Ev@PLT
	jmp	.LBB7_35
.LBB7_34:
.Ltmp566:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -128(%rbp)
	movl	%eax, -132(%rbp)
	leaq	-168(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
.LBB7_35:
	leaq	-48(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
	jmp	.LBB7_37
.LBB7_36:
	addq	$432, %rsp                      # imm = 0x1B0
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB7_37:
	.cfi_def_cfa %rbp, 16
	movq	-128(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end7:
	.size	_Z20print_example_bannerNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, .Lfunc_end7-_Z20print_example_bannerNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
	.section	.gcc_except_table._Z20print_example_bannerNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,"aG",@progbits,_Z20print_example_bannerNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.p2align	2
GCC_except_table7:
.Lexception4:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end4-.Lcst_begin4
.Lcst_begin4:
	.uleb128 .Ltmp525-.Lfunc_begin4         # >> Call Site 1 <<
	.uleb128 .Ltmp526-.Ltmp525              #   Call between .Ltmp525 and .Ltmp526
	.uleb128 .Ltmp527-.Lfunc_begin4         #     jumps to .Ltmp527
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp528-.Lfunc_begin4         # >> Call Site 2 <<
	.uleb128 .Ltmp529-.Ltmp528              #   Call between .Ltmp528 and .Ltmp529
	.uleb128 .Ltmp530-.Lfunc_begin4         #     jumps to .Ltmp530
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp531-.Lfunc_begin4         # >> Call Site 3 <<
	.uleb128 .Ltmp532-.Ltmp531              #   Call between .Ltmp531 and .Ltmp532
	.uleb128 .Ltmp533-.Lfunc_begin4         #     jumps to .Ltmp533
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp534-.Lfunc_begin4         # >> Call Site 4 <<
	.uleb128 .Ltmp535-.Ltmp534              #   Call between .Ltmp534 and .Ltmp535
	.uleb128 .Ltmp536-.Lfunc_begin4         #     jumps to .Ltmp536
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp537-.Lfunc_begin4         # >> Call Site 5 <<
	.uleb128 .Ltmp538-.Ltmp537              #   Call between .Ltmp537 and .Ltmp538
	.uleb128 .Ltmp539-.Lfunc_begin4         #     jumps to .Ltmp539
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp540-.Lfunc_begin4         # >> Call Site 6 <<
	.uleb128 .Ltmp541-.Ltmp540              #   Call between .Ltmp540 and .Ltmp541
	.uleb128 .Ltmp542-.Lfunc_begin4         #     jumps to .Ltmp542
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp543-.Lfunc_begin4         # >> Call Site 7 <<
	.uleb128 .Ltmp544-.Ltmp543              #   Call between .Ltmp543 and .Ltmp544
	.uleb128 .Ltmp545-.Lfunc_begin4         #     jumps to .Ltmp545
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp546-.Lfunc_begin4         # >> Call Site 8 <<
	.uleb128 .Ltmp547-.Ltmp546              #   Call between .Ltmp546 and .Ltmp547
	.uleb128 .Ltmp548-.Lfunc_begin4         #     jumps to .Ltmp548
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp549-.Lfunc_begin4         # >> Call Site 9 <<
	.uleb128 .Ltmp550-.Ltmp549              #   Call between .Ltmp549 and .Ltmp550
	.uleb128 .Ltmp551-.Lfunc_begin4         #     jumps to .Ltmp551
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp552-.Lfunc_begin4         # >> Call Site 10 <<
	.uleb128 .Ltmp565-.Ltmp552              #   Call between .Ltmp552 and .Ltmp565
	.uleb128 .Ltmp566-.Lfunc_begin4         #     jumps to .Ltmp566
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp565-.Lfunc_begin4         # >> Call Site 11 <<
	.uleb128 .Lfunc_end7-.Ltmp565           #   Call between .Ltmp565 and .Lfunc_end7
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end4:
	.p2align	2
                                        # -- End function
	.section	.text._ZN4seal20EncryptionParametersC2ENS_11scheme_typeE,"axG",@progbits,_ZN4seal20EncryptionParametersC2ENS_11scheme_typeE,comdat
	.weak	_ZN4seal20EncryptionParametersC2ENS_11scheme_typeE # -- Begin function _ZN4seal20EncryptionParametersC2ENS_11scheme_typeE
	.p2align	4, 0x90
	.type	_ZN4seal20EncryptionParametersC2ENS_11scheme_typeE,@function
_ZN4seal20EncryptionParametersC2ENS_11scheme_typeE: # @_ZN4seal20EncryptionParametersC2ENS_11scheme_typeE
.Lfunc_begin5:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception5
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movb	%sil, %al
	movq	%rdi, -8(%rbp)
	movb	%al, -9(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -48(%rbp)                 # 8-byte Spill
	movq	%rdi, %rax
	movq	%rax, -72(%rbp)                 # 8-byte Spill
	callq	_ZN4seal13MemoryManager7GetPoolEv
	movq	-48(%rbp), %rax                 # 8-byte Reload
	movb	-9(%rbp), %cl
	movb	%cl, 16(%rax)
	movq	$0, 24(%rax)
	movq	%rax, %rdi
	addq	$32, %rdi
	movq	%rdi, -64(%rbp)                 # 8-byte Spill
	xorps	%xmm0, %xmm0
	movups	%xmm0, 32(%rax)
	movq	$0, 48(%rax)
	callq	_ZNSt6vectorIN4seal7ModulusESaIS1_EEC2Ev
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	addq	$56, %rdi
	movq	%rdi, -56(%rbp)                 # 8-byte Spill
	xorl	%eax, %eax
	movl	%eax, %esi
	movq	%rsi, -40(%rbp)                 # 8-byte Spill
	callq	_ZNSt10shared_ptrIN4seal29UniformRandomGeneratorFactoryEEC2EDn
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	movq	-40(%rbp), %rsi                 # 8-byte Reload
	addq	$72, %rdi
.Ltmp567:
	callq	_ZN4seal7ModulusC2Em
.Ltmp568:
	jmp	.LBB8_1
.LBB8_1:
	movq	-72(%rbp), %rdi                 # 8-byte Reload
	movq	_ZN4seal13parms_id_zeroE@GOTPCREL(%rip), %rax
	movups	(%rax), %xmm0
	movups	16(%rax), %xmm1
	movups	%xmm1, 136(%rdi)
	movups	%xmm0, 120(%rdi)
.Ltmp569:
	callq	_ZN4seal20EncryptionParameters16compute_parms_idEv@PLT
.Ltmp570:
	jmp	.LBB8_2
.LBB8_2:
	addq	$80, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB8_3:
	.cfi_def_cfa %rbp, 16
.Ltmp571:
	movq	-56(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -24(%rbp)
	movl	%eax, -28(%rbp)
	callq	_ZNSt10shared_ptrIN4seal29UniformRandomGeneratorFactoryEED2Ev
	movq	-64(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNSt6vectorIN4seal7ModulusESaIS1_EED2Ev
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	callq	_ZN4seal16MemoryPoolHandleD2Ev
# %bb.4:
	movq	-24(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end8:
	.size	_ZN4seal20EncryptionParametersC2ENS_11scheme_typeE, .Lfunc_end8-_ZN4seal20EncryptionParametersC2ENS_11scheme_typeE
	.cfi_endproc
	.section	.gcc_except_table._ZN4seal20EncryptionParametersC2ENS_11scheme_typeE,"aG",@progbits,_ZN4seal20EncryptionParametersC2ENS_11scheme_typeE,comdat
	.p2align	2
GCC_except_table8:
.Lexception5:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end5-.Lcst_begin5
.Lcst_begin5:
	.uleb128 .Lfunc_begin5-.Lfunc_begin5    # >> Call Site 1 <<
	.uleb128 .Ltmp567-.Lfunc_begin5         #   Call between .Lfunc_begin5 and .Ltmp567
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp567-.Lfunc_begin5         # >> Call Site 2 <<
	.uleb128 .Ltmp570-.Ltmp567              #   Call between .Ltmp567 and .Ltmp570
	.uleb128 .Ltmp571-.Lfunc_begin5         #     jumps to .Ltmp571
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp570-.Lfunc_begin5         # >> Call Site 3 <<
	.uleb128 .Lfunc_end8-.Ltmp570           #   Call between .Ltmp570 and .Lfunc_end8
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end5:
	.p2align	2
                                        # -- End function
	.section	.text._ZN4seal20EncryptionParameters23set_poly_modulus_degreeEm,"axG",@progbits,_ZN4seal20EncryptionParameters23set_poly_modulus_degreeEm,comdat
	.weak	_ZN4seal20EncryptionParameters23set_poly_modulus_degreeEm # -- Begin function _ZN4seal20EncryptionParameters23set_poly_modulus_degreeEm
	.p2align	4, 0x90
	.type	_ZN4seal20EncryptionParameters23set_poly_modulus_degreeEm,@function
_ZN4seal20EncryptionParameters23set_poly_modulus_degreeEm: # @_ZN4seal20EncryptionParameters23set_poly_modulus_degreeEm
.Lfunc_begin6:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception6
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -40(%rbp)                 # 8-byte Spill
	cmpb	$0, 16(%rax)
	jne	.LBB9_5
# %bb.1:
	cmpq	$0, -16(%rbp)
	je	.LBB9_5
# %bb.2:
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rdi
	movq	%rdi, %rax
	movq	%rax, -48(%rbp)                 # 8-byte Spill
.Ltmp572:
	leaq	.L.str.41(%rip), %rsi
	callq	_ZNSt11logic_errorC1EPKc@PLT
.Ltmp573:
	jmp	.LBB9_3
.LBB9_3:
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	movq	_ZTISt11logic_error@GOTPCREL(%rip), %rsi
	movq	_ZNSt11logic_errorD1Ev@GOTPCREL(%rip), %rdx
	callq	__cxa_throw@PLT
.LBB9_4:
.Ltmp574:
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -24(%rbp)
	movl	%eax, -28(%rbp)
	callq	__cxa_free_exception@PLT
	jmp	.LBB9_6
.LBB9_5:
	movq	-40(%rbp), %rdi                 # 8-byte Reload
	movq	-16(%rbp), %rax
	movq	%rax, 24(%rdi)
	callq	_ZN4seal20EncryptionParameters16compute_parms_idEv@PLT
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB9_6:
	.cfi_def_cfa %rbp, 16
	movq	-24(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end9:
	.size	_ZN4seal20EncryptionParameters23set_poly_modulus_degreeEm, .Lfunc_end9-_ZN4seal20EncryptionParameters23set_poly_modulus_degreeEm
	.cfi_endproc
	.section	.gcc_except_table._ZN4seal20EncryptionParameters23set_poly_modulus_degreeEm,"aG",@progbits,_ZN4seal20EncryptionParameters23set_poly_modulus_degreeEm,comdat
	.p2align	2
GCC_except_table9:
.Lexception6:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end6-.Lcst_begin6
.Lcst_begin6:
	.uleb128 .Lfunc_begin6-.Lfunc_begin6    # >> Call Site 1 <<
	.uleb128 .Ltmp572-.Lfunc_begin6         #   Call between .Lfunc_begin6 and .Ltmp572
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp572-.Lfunc_begin6         # >> Call Site 2 <<
	.uleb128 .Ltmp573-.Ltmp572              #   Call between .Ltmp572 and .Ltmp573
	.uleb128 .Ltmp574-.Lfunc_begin6         #     jumps to .Ltmp574
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp573-.Lfunc_begin6         # >> Call Site 3 <<
	.uleb128 .Lfunc_end9-.Ltmp573           #   Call between .Ltmp573 and .Lfunc_end9
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end6:
	.p2align	2
                                        # -- End function
	.section	.text._ZN4seal20EncryptionParameters17set_coeff_modulusERKSt6vectorINS_7ModulusESaIS2_EE,"axG",@progbits,_ZN4seal20EncryptionParameters17set_coeff_modulusERKSt6vectorINS_7ModulusESaIS2_EE,comdat
	.weak	_ZN4seal20EncryptionParameters17set_coeff_modulusERKSt6vectorINS_7ModulusESaIS2_EE # -- Begin function _ZN4seal20EncryptionParameters17set_coeff_modulusERKSt6vectorINS_7ModulusESaIS2_EE
	.p2align	4, 0x90
	.type	_ZN4seal20EncryptionParameters17set_coeff_modulusERKSt6vectorINS_7ModulusESaIS2_EE,@function
_ZN4seal20EncryptionParameters17set_coeff_modulusERKSt6vectorINS_7ModulusESaIS2_EE: # @_ZN4seal20EncryptionParameters17set_coeff_modulusERKSt6vectorINS_7ModulusESaIS2_EE
.Lfunc_begin7:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception7
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -40(%rbp)                 # 8-byte Spill
	cmpb	$0, 16(%rax)
	jne	.LBB10_6
# %bb.1:
	movq	-16(%rbp), %rdi
	callq	_ZNKSt6vectorIN4seal7ModulusESaIS1_EE5emptyEv
	testb	$1, %al
	jne	.LBB10_5
# %bb.2:
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rdi
	movq	%rdi, %rax
	movq	%rax, -48(%rbp)                 # 8-byte Spill
.Ltmp578:
	leaq	.L.str.42(%rip), %rsi
	callq	_ZNSt11logic_errorC1EPKc@PLT
.Ltmp579:
	jmp	.LBB10_3
.LBB10_3:
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	movq	_ZTISt11logic_error@GOTPCREL(%rip), %rsi
	movq	_ZNSt11logic_errorD1Ev@GOTPCREL(%rip), %rdx
	callq	__cxa_throw@PLT
.LBB10_4:
.Ltmp580:
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -24(%rbp)
	movl	%eax, -28(%rbp)
	callq	__cxa_free_exception@PLT
	jmp	.LBB10_13
.LBB10_5:
	jmp	.LBB10_12
.LBB10_6:
	movq	-16(%rbp), %rdi
	callq	_ZNKSt6vectorIN4seal7ModulusESaIS1_EE4sizeEv
	cmpq	$64, %rax
	ja	.LBB10_8
# %bb.7:
	movq	-16(%rbp), %rdi
	callq	_ZNKSt6vectorIN4seal7ModulusESaIS1_EE4sizeEv
	cmpq	$1, %rax
	jae	.LBB10_11
.LBB10_8:
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rdi
	movq	%rdi, %rax
	movq	%rax, -56(%rbp)                 # 8-byte Spill
.Ltmp575:
	leaq	.L.str.43(%rip), %rsi
	callq	_ZNSt16invalid_argumentC1EPKc@PLT
.Ltmp576:
	jmp	.LBB10_9
.LBB10_9:
	movq	-56(%rbp), %rdi                 # 8-byte Reload
	movq	_ZTISt16invalid_argument@GOTPCREL(%rip), %rsi
	movq	_ZNSt16invalid_argumentD1Ev@GOTPCREL(%rip), %rdx
	callq	__cxa_throw@PLT
.LBB10_10:
.Ltmp577:
	movq	-56(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -24(%rbp)
	movl	%eax, -28(%rbp)
	callq	__cxa_free_exception@PLT
	jmp	.LBB10_13
.LBB10_11:
	jmp	.LBB10_12
.LBB10_12:
	movq	-40(%rbp), %rdi                 # 8-byte Reload
	movq	-16(%rbp), %rsi
	addq	$32, %rdi
	callq	_ZNSt6vectorIN4seal7ModulusESaIS1_EEaSERKS3_
	movq	-40(%rbp), %rdi                 # 8-byte Reload
	callq	_ZN4seal20EncryptionParameters16compute_parms_idEv@PLT
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB10_13:
	.cfi_def_cfa %rbp, 16
	movq	-24(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end10:
	.size	_ZN4seal20EncryptionParameters17set_coeff_modulusERKSt6vectorINS_7ModulusESaIS2_EE, .Lfunc_end10-_ZN4seal20EncryptionParameters17set_coeff_modulusERKSt6vectorINS_7ModulusESaIS2_EE
	.cfi_endproc
	.section	.gcc_except_table._ZN4seal20EncryptionParameters17set_coeff_modulusERKSt6vectorINS_7ModulusESaIS2_EE,"aG",@progbits,_ZN4seal20EncryptionParameters17set_coeff_modulusERKSt6vectorINS_7ModulusESaIS2_EE,comdat
	.p2align	2
GCC_except_table10:
.Lexception7:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end7-.Lcst_begin7
.Lcst_begin7:
	.uleb128 .Lfunc_begin7-.Lfunc_begin7    # >> Call Site 1 <<
	.uleb128 .Ltmp578-.Lfunc_begin7         #   Call between .Lfunc_begin7 and .Ltmp578
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp578-.Lfunc_begin7         # >> Call Site 2 <<
	.uleb128 .Ltmp579-.Ltmp578              #   Call between .Ltmp578 and .Ltmp579
	.uleb128 .Ltmp580-.Lfunc_begin7         #     jumps to .Ltmp580
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp579-.Lfunc_begin7         # >> Call Site 3 <<
	.uleb128 .Ltmp575-.Ltmp579              #   Call between .Ltmp579 and .Ltmp575
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp575-.Lfunc_begin7         # >> Call Site 4 <<
	.uleb128 .Ltmp576-.Ltmp575              #   Call between .Ltmp575 and .Ltmp576
	.uleb128 .Ltmp577-.Lfunc_begin7         #     jumps to .Ltmp577
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp576-.Lfunc_begin7         # >> Call Site 5 <<
	.uleb128 .Lfunc_end10-.Ltmp576          #   Call between .Ltmp576 and .Lfunc_end10
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end7:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSaIiEC2Ev,"axG",@progbits,_ZNSaIiEC2Ev,comdat
	.weak	_ZNSaIiEC2Ev                    # -- Begin function _ZNSaIiEC2Ev
	.p2align	4, 0x90
	.type	_ZNSaIiEC2Ev,@function
_ZNSaIiEC2Ev:                           # @_ZNSaIiEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIiEC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end11:
	.size	_ZNSaIiEC2Ev, .Lfunc_end11-_ZNSaIiEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_,"axG",@progbits,_ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_,comdat
	.weak	_ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_ # -- Begin function _ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_,@function
_ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_: # @_ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_
.Lfunc_begin8:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception8
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%rsi, -16(%rbp)
	movq	%rdx, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-24(%rbp), %rdi
	movq	%rdi, -80(%rbp)                 # 8-byte Spill
	movq	-32(%rbp), %rsi
	callq	_ZNSt12_Vector_baseIiSaIiEEC2ERKS0_
	leaq	-16(%rbp), %rdi
	movq	%rdi, -88(%rbp)                 # 8-byte Spill
	callq	_ZNKSt16initializer_listIiE5beginEv
	movq	-88(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, -72(%rbp)                 # 8-byte Spill
	callq	_ZNKSt16initializer_listIiE3endEv
	movq	-80(%rbp), %rdi                 # 8-byte Reload
	movq	-72(%rbp), %rsi                 # 8-byte Reload
	movq	%rax, %rdx
.Ltmp581:
	callq	_ZNSt6vectorIiSaIiEE19_M_range_initializeIPKiEEvT_S5_St20forward_iterator_tag
.Ltmp582:
	jmp	.LBB12_1
.LBB12_1:
	addq	$96, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB12_2:
	.cfi_def_cfa %rbp, 16
.Ltmp583:
	movq	-80(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -56(%rbp)
	movl	%eax, -60(%rbp)
	callq	_ZNSt12_Vector_baseIiSaIiEED2Ev
# %bb.3:
	movq	-56(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end12:
	.size	_ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_, .Lfunc_end12-_ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_,"aG",@progbits,_ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_,comdat
	.p2align	2
GCC_except_table12:
.Lexception8:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end8-.Lcst_begin8
.Lcst_begin8:
	.uleb128 .Ltmp581-.Lfunc_begin8         # >> Call Site 1 <<
	.uleb128 .Ltmp582-.Ltmp581              #   Call between .Ltmp581 and .Ltmp582
	.uleb128 .Ltmp583-.Lfunc_begin8         #     jumps to .Ltmp583
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp582-.Lfunc_begin8         # >> Call Site 2 <<
	.uleb128 .Lfunc_end12-.Ltmp582          #   Call between .Ltmp582 and .Lfunc_end12
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end8:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt6vectorIN4seal7ModulusESaIS1_EED2Ev,"axG",@progbits,_ZNSt6vectorIN4seal7ModulusESaIS1_EED2Ev,comdat
	.weak	_ZNSt6vectorIN4seal7ModulusESaIS1_EED2Ev # -- Begin function _ZNSt6vectorIN4seal7ModulusESaIS1_EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN4seal7ModulusESaIS1_EED2Ev,@function
_ZNSt6vectorIN4seal7ModulusESaIS1_EED2Ev: # @_ZNSt6vectorIN4seal7ModulusESaIS1_EED2Ev
.Lfunc_begin9:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception9
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -48(%rbp)                 # 8-byte Spill
	movq	(%rdi), %rax
	movq	%rax, -40(%rbp)                 # 8-byte Spill
	movq	8(%rdi), %rax
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	callq	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE19_M_get_Tp_allocatorEv
	movq	-40(%rbp), %rdi                 # 8-byte Reload
	movq	-32(%rbp), %rsi                 # 8-byte Reload
	movq	%rax, %rdx
.Ltmp584:
	callq	_ZSt8_DestroyIPN4seal7ModulusES1_EvT_S3_RSaIT0_E
.Ltmp585:
	jmp	.LBB13_1
.LBB13_1:
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EED2Ev
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB13_2:
	.cfi_def_cfa %rbp, 16
.Ltmp586:
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -16(%rbp)
	movl	%eax, -20(%rbp)
	callq	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EED2Ev
# %bb.3:
	movq	-16(%rbp), %rdi
	callq	__clang_call_terminate
.Lfunc_end13:
	.size	_ZNSt6vectorIN4seal7ModulusESaIS1_EED2Ev, .Lfunc_end13-_ZNSt6vectorIN4seal7ModulusESaIS1_EED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNSt6vectorIN4seal7ModulusESaIS1_EED2Ev,"aG",@progbits,_ZNSt6vectorIN4seal7ModulusESaIS1_EED2Ev,comdat
	.p2align	2
GCC_except_table13:
.Lexception9:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase0-.Lttbaseref0
.Lttbaseref0:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end9-.Lcst_begin9
.Lcst_begin9:
	.uleb128 .Ltmp584-.Lfunc_begin9         # >> Call Site 1 <<
	.uleb128 .Ltmp585-.Ltmp584              #   Call between .Ltmp584 and .Ltmp585
	.uleb128 .Ltmp586-.Lfunc_begin9         #     jumps to .Ltmp586
	.byte	1                               #   On action: 1
.Lcst_end9:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase0:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt6vectorIiSaIiEED2Ev,"axG",@progbits,_ZNSt6vectorIiSaIiEED2Ev,comdat
	.weak	_ZNSt6vectorIiSaIiEED2Ev        # -- Begin function _ZNSt6vectorIiSaIiEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt6vectorIiSaIiEED2Ev,@function
_ZNSt6vectorIiSaIiEED2Ev:               # @_ZNSt6vectorIiSaIiEED2Ev
.Lfunc_begin10:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception10
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -48(%rbp)                 # 8-byte Spill
	movq	(%rdi), %rax
	movq	%rax, -40(%rbp)                 # 8-byte Spill
	movq	8(%rdi), %rax
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	callq	_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv
	movq	-40(%rbp), %rdi                 # 8-byte Reload
	movq	-32(%rbp), %rsi                 # 8-byte Reload
	movq	%rax, %rdx
.Ltmp587:
	callq	_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E
.Ltmp588:
	jmp	.LBB14_1
.LBB14_1:
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNSt12_Vector_baseIiSaIiEED2Ev
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB14_2:
	.cfi_def_cfa %rbp, 16
.Ltmp589:
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -16(%rbp)
	movl	%eax, -20(%rbp)
	callq	_ZNSt12_Vector_baseIiSaIiEED2Ev
# %bb.3:
	movq	-16(%rbp), %rdi
	callq	__clang_call_terminate
.Lfunc_end14:
	.size	_ZNSt6vectorIiSaIiEED2Ev, .Lfunc_end14-_ZNSt6vectorIiSaIiEED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNSt6vectorIiSaIiEED2Ev,"aG",@progbits,_ZNSt6vectorIiSaIiEED2Ev,comdat
	.p2align	2
GCC_except_table14:
.Lexception10:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase1-.Lttbaseref1
.Lttbaseref1:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end10-.Lcst_begin10
.Lcst_begin10:
	.uleb128 .Ltmp587-.Lfunc_begin10        # >> Call Site 1 <<
	.uleb128 .Ltmp588-.Ltmp587              #   Call between .Ltmp587 and .Ltmp588
	.uleb128 .Ltmp589-.Lfunc_begin10        #     jumps to .Ltmp589
	.byte	1                               #   On action: 1
.Lcst_end10:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase1:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSaIiED2Ev,"axG",@progbits,_ZNSaIiED2Ev,comdat
	.weak	_ZNSaIiED2Ev                    # -- Begin function _ZNSaIiED2Ev
	.p2align	4, 0x90
	.type	_ZNSaIiED2Ev,@function
_ZNSaIiED2Ev:                           # @_ZNSaIiED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIiED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end15:
	.size	_ZNSaIiED2Ev, .Lfunc_end15-_ZNSaIiED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt3powIdiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_Xsr3std12__is_integerIS2_EE7__valueEE6__typeENS4_IS3_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEE6__typeES2_S3_,"axG",@progbits,_ZSt3powIdiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_Xsr3std12__is_integerIS2_EE7__valueEE6__typeENS4_IS3_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEE6__typeES2_S3_,comdat
	.weak	_ZSt3powIdiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_Xsr3std12__is_integerIS2_EE7__valueEE6__typeENS4_IS3_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEE6__typeES2_S3_ # -- Begin function _ZSt3powIdiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_Xsr3std12__is_integerIS2_EE7__valueEE6__typeENS4_IS3_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEE6__typeES2_S3_
	.p2align	4, 0x90
	.type	_ZSt3powIdiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_Xsr3std12__is_integerIS2_EE7__valueEE6__typeENS4_IS3_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEE6__typeES2_S3_,@function
_ZSt3powIdiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_Xsr3std12__is_integerIS2_EE7__valueEE6__typeENS4_IS3_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEE6__typeES2_S3_: # @_ZSt3powIdiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_Xsr3std12__is_integerIS2_EE7__valueEE6__typeENS4_IS3_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEE6__typeES2_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movsd	%xmm0, -8(%rbp)
	movl	%edi, -12(%rbp)
	movsd	-8(%rbp), %xmm0                 # xmm0 = mem[0],zero
	cvtsi2sdl	-12(%rbp), %xmm1
	callq	pow@PLT
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end16:
	.size	_ZSt3powIdiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_Xsr3std12__is_integerIS2_EE7__valueEE6__typeENS4_IS3_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEE6__typeES2_S3_, .Lfunc_end16-_ZSt3powIdiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_Xsr3std12__is_integerIS2_EE7__valueEE6__typeENS4_IS3_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEE6__typeES2_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal11SEALContextC2ERKNS_20EncryptionParametersEbNS_14sec_level_typeE,"axG",@progbits,_ZN4seal11SEALContextC2ERKNS_20EncryptionParametersEbNS_14sec_level_typeE,comdat
	.weak	_ZN4seal11SEALContextC2ERKNS_20EncryptionParametersEbNS_14sec_level_typeE # -- Begin function _ZN4seal11SEALContextC2ERKNS_20EncryptionParametersEbNS_14sec_level_typeE
	.p2align	4, 0x90
	.type	_ZN4seal11SEALContextC2ERKNS_20EncryptionParametersEbNS_14sec_level_typeE,@function
_ZN4seal11SEALContextC2ERKNS_20EncryptionParametersEbNS_14sec_level_typeE: # @_ZN4seal11SEALContextC2ERKNS_20EncryptionParametersEbNS_14sec_level_typeE
.Lfunc_begin11:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception11
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$224, %rsp
	movb	%dl, %al
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	andb	$1, %al
	movb	%al, -17(%rbp)
	movl	%ecx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -224(%rbp)                # 8-byte Spill
	movq	-16(%rbp), %rsi
	leaq	-176(%rbp), %rdi
	callq	_ZN4seal20EncryptionParametersC2ERKS0_
	movb	-17(%rbp), %al
	movb	%al, -209(%rbp)                 # 1-byte Spill
	movl	-24(%rbp), %eax
	movl	%eax, -208(%rbp)                # 4-byte Spill
.Ltmp590:
	leaq	-192(%rbp), %rdi
	callq	_ZN4seal13MemoryManager7GetPoolEv
.Ltmp591:
	jmp	.LBB17_1
.LBB17_1:
.Ltmp593:
	movl	-208(%rbp), %ecx                # 4-byte Reload
	movq	-224(%rbp), %rdi                # 8-byte Reload
	movb	-209(%rbp), %al                 # 1-byte Reload
	movzbl	%al, %edx
	andl	$1, %edx
	leaq	-176(%rbp), %rsi
	leaq	-192(%rbp), %r8
	callq	_ZN4seal11SEALContextC2ENS_20EncryptionParametersEbNS_14sec_level_typeENS_16MemoryPoolHandleE@PLT
.Ltmp594:
	jmp	.LBB17_2
.LBB17_2:
	leaq	-192(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	leaq	-176(%rbp), %rdi
	callq	_ZN4seal20EncryptionParametersD2Ev
	addq	$224, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB17_3:
	.cfi_def_cfa %rbp, 16
.Ltmp592:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -200(%rbp)
	movl	%eax, -204(%rbp)
	jmp	.LBB17_5
.LBB17_4:
.Ltmp595:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -200(%rbp)
	movl	%eax, -204(%rbp)
	leaq	-192(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
.LBB17_5:
	leaq	-176(%rbp), %rdi
	callq	_ZN4seal20EncryptionParametersD2Ev
# %bb.6:
	movq	-200(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end17:
	.size	_ZN4seal11SEALContextC2ERKNS_20EncryptionParametersEbNS_14sec_level_typeE, .Lfunc_end17-_ZN4seal11SEALContextC2ERKNS_20EncryptionParametersEbNS_14sec_level_typeE
	.cfi_endproc
	.section	.gcc_except_table._ZN4seal11SEALContextC2ERKNS_20EncryptionParametersEbNS_14sec_level_typeE,"aG",@progbits,_ZN4seal11SEALContextC2ERKNS_20EncryptionParametersEbNS_14sec_level_typeE,comdat
	.p2align	2
GCC_except_table17:
.Lexception11:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end11-.Lcst_begin11
.Lcst_begin11:
	.uleb128 .Lfunc_begin11-.Lfunc_begin11  # >> Call Site 1 <<
	.uleb128 .Ltmp590-.Lfunc_begin11        #   Call between .Lfunc_begin11 and .Ltmp590
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp590-.Lfunc_begin11        # >> Call Site 2 <<
	.uleb128 .Ltmp591-.Ltmp590              #   Call between .Ltmp590 and .Ltmp591
	.uleb128 .Ltmp592-.Lfunc_begin11        #     jumps to .Ltmp592
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp593-.Lfunc_begin11        # >> Call Site 3 <<
	.uleb128 .Ltmp594-.Ltmp593              #   Call between .Ltmp593 and .Ltmp594
	.uleb128 .Ltmp595-.Lfunc_begin11        #     jumps to .Ltmp595
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp594-.Lfunc_begin11        # >> Call Site 4 <<
	.uleb128 .Lfunc_end17-.Ltmp594          #   Call between .Ltmp594 and .Lfunc_end17
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end11:
	.p2align	2
                                        # -- End function
	.section	.text._ZNK4seal20EncryptionParameters13coeff_modulusEv,"axG",@progbits,_ZNK4seal20EncryptionParameters13coeff_modulusEv,comdat
	.weak	_ZNK4seal20EncryptionParameters13coeff_modulusEv # -- Begin function _ZNK4seal20EncryptionParameters13coeff_modulusEv
	.p2align	4, 0x90
	.type	_ZNK4seal20EncryptionParameters13coeff_modulusEv,@function
_ZNK4seal20EncryptionParameters13coeff_modulusEv: # @_ZNK4seal20EncryptionParameters13coeff_modulusEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	addq	$32, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end18:
	.size	_ZNK4seal20EncryptionParameters13coeff_modulusEv, .Lfunc_end18-_ZNK4seal20EncryptionParameters13coeff_modulusEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIN4seal7ModulusESaIS1_EE5beginEv,"axG",@progbits,_ZNKSt6vectorIN4seal7ModulusESaIS1_EE5beginEv,comdat
	.weak	_ZNKSt6vectorIN4seal7ModulusESaIS1_EE5beginEv # -- Begin function _ZNKSt6vectorIN4seal7ModulusESaIS1_EE5beginEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIN4seal7ModulusESaIS1_EE5beginEv,@function
_ZNKSt6vectorIN4seal7ModulusESaIS1_EE5beginEv: # @_ZNKSt6vectorIN4seal7ModulusESaIS1_EE5beginEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -16(%rbp)
	movq	-16(%rbp), %rsi
	leaq	-8(%rbp), %rdi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEC2ERKS4_
	movq	-8(%rbp), %rax
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end19:
	.size	_ZNKSt6vectorIN4seal7ModulusESaIS1_EE5beginEv, .Lfunc_end19-_ZNKSt6vectorIN4seal7ModulusESaIS1_EE5beginEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIN4seal7ModulusESaIS1_EE3endEv,"axG",@progbits,_ZNKSt6vectorIN4seal7ModulusESaIS1_EE3endEv,comdat
	.weak	_ZNKSt6vectorIN4seal7ModulusESaIS1_EE3endEv # -- Begin function _ZNKSt6vectorIN4seal7ModulusESaIS1_EE3endEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIN4seal7ModulusESaIS1_EE3endEv,@function
_ZNKSt6vectorIN4seal7ModulusESaIS1_EE3endEv: # @_ZNKSt6vectorIN4seal7ModulusESaIS1_EE3endEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -16(%rbp)
	movq	-16(%rbp), %rsi
	addq	$8, %rsi
	leaq	-8(%rbp), %rdi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEC2ERKS4_
	movq	-8(%rbp), %rax
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end20:
	.size	_ZNKSt6vectorIN4seal7ModulusESaIS1_EE3endEv, .Lfunc_end20-_ZNKSt6vectorIN4seal7ModulusESaIS1_EE3endEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxxneIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_,"axG",@progbits,_ZN9__gnu_cxxneIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_,comdat
	.weak	_ZN9__gnu_cxxneIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_ # -- Begin function _ZN9__gnu_cxxneIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxxneIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_,@function
_ZN9__gnu_cxxneIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_: # @_ZN9__gnu_cxxneIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rax
	movq	%rax, -24(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEE4baseEv
	movq	%rax, %rcx
	movq	-24(%rbp), %rax                 # 8-byte Reload
	cmpq	(%rcx), %rax
	setne	%al
	andb	$1, %al
	movzbl	%al, %eax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end21:
	.size	_ZN9__gnu_cxxneIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_, .Lfunc_end21-_ZN9__gnu_cxxneIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEdeEv,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEdeEv,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEdeEv # -- Begin function _ZNK9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEdeEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEdeEv,@function
_ZNK9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEdeEv: # @_ZNK9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEdeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end22:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEdeEv, .Lfunc_end22-_ZNK9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEdeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK4seal7Modulus5valueEv,"axG",@progbits,_ZNK4seal7Modulus5valueEv,comdat
	.weak	_ZNK4seal7Modulus5valueEv       # -- Begin function _ZNK4seal7Modulus5valueEv
	.p2align	4, 0x90
	.type	_ZNK4seal7Modulus5valueEv,@function
_ZNK4seal7Modulus5valueEv:              # @_ZNK4seal7Modulus5valueEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end23:
	.size	_ZNK4seal7Modulus5valueEv, .Lfunc_end23-_ZNK4seal7Modulus5valueEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEppEv,"axG",@progbits,_ZN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEppEv,comdat
	.weak	_ZN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEppEv # -- Begin function _ZN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEppEv
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEppEv,@function
_ZN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEppEv: # @_ZN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEppEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rcx
	addq	$48, %rcx
	movq	%rcx, (%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end24:
	.size	_ZN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEppEv, .Lfunc_end24-_ZN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEppEv
	.cfi_endproc
                                        # -- End function
	.section	.text._Z16print_parametersRKN4seal11SEALContextE,"axG",@progbits,_Z16print_parametersRKN4seal11SEALContextE,comdat
	.weak	_Z16print_parametersRKN4seal11SEALContextE # -- Begin function _Z16print_parametersRKN4seal11SEALContextE
	.p2align	4, 0x90
	.type	_Z16print_parametersRKN4seal11SEALContextE,@function
_Z16print_parametersRKN4seal11SEALContextE: # @_Z16print_parametersRKN4seal11SEALContextE
.Lfunc_begin12:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception12
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$256, %rsp                      # imm = 0x100
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rsi
	leaq	-32(%rbp), %rdi
	movq	%rdi, -144(%rbp)                # 8-byte Spill
	callq	_ZNK4seal11SEALContext16key_context_dataEv
	movq	-144(%rbp), %rdi                # 8-byte Reload
	callq	_ZNKSt19__shared_ptr_accessIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2ELb0ELb0EEdeEv
	movq	-144(%rbp), %rdi                # 8-byte Reload
	movq	%rax, -136(%rbp)                # 8-byte Spill
	callq	_ZNSt10shared_ptrIKN4seal11SEALContext11ContextDataEED2Ev
	movq	-136(%rbp), %rax                # 8-byte Reload
	movq	%rax, -16(%rbp)
	leaq	-64(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@PLT
	movq	-16(%rbp), %rdi
	callq	_ZNK4seal11SEALContext11ContextData5parmsEv
	movq	%rax, %rdi
	callq	_ZNK4seal20EncryptionParameters6schemeEv
	movb	%al, %cl
	movb	%cl, -121(%rbp)                 # 1-byte Spill
	subb	$1, %al
	je	.LBB25_1
	jmp	.LBB25_44
.LBB25_44:
	movb	-121(%rbp), %al                 # 1-byte Reload
	subb	$2, %al
	je	.LBB25_4
	jmp	.LBB25_6
.LBB25_1:
.Ltmp598:
	leaq	.L.str.44(%rip), %rsi
	leaq	-64(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@PLT
.Ltmp599:
	jmp	.LBB25_2
.LBB25_2:
	jmp	.LBB25_9
.LBB25_3:
.Ltmp654:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -72(%rbp)
	movl	%eax, -76(%rbp)
	jmp	.LBB25_41
.LBB25_4:
.Ltmp596:
	leaq	.L.str.45(%rip), %rsi
	leaq	-64(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@PLT
.Ltmp597:
	jmp	.LBB25_5
.LBB25_5:
	jmp	.LBB25_9
.LBB25_6:
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rdi
	movq	%rdi, %rax
	movq	%rax, -152(%rbp)                # 8-byte Spill
.Ltmp649:
	leaq	.L.str.46(%rip), %rsi
	callq	_ZNSt16invalid_argumentC1EPKc@PLT
.Ltmp650:
	jmp	.LBB25_7
.LBB25_7:
.Ltmp652:
	movq	-152(%rbp), %rdi                # 8-byte Reload
	movq	_ZTISt16invalid_argument@GOTPCREL(%rip), %rsi
	movq	_ZNSt16invalid_argumentD1Ev@GOTPCREL(%rip), %rdx
	callq	__cxa_throw@PLT
.Ltmp653:
	jmp	.LBB25_43
.LBB25_8:
.Ltmp651:
	movq	-152(%rbp), %rdi                # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -72(%rbp)
	movl	%eax, -76(%rbp)
	callq	__cxa_free_exception@PLT
	jmp	.LBB25_41
.LBB25_9:
.Ltmp600:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.47(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp601:
	movq	%rax, -160(%rbp)                # 8-byte Spill
	jmp	.LBB25_10
.LBB25_10:
.Ltmp602:
	movq	-160(%rbp), %rdi                # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp603:
	jmp	.LBB25_11
.LBB25_11:
.Ltmp604:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.48(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp605:
	movq	%rax, -168(%rbp)                # 8-byte Spill
	jmp	.LBB25_12
.LBB25_12:
.Ltmp606:
	movq	-168(%rbp), %rdi                # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp607:
	jmp	.LBB25_13
.LBB25_13:
.Ltmp608:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.49(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp609:
	movq	%rax, -176(%rbp)                # 8-byte Spill
	jmp	.LBB25_14
.LBB25_14:
.Ltmp610:
	movq	-176(%rbp), %rdi                # 8-byte Reload
	leaq	-64(%rbp), %rsi
	callq	_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@PLT
.Ltmp611:
	movq	%rax, -184(%rbp)                # 8-byte Spill
	jmp	.LBB25_15
.LBB25_15:
.Ltmp612:
	movq	-184(%rbp), %rdi                # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp613:
	jmp	.LBB25_16
.LBB25_16:
.Ltmp614:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.50(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp615:
	movq	%rax, -192(%rbp)                # 8-byte Spill
	jmp	.LBB25_17
.LBB25_17:
	movq	-16(%rbp), %rdi
	callq	_ZNK4seal11SEALContext11ContextData5parmsEv
	movq	%rax, %rdi
	callq	_ZNK4seal20EncryptionParameters19poly_modulus_degreeEv
	movq	-192(%rbp), %rdi                # 8-byte Reload
	movq	%rax, %rsi
.Ltmp616:
	callq	_ZNSolsEm@PLT
.Ltmp617:
	movq	%rax, -200(%rbp)                # 8-byte Spill
	jmp	.LBB25_18
.LBB25_18:
.Ltmp618:
	movq	-200(%rbp), %rdi                # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp619:
	jmp	.LBB25_19
.LBB25_19:
.Ltmp620:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.51(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp621:
	jmp	.LBB25_20
.LBB25_20:
	movq	-16(%rbp), %rdi
	callq	_ZNK4seal11SEALContext11ContextData29total_coeff_modulus_bit_countEv
	movl	%eax, %esi
.Ltmp622:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	callq	_ZNSolsEi@PLT
.Ltmp623:
	movq	%rax, -208(%rbp)                # 8-byte Spill
	jmp	.LBB25_21
.LBB25_21:
.Ltmp624:
	movq	-208(%rbp), %rdi                # 8-byte Reload
	leaq	.L.str.52(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp625:
	jmp	.LBB25_22
.LBB25_22:
	movq	-16(%rbp), %rdi
	callq	_ZNK4seal11SEALContext11ContextData5parmsEv
	movq	%rax, %rdi
	callq	_ZNK4seal20EncryptionParameters13coeff_modulusEv
	movq	%rax, %rsi
.Ltmp626:
	leaq	-104(%rbp), %rdi
	callq	_ZNSt6vectorIN4seal7ModulusESaIS1_EEC2ERKS3_
.Ltmp627:
	jmp	.LBB25_23
.LBB25_23:
	leaq	-104(%rbp), %rdi
	callq	_ZNKSt6vectorIN4seal7ModulusESaIS1_EE4sizeEv
	movq	%rax, -112(%rbp)
	movq	$0, -120(%rbp)
.LBB25_24:                              # =>This Inner Loop Header: Depth=1
	movq	-120(%rbp), %rax
	movq	-112(%rbp), %rcx
	subq	$1, %rcx
	cmpq	%rcx, %rax
	jae	.LBB25_30
# %bb.25:                               #   in Loop: Header=BB25_24 Depth=1
	movq	-120(%rbp), %rsi
	leaq	-104(%rbp), %rdi
	callq	_ZNSt6vectorIN4seal7ModulusESaIS1_EEixEm
	movq	%rax, %rdi
	callq	_ZNK4seal7Modulus9bit_countEv
	movl	%eax, %esi
.Ltmp644:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	callq	_ZNSolsEi@PLT
.Ltmp645:
	movq	%rax, -216(%rbp)                # 8-byte Spill
	jmp	.LBB25_26
.LBB25_26:                              #   in Loop: Header=BB25_24 Depth=1
.Ltmp646:
	movq	-216(%rbp), %rdi                # 8-byte Reload
	leaq	.L.str.53(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp647:
	jmp	.LBB25_27
.LBB25_27:                              #   in Loop: Header=BB25_24 Depth=1
	jmp	.LBB25_28
.LBB25_28:                              #   in Loop: Header=BB25_24 Depth=1
	movq	-120(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -120(%rbp)
	jmp	.LBB25_24
.LBB25_29:
.Ltmp648:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -72(%rbp)
	movl	%eax, -76(%rbp)
	leaq	-104(%rbp), %rdi
	callq	_ZNSt6vectorIN4seal7ModulusESaIS1_EED2Ev
	jmp	.LBB25_41
.LBB25_30:
	leaq	-104(%rbp), %rdi
	callq	_ZNSt6vectorIN4seal7ModulusESaIS1_EE4backEv
	movq	%rax, %rdi
	callq	_ZNK4seal7Modulus9bit_countEv
	movl	%eax, %esi
.Ltmp628:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	callq	_ZNSolsEi@PLT
.Ltmp629:
	jmp	.LBB25_31
.LBB25_31:
.Ltmp630:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.54(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp631:
	movq	%rax, -224(%rbp)                # 8-byte Spill
	jmp	.LBB25_32
.LBB25_32:
.Ltmp632:
	movq	-224(%rbp), %rdi                # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp633:
	jmp	.LBB25_33
.LBB25_33:
	movq	-16(%rbp), %rdi
	callq	_ZNK4seal11SEALContext11ContextData5parmsEv
	movq	%rax, %rdi
	callq	_ZNK4seal20EncryptionParameters6schemeEv
	cmpb	$1, %al
	jne	.LBB25_38
# %bb.34:
.Ltmp634:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.55(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp635:
	movq	%rax, -232(%rbp)                # 8-byte Spill
	jmp	.LBB25_35
.LBB25_35:
	movq	-16(%rbp), %rdi
	callq	_ZNK4seal11SEALContext11ContextData5parmsEv
	movq	%rax, %rdi
	callq	_ZNK4seal20EncryptionParameters13plain_modulusEv
	movq	%rax, %rdi
	callq	_ZNK4seal7Modulus5valueEv
	movq	-232(%rbp), %rdi                # 8-byte Reload
	movq	%rax, %rsi
.Ltmp636:
	callq	_ZNSolsEm@PLT
.Ltmp637:
	movq	%rax, -240(%rbp)                # 8-byte Spill
	jmp	.LBB25_36
.LBB25_36:
.Ltmp638:
	movq	-240(%rbp), %rdi                # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp639:
	jmp	.LBB25_37
.LBB25_37:
	jmp	.LBB25_38
.LBB25_38:
.Ltmp640:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.56(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp641:
	movq	%rax, -248(%rbp)                # 8-byte Spill
	jmp	.LBB25_39
.LBB25_39:
.Ltmp642:
	movq	-248(%rbp), %rdi                # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp643:
	jmp	.LBB25_40
.LBB25_40:
	leaq	-104(%rbp), %rdi
	callq	_ZNSt6vectorIN4seal7ModulusESaIS1_EED2Ev
	leaq	-64(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
	addq	$256, %rsp                      # imm = 0x100
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB25_41:
	.cfi_def_cfa %rbp, 16
	leaq	-64(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
# %bb.42:
	movq	-72(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.LBB25_43:
.Lfunc_end25:
	.size	_Z16print_parametersRKN4seal11SEALContextE, .Lfunc_end25-_Z16print_parametersRKN4seal11SEALContextE
	.cfi_endproc
	.section	.gcc_except_table._Z16print_parametersRKN4seal11SEALContextE,"aG",@progbits,_Z16print_parametersRKN4seal11SEALContextE,comdat
	.p2align	2
GCC_except_table25:
.Lexception12:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end12-.Lcst_begin12
.Lcst_begin12:
	.uleb128 .Lfunc_begin12-.Lfunc_begin12  # >> Call Site 1 <<
	.uleb128 .Ltmp598-.Lfunc_begin12        #   Call between .Lfunc_begin12 and .Ltmp598
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp598-.Lfunc_begin12        # >> Call Site 2 <<
	.uleb128 .Ltmp597-.Ltmp598              #   Call between .Ltmp598 and .Ltmp597
	.uleb128 .Ltmp654-.Lfunc_begin12        #     jumps to .Ltmp654
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp597-.Lfunc_begin12        # >> Call Site 3 <<
	.uleb128 .Ltmp649-.Ltmp597              #   Call between .Ltmp597 and .Ltmp649
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp649-.Lfunc_begin12        # >> Call Site 4 <<
	.uleb128 .Ltmp650-.Ltmp649              #   Call between .Ltmp649 and .Ltmp650
	.uleb128 .Ltmp651-.Lfunc_begin12        #     jumps to .Ltmp651
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp652-.Lfunc_begin12        # >> Call Site 5 <<
	.uleb128 .Ltmp653-.Ltmp652              #   Call between .Ltmp652 and .Ltmp653
	.uleb128 .Ltmp654-.Lfunc_begin12        #     jumps to .Ltmp654
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp653-.Lfunc_begin12        # >> Call Site 6 <<
	.uleb128 .Ltmp600-.Ltmp653              #   Call between .Ltmp653 and .Ltmp600
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp600-.Lfunc_begin12        # >> Call Site 7 <<
	.uleb128 .Ltmp627-.Ltmp600              #   Call between .Ltmp600 and .Ltmp627
	.uleb128 .Ltmp654-.Lfunc_begin12        #     jumps to .Ltmp654
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp644-.Lfunc_begin12        # >> Call Site 8 <<
	.uleb128 .Ltmp643-.Ltmp644              #   Call between .Ltmp644 and .Ltmp643
	.uleb128 .Ltmp648-.Lfunc_begin12        #     jumps to .Ltmp648
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp643-.Lfunc_begin12        # >> Call Site 9 <<
	.uleb128 .Lfunc_end25-.Ltmp643          #   Call between .Ltmp643 and .Lfunc_end25
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end12:
	.p2align	2
                                        # -- End function
	.section	.text._ZN4seal9SecretKeyC2ERKS0_,"axG",@progbits,_ZN4seal9SecretKeyC2ERKS0_,comdat
	.weak	_ZN4seal9SecretKeyC2ERKS0_      # -- Begin function _ZN4seal9SecretKeyC2ERKS0_
	.p2align	4, 0x90
	.type	_ZN4seal9SecretKeyC2ERKS0_,@function
_ZN4seal9SecretKeyC2ERKS0_:             # @_ZN4seal9SecretKeyC2ERKS0_
.Lfunc_begin13:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception13
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -72(%rbp)                 # 8-byte Spill
	movq	%rax, -80(%rbp)                 # 8-byte Spill
	movb	$1, -33(%rbp)
	leaq	-32(%rbp), %rdi
	movq	%rdi, -64(%rbp)                 # 8-byte Spill
	movl	$2, %esi
	leaq	-33(%rbp), %rdx
	callq	_ZN4seal13MemoryManager7GetPoolIJbEEENS_16MemoryPoolHandleEmDpOT_
	movq	-72(%rbp), %rdi                 # 8-byte Reload
	movq	-64(%rbp), %rsi                 # 8-byte Reload
.Ltmp655:
	callq	_ZN4seal9PlaintextC2ENS_16MemoryPoolHandleE
.Ltmp656:
	jmp	.LBB26_1
.LBB26_1:
	leaq	-32(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	movq	-80(%rbp), %rdi                 # 8-byte Reload
	movq	-16(%rbp), %rsi
.Ltmp658:
	callq	_ZN4seal9PlaintextaSERKS0_
.Ltmp659:
	jmp	.LBB26_2
.LBB26_2:
	addq	$80, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB26_3:
	.cfi_def_cfa %rbp, 16
.Ltmp657:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	leaq	-32(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	jmp	.LBB26_5
.LBB26_4:
.Ltmp660:
	movq	-72(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	callq	_ZN4seal9PlaintextD2Ev
.LBB26_5:
	movq	-48(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end26:
	.size	_ZN4seal9SecretKeyC2ERKS0_, .Lfunc_end26-_ZN4seal9SecretKeyC2ERKS0_
	.cfi_endproc
	.section	.gcc_except_table._ZN4seal9SecretKeyC2ERKS0_,"aG",@progbits,_ZN4seal9SecretKeyC2ERKS0_,comdat
	.p2align	2
GCC_except_table26:
.Lexception13:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end13-.Lcst_begin13
.Lcst_begin13:
	.uleb128 .Lfunc_begin13-.Lfunc_begin13  # >> Call Site 1 <<
	.uleb128 .Ltmp655-.Lfunc_begin13        #   Call between .Lfunc_begin13 and .Ltmp655
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp655-.Lfunc_begin13        # >> Call Site 2 <<
	.uleb128 .Ltmp656-.Ltmp655              #   Call between .Ltmp655 and .Ltmp656
	.uleb128 .Ltmp657-.Lfunc_begin13        #     jumps to .Ltmp657
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp658-.Lfunc_begin13        # >> Call Site 3 <<
	.uleb128 .Ltmp659-.Ltmp658              #   Call between .Ltmp658 and .Ltmp659
	.uleb128 .Ltmp660-.Lfunc_begin13        #     jumps to .Ltmp660
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp659-.Lfunc_begin13        # >> Call Site 4 <<
	.uleb128 .Lfunc_end26-.Ltmp659          #   Call between .Ltmp659 and .Lfunc_end26
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end13:
	.p2align	2
                                        # -- End function
	.section	.text._ZN4seal9PublicKeyC2Ev,"axG",@progbits,_ZN4seal9PublicKeyC2Ev,comdat
	.weak	_ZN4seal9PublicKeyC2Ev          # -- Begin function _ZN4seal9PublicKeyC2Ev
	.p2align	4, 0x90
	.type	_ZN4seal9PublicKeyC2Ev,@function
_ZN4seal9PublicKeyC2Ev:                 # @_ZN4seal9PublicKeyC2Ev
.Lfunc_begin14:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception14
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -56(%rbp)                 # 8-byte Spill
	leaq	-24(%rbp), %rdi
	movq	%rdi, -48(%rbp)                 # 8-byte Spill
	callq	_ZN4seal13MemoryManager7GetPoolEv
	movq	-56(%rbp), %rdi                 # 8-byte Reload
	movq	-48(%rbp), %rsi                 # 8-byte Reload
.Ltmp661:
	callq	_ZN4seal10CiphertextC2ENS_16MemoryPoolHandleE
.Ltmp662:
	jmp	.LBB27_1
.LBB27_1:
	leaq	-24(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB27_2:
	.cfi_def_cfa %rbp, 16
.Ltmp663:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -32(%rbp)
	movl	%eax, -36(%rbp)
	leaq	-24(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
# %bb.3:
	movq	-32(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end27:
	.size	_ZN4seal9PublicKeyC2Ev, .Lfunc_end27-_ZN4seal9PublicKeyC2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZN4seal9PublicKeyC2Ev,"aG",@progbits,_ZN4seal9PublicKeyC2Ev,comdat
	.p2align	2
GCC_except_table27:
.Lexception14:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end14-.Lcst_begin14
.Lcst_begin14:
	.uleb128 .Lfunc_begin14-.Lfunc_begin14  # >> Call Site 1 <<
	.uleb128 .Ltmp661-.Lfunc_begin14        #   Call between .Lfunc_begin14 and .Ltmp661
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp661-.Lfunc_begin14        # >> Call Site 2 <<
	.uleb128 .Ltmp662-.Ltmp661              #   Call between .Ltmp661 and .Ltmp662
	.uleb128 .Ltmp663-.Lfunc_begin14        #     jumps to .Ltmp663
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp662-.Lfunc_begin14        # >> Call Site 3 <<
	.uleb128 .Lfunc_end27-.Ltmp662          #   Call between .Ltmp662 and .Lfunc_end27
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end14:
	.p2align	2
                                        # -- End function
	.section	.text._ZNK4seal12KeyGenerator17create_public_keyERNS_9PublicKeyE,"axG",@progbits,_ZNK4seal12KeyGenerator17create_public_keyERNS_9PublicKeyE,comdat
	.weak	_ZNK4seal12KeyGenerator17create_public_keyERNS_9PublicKeyE # -- Begin function _ZNK4seal12KeyGenerator17create_public_keyERNS_9PublicKeyE
	.p2align	4, 0x90
	.type	_ZNK4seal12KeyGenerator17create_public_keyERNS_9PublicKeyE,@function
_ZNK4seal12KeyGenerator17create_public_keyERNS_9PublicKeyE: # @_ZNK4seal12KeyGenerator17create_public_keyERNS_9PublicKeyE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$160, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	leaq	-152(%rbp), %rdi
	xorl	%edx, %edx
	callq	_ZNK4seal12KeyGenerator11generate_pkEb@PLT
	movq	-16(%rbp), %rdi
	leaq	-152(%rbp), %rsi
	callq	_ZN4seal9PublicKeyaSEOS0_
	leaq	-152(%rbp), %rdi
	callq	_ZN4seal9PublicKeyD2Ev
	addq	$160, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end28:
	.size	_ZNK4seal12KeyGenerator17create_public_keyERNS_9PublicKeyE, .Lfunc_end28-_ZNK4seal12KeyGenerator17create_public_keyERNS_9PublicKeyE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal9RelinKeysC2Ev,"axG",@progbits,_ZN4seal9RelinKeysC2Ev,comdat
	.weak	_ZN4seal9RelinKeysC2Ev          # -- Begin function _ZN4seal9RelinKeysC2Ev
	.p2align	4, 0x90
	.type	_ZN4seal9RelinKeysC2Ev,@function
_ZN4seal9RelinKeysC2Ev:                 # @_ZN4seal9RelinKeysC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN4seal11KSwitchKeysC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end29:
	.size	_ZN4seal9RelinKeysC2Ev, .Lfunc_end29-_ZN4seal9RelinKeysC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal12KeyGenerator17create_relin_keysERNS_9RelinKeysE,"axG",@progbits,_ZN4seal12KeyGenerator17create_relin_keysERNS_9RelinKeysE,comdat
	.weak	_ZN4seal12KeyGenerator17create_relin_keysERNS_9RelinKeysE # -- Begin function _ZN4seal12KeyGenerator17create_relin_keysERNS_9RelinKeysE
	.p2align	4, 0x90
	.type	_ZN4seal12KeyGenerator17create_relin_keysERNS_9RelinKeysE,@function
_ZN4seal12KeyGenerator17create_relin_keysERNS_9RelinKeysE: # @_ZN4seal12KeyGenerator17create_relin_keysERNS_9RelinKeysE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	leaq	-88(%rbp), %rdi
	movl	$1, %edx
	xorl	%ecx, %ecx
	callq	_ZN4seal12KeyGenerator17create_relin_keysEmb@PLT
	movq	-16(%rbp), %rdi
	leaq	-88(%rbp), %rsi
	callq	_ZN4seal9RelinKeysaSEOS0_
	leaq	-88(%rbp), %rdi
	callq	_ZN4seal9RelinKeysD2Ev
	addq	$96, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end30:
	.size	_ZN4seal12KeyGenerator17create_relin_keysERNS_9RelinKeysE, .Lfunc_end30-_ZN4seal12KeyGenerator17create_relin_keysERNS_9RelinKeysE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal10GaloisKeysC2Ev,"axG",@progbits,_ZN4seal10GaloisKeysC2Ev,comdat
	.weak	_ZN4seal10GaloisKeysC2Ev        # -- Begin function _ZN4seal10GaloisKeysC2Ev
	.p2align	4, 0x90
	.type	_ZN4seal10GaloisKeysC2Ev,@function
_ZN4seal10GaloisKeysC2Ev:               # @_ZN4seal10GaloisKeysC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN4seal11KSwitchKeysC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end31:
	.size	_ZN4seal10GaloisKeysC2Ev, .Lfunc_end31-_ZN4seal10GaloisKeysC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal12KeyGenerator18create_galois_keysERNS_10GaloisKeysE,"axG",@progbits,_ZN4seal12KeyGenerator18create_galois_keysERNS_10GaloisKeysE,comdat
	.weak	_ZN4seal12KeyGenerator18create_galois_keysERNS_10GaloisKeysE # -- Begin function _ZN4seal12KeyGenerator18create_galois_keysERNS_10GaloisKeysE
	.p2align	4, 0x90
	.type	_ZN4seal12KeyGenerator18create_galois_keysERNS_10GaloisKeysE,@function
_ZN4seal12KeyGenerator18create_galois_keysERNS_10GaloisKeysE: # @_ZN4seal12KeyGenerator18create_galois_keysERNS_10GaloisKeysE
.Lfunc_begin15:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception15
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rsi
	movq	%rsi, -88(%rbp)                 # 8-byte Spill
	addq	$16, %rsi
	leaq	-56(%rbp), %rdi
	movq	%rdi, -96(%rbp)                 # 8-byte Spill
	callq	_ZNK4seal11SEALContext16key_context_dataEv
	movq	-96(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNKSt19__shared_ptr_accessIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2ELb0ELb0EEptEv
	movq	%rax, %rdi
	callq	_ZNK4seal11SEALContext11ContextData11galois_toolEv
	movq	%rax, %rsi
	leaq	-40(%rbp), %rdi
	movq	%rdi, -80(%rbp)                 # 8-byte Spill
	callq	_ZNK4seal4util10GaloisTool12get_elts_allEv@PLT
	movq	-88(%rbp), %rdi                 # 8-byte Reload
	movq	-80(%rbp), %rsi                 # 8-byte Reload
	movq	-16(%rbp), %rdx
.Ltmp664:
	callq	_ZN4seal12KeyGenerator18create_galois_keysERKSt6vectorIjSaIjEERNS_10GaloisKeysE
.Ltmp665:
	jmp	.LBB32_1
.LBB32_1:
	leaq	-40(%rbp), %rdi
	callq	_ZNSt6vectorIjSaIjEED2Ev
	leaq	-56(%rbp), %rdi
	callq	_ZNSt10shared_ptrIKN4seal11SEALContext11ContextDataEED2Ev
	addq	$96, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB32_2:
	.cfi_def_cfa %rbp, 16
.Ltmp666:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -64(%rbp)
	movl	%eax, -68(%rbp)
	leaq	-40(%rbp), %rdi
	callq	_ZNSt6vectorIjSaIjEED2Ev
	leaq	-56(%rbp), %rdi
	callq	_ZNSt10shared_ptrIKN4seal11SEALContext11ContextDataEED2Ev
# %bb.3:
	movq	-64(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end32:
	.size	_ZN4seal12KeyGenerator18create_galois_keysERNS_10GaloisKeysE, .Lfunc_end32-_ZN4seal12KeyGenerator18create_galois_keysERNS_10GaloisKeysE
	.cfi_endproc
	.section	.gcc_except_table._ZN4seal12KeyGenerator18create_galois_keysERNS_10GaloisKeysE,"aG",@progbits,_ZN4seal12KeyGenerator18create_galois_keysERNS_10GaloisKeysE,comdat
	.p2align	2
GCC_except_table32:
.Lexception15:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end15-.Lcst_begin15
.Lcst_begin15:
	.uleb128 .Lfunc_begin15-.Lfunc_begin15  # >> Call Site 1 <<
	.uleb128 .Ltmp664-.Lfunc_begin15        #   Call between .Lfunc_begin15 and .Ltmp664
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp664-.Lfunc_begin15        # >> Call Site 2 <<
	.uleb128 .Ltmp665-.Ltmp664              #   Call between .Ltmp664 and .Ltmp665
	.uleb128 .Ltmp666-.Lfunc_begin15        #     jumps to .Ltmp666
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp665-.Lfunc_begin15        # >> Call Site 3 <<
	.uleb128 .Lfunc_end32-.Ltmp665          #   Call between .Ltmp665 and .Lfunc_end32
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end15:
	.p2align	2
                                        # -- End function
	.section	.text._ZNK4seal11CKKSEncoder10slot_countEv,"axG",@progbits,_ZNK4seal11CKKSEncoder10slot_countEv,comdat
	.weak	_ZNK4seal11CKKSEncoder10slot_countEv # -- Begin function _ZNK4seal11CKKSEncoder10slot_countEv
	.p2align	4, 0x90
	.type	_ZNK4seal11CKKSEncoder10slot_countEv,@function
_ZNK4seal11CKKSEncoder10slot_countEv:   # @_ZNK4seal11CKKSEncoder10slot_countEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	192(%rax), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end33:
	.size	_ZNK4seal11CKKSEncoder10slot_countEv, .Lfunc_end33-_ZNK4seal11CKKSEncoder10slot_countEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIdSaIdEEC2Ev,"axG",@progbits,_ZNSt6vectorIdSaIdEEC2Ev,comdat
	.weak	_ZNSt6vectorIdSaIdEEC2Ev        # -- Begin function _ZNSt6vectorIdSaIdEEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt6vectorIdSaIdEEC2Ev,@function
_ZNSt6vectorIdSaIdEEC2Ev:               # @_ZNSt6vectorIdSaIdEEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt12_Vector_baseIdSaIdEEC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end34:
	.size	_ZNSt6vectorIdSaIdEEC2Ev, .Lfunc_end34-_ZNSt6vectorIdSaIdEEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIdSaIdEE7reserveEm,"axG",@progbits,_ZNSt6vectorIdSaIdEE7reserveEm,comdat
	.weak	_ZNSt6vectorIdSaIdEE7reserveEm  # -- Begin function _ZNSt6vectorIdSaIdEE7reserveEm
	.p2align	4, 0x90
	.type	_ZNSt6vectorIdSaIdEE7reserveEm,@function
_ZNSt6vectorIdSaIdEE7reserveEm:         # @_ZNSt6vectorIdSaIdEE7reserveEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -48(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rax
	movq	%rax, -40(%rbp)                 # 8-byte Spill
	callq	_ZNKSt6vectorIdSaIdEE8max_sizeEv
	movq	%rax, %rcx
	movq	-40(%rbp), %rax                 # 8-byte Reload
	cmpq	%rcx, %rax
	jbe	.LBB35_2
# %bb.1:
	leaq	.L.str.66(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.LBB35_2:
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNKSt6vectorIdSaIdEE8capacityEv
	cmpq	-16(%rbp), %rax
	jae	.LBB35_4
# %bb.3:
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNKSt6vectorIdSaIdEE4sizeEv
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, -24(%rbp)
	movq	-16(%rbp), %rsi
	callq	_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, -32(%rbp)
	movq	(%rdi), %rax
	movq	%rax, -72(%rbp)                 # 8-byte Spill
	movq	8(%rdi), %rax
	movq	%rax, -64(%rbp)                 # 8-byte Spill
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)                 # 8-byte Spill
	callq	_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv
	movq	-72(%rbp), %rdi                 # 8-byte Reload
	movq	-64(%rbp), %rsi                 # 8-byte Reload
	movq	-56(%rbp), %rdx                 # 8-byte Reload
	movq	%rax, %rcx
	callq	_ZNSt6vectorIdSaIdEE11_S_relocateEPdS2_S2_RS0_
                                        # kill: def $rcx killed $rax
	movq	-48(%rbp), %rax                 # 8-byte Reload
	movq	%rax, %rdi
	movq	(%rax), %rsi
	movq	16(%rax), %rdx
	movq	(%rax), %rax
	subq	%rax, %rdx
	sarq	$3, %rdx
	callq	_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm
	movq	-48(%rbp), %rax                 # 8-byte Reload
	movq	-32(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-32(%rbp), %rcx
	movq	-24(%rbp), %rdx
	shlq	$3, %rdx
	addq	%rdx, %rcx
	movq	%rcx, 8(%rax)
	movq	(%rax), %rcx
	movq	-16(%rbp), %rdx
	shlq	$3, %rdx
	addq	%rdx, %rcx
	movq	%rcx, 16(%rax)
.LBB35_4:
	addq	$80, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end35:
	.size	_ZNSt6vectorIdSaIdEE7reserveEm, .Lfunc_end35-_ZNSt6vectorIdSaIdEE7reserveEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIdSaIdEE9push_backERKd,"axG",@progbits,_ZNSt6vectorIdSaIdEE9push_backERKd,comdat
	.weak	_ZNSt6vectorIdSaIdEE9push_backERKd # -- Begin function _ZNSt6vectorIdSaIdEE9push_backERKd
	.p2align	4, 0x90
	.type	_ZNSt6vectorIdSaIdEE9push_backERKd,@function
_ZNSt6vectorIdSaIdEE9push_backERKd:     # @_ZNSt6vectorIdSaIdEE9push_backERKd
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rcx
	movq	%rcx, -32(%rbp)                 # 8-byte Spill
	movq	8(%rcx), %rax
	cmpq	16(%rcx), %rax
	je	.LBB36_2
# %bb.1:
	movq	-32(%rbp), %rax                 # 8-byte Reload
	movq	%rax, %rdi
	movq	8(%rax), %rsi
	movq	-16(%rbp), %rdx
	callq	_ZNSt16allocator_traitsISaIdEE9constructIdJRKdEEEvRS0_PT_DpOT0_
	movq	-32(%rbp), %rax                 # 8-byte Reload
	movq	8(%rax), %rcx
	addq	$8, %rcx
	movq	%rcx, 8(%rax)
	jmp	.LBB36_3
.LBB36_2:
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNSt6vectorIdSaIdEE3endEv
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, -24(%rbp)
	movq	-16(%rbp), %rdx
	movq	-24(%rbp), %rsi
	callq	_ZNSt6vectorIdSaIdEE17_M_realloc_insertIJRKdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_
.LBB36_3:
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end36:
	.size	_ZNSt6vectorIdSaIdEE9push_backERKd, .Lfunc_end36-_ZNSt6vectorIdSaIdEE9push_backERKd
	.cfi_endproc
                                        # -- End function
	.section	.text._Z12print_vectorIdEvSt6vectorIT_SaIS1_EEmi,"axG",@progbits,_Z12print_vectorIdEvSt6vectorIT_SaIS1_EEmi,comdat
	.weak	_Z12print_vectorIdEvSt6vectorIT_SaIS1_EEmi # -- Begin function _Z12print_vectorIdEvSt6vectorIT_SaIS1_EEmi
	.p2align	4, 0x90
	.type	_Z12print_vectorIdEvSt6vectorIT_SaIS1_EEmi,@function
_Z12print_vectorIdEvSt6vectorIT_SaIS1_EEmi: # @_Z12print_vectorIdEvSt6vectorIT_SaIS1_EEmi
.Lfunc_begin16:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception16
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$432, %rsp                      # imm = 0x1B0
	movq	%rdi, -368(%rbp)                # 8-byte Spill
	movq	%rsi, -8(%rbp)
	movl	%edx, -12(%rbp)
	xorl	%eax, %eax
	movl	%eax, %esi
	leaq	-280(%rbp), %rdi
	movq	%rdi, -360(%rbp)                # 8-byte Spill
	callq	_ZNSt9basic_iosIcSt11char_traitsIcEEC1EPSt15basic_streambufIcS1_E@PLT
	movq	-360(%rbp), %rdi                # 8-byte Reload
	movq	_ZSt4cout@GOTPCREL(%rip), %rsi
	movq	(%rsi), %rax
	movq	-24(%rax), %rax
	addq	%rax, %rsi
.Ltmp667:
	callq	_ZNSt9basic_iosIcSt11char_traitsIcEE7copyfmtERKS2_@PLT
.Ltmp668:
	jmp	.LBB37_1
.LBB37_1:
	movq	-368(%rbp), %rdi                # 8-byte Reload
	callq	_ZNKSt6vectorIdSaIdEE4sizeEv
	movq	%rax, -304(%rbp)
.Ltmp669:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	_ZSt5fixedRSt8ios_base(%rip), %rsi
	callq	_ZNSolsEPFRSt8ios_baseS0_E@PLT
.Ltmp670:
	movq	%rax, -376(%rbp)                # 8-byte Spill
	jmp	.LBB37_2
.LBB37_2:
	movl	-12(%rbp), %edi
	callq	_ZSt12setprecisioni
	movq	-376(%rbp), %rdi                # 8-byte Reload
	movl	%eax, -312(%rbp)
	movl	-312(%rbp), %esi
.Ltmp671:
	callq	_ZStlsIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_St13_Setprecision@PLT
.Ltmp672:
	jmp	.LBB37_3
.LBB37_3:
.Ltmp673:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp674:
	jmp	.LBB37_4
.LBB37_4:
	movq	-304(%rbp), %rax
	movq	-8(%rbp), %rcx
	shlq	$1, %rcx
	cmpq	%rcx, %rax
	ja	.LBB37_15
# %bb.5:
.Ltmp693:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.68(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp694:
	jmp	.LBB37_6
.LBB37_6:
	movq	$0, -320(%rbp)
.LBB37_7:                               # =>This Inner Loop Header: Depth=1
	movq	-320(%rbp), %rax
	cmpq	-304(%rbp), %rax
	jae	.LBB37_14
# %bb.8:                                #   in Loop: Header=BB37_7 Depth=1
.Ltmp699:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.20(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp700:
	movq	%rax, -384(%rbp)                # 8-byte Spill
	jmp	.LBB37_9
.LBB37_9:                               #   in Loop: Header=BB37_7 Depth=1
	movq	-368(%rbp), %rdi                # 8-byte Reload
	movq	-320(%rbp), %rsi
	callq	_ZNSt6vectorIdSaIdEEixEm
	movq	-384(%rbp), %rdi                # 8-byte Reload
	movsd	(%rax), %xmm0                   # xmm0 = mem[0],zero
.Ltmp701:
	callq	_ZNSolsEd@PLT
.Ltmp702:
	movq	%rax, -392(%rbp)                # 8-byte Spill
	jmp	.LBB37_10
.LBB37_10:                              #   in Loop: Header=BB37_7 Depth=1
	movq	-392(%rbp), %rdi                # 8-byte Reload
	movq	-320(%rbp), %rax
	movq	-304(%rbp), %rcx
	addq	$-1, %rcx
	subq	%rcx, %rax
	leaq	.L.str.69(%rip), %rax
	leaq	.L.str.70(%rip), %rsi
	cmovneq	%rax, %rsi
.Ltmp703:
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp704:
	jmp	.LBB37_11
.LBB37_11:                              #   in Loop: Header=BB37_7 Depth=1
	jmp	.LBB37_12
.LBB37_12:                              #   in Loop: Header=BB37_7 Depth=1
	movq	-320(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -320(%rbp)
	jmp	.LBB37_7
.LBB37_13:
.Ltmp705:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -288(%rbp)
	movl	%eax, -292(%rbp)
	leaq	-280(%rbp), %rdi
	callq	_ZNSt9basic_iosIcSt11char_traitsIcEED1Ev@PLT
	jmp	.LBB37_38
.LBB37_14:
	jmp	.LBB37_35
.LBB37_15:
	movq	-368(%rbp), %rdi                # 8-byte Reload
	callq	_ZNKSt6vectorIdSaIdEE4sizeEv
	movq	%rax, -328(%rbp)
	movq	-8(%rbp), %rax
	addq	%rax, %rax
	movq	%rax, -336(%rbp)
	leaq	-328(%rbp), %rdi
	leaq	-336(%rbp), %rsi
	callq	_ZSt3maxImERKT_S2_S2_
	movq	-368(%rbp), %rdi                # 8-byte Reload
	movq	(%rax), %rsi
.Ltmp675:
	callq	_ZNSt6vectorIdSaIdEE6resizeEm
.Ltmp676:
	jmp	.LBB37_16
.LBB37_16:
.Ltmp677:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.68(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp678:
	jmp	.LBB37_17
.LBB37_17:
	movq	$0, -344(%rbp)
.LBB37_18:                              # =>This Inner Loop Header: Depth=1
	movq	-344(%rbp), %rax
	cmpq	-8(%rbp), %rax
	jae	.LBB37_24
# %bb.19:                               #   in Loop: Header=BB37_18 Depth=1
.Ltmp687:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.20(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp688:
	movq	%rax, -400(%rbp)                # 8-byte Spill
	jmp	.LBB37_20
.LBB37_20:                              #   in Loop: Header=BB37_18 Depth=1
	movq	-368(%rbp), %rdi                # 8-byte Reload
	movq	-344(%rbp), %rsi
	callq	_ZNSt6vectorIdSaIdEEixEm
	movq	-400(%rbp), %rdi                # 8-byte Reload
	movsd	(%rax), %xmm0                   # xmm0 = mem[0],zero
.Ltmp689:
	callq	_ZNSolsEd@PLT
.Ltmp690:
	movq	%rax, -408(%rbp)                # 8-byte Spill
	jmp	.LBB37_21
.LBB37_21:                              #   in Loop: Header=BB37_18 Depth=1
.Ltmp691:
	movq	-408(%rbp), %rdi                # 8-byte Reload
	leaq	.L.str.69(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp692:
	jmp	.LBB37_22
.LBB37_22:                              #   in Loop: Header=BB37_18 Depth=1
	jmp	.LBB37_23
.LBB37_23:                              #   in Loop: Header=BB37_18 Depth=1
	movq	-344(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -344(%rbp)
	jmp	.LBB37_18
.LBB37_24:
	movq	-368(%rbp), %rdi                # 8-byte Reload
	callq	_ZNKSt6vectorIdSaIdEE4sizeEv
	movq	-8(%rbp), %rcx
	shlq	$1, %rcx
	cmpq	%rcx, %rax
	jbe	.LBB37_27
# %bb.25:
.Ltmp679:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.71(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp680:
	jmp	.LBB37_26
.LBB37_26:
	jmp	.LBB37_27
.LBB37_27:
	movq	-304(%rbp), %rax
	subq	-8(%rbp), %rax
	movq	%rax, -352(%rbp)
.LBB37_28:                              # =>This Inner Loop Header: Depth=1
	movq	-352(%rbp), %rax
	cmpq	-304(%rbp), %rax
	jae	.LBB37_34
# %bb.29:                               #   in Loop: Header=BB37_28 Depth=1
.Ltmp681:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.20(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp682:
	movq	%rax, -416(%rbp)                # 8-byte Spill
	jmp	.LBB37_30
.LBB37_30:                              #   in Loop: Header=BB37_28 Depth=1
	movq	-368(%rbp), %rdi                # 8-byte Reload
	movq	-352(%rbp), %rsi
	callq	_ZNSt6vectorIdSaIdEEixEm
	movq	-416(%rbp), %rdi                # 8-byte Reload
	movsd	(%rax), %xmm0                   # xmm0 = mem[0],zero
.Ltmp683:
	callq	_ZNSolsEd@PLT
.Ltmp684:
	movq	%rax, -424(%rbp)                # 8-byte Spill
	jmp	.LBB37_31
.LBB37_31:                              #   in Loop: Header=BB37_28 Depth=1
	movq	-424(%rbp), %rdi                # 8-byte Reload
	movq	-352(%rbp), %rax
	movq	-304(%rbp), %rcx
	addq	$-1, %rcx
	subq	%rcx, %rax
	leaq	.L.str.69(%rip), %rax
	leaq	.L.str.70(%rip), %rsi
	cmovneq	%rax, %rsi
.Ltmp685:
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp686:
	jmp	.LBB37_32
.LBB37_32:                              #   in Loop: Header=BB37_28 Depth=1
	jmp	.LBB37_33
.LBB37_33:                              #   in Loop: Header=BB37_28 Depth=1
	movq	-352(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -352(%rbp)
	jmp	.LBB37_28
.LBB37_34:
	jmp	.LBB37_35
.LBB37_35:
.Ltmp695:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp696:
	jmp	.LBB37_36
.LBB37_36:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	movq	(%rdi), %rax
	movq	-24(%rax), %rax
	addq	%rax, %rdi
.Ltmp697:
	leaq	-280(%rbp), %rsi
	callq	_ZNSt9basic_iosIcSt11char_traitsIcEE7copyfmtERKS2_@PLT
.Ltmp698:
	jmp	.LBB37_37
.LBB37_37:
	leaq	-280(%rbp), %rdi
	callq	_ZNSt9basic_iosIcSt11char_traitsIcEED1Ev@PLT
	addq	$432, %rsp                      # imm = 0x1B0
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB37_38:
	.cfi_def_cfa %rbp, 16
	movq	-288(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end37:
	.size	_Z12print_vectorIdEvSt6vectorIT_SaIS1_EEmi, .Lfunc_end37-_Z12print_vectorIdEvSt6vectorIT_SaIS1_EEmi
	.cfi_endproc
	.section	.gcc_except_table._Z12print_vectorIdEvSt6vectorIT_SaIS1_EEmi,"aG",@progbits,_Z12print_vectorIdEvSt6vectorIT_SaIS1_EEmi,comdat
	.p2align	2
GCC_except_table37:
.Lexception16:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end16-.Lcst_begin16
.Lcst_begin16:
	.uleb128 .Lfunc_begin16-.Lfunc_begin16  # >> Call Site 1 <<
	.uleb128 .Ltmp667-.Lfunc_begin16        #   Call between .Lfunc_begin16 and .Ltmp667
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp667-.Lfunc_begin16        # >> Call Site 2 <<
	.uleb128 .Ltmp698-.Ltmp667              #   Call between .Ltmp667 and .Ltmp698
	.uleb128 .Ltmp705-.Lfunc_begin16        #     jumps to .Ltmp705
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp698-.Lfunc_begin16        # >> Call Site 3 <<
	.uleb128 .Lfunc_end37-.Ltmp698          #   Call between .Ltmp698 and .Lfunc_end37
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end16:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt6vectorIdSaIdEEC2ERKS1_,"axG",@progbits,_ZNSt6vectorIdSaIdEEC2ERKS1_,comdat
	.weak	_ZNSt6vectorIdSaIdEEC2ERKS1_    # -- Begin function _ZNSt6vectorIdSaIdEEC2ERKS1_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIdSaIdEEC2ERKS1_,@function
_ZNSt6vectorIdSaIdEEC2ERKS1_:           # @_ZNSt6vectorIdSaIdEEC2ERKS1_
.Lfunc_begin17:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception17
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -80(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	callq	_ZNKSt6vectorIdSaIdEE4sizeEv
	movq	%rax, -72(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	callq	_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv
	movq	%rax, %rsi
	leaq	-24(%rbp), %rdi
	movq	%rdi, -64(%rbp)                 # 8-byte Spill
	callq	_ZN9__gnu_cxx14__alloc_traitsISaIdEdE17_S_select_on_copyERKS1_
	movq	-80(%rbp), %rdi                 # 8-byte Reload
	movq	-72(%rbp), %rsi                 # 8-byte Reload
	movq	-64(%rbp), %rdx                 # 8-byte Reload
.Ltmp706:
	callq	_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_
.Ltmp707:
	jmp	.LBB38_1
.LBB38_1:
	leaq	-24(%rbp), %rdi
	callq	_ZNSaIdED2Ev
	movq	-16(%rbp), %rdi
	callq	_ZNKSt6vectorIdSaIdEE5beginEv
	movq	%rax, -48(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZNKSt6vectorIdSaIdEE3endEv
	movq	-80(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, -56(%rbp)
	movq	(%rdi), %rax
	movq	%rax, -96(%rbp)                 # 8-byte Spill
	callq	_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv
	movq	-96(%rbp), %rdx                 # 8-byte Reload
	movq	%rax, %rcx
	movq	-48(%rbp), %rdi
	movq	-56(%rbp), %rsi
.Ltmp709:
	callq	_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPddET0_T_SA_S9_RSaIT1_E
.Ltmp710:
	movq	%rax, -88(%rbp)                 # 8-byte Spill
	jmp	.LBB38_2
.LBB38_2:
	movq	-80(%rbp), %rax                 # 8-byte Reload
	movq	-88(%rbp), %rcx                 # 8-byte Reload
	movq	%rcx, 8(%rax)
	addq	$96, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB38_3:
	.cfi_def_cfa %rbp, 16
.Ltmp708:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -32(%rbp)
	movl	%eax, -36(%rbp)
	leaq	-24(%rbp), %rdi
	callq	_ZNSaIdED2Ev
	jmp	.LBB38_5
.LBB38_4:
.Ltmp711:
	movq	-80(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -32(%rbp)
	movl	%eax, -36(%rbp)
	callq	_ZNSt12_Vector_baseIdSaIdEED2Ev
.LBB38_5:
	movq	-32(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end38:
	.size	_ZNSt6vectorIdSaIdEEC2ERKS1_, .Lfunc_end38-_ZNSt6vectorIdSaIdEEC2ERKS1_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt6vectorIdSaIdEEC2ERKS1_,"aG",@progbits,_ZNSt6vectorIdSaIdEEC2ERKS1_,comdat
	.p2align	2
GCC_except_table38:
.Lexception17:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end17-.Lcst_begin17
.Lcst_begin17:
	.uleb128 .Lfunc_begin17-.Lfunc_begin17  # >> Call Site 1 <<
	.uleb128 .Ltmp706-.Lfunc_begin17        #   Call between .Lfunc_begin17 and .Ltmp706
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp706-.Lfunc_begin17        # >> Call Site 2 <<
	.uleb128 .Ltmp707-.Ltmp706              #   Call between .Ltmp706 and .Ltmp707
	.uleb128 .Ltmp708-.Lfunc_begin17        #     jumps to .Ltmp708
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp709-.Lfunc_begin17        # >> Call Site 3 <<
	.uleb128 .Ltmp710-.Ltmp709              #   Call between .Ltmp709 and .Ltmp710
	.uleb128 .Ltmp711-.Lfunc_begin17        #     jumps to .Ltmp711
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp710-.Lfunc_begin17        # >> Call Site 4 <<
	.uleb128 .Lfunc_end38-.Ltmp710          #   Call between .Ltmp710 and .Lfunc_end38
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end17:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt6vectorIdSaIdEED2Ev,"axG",@progbits,_ZNSt6vectorIdSaIdEED2Ev,comdat
	.weak	_ZNSt6vectorIdSaIdEED2Ev        # -- Begin function _ZNSt6vectorIdSaIdEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt6vectorIdSaIdEED2Ev,@function
_ZNSt6vectorIdSaIdEED2Ev:               # @_ZNSt6vectorIdSaIdEED2Ev
.Lfunc_begin18:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception18
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -48(%rbp)                 # 8-byte Spill
	movq	(%rdi), %rax
	movq	%rax, -40(%rbp)                 # 8-byte Spill
	movq	8(%rdi), %rax
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	callq	_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv
	movq	-40(%rbp), %rdi                 # 8-byte Reload
	movq	-32(%rbp), %rsi                 # 8-byte Reload
	movq	%rax, %rdx
.Ltmp712:
	callq	_ZSt8_DestroyIPddEvT_S1_RSaIT0_E
.Ltmp713:
	jmp	.LBB39_1
.LBB39_1:
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNSt12_Vector_baseIdSaIdEED2Ev
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB39_2:
	.cfi_def_cfa %rbp, 16
.Ltmp714:
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -16(%rbp)
	movl	%eax, -20(%rbp)
	callq	_ZNSt12_Vector_baseIdSaIdEED2Ev
# %bb.3:
	movq	-16(%rbp), %rdi
	callq	__clang_call_terminate
.Lfunc_end39:
	.size	_ZNSt6vectorIdSaIdEED2Ev, .Lfunc_end39-_ZNSt6vectorIdSaIdEED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNSt6vectorIdSaIdEED2Ev,"aG",@progbits,_ZNSt6vectorIdSaIdEED2Ev,comdat
	.p2align	2
GCC_except_table39:
.Lexception18:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase2-.Lttbaseref2
.Lttbaseref2:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end18-.Lcst_begin18
.Lcst_begin18:
	.uleb128 .Ltmp712-.Lfunc_begin18        # >> Call Site 1 <<
	.uleb128 .Ltmp713-.Ltmp712              #   Call between .Ltmp712 and .Ltmp713
	.uleb128 .Ltmp714-.Lfunc_begin18        #     jumps to .Ltmp714
	.byte	1                               #   On action: 1
.Lcst_end18:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase2:
	.p2align	2
                                        # -- End function
	.section	.text._ZN4seal13MemoryManager7GetPoolEv,"axG",@progbits,_ZN4seal13MemoryManager7GetPoolEv,comdat
	.weak	_ZN4seal13MemoryManager7GetPoolEv # -- Begin function _ZN4seal13MemoryManager7GetPoolEv
	.p2align	4, 0x90
	.type	_ZN4seal13MemoryManager7GetPoolEv,@function
_ZN4seal13MemoryManager7GetPoolEv:      # @_ZN4seal13MemoryManager7GetPoolEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, %rax
	movq	%rax, -16(%rbp)                 # 8-byte Spill
	movq	%rdi, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	movl	%eax, %esi
	callq	_ZN4seal13MemoryManager7GetPoolIJEEENS_16MemoryPoolHandleEmDpOT_
	movq	-16(%rbp), %rax                 # 8-byte Reload
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end40:
	.size	_ZN4seal13MemoryManager7GetPoolEv, .Lfunc_end40-_ZN4seal13MemoryManager7GetPoolEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal9PlaintextC2ENS_16MemoryPoolHandleE,"axG",@progbits,_ZN4seal9PlaintextC2ENS_16MemoryPoolHandleE,comdat
	.weak	_ZN4seal9PlaintextC2ENS_16MemoryPoolHandleE # -- Begin function _ZN4seal9PlaintextC2ENS_16MemoryPoolHandleE
	.p2align	4, 0x90
	.type	_ZN4seal9PlaintextC2ENS_16MemoryPoolHandleE,@function
_ZN4seal9PlaintextC2ENS_16MemoryPoolHandleE: # @_ZN4seal9PlaintextC2ENS_16MemoryPoolHandleE
.Lfunc_begin19:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception19
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rsi, -64(%rbp)                 # 8-byte Spill
	movq	%rdi, %rax
	movq	-64(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	_ZN4seal13parms_id_zeroE@GOTPCREL(%rip), %rcx
	movups	(%rcx), %xmm0
	movups	16(%rcx), %xmm1
	movups	%xmm1, 16(%rax)
	movups	%xmm0, (%rax)
	movq	$0, 32(%rax)
	movabsq	$4607182418800017408, %rcx      # imm = 0x3FF0000000000000
	movq	%rcx, 40(%rax)
	addq	$48, %rax
	movq	%rax, -56(%rbp)                 # 8-byte Spill
	callq	_ZSt4moveIRN4seal16MemoryPoolHandleEEONSt16remove_referenceIT_E4typeEOS4_
	movq	%rax, %rsi
	leaq	-24(%rbp), %rdi
	movq	%rdi, -48(%rbp)                 # 8-byte Spill
	callq	_ZN4seal16MemoryPoolHandleC2EOS0_
	movq	-56(%rbp), %rdi                 # 8-byte Reload
	movq	-48(%rbp), %rsi                 # 8-byte Reload
.Ltmp715:
	callq	_ZN4seal8DynArrayImEC2ENS_16MemoryPoolHandleE
.Ltmp716:
	jmp	.LBB41_1
.LBB41_1:
	leaq	-24(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB41_2:
	.cfi_def_cfa %rbp, 16
.Ltmp717:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -32(%rbp)
	movl	%eax, -36(%rbp)
	leaq	-24(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
# %bb.3:
	movq	-32(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end41:
	.size	_ZN4seal9PlaintextC2ENS_16MemoryPoolHandleE, .Lfunc_end41-_ZN4seal9PlaintextC2ENS_16MemoryPoolHandleE
	.cfi_endproc
	.section	.gcc_except_table._ZN4seal9PlaintextC2ENS_16MemoryPoolHandleE,"aG",@progbits,_ZN4seal9PlaintextC2ENS_16MemoryPoolHandleE,comdat
	.p2align	2
GCC_except_table41:
.Lexception19:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end19-.Lcst_begin19
.Lcst_begin19:
	.uleb128 .Ltmp715-.Lfunc_begin19        # >> Call Site 1 <<
	.uleb128 .Ltmp716-.Ltmp715              #   Call between .Ltmp715 and .Ltmp716
	.uleb128 .Ltmp717-.Lfunc_begin19        #     jumps to .Ltmp717
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp716-.Lfunc_begin19        # >> Call Site 2 <<
	.uleb128 .Lfunc_end41-.Ltmp716          #   Call between .Ltmp716 and .Lfunc_end41
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end19:
	.p2align	2
                                        # -- End function
	.section	.text._ZN4seal16MemoryPoolHandleD2Ev,"axG",@progbits,_ZN4seal16MemoryPoolHandleD2Ev,comdat
	.weak	_ZN4seal16MemoryPoolHandleD2Ev  # -- Begin function _ZN4seal16MemoryPoolHandleD2Ev
	.p2align	4, 0x90
	.type	_ZN4seal16MemoryPoolHandleD2Ev,@function
_ZN4seal16MemoryPoolHandleD2Ev:         # @_ZN4seal16MemoryPoolHandleD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt10shared_ptrIN4seal4util10MemoryPoolEED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end42:
	.size	_ZN4seal16MemoryPoolHandleD2Ev, .Lfunc_end42-_ZN4seal16MemoryPoolHandleD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal11CKKSEncoder6encodeEddRNS_9PlaintextENS_16MemoryPoolHandleE,"axG",@progbits,_ZN4seal11CKKSEncoder6encodeEddRNS_9PlaintextENS_16MemoryPoolHandleE,comdat
	.weak	_ZN4seal11CKKSEncoder6encodeEddRNS_9PlaintextENS_16MemoryPoolHandleE # -- Begin function _ZN4seal11CKKSEncoder6encodeEddRNS_9PlaintextENS_16MemoryPoolHandleE
	.p2align	4, 0x90
	.type	_ZN4seal11CKKSEncoder6encodeEddRNS_9PlaintextENS_16MemoryPoolHandleE,@function
_ZN4seal11CKKSEncoder6encodeEddRNS_9PlaintextENS_16MemoryPoolHandleE: # @_ZN4seal11CKKSEncoder6encodeEddRNS_9PlaintextENS_16MemoryPoolHandleE
.Lfunc_begin20:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception20
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$176, %rsp
	movq	%rdx, -144(%rbp)                # 8-byte Spill
	movq	%rdi, -8(%rbp)
	movsd	%xmm0, -16(%rbp)
	movsd	%xmm1, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -136(%rbp)                # 8-byte Spill
	movsd	-16(%rbp), %xmm0                # xmm0 = mem[0],zero
	movsd	%xmm0, -128(%rbp)               # 8-byte Spill
	addq	$16, %rdi
	callq	_ZNK4seal11SEALContext14first_parms_idEv
	movq	-144(%rbp), %rdi                # 8-byte Reload
	movups	(%rax), %xmm0
	movups	16(%rax), %xmm1
	movaps	%xmm1, -48(%rbp)
	movaps	%xmm0, -64(%rbp)
	movsd	-24(%rbp), %xmm0                # xmm0 = mem[0],zero
	movsd	%xmm0, -120(%rbp)               # 8-byte Spill
	movq	-32(%rbp), %rax
	movq	%rax, -112(%rbp)                # 8-byte Spill
	callq	_ZSt4moveIRN4seal16MemoryPoolHandleEEONSt16remove_referenceIT_E4typeEOS4_
	movq	%rax, %rsi
	leaq	-80(%rbp), %rdi
	movq	%rdi, -104(%rbp)                # 8-byte Spill
	callq	_ZN4seal16MemoryPoolHandleC2EOS0_
	movq	-136(%rbp), %rdi                # 8-byte Reload
	movsd	-128(%rbp), %xmm0               # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movsd	-120(%rbp), %xmm1               # 8-byte Reload
                                        # xmm1 = mem[0],zero
	movq	-112(%rbp), %rsi                # 8-byte Reload
	movq	-104(%rbp), %rdx                # 8-byte Reload
.Ltmp718:
	movaps	-64(%rbp), %xmm2
	movaps	-48(%rbp), %xmm3
	movq	%rsp, %rax
	movups	%xmm3, 16(%rax)
	movups	%xmm2, (%rax)
	callq	_ZN4seal11CKKSEncoder6encodeEdSt5arrayImLm4EEdRNS_9PlaintextENS_16MemoryPoolHandleE
.Ltmp719:
	jmp	.LBB43_1
.LBB43_1:
	leaq	-80(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	addq	$176, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB43_2:
	.cfi_def_cfa %rbp, 16
.Ltmp720:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -88(%rbp)
	movl	%eax, -92(%rbp)
	leaq	-80(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
# %bb.3:
	movq	-88(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end43:
	.size	_ZN4seal11CKKSEncoder6encodeEddRNS_9PlaintextENS_16MemoryPoolHandleE, .Lfunc_end43-_ZN4seal11CKKSEncoder6encodeEddRNS_9PlaintextENS_16MemoryPoolHandleE
	.cfi_endproc
	.section	.gcc_except_table._ZN4seal11CKKSEncoder6encodeEddRNS_9PlaintextENS_16MemoryPoolHandleE,"aG",@progbits,_ZN4seal11CKKSEncoder6encodeEddRNS_9PlaintextENS_16MemoryPoolHandleE,comdat
	.p2align	2
GCC_except_table43:
.Lexception20:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end20-.Lcst_begin20
.Lcst_begin20:
	.uleb128 .Ltmp718-.Lfunc_begin20        # >> Call Site 1 <<
	.uleb128 .Ltmp719-.Ltmp718              #   Call between .Ltmp718 and .Ltmp719
	.uleb128 .Ltmp720-.Lfunc_begin20        #     jumps to .Ltmp720
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp719-.Lfunc_begin20        # >> Call Site 2 <<
	.uleb128 .Lfunc_end43-.Ltmp719          #   Call between .Ltmp719 and .Lfunc_end43
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end20:
	.p2align	2
                                        # -- End function
	.section	.text._Z10print_linei,"axG",@progbits,_Z10print_linei,comdat
	.weak	_Z10print_linei                 # -- Begin function _Z10print_linei
	.p2align	4, 0x90
	.type	_Z10print_linei,@function
_Z10print_linei:                        # @_Z10print_linei
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movl	%edi, -4(%rbp)
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.61(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
	movq	%rax, -16(%rbp)                 # 8-byte Spill
	movl	$3, %edi
	callq	_ZSt4setwi
	movq	-16(%rbp), %rdi                 # 8-byte Reload
	movl	%eax, -8(%rbp)
	movl	-8(%rbp), %esi
	callq	_ZStlsIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_St5_Setw@PLT
	movq	%rax, %rdi
	movl	-4(%rbp), %esi
	callq	_ZNSolsEi@PLT
	movq	%rax, %rdi
	leaq	.L.str.62(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end44:
	.size	_Z10print_linei, .Lfunc_end44-_Z10print_linei
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal11CKKSEncoder6encodeIdvEEvRKSt6vectorIT_SaIS3_EEdRNS_9PlaintextENS_16MemoryPoolHandleE,"axG",@progbits,_ZN4seal11CKKSEncoder6encodeIdvEEvRKSt6vectorIT_SaIS3_EEdRNS_9PlaintextENS_16MemoryPoolHandleE,comdat
	.weak	_ZN4seal11CKKSEncoder6encodeIdvEEvRKSt6vectorIT_SaIS3_EEdRNS_9PlaintextENS_16MemoryPoolHandleE # -- Begin function _ZN4seal11CKKSEncoder6encodeIdvEEvRKSt6vectorIT_SaIS3_EEdRNS_9PlaintextENS_16MemoryPoolHandleE
	.p2align	4, 0x90
	.type	_ZN4seal11CKKSEncoder6encodeIdvEEvRKSt6vectorIT_SaIS3_EEdRNS_9PlaintextENS_16MemoryPoolHandleE,@function
_ZN4seal11CKKSEncoder6encodeIdvEEvRKSt6vectorIT_SaIS3_EEdRNS_9PlaintextENS_16MemoryPoolHandleE: # @_ZN4seal11CKKSEncoder6encodeIdvEEvRKSt6vectorIT_SaIS3_EEdRNS_9PlaintextENS_16MemoryPoolHandleE
.Lfunc_begin21:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception21
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$176, %rsp
	movq	%rcx, -144(%rbp)                # 8-byte Spill
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movsd	%xmm0, -24(%rbp)
	movq	%rdx, -32(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -136(%rbp)                # 8-byte Spill
	movq	-16(%rbp), %rax
	movq	%rax, -128(%rbp)                # 8-byte Spill
	addq	$16, %rdi
	callq	_ZNK4seal11SEALContext14first_parms_idEv
	movq	-144(%rbp), %rdi                # 8-byte Reload
	movups	(%rax), %xmm0
	movups	16(%rax), %xmm1
	movaps	%xmm1, -48(%rbp)
	movaps	%xmm0, -64(%rbp)
	movsd	-24(%rbp), %xmm0                # xmm0 = mem[0],zero
	movsd	%xmm0, -120(%rbp)               # 8-byte Spill
	movq	-32(%rbp), %rax
	movq	%rax, -112(%rbp)                # 8-byte Spill
	callq	_ZSt4moveIRN4seal16MemoryPoolHandleEEONSt16remove_referenceIT_E4typeEOS4_
	movq	%rax, %rsi
	leaq	-80(%rbp), %rdi
	movq	%rdi, -104(%rbp)                # 8-byte Spill
	callq	_ZN4seal16MemoryPoolHandleC2EOS0_
	movq	-136(%rbp), %rdi                # 8-byte Reload
	movq	-128(%rbp), %rsi                # 8-byte Reload
	movsd	-120(%rbp), %xmm0               # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movq	-112(%rbp), %rdx                # 8-byte Reload
	movq	-104(%rbp), %rcx                # 8-byte Reload
.Ltmp721:
	movaps	-64(%rbp), %xmm1
	movaps	-48(%rbp), %xmm2
	movq	%rsp, %rax
	movups	%xmm2, 16(%rax)
	movups	%xmm1, (%rax)
	callq	_ZN4seal11CKKSEncoder6encodeIdvEEvRKSt6vectorIT_SaIS3_EESt5arrayImLm4EEdRNS_9PlaintextENS_16MemoryPoolHandleE
.Ltmp722:
	jmp	.LBB45_1
.LBB45_1:
	leaq	-80(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	addq	$176, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB45_2:
	.cfi_def_cfa %rbp, 16
.Ltmp723:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -88(%rbp)
	movl	%eax, -92(%rbp)
	leaq	-80(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
# %bb.3:
	movq	-88(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end45:
	.size	_ZN4seal11CKKSEncoder6encodeIdvEEvRKSt6vectorIT_SaIS3_EEdRNS_9PlaintextENS_16MemoryPoolHandleE, .Lfunc_end45-_ZN4seal11CKKSEncoder6encodeIdvEEvRKSt6vectorIT_SaIS3_EEdRNS_9PlaintextENS_16MemoryPoolHandleE
	.cfi_endproc
	.section	.gcc_except_table._ZN4seal11CKKSEncoder6encodeIdvEEvRKSt6vectorIT_SaIS3_EEdRNS_9PlaintextENS_16MemoryPoolHandleE,"aG",@progbits,_ZN4seal11CKKSEncoder6encodeIdvEEvRKSt6vectorIT_SaIS3_EEdRNS_9PlaintextENS_16MemoryPoolHandleE,comdat
	.p2align	2
GCC_except_table45:
.Lexception21:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end21-.Lcst_begin21
.Lcst_begin21:
	.uleb128 .Ltmp721-.Lfunc_begin21        # >> Call Site 1 <<
	.uleb128 .Ltmp722-.Ltmp721              #   Call between .Ltmp721 and .Ltmp722
	.uleb128 .Ltmp723-.Lfunc_begin21        #     jumps to .Ltmp723
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp722-.Lfunc_begin21        # >> Call Site 2 <<
	.uleb128 .Lfunc_end45-.Ltmp722          #   Call between .Ltmp722 and .Lfunc_end45
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end21:
	.p2align	2
                                        # -- End function
	.section	.text._ZN4seal10CiphertextC2ENS_16MemoryPoolHandleE,"axG",@progbits,_ZN4seal10CiphertextC2ENS_16MemoryPoolHandleE,comdat
	.weak	_ZN4seal10CiphertextC2ENS_16MemoryPoolHandleE # -- Begin function _ZN4seal10CiphertextC2ENS_16MemoryPoolHandleE
	.p2align	4, 0x90
	.type	_ZN4seal10CiphertextC2ENS_16MemoryPoolHandleE,@function
_ZN4seal10CiphertextC2ENS_16MemoryPoolHandleE: # @_ZN4seal10CiphertextC2ENS_16MemoryPoolHandleE
.Lfunc_begin22:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception22
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%rsi, -72(%rbp)                 # 8-byte Spill
	movq	%rdi, %rax
	movq	-72(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -64(%rbp)                 # 8-byte Spill
	movq	_ZN4seal13parms_id_zeroE@GOTPCREL(%rip), %rcx
	movups	(%rcx), %xmm0
	movups	16(%rcx), %xmm1
	movups	%xmm1, 16(%rax)
	movups	%xmm0, (%rax)
	movb	$0, 32(%rax)
	movq	$0, 40(%rax)
	movq	$0, 48(%rax)
	movq	$0, 56(%rax)
	movabsq	$4607182418800017408, %rcx      # imm = 0x3FF0000000000000
	movq	%rcx, 64(%rax)
	addq	$72, %rax
	movq	%rax, -56(%rbp)                 # 8-byte Spill
	callq	_ZSt4moveIRN4seal16MemoryPoolHandleEEONSt16remove_referenceIT_E4typeEOS4_
	movq	%rax, %rsi
	leaq	-24(%rbp), %rdi
	movq	%rdi, -48(%rbp)                 # 8-byte Spill
	callq	_ZN4seal16MemoryPoolHandleC2EOS0_
	movq	-56(%rbp), %rdi                 # 8-byte Reload
	movq	-48(%rbp), %rsi                 # 8-byte Reload
.Ltmp724:
	callq	_ZN4seal8DynArrayImEC2ENS_16MemoryPoolHandleE
.Ltmp725:
	jmp	.LBB46_1
.LBB46_1:
	leaq	-24(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	addq	$80, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB46_2:
	.cfi_def_cfa %rbp, 16
.Ltmp726:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -32(%rbp)
	movl	%eax, -36(%rbp)
	leaq	-24(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
# %bb.3:
	movq	-32(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end46:
	.size	_ZN4seal10CiphertextC2ENS_16MemoryPoolHandleE, .Lfunc_end46-_ZN4seal10CiphertextC2ENS_16MemoryPoolHandleE
	.cfi_endproc
	.section	.gcc_except_table._ZN4seal10CiphertextC2ENS_16MemoryPoolHandleE,"aG",@progbits,_ZN4seal10CiphertextC2ENS_16MemoryPoolHandleE,comdat
	.p2align	2
GCC_except_table46:
.Lexception22:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end22-.Lcst_begin22
.Lcst_begin22:
	.uleb128 .Ltmp724-.Lfunc_begin22        # >> Call Site 1 <<
	.uleb128 .Ltmp725-.Ltmp724              #   Call between .Ltmp724 and .Ltmp725
	.uleb128 .Ltmp726-.Lfunc_begin22        #     jumps to .Ltmp726
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp725-.Lfunc_begin22        # >> Call Site 2 <<
	.uleb128 .Lfunc_end46-.Ltmp725          #   Call between .Ltmp725 and .Lfunc_end46
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end22:
	.p2align	2
                                        # -- End function
	.section	.text._ZNK4seal9Encryptor7encryptERKNS_9PlaintextERNS_10CiphertextENS_16MemoryPoolHandleE,"axG",@progbits,_ZNK4seal9Encryptor7encryptERKNS_9PlaintextERNS_10CiphertextENS_16MemoryPoolHandleE,comdat
	.weak	_ZNK4seal9Encryptor7encryptERKNS_9PlaintextERNS_10CiphertextENS_16MemoryPoolHandleE # -- Begin function _ZNK4seal9Encryptor7encryptERKNS_9PlaintextERNS_10CiphertextENS_16MemoryPoolHandleE
	.p2align	4, 0x90
	.type	_ZNK4seal9Encryptor7encryptERKNS_9PlaintextERNS_10CiphertextENS_16MemoryPoolHandleE,@function
_ZNK4seal9Encryptor7encryptERKNS_9PlaintextERNS_10CiphertextENS_16MemoryPoolHandleE: # @_ZNK4seal9Encryptor7encryptERKNS_9PlaintextERNS_10CiphertextENS_16MemoryPoolHandleE
.Lfunc_begin23:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception23
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%rcx, -96(%rbp)                 # 8-byte Spill
	movq	%rsi, %rax
	movq	-96(%rbp), %rsi                 # 8-byte Reload
	movq	%rdi, -8(%rbp)
	movq	%rax, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -88(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rax
	movq	%rax, -80(%rbp)                 # 8-byte Spill
	movq	-24(%rbp), %rax
	movq	%rax, -72(%rbp)                 # 8-byte Spill
	leaq	-40(%rbp), %rdi
	movq	%rdi, -64(%rbp)                 # 8-byte Spill
	callq	_ZN4seal16MemoryPoolHandleC2ERKS0_
	movq	-88(%rbp), %rdi                 # 8-byte Reload
	movq	-80(%rbp), %rsi                 # 8-byte Reload
	movq	-72(%rbp), %r8                  # 8-byte Reload
	movq	-64(%rbp), %r9                  # 8-byte Reload
.Ltmp727:
	movl	$1, %edx
	xorl	%ecx, %ecx
	callq	_ZNK4seal9Encryptor16encrypt_internalERKNS_9PlaintextEbbRNS_10CiphertextENS_16MemoryPoolHandleE@PLT
.Ltmp728:
	jmp	.LBB47_1
.LBB47_1:
	leaq	-40(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	addq	$96, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB47_2:
	.cfi_def_cfa %rbp, 16
.Ltmp729:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	leaq	-40(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
# %bb.3:
	movq	-48(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end47:
	.size	_ZNK4seal9Encryptor7encryptERKNS_9PlaintextERNS_10CiphertextENS_16MemoryPoolHandleE, .Lfunc_end47-_ZNK4seal9Encryptor7encryptERKNS_9PlaintextERNS_10CiphertextENS_16MemoryPoolHandleE
	.cfi_endproc
	.section	.gcc_except_table._ZNK4seal9Encryptor7encryptERKNS_9PlaintextERNS_10CiphertextENS_16MemoryPoolHandleE,"aG",@progbits,_ZNK4seal9Encryptor7encryptERKNS_9PlaintextERNS_10CiphertextENS_16MemoryPoolHandleE,comdat
	.p2align	2
GCC_except_table47:
.Lexception23:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end23-.Lcst_begin23
.Lcst_begin23:
	.uleb128 .Ltmp727-.Lfunc_begin23        # >> Call Site 1 <<
	.uleb128 .Ltmp728-.Ltmp727              #   Call between .Ltmp727 and .Ltmp728
	.uleb128 .Ltmp729-.Lfunc_begin23        #     jumps to .Ltmp729
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp728-.Lfunc_begin23        # >> Call Site 2 <<
	.uleb128 .Lfunc_end47-.Ltmp728          #   Call between .Ltmp728 and .Lfunc_end47
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end23:
	.p2align	2
                                        # -- End function
	.section	.text._ZN4seal9Evaluator6squareERKNS_10CiphertextERS1_NS_16MemoryPoolHandleE,"axG",@progbits,_ZN4seal9Evaluator6squareERKNS_10CiphertextERS1_NS_16MemoryPoolHandleE,comdat
	.weak	_ZN4seal9Evaluator6squareERKNS_10CiphertextERS1_NS_16MemoryPoolHandleE # -- Begin function _ZN4seal9Evaluator6squareERKNS_10CiphertextERS1_NS_16MemoryPoolHandleE
	.p2align	4, 0x90
	.type	_ZN4seal9Evaluator6squareERKNS_10CiphertextERS1_NS_16MemoryPoolHandleE,@function
_ZN4seal9Evaluator6squareERKNS_10CiphertextERS1_NS_16MemoryPoolHandleE: # @_ZN4seal9Evaluator6squareERKNS_10CiphertextERS1_NS_16MemoryPoolHandleE
.Lfunc_begin24:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception24
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%rcx, -88(%rbp)                 # 8-byte Spill
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -80(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdi
	callq	_ZN4seal10CiphertextaSERKS0_@PLT
	movq	-88(%rbp), %rdi                 # 8-byte Reload
	movq	-24(%rbp), %rax
	movq	%rax, -72(%rbp)                 # 8-byte Spill
	callq	_ZSt4moveIRN4seal16MemoryPoolHandleEEONSt16remove_referenceIT_E4typeEOS4_
	movq	%rax, %rsi
	leaq	-40(%rbp), %rdi
	movq	%rdi, -64(%rbp)                 # 8-byte Spill
	callq	_ZN4seal16MemoryPoolHandleC2EOS0_
	movq	-80(%rbp), %rdi                 # 8-byte Reload
	movq	-72(%rbp), %rsi                 # 8-byte Reload
	movq	-64(%rbp), %rdx                 # 8-byte Reload
.Ltmp730:
	callq	_ZN4seal9Evaluator14square_inplaceERNS_10CiphertextENS_16MemoryPoolHandleE@PLT
.Ltmp731:
	jmp	.LBB48_1
.LBB48_1:
	leaq	-40(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	addq	$96, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB48_2:
	.cfi_def_cfa %rbp, 16
.Ltmp732:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	leaq	-40(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
# %bb.3:
	movq	-48(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end48:
	.size	_ZN4seal9Evaluator6squareERKNS_10CiphertextERS1_NS_16MemoryPoolHandleE, .Lfunc_end48-_ZN4seal9Evaluator6squareERKNS_10CiphertextERS1_NS_16MemoryPoolHandleE
	.cfi_endproc
	.section	.gcc_except_table._ZN4seal9Evaluator6squareERKNS_10CiphertextERS1_NS_16MemoryPoolHandleE,"aG",@progbits,_ZN4seal9Evaluator6squareERKNS_10CiphertextERS1_NS_16MemoryPoolHandleE,comdat
	.p2align	2
GCC_except_table48:
.Lexception24:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end24-.Lcst_begin24
.Lcst_begin24:
	.uleb128 .Lfunc_begin24-.Lfunc_begin24  # >> Call Site 1 <<
	.uleb128 .Ltmp730-.Lfunc_begin24        #   Call between .Lfunc_begin24 and .Ltmp730
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp730-.Lfunc_begin24        # >> Call Site 2 <<
	.uleb128 .Ltmp731-.Ltmp730              #   Call between .Ltmp730 and .Ltmp731
	.uleb128 .Ltmp732-.Lfunc_begin24        #     jumps to .Ltmp732
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp731-.Lfunc_begin24        # >> Call Site 3 <<
	.uleb128 .Lfunc_end48-.Ltmp731          #   Call between .Ltmp731 and .Lfunc_end48
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end24:
	.p2align	2
                                        # -- End function
	.section	.text._ZN4seal9Evaluator19relinearize_inplaceERNS_10CiphertextERKNS_9RelinKeysEddiNS_16MemoryPoolHandleE,"axG",@progbits,_ZN4seal9Evaluator19relinearize_inplaceERNS_10CiphertextERKNS_9RelinKeysEddiNS_16MemoryPoolHandleE,comdat
	.weak	_ZN4seal9Evaluator19relinearize_inplaceERNS_10CiphertextERKNS_9RelinKeysEddiNS_16MemoryPoolHandleE # -- Begin function _ZN4seal9Evaluator19relinearize_inplaceERNS_10CiphertextERKNS_9RelinKeysEddiNS_16MemoryPoolHandleE
	.p2align	4, 0x90
	.type	_ZN4seal9Evaluator19relinearize_inplaceERNS_10CiphertextERKNS_9RelinKeysEddiNS_16MemoryPoolHandleE,@function
_ZN4seal9Evaluator19relinearize_inplaceERNS_10CiphertextERKNS_9RelinKeysEddiNS_16MemoryPoolHandleE: # @_ZN4seal9Evaluator19relinearize_inplaceERNS_10CiphertextERKNS_9RelinKeysEddiNS_16MemoryPoolHandleE
.Lfunc_begin25:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception25
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$144, %rsp
	movq	%r8, -144(%rbp)                 # 8-byte Spill
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movsd	%xmm0, -32(%rbp)
	movsd	%xmm1, -40(%rbp)
	movl	%ecx, -44(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -136(%rbp)                # 8-byte Spill
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.63(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
	movq	%rax, %rdi
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
	movq	-144(%rbp), %rdi                # 8-byte Reload
	movq	-16(%rbp), %rax
	movq	%rax, -128(%rbp)                # 8-byte Spill
	movq	-24(%rbp), %rax
	movq	%rax, -120(%rbp)                # 8-byte Spill
	movsd	-32(%rbp), %xmm0                # xmm0 = mem[0],zero
	movsd	%xmm0, -112(%rbp)               # 8-byte Spill
	movsd	-40(%rbp), %xmm0                # xmm0 = mem[0],zero
	movsd	%xmm0, -104(%rbp)               # 8-byte Spill
	movl	-44(%rbp), %eax
	movl	%eax, -92(%rbp)                 # 4-byte Spill
	callq	_ZSt4moveIRN4seal16MemoryPoolHandleEEONSt16remove_referenceIT_E4typeEOS4_
	movq	%rax, %rsi
	leaq	-64(%rbp), %rdi
	movq	%rdi, -88(%rbp)                 # 8-byte Spill
	callq	_ZN4seal16MemoryPoolHandleC2EOS0_
	movq	-136(%rbp), %rdi                # 8-byte Reload
	movq	-128(%rbp), %rsi                # 8-byte Reload
	movq	-120(%rbp), %rdx                # 8-byte Reload
	movsd	-112(%rbp), %xmm0               # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movsd	-104(%rbp), %xmm1               # 8-byte Reload
                                        # xmm1 = mem[0],zero
	movl	-92(%rbp), %r8d                 # 4-byte Reload
	movq	-88(%rbp), %r9                  # 8-byte Reload
.Ltmp733:
	movl	$2, %ecx
	callq	_ZN4seal9Evaluator20relinearize_internalERNS_10CiphertextERKNS_9RelinKeysEmddiNS_16MemoryPoolHandleE@PLT
.Ltmp734:
	jmp	.LBB49_1
.LBB49_1:
	leaq	-64(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	addq	$144, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB49_2:
	.cfi_def_cfa %rbp, 16
.Ltmp735:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -72(%rbp)
	movl	%eax, -76(%rbp)
	leaq	-64(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
# %bb.3:
	movq	-72(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end49:
	.size	_ZN4seal9Evaluator19relinearize_inplaceERNS_10CiphertextERKNS_9RelinKeysEddiNS_16MemoryPoolHandleE, .Lfunc_end49-_ZN4seal9Evaluator19relinearize_inplaceERNS_10CiphertextERKNS_9RelinKeysEddiNS_16MemoryPoolHandleE
	.cfi_endproc
	.section	.gcc_except_table._ZN4seal9Evaluator19relinearize_inplaceERNS_10CiphertextERKNS_9RelinKeysEddiNS_16MemoryPoolHandleE,"aG",@progbits,_ZN4seal9Evaluator19relinearize_inplaceERNS_10CiphertextERKNS_9RelinKeysEddiNS_16MemoryPoolHandleE,comdat
	.p2align	2
GCC_except_table49:
.Lexception25:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end25-.Lcst_begin25
.Lcst_begin25:
	.uleb128 .Lfunc_begin25-.Lfunc_begin25  # >> Call Site 1 <<
	.uleb128 .Ltmp733-.Lfunc_begin25        #   Call between .Lfunc_begin25 and .Ltmp733
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp733-.Lfunc_begin25        # >> Call Site 2 <<
	.uleb128 .Ltmp734-.Ltmp733              #   Call between .Ltmp733 and .Ltmp734
	.uleb128 .Ltmp735-.Lfunc_begin25        #     jumps to .Ltmp735
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp734-.Lfunc_begin25        # >> Call Site 3 <<
	.uleb128 .Lfunc_end49-.Ltmp734          #   Call between .Ltmp734 and .Lfunc_end49
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end25:
	.p2align	2
                                        # -- End function
	.section	.text._ZN4seal10Ciphertext5scaleEv,"axG",@progbits,_ZN4seal10Ciphertext5scaleEv,comdat
	.weak	_ZN4seal10Ciphertext5scaleEv    # -- Begin function _ZN4seal10Ciphertext5scaleEv
	.p2align	4, 0x90
	.type	_ZN4seal10Ciphertext5scaleEv,@function
_ZN4seal10Ciphertext5scaleEv:           # @_ZN4seal10Ciphertext5scaleEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	addq	$64, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end50:
	.size	_ZN4seal10Ciphertext5scaleEv, .Lfunc_end50-_ZN4seal10Ciphertext5scaleEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal9Evaluator23rescale_to_next_inplaceERNS_10CiphertextEddiNS_16MemoryPoolHandleE,"axG",@progbits,_ZN4seal9Evaluator23rescale_to_next_inplaceERNS_10CiphertextEddiNS_16MemoryPoolHandleE,comdat
	.weak	_ZN4seal9Evaluator23rescale_to_next_inplaceERNS_10CiphertextEddiNS_16MemoryPoolHandleE # -- Begin function _ZN4seal9Evaluator23rescale_to_next_inplaceERNS_10CiphertextEddiNS_16MemoryPoolHandleE
	.p2align	4, 0x90
	.type	_ZN4seal9Evaluator23rescale_to_next_inplaceERNS_10CiphertextEddiNS_16MemoryPoolHandleE,@function
_ZN4seal9Evaluator23rescale_to_next_inplaceERNS_10CiphertextEddiNS_16MemoryPoolHandleE: # @_ZN4seal9Evaluator23rescale_to_next_inplaceERNS_10CiphertextEddiNS_16MemoryPoolHandleE
.Lfunc_begin26:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception26
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$128, %rsp
	movq	%rcx, -128(%rbp)                # 8-byte Spill
	movq	%rdi, %rax
	movq	-128(%rbp), %rdi                # 8-byte Reload
	movq	%rax, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movsd	%xmm0, -24(%rbp)
	movsd	%xmm1, -32(%rbp)
	movl	%edx, -36(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -120(%rbp)                # 8-byte Spill
	movq	-16(%rbp), %rax
	movq	%rax, -112(%rbp)                # 8-byte Spill
	movsd	-24(%rbp), %xmm0                # xmm0 = mem[0],zero
	movsd	%xmm0, -104(%rbp)               # 8-byte Spill
	movsd	-32(%rbp), %xmm0                # xmm0 = mem[0],zero
	movsd	%xmm0, -96(%rbp)                # 8-byte Spill
	movl	-36(%rbp), %eax
	movl	%eax, -84(%rbp)                 # 4-byte Spill
	callq	_ZSt4moveIRN4seal16MemoryPoolHandleEEONSt16remove_referenceIT_E4typeEOS4_
	movq	%rax, %rsi
	leaq	-56(%rbp), %rdi
	movq	%rdi, -80(%rbp)                 # 8-byte Spill
	callq	_ZN4seal16MemoryPoolHandleC2EOS0_
	movq	-120(%rbp), %rdi                # 8-byte Reload
	movq	-112(%rbp), %rdx                # 8-byte Reload
	movsd	-104(%rbp), %xmm0               # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movsd	-96(%rbp), %xmm1                # 8-byte Reload
                                        # xmm1 = mem[0],zero
	movl	-84(%rbp), %ecx                 # 4-byte Reload
	movq	-80(%rbp), %r8                  # 8-byte Reload
.Ltmp736:
	movq	%rdx, %rsi
	callq	_ZN4seal9Evaluator15rescale_to_nextERKNS_10CiphertextERS1_ddiNS_16MemoryPoolHandleE@PLT
.Ltmp737:
	jmp	.LBB51_1
.LBB51_1:
	leaq	-56(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	addq	$128, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB51_2:
	.cfi_def_cfa %rbp, 16
.Ltmp738:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -64(%rbp)
	movl	%eax, -68(%rbp)
	leaq	-56(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
# %bb.3:
	movq	-64(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end51:
	.size	_ZN4seal9Evaluator23rescale_to_next_inplaceERNS_10CiphertextEddiNS_16MemoryPoolHandleE, .Lfunc_end51-_ZN4seal9Evaluator23rescale_to_next_inplaceERNS_10CiphertextEddiNS_16MemoryPoolHandleE
	.cfi_endproc
	.section	.gcc_except_table._ZN4seal9Evaluator23rescale_to_next_inplaceERNS_10CiphertextEddiNS_16MemoryPoolHandleE,"aG",@progbits,_ZN4seal9Evaluator23rescale_to_next_inplaceERNS_10CiphertextEddiNS_16MemoryPoolHandleE,comdat
	.p2align	2
GCC_except_table51:
.Lexception26:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end26-.Lcst_begin26
.Lcst_begin26:
	.uleb128 .Ltmp736-.Lfunc_begin26        # >> Call Site 1 <<
	.uleb128 .Ltmp737-.Ltmp736              #   Call between .Ltmp736 and .Ltmp737
	.uleb128 .Ltmp738-.Lfunc_begin26        #     jumps to .Ltmp738
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp737-.Lfunc_begin26        # >> Call Site 2 <<
	.uleb128 .Lfunc_end51-.Ltmp737          #   Call between .Ltmp737 and .Lfunc_end51
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end26:
	.p2align	2
                                        # -- End function
	.section	.text._ZN4seal9Evaluator14multiply_plainERKNS_10CiphertextERKNS_9PlaintextERS1_NS_16MemoryPoolHandleE,"axG",@progbits,_ZN4seal9Evaluator14multiply_plainERKNS_10CiphertextERKNS_9PlaintextERS1_NS_16MemoryPoolHandleE,comdat
	.weak	_ZN4seal9Evaluator14multiply_plainERKNS_10CiphertextERKNS_9PlaintextERS1_NS_16MemoryPoolHandleE # -- Begin function _ZN4seal9Evaluator14multiply_plainERKNS_10CiphertextERKNS_9PlaintextERS1_NS_16MemoryPoolHandleE
	.p2align	4, 0x90
	.type	_ZN4seal9Evaluator14multiply_plainERKNS_10CiphertextERKNS_9PlaintextERS1_NS_16MemoryPoolHandleE,@function
_ZN4seal9Evaluator14multiply_plainERKNS_10CiphertextERKNS_9PlaintextERS1_NS_16MemoryPoolHandleE: # @_ZN4seal9Evaluator14multiply_plainERKNS_10CiphertextERKNS_9PlaintextERS1_NS_16MemoryPoolHandleE
.Lfunc_begin27:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception27
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$112, %rsp
	movq	%r8, -104(%rbp)                 # 8-byte Spill
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -96(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rsi
	movq	-32(%rbp), %rdi
	callq	_ZN4seal10CiphertextaSERKS0_@PLT
	movq	-104(%rbp), %rdi                # 8-byte Reload
	movq	-32(%rbp), %rax
	movq	%rax, -88(%rbp)                 # 8-byte Spill
	movq	-24(%rbp), %rax
	movq	%rax, -80(%rbp)                 # 8-byte Spill
	callq	_ZSt4moveIRN4seal16MemoryPoolHandleEEONSt16remove_referenceIT_E4typeEOS4_
	movq	%rax, %rsi
	leaq	-48(%rbp), %rdi
	movq	%rdi, -72(%rbp)                 # 8-byte Spill
	callq	_ZN4seal16MemoryPoolHandleC2EOS0_
	movq	-96(%rbp), %rdi                 # 8-byte Reload
	movq	-88(%rbp), %rsi                 # 8-byte Reload
	movq	-80(%rbp), %rdx                 # 8-byte Reload
	movq	-72(%rbp), %rcx                 # 8-byte Reload
.Ltmp739:
	callq	_ZN4seal9Evaluator22multiply_plain_inplaceERNS_10CiphertextERKNS_9PlaintextENS_16MemoryPoolHandleE@PLT
.Ltmp740:
	jmp	.LBB52_1
.LBB52_1:
	leaq	-48(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	addq	$112, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB52_2:
	.cfi_def_cfa %rbp, 16
.Ltmp741:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -56(%rbp)
	movl	%eax, -60(%rbp)
	leaq	-48(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
# %bb.3:
	movq	-56(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end52:
	.size	_ZN4seal9Evaluator14multiply_plainERKNS_10CiphertextERKNS_9PlaintextERS1_NS_16MemoryPoolHandleE, .Lfunc_end52-_ZN4seal9Evaluator14multiply_plainERKNS_10CiphertextERKNS_9PlaintextERS1_NS_16MemoryPoolHandleE
	.cfi_endproc
	.section	.gcc_except_table._ZN4seal9Evaluator14multiply_plainERKNS_10CiphertextERKNS_9PlaintextERS1_NS_16MemoryPoolHandleE,"aG",@progbits,_ZN4seal9Evaluator14multiply_plainERKNS_10CiphertextERKNS_9PlaintextERS1_NS_16MemoryPoolHandleE,comdat
	.p2align	2
GCC_except_table52:
.Lexception27:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end27-.Lcst_begin27
.Lcst_begin27:
	.uleb128 .Lfunc_begin27-.Lfunc_begin27  # >> Call Site 1 <<
	.uleb128 .Ltmp739-.Lfunc_begin27        #   Call between .Lfunc_begin27 and .Ltmp739
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp739-.Lfunc_begin27        # >> Call Site 2 <<
	.uleb128 .Ltmp740-.Ltmp739              #   Call between .Ltmp739 and .Ltmp740
	.uleb128 .Ltmp741-.Lfunc_begin27        #     jumps to .Ltmp741
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp740-.Lfunc_begin27        # >> Call Site 3 <<
	.uleb128 .Lfunc_end52-.Ltmp740          #   Call between .Ltmp740 and .Lfunc_end52
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end27:
	.p2align	2
                                        # -- End function
	.section	.text._ZNK4seal10Ciphertext9dyn_arrayEv,"axG",@progbits,_ZNK4seal10Ciphertext9dyn_arrayEv,comdat
	.weak	_ZNK4seal10Ciphertext9dyn_arrayEv # -- Begin function _ZNK4seal10Ciphertext9dyn_arrayEv
	.p2align	4, 0x90
	.type	_ZNK4seal10Ciphertext9dyn_arrayEv,@function
_ZNK4seal10Ciphertext9dyn_arrayEv:      # @_ZNK4seal10Ciphertext9dyn_arrayEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	addq	$72, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end53:
	.size	_ZNK4seal10Ciphertext9dyn_arrayEv, .Lfunc_end53-_ZNK4seal10Ciphertext9dyn_arrayEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK4seal8DynArrayImE4sizeEv,"axG",@progbits,_ZNK4seal8DynArrayImE4sizeEv,comdat
	.weak	_ZNK4seal8DynArrayImE4sizeEv    # -- Begin function _ZNK4seal8DynArrayImE4sizeEv
	.p2align	4, 0x90
	.type	_ZNK4seal8DynArrayImE4sizeEv,@function
_ZNK4seal8DynArrayImE4sizeEv:           # @_ZNK4seal8DynArrayImE4sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	24(%rax), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end54:
	.size	_ZNK4seal8DynArrayImE4sizeEv, .Lfunc_end54-_ZNK4seal8DynArrayImE4sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal10Ciphertext4dataEv,"axG",@progbits,_ZN4seal10Ciphertext4dataEv,comdat
	.weak	_ZN4seal10Ciphertext4dataEv     # -- Begin function _ZN4seal10Ciphertext4dataEv
	.p2align	4, 0x90
	.type	_ZN4seal10Ciphertext4dataEv,@function
_ZN4seal10Ciphertext4dataEv:            # @_ZN4seal10Ciphertext4dataEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	addq	$72, %rdi
	callq	_ZN4seal8DynArrayImE5beginEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end55:
	.size	_ZN4seal10Ciphertext4dataEv, .Lfunc_end55-_ZN4seal10Ciphertext4dataEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK4seal11SEALContext16get_context_dataESt5arrayImLm4EE,"axG",@progbits,_ZNK4seal11SEALContext16get_context_dataESt5arrayImLm4EE,comdat
	.weak	_ZNK4seal11SEALContext16get_context_dataESt5arrayImLm4EE # -- Begin function _ZNK4seal11SEALContext16get_context_dataESt5arrayImLm4EE
	.p2align	4, 0x90
	.type	_ZNK4seal11SEALContext16get_context_dataESt5arrayImLm4EE,@function
_ZNK4seal11SEALContext16get_context_dataESt5arrayImLm4EE: # @_ZNK4seal11SEALContext16get_context_dataESt5arrayImLm4EE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%rsi, %rax
	movq	%rdi, -88(%rbp)                 # 8-byte Spill
	movq	%rdi, %rcx
	movq	%rcx, -80(%rbp)                 # 8-byte Spill
	leaq	16(%rbp), %rsi
	movq	%rdi, -8(%rbp)
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rdi
	movq	%rdi, -72(%rbp)                 # 8-byte Spill
	addq	$112, %rdi
	callq	_ZNKSt13unordered_mapISt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S7_EEE4findERSD_
	movq	-72(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, -24(%rbp)
	leaq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)                 # 8-byte Spill
	addq	$112, %rdi
	callq	_ZNKSt13unordered_mapISt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S7_EEE3endEv
	movq	-64(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, -32(%rbp)
	leaq	-32(%rbp), %rsi
	callq	_ZNSt8__detailneERKNS_19_Node_iterator_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEESE_
	movb	$0, -49(%rbp)
	testb	$1, %al
	jne	.LBB56_1
	jmp	.LBB56_2
.LBB56_1:
	leaq	-24(%rbp), %rdi
	callq	_ZNKSt8__detail20_Node_const_iteratorISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb0ELb1EEptEv
	movq	-88(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rsi
	addq	$32, %rsi
	callq	_ZNSt10shared_ptrIKN4seal11SEALContext11ContextDataEEC2ERKS4_
	jmp	.LBB56_3
.LBB56_2:
	leaq	-48(%rbp), %rdi
	xorl	%eax, %eax
	movl	%eax, %esi
	callq	_ZNSt10shared_ptrIN4seal11SEALContext11ContextDataEEC2EDn
	movq	-88(%rbp), %rdi                 # 8-byte Reload
	movb	$1, -49(%rbp)
	leaq	-48(%rbp), %rsi
	callq	_ZNSt10shared_ptrIKN4seal11SEALContext11ContextDataEEC2IS2_vEEOS_IT_E
.LBB56_3:
	testb	$1, -49(%rbp)
	jne	.LBB56_4
	jmp	.LBB56_5
.LBB56_4:
	leaq	-48(%rbp), %rdi
	callq	_ZNSt10shared_ptrIN4seal11SEALContext11ContextDataEED2Ev
.LBB56_5:
	movq	-80(%rbp), %rax                 # 8-byte Reload
	addq	$96, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end56:
	.size	_ZNK4seal11SEALContext16get_context_dataESt5arrayImLm4EE, .Lfunc_end56-_ZNK4seal11SEALContext16get_context_dataESt5arrayImLm4EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal10Ciphertext8parms_idEv,"axG",@progbits,_ZN4seal10Ciphertext8parms_idEv,comdat
	.weak	_ZN4seal10Ciphertext8parms_idEv # -- Begin function _ZN4seal10Ciphertext8parms_idEv
	.p2align	4, 0x90
	.type	_ZN4seal10Ciphertext8parms_idEv,@function
_ZN4seal10Ciphertext8parms_idEv:        # @_ZN4seal10Ciphertext8parms_idEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end57:
	.size	_ZN4seal10Ciphertext8parms_idEv, .Lfunc_end57-_ZN4seal10Ciphertext8parms_idEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt19__shared_ptr_accessIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2ELb0ELb0EEptEv,"axG",@progbits,_ZNKSt19__shared_ptr_accessIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2ELb0ELb0EEptEv,comdat
	.weak	_ZNKSt19__shared_ptr_accessIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2ELb0ELb0EEptEv # -- Begin function _ZNKSt19__shared_ptr_accessIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2ELb0ELb0EEptEv
	.p2align	4, 0x90
	.type	_ZNKSt19__shared_ptr_accessIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2ELb0ELb0EEptEv,@function
_ZNKSt19__shared_ptr_accessIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2ELb0ELb0EEptEv: # @_ZNKSt19__shared_ptr_accessIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2ELb0ELb0EEptEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNKSt19__shared_ptr_accessIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2ELb0ELb0EE6_M_getEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end58:
	.size	_ZNKSt19__shared_ptr_accessIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2ELb0ELb0EEptEv, .Lfunc_end58-_ZNKSt19__shared_ptr_accessIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2ELb0ELb0EEptEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK4seal11SEALContext11ContextData11chain_indexEv,"axG",@progbits,_ZNK4seal11SEALContext11ContextData11chain_indexEv,comdat
	.weak	_ZNK4seal11SEALContext11ContextData11chain_indexEv # -- Begin function _ZNK4seal11SEALContext11ContextData11chain_indexEv
	.p2align	4, 0x90
	.type	_ZNK4seal11SEALContext11ContextData11chain_indexEv,@function
_ZNK4seal11SEALContext11ContextData11chain_indexEv: # @_ZNK4seal11SEALContext11ContextData11chain_indexEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	528(%rax), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end59:
	.size	_ZNK4seal11SEALContext11ContextData11chain_indexEv, .Lfunc_end59-_ZNK4seal11SEALContext11ContextData11chain_indexEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt10shared_ptrIKN4seal11SEALContext11ContextDataEED2Ev,"axG",@progbits,_ZNSt10shared_ptrIKN4seal11SEALContext11ContextDataEED2Ev,comdat
	.weak	_ZNSt10shared_ptrIKN4seal11SEALContext11ContextDataEED2Ev # -- Begin function _ZNSt10shared_ptrIKN4seal11SEALContext11ContextDataEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt10shared_ptrIKN4seal11SEALContext11ContextDataEED2Ev,@function
_ZNSt10shared_ptrIKN4seal11SEALContext11ContextDataEED2Ev: # @_ZNSt10shared_ptrIKN4seal11SEALContext11ContextDataEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end60:
	.size	_ZNSt10shared_ptrIKN4seal11SEALContext11ContextDataEED2Ev, .Lfunc_end60-_ZNSt10shared_ptrIKN4seal11SEALContext11ContextDataEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal9Plaintext8parms_idEv,"axG",@progbits,_ZN4seal9Plaintext8parms_idEv,comdat
	.weak	_ZN4seal9Plaintext8parms_idEv   # -- Begin function _ZN4seal9Plaintext8parms_idEv
	.p2align	4, 0x90
	.type	_ZN4seal9Plaintext8parms_idEv,@function
_ZN4seal9Plaintext8parms_idEv:          # @_ZN4seal9Plaintext8parms_idEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end61:
	.size	_ZN4seal9Plaintext8parms_idEv, .Lfunc_end61-_ZN4seal9Plaintext8parms_idEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt5fixedRSt8ios_base,"axG",@progbits,_ZSt5fixedRSt8ios_base,comdat
	.weak	_ZSt5fixedRSt8ios_base          # -- Begin function _ZSt5fixedRSt8ios_base
	.p2align	4, 0x90
	.type	_ZSt5fixedRSt8ios_base,@function
_ZSt5fixedRSt8ios_base:                 # @_ZSt5fixedRSt8ios_base
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movl	$4, %esi
	movl	$260, %edx                      # imm = 0x104
	callq	_ZNSt8ios_base4setfESt13_Ios_FmtflagsS0_
	movq	-8(%rbp), %rax
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end62:
	.size	_ZSt5fixedRSt8ios_base, .Lfunc_end62-_ZSt5fixedRSt8ios_base
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12setprecisioni,"axG",@progbits,_ZSt12setprecisioni,comdat
	.weak	_ZSt12setprecisioni             # -- Begin function _ZSt12setprecisioni
	.p2align	4, 0x90
	.type	_ZSt12setprecisioni,@function
_ZSt12setprecisioni:                    # @_ZSt12setprecisioni
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movl	%edi, -12(%rbp)
	movl	-12(%rbp), %eax
	movl	%eax, -8(%rbp)
	movl	-8(%rbp), %eax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end63:
	.size	_ZSt12setprecisioni, .Lfunc_end63-_ZSt12setprecisioni
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal9Plaintext5scaleEv,"axG",@progbits,_ZN4seal9Plaintext5scaleEv,comdat
	.weak	_ZN4seal9Plaintext5scaleEv      # -- Begin function _ZN4seal9Plaintext5scaleEv
	.p2align	4, 0x90
	.type	_ZN4seal9Plaintext5scaleEv,@function
_ZN4seal9Plaintext5scaleEv:             # @_ZN4seal9Plaintext5scaleEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	addq	$40, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end64:
	.size	_ZN4seal9Plaintext5scaleEv, .Lfunc_end64-_ZN4seal9Plaintext5scaleEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal9Evaluator3addERKNS_10CiphertextES3_RS1_,"axG",@progbits,_ZN4seal9Evaluator3addERKNS_10CiphertextES3_RS1_,comdat
	.weak	_ZN4seal9Evaluator3addERKNS_10CiphertextES3_RS1_ # -- Begin function _ZN4seal9Evaluator3addERKNS_10CiphertextES3_RS1_
	.p2align	4, 0x90
	.type	_ZN4seal9Evaluator3addERKNS_10CiphertextES3_RS1_,@function
_ZN4seal9Evaluator3addERKNS_10CiphertextES3_RS1_: # @_ZN4seal9Evaluator3addERKNS_10CiphertextES3_RS1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -40(%rbp)                 # 8-byte Spill
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	jne	.LBB65_2
# %bb.1:
	movq	-40(%rbp), %rdi                 # 8-byte Reload
	movq	-32(%rbp), %rsi
	movq	-16(%rbp), %rdx
	callq	_ZN4seal9Evaluator11add_inplaceERNS_10CiphertextERKS1_@PLT
	jmp	.LBB65_3
.LBB65_2:
	movq	-16(%rbp), %rsi
	movq	-32(%rbp), %rdi
	callq	_ZN4seal10CiphertextaSERKS0_@PLT
	movq	-40(%rbp), %rdi                 # 8-byte Reload
	movq	-32(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZN4seal9Evaluator11add_inplaceERNS_10CiphertextERKS1_@PLT
.LBB65_3:
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end65:
	.size	_ZN4seal9Evaluator3addERKNS_10CiphertextES3_RS1_, .Lfunc_end65-_ZN4seal9Evaluator3addERKNS_10CiphertextES3_RS1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIdSaIdEE4sizeEv,"axG",@progbits,_ZNKSt6vectorIdSaIdEE4sizeEv,comdat
	.weak	_ZNKSt6vectorIdSaIdEE4sizeEv    # -- Begin function _ZNKSt6vectorIdSaIdEE4sizeEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIdSaIdEE4sizeEv,@function
_ZNKSt6vectorIdSaIdEE4sizeEv:           # @_ZNKSt6vectorIdSaIdEE4sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rcx
	movq	8(%rcx), %rax
	movq	(%rcx), %rcx
	subq	%rcx, %rax
	sarq	$3, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end66:
	.size	_ZNKSt6vectorIdSaIdEE4sizeEv, .Lfunc_end66-_ZNKSt6vectorIdSaIdEE4sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIdSaIdEEixEm,"axG",@progbits,_ZNSt6vectorIdSaIdEEixEm,comdat
	.weak	_ZNSt6vectorIdSaIdEEixEm        # -- Begin function _ZNSt6vectorIdSaIdEEixEm
	.p2align	4, 0x90
	.type	_ZNSt6vectorIdSaIdEEixEm,@function
_ZNSt6vectorIdSaIdEEixEm:               # @_ZNSt6vectorIdSaIdEEixEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	movq	-16(%rbp), %rcx
	shlq	$3, %rcx
	addq	%rcx, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end67:
	.size	_ZNSt6vectorIdSaIdEEixEm, .Lfunc_end67-_ZNSt6vectorIdSaIdEEixEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIdSaIdEE9push_backEOd,"axG",@progbits,_ZNSt6vectorIdSaIdEE9push_backEOd,comdat
	.weak	_ZNSt6vectorIdSaIdEE9push_backEOd # -- Begin function _ZNSt6vectorIdSaIdEE9push_backEOd
	.p2align	4, 0x90
	.type	_ZNSt6vectorIdSaIdEE9push_backEOd,@function
_ZNSt6vectorIdSaIdEE9push_backEOd:      # @_ZNSt6vectorIdSaIdEE9push_backEOd
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -24(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	callq	_ZSt4moveIRdEONSt16remove_referenceIT_E4typeEOS2_
	movq	-24(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNSt6vectorIdSaIdEE12emplace_backIJdEEERdDpOT_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end68:
	.size	_ZNSt6vectorIdSaIdEE9push_backEOd, .Lfunc_end68-_ZNSt6vectorIdSaIdEE9push_backEOd
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal11CKKSEncoder6decodeIdvEEvRKNS_9PlaintextERSt6vectorIT_SaIS6_EENS_16MemoryPoolHandleE,"axG",@progbits,_ZN4seal11CKKSEncoder6decodeIdvEEvRKNS_9PlaintextERSt6vectorIT_SaIS6_EENS_16MemoryPoolHandleE,comdat
	.weak	_ZN4seal11CKKSEncoder6decodeIdvEEvRKNS_9PlaintextERSt6vectorIT_SaIS6_EENS_16MemoryPoolHandleE # -- Begin function _ZN4seal11CKKSEncoder6decodeIdvEEvRKNS_9PlaintextERSt6vectorIT_SaIS6_EENS_16MemoryPoolHandleE
	.p2align	4, 0x90
	.type	_ZN4seal11CKKSEncoder6decodeIdvEEvRKNS_9PlaintextERSt6vectorIT_SaIS6_EENS_16MemoryPoolHandleE,@function
_ZN4seal11CKKSEncoder6decodeIdvEEvRKNS_9PlaintextERSt6vectorIT_SaIS6_EENS_16MemoryPoolHandleE: # @_ZN4seal11CKKSEncoder6decodeIdvEEvRKNS_9PlaintextERSt6vectorIT_SaIS6_EENS_16MemoryPoolHandleE
.Lfunc_begin28:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception28
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%rcx, -96(%rbp)                 # 8-byte Spill
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -88(%rbp)                 # 8-byte Spill
	movq	-24(%rbp), %rdi
	movq	192(%rax), %rsi
	callq	_ZNSt6vectorIdSaIdEE6resizeEm
	movq	-16(%rbp), %rax
	movq	%rax, -80(%rbp)                 # 8-byte Spill
	movq	-24(%rbp), %rdi
	callq	_ZNSt6vectorIdSaIdEE4dataEv
	movq	-96(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, -72(%rbp)                 # 8-byte Spill
	callq	_ZSt4moveIRN4seal16MemoryPoolHandleEEONSt16remove_referenceIT_E4typeEOS4_
	movq	%rax, %rsi
	leaq	-40(%rbp), %rdi
	movq	%rdi, -64(%rbp)                 # 8-byte Spill
	callq	_ZN4seal16MemoryPoolHandleC2EOS0_
	movq	-88(%rbp), %rdi                 # 8-byte Reload
	movq	-80(%rbp), %rsi                 # 8-byte Reload
	movq	-72(%rbp), %rdx                 # 8-byte Reload
	movq	-64(%rbp), %rcx                 # 8-byte Reload
.Ltmp742:
	callq	_ZN4seal11CKKSEncoder15decode_internalIdvEEvRKNS_9PlaintextEPT_NS_16MemoryPoolHandleE
.Ltmp743:
	jmp	.LBB69_1
.LBB69_1:
	leaq	-40(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	addq	$96, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB69_2:
	.cfi_def_cfa %rbp, 16
.Ltmp744:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	leaq	-40(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
# %bb.3:
	movq	-48(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end69:
	.size	_ZN4seal11CKKSEncoder6decodeIdvEEvRKNS_9PlaintextERSt6vectorIT_SaIS6_EENS_16MemoryPoolHandleE, .Lfunc_end69-_ZN4seal11CKKSEncoder6decodeIdvEEvRKNS_9PlaintextERSt6vectorIT_SaIS6_EENS_16MemoryPoolHandleE
	.cfi_endproc
	.section	.gcc_except_table._ZN4seal11CKKSEncoder6decodeIdvEEvRKNS_9PlaintextERSt6vectorIT_SaIS6_EENS_16MemoryPoolHandleE,"aG",@progbits,_ZN4seal11CKKSEncoder6decodeIdvEEvRKNS_9PlaintextERSt6vectorIT_SaIS6_EENS_16MemoryPoolHandleE,comdat
	.p2align	2
GCC_except_table69:
.Lexception28:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end28-.Lcst_begin28
.Lcst_begin28:
	.uleb128 .Lfunc_begin28-.Lfunc_begin28  # >> Call Site 1 <<
	.uleb128 .Ltmp742-.Lfunc_begin28        #   Call between .Lfunc_begin28 and .Ltmp742
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp742-.Lfunc_begin28        # >> Call Site 2 <<
	.uleb128 .Ltmp743-.Ltmp742              #   Call between .Ltmp742 and .Ltmp743
	.uleb128 .Ltmp744-.Lfunc_begin28        #     jumps to .Ltmp744
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp743-.Lfunc_begin28        # >> Call Site 3 <<
	.uleb128 .Lfunc_end69-.Ltmp743          #   Call between .Ltmp743 and .Lfunc_end69
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end28:
	.p2align	2
                                        # -- End function
	.section	.text._ZN4seal9PlaintextD2Ev,"axG",@progbits,_ZN4seal9PlaintextD2Ev,comdat
	.weak	_ZN4seal9PlaintextD2Ev          # -- Begin function _ZN4seal9PlaintextD2Ev
	.p2align	4, 0x90
	.type	_ZN4seal9PlaintextD2Ev,@function
_ZN4seal9PlaintextD2Ev:                 # @_ZN4seal9PlaintextD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	addq	$48, %rdi
	callq	_ZN4seal8DynArrayImED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end70:
	.size	_ZN4seal9PlaintextD2Ev, .Lfunc_end70-_ZN4seal9PlaintextD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal10CiphertextD2Ev,"axG",@progbits,_ZN4seal10CiphertextD2Ev,comdat
	.weak	_ZN4seal10CiphertextD2Ev        # -- Begin function _ZN4seal10CiphertextD2Ev
	.p2align	4, 0x90
	.type	_ZN4seal10CiphertextD2Ev,@function
_ZN4seal10CiphertextD2Ev:               # @_ZN4seal10CiphertextD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	addq	$72, %rdi
	callq	_ZN4seal8DynArrayImED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end71:
	.size	_ZN4seal10CiphertextD2Ev, .Lfunc_end71-_ZN4seal10CiphertextD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal11CKKSEncoderD2Ev,"axG",@progbits,_ZN4seal11CKKSEncoderD2Ev,comdat
	.weak	_ZN4seal11CKKSEncoderD2Ev       # -- Begin function _ZN4seal11CKKSEncoderD2Ev
	.p2align	4, 0x90
	.type	_ZN4seal11CKKSEncoderD2Ev,@function
_ZN4seal11CKKSEncoderD2Ev:              # @_ZN4seal11CKKSEncoderD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -16(%rbp)                 # 8-byte Spill
	addq	$280, %rdi                      # imm = 0x118
	callq	_ZN4seal4util7PointerImvED2Ev
	movq	-16(%rbp), %rdi                 # 8-byte Reload
	addq	$248, %rdi
	callq	_ZN4seal4util7PointerISt7complexIdEvED2Ev
	movq	-16(%rbp), %rdi                 # 8-byte Reload
	addq	$216, %rdi
	callq	_ZN4seal4util7PointerISt7complexIdEvED2Ev
	movq	-16(%rbp), %rdi                 # 8-byte Reload
	addq	$200, %rdi
	callq	_ZNSt10shared_ptrIN4seal4util12ComplexRootsEED2Ev
	movq	-16(%rbp), %rdi                 # 8-byte Reload
	addq	$16, %rdi
	callq	_ZN4seal11SEALContextD2Ev
	movq	-16(%rbp), %rdi                 # 8-byte Reload
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end72:
	.size	_ZN4seal11CKKSEncoderD2Ev, .Lfunc_end72-_ZN4seal11CKKSEncoderD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal9DecryptorD2Ev,"axG",@progbits,_ZN4seal9DecryptorD2Ev,comdat
	.weak	_ZN4seal9DecryptorD2Ev          # -- Begin function _ZN4seal9DecryptorD2Ev
	.p2align	4, 0x90
	.type	_ZN4seal9DecryptorD2Ev,@function
_ZN4seal9DecryptorD2Ev:                 # @_ZN4seal9DecryptorD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -16(%rbp)                 # 8-byte Spill
	addq	$200, %rdi
	callq	_ZN4seal4util7PointerImvED2Ev
	movq	-16(%rbp), %rdi                 # 8-byte Reload
	addq	$16, %rdi
	callq	_ZN4seal11SEALContextD2Ev
	movq	-16(%rbp), %rdi                 # 8-byte Reload
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end73:
	.size	_ZN4seal9DecryptorD2Ev, .Lfunc_end73-_ZN4seal9DecryptorD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal9EvaluatorD2Ev,"axG",@progbits,_ZN4seal9EvaluatorD2Ev,comdat
	.weak	_ZN4seal9EvaluatorD2Ev          # -- Begin function _ZN4seal9EvaluatorD2Ev
	.p2align	4, 0x90
	.type	_ZN4seal9EvaluatorD2Ev,@function
_ZN4seal9EvaluatorD2Ev:                 # @_ZN4seal9EvaluatorD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -16(%rbp)                 # 8-byte Spill
	addq	$176, %rdi
	callq	_ZNSt3mapImSt4pairImmESt4lessImESaIS0_IKmS1_EEED2Ev
	movq	-16(%rbp), %rdi                 # 8-byte Reload
	callq	_ZN4seal11SEALContextD2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end74:
	.size	_ZN4seal9EvaluatorD2Ev, .Lfunc_end74-_ZN4seal9EvaluatorD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal9EncryptorD2Ev,"axG",@progbits,_ZN4seal9EncryptorD2Ev,comdat
	.weak	_ZN4seal9EncryptorD2Ev          # -- Begin function _ZN4seal9EncryptorD2Ev
	.p2align	4, 0x90
	.type	_ZN4seal9EncryptorD2Ev,@function
_ZN4seal9EncryptorD2Ev:                 # @_ZN4seal9EncryptorD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -16(%rbp)                 # 8-byte Spill
	addq	$312, %rdi                      # imm = 0x138
	callq	_ZN4seal9SecretKeyD2Ev
	movq	-16(%rbp), %rdi                 # 8-byte Reload
	addq	$176, %rdi
	callq	_ZN4seal9PublicKeyD2Ev
	movq	-16(%rbp), %rdi                 # 8-byte Reload
	callq	_ZN4seal11SEALContextD2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end75:
	.size	_ZN4seal9EncryptorD2Ev, .Lfunc_end75-_ZN4seal9EncryptorD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal10GaloisKeysD2Ev,"axG",@progbits,_ZN4seal10GaloisKeysD2Ev,comdat
	.weak	_ZN4seal10GaloisKeysD2Ev        # -- Begin function _ZN4seal10GaloisKeysD2Ev
	.p2align	4, 0x90
	.type	_ZN4seal10GaloisKeysD2Ev,@function
_ZN4seal10GaloisKeysD2Ev:               # @_ZN4seal10GaloisKeysD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN4seal11KSwitchKeysD2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end76:
	.size	_ZN4seal10GaloisKeysD2Ev, .Lfunc_end76-_ZN4seal10GaloisKeysD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal9RelinKeysD2Ev,"axG",@progbits,_ZN4seal9RelinKeysD2Ev,comdat
	.weak	_ZN4seal9RelinKeysD2Ev          # -- Begin function _ZN4seal9RelinKeysD2Ev
	.p2align	4, 0x90
	.type	_ZN4seal9RelinKeysD2Ev,@function
_ZN4seal9RelinKeysD2Ev:                 # @_ZN4seal9RelinKeysD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN4seal11KSwitchKeysD2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end77:
	.size	_ZN4seal9RelinKeysD2Ev, .Lfunc_end77-_ZN4seal9RelinKeysD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal9PublicKeyD2Ev,"axG",@progbits,_ZN4seal9PublicKeyD2Ev,comdat
	.weak	_ZN4seal9PublicKeyD2Ev          # -- Begin function _ZN4seal9PublicKeyD2Ev
	.p2align	4, 0x90
	.type	_ZN4seal9PublicKeyD2Ev,@function
_ZN4seal9PublicKeyD2Ev:                 # @_ZN4seal9PublicKeyD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN4seal10CiphertextD2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end78:
	.size	_ZN4seal9PublicKeyD2Ev, .Lfunc_end78-_ZN4seal9PublicKeyD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal9SecretKeyD2Ev,"axG",@progbits,_ZN4seal9SecretKeyD2Ev,comdat
	.weak	_ZN4seal9SecretKeyD2Ev          # -- Begin function _ZN4seal9SecretKeyD2Ev
	.p2align	4, 0x90
	.type	_ZN4seal9SecretKeyD2Ev,@function
_ZN4seal9SecretKeyD2Ev:                 # @_ZN4seal9SecretKeyD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN4seal9PlaintextD2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end79:
	.size	_ZN4seal9SecretKeyD2Ev, .Lfunc_end79-_ZN4seal9SecretKeyD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal12KeyGeneratorD2Ev,"axG",@progbits,_ZN4seal12KeyGeneratorD2Ev,comdat
	.weak	_ZN4seal12KeyGeneratorD2Ev      # -- Begin function _ZN4seal12KeyGeneratorD2Ev
	.p2align	4, 0x90
	.type	_ZN4seal12KeyGeneratorD2Ev,@function
_ZN4seal12KeyGeneratorD2Ev:             # @_ZN4seal12KeyGeneratorD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -16(%rbp)                 # 8-byte Spill
	addq	$312, %rdi                      # imm = 0x138
	callq	_ZN4seal4util7PointerImvED2Ev
	movq	-16(%rbp), %rdi                 # 8-byte Reload
	addq	$192, %rdi
	callq	_ZN4seal9SecretKeyD2Ev
	movq	-16(%rbp), %rdi                 # 8-byte Reload
	addq	$16, %rdi
	callq	_ZN4seal11SEALContextD2Ev
	movq	-16(%rbp), %rdi                 # 8-byte Reload
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end80:
	.size	_ZN4seal12KeyGeneratorD2Ev, .Lfunc_end80-_ZN4seal12KeyGeneratorD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal11SEALContextD2Ev,"axG",@progbits,_ZN4seal11SEALContextD2Ev,comdat
	.weak	_ZN4seal11SEALContextD2Ev       # -- Begin function _ZN4seal11SEALContextD2Ev
	.p2align	4, 0x90
	.type	_ZN4seal11SEALContextD2Ev,@function
_ZN4seal11SEALContextD2Ev:              # @_ZN4seal11SEALContextD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -16(%rbp)                 # 8-byte Spill
	addq	$112, %rdi
	callq	_ZNSt13unordered_mapISt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S7_EEED2Ev
	movq	-16(%rbp), %rdi                 # 8-byte Reload
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end81:
	.size	_ZN4seal11SEALContextD2Ev, .Lfunc_end81-_ZN4seal11SEALContextD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal20EncryptionParametersD2Ev,"axG",@progbits,_ZN4seal20EncryptionParametersD2Ev,comdat
	.weak	_ZN4seal20EncryptionParametersD2Ev # -- Begin function _ZN4seal20EncryptionParametersD2Ev
	.p2align	4, 0x90
	.type	_ZN4seal20EncryptionParametersD2Ev,@function
_ZN4seal20EncryptionParametersD2Ev:     # @_ZN4seal20EncryptionParametersD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -16(%rbp)                 # 8-byte Spill
	addq	$56, %rdi
	callq	_ZNSt10shared_ptrIN4seal29UniformRandomGeneratorFactoryEED2Ev
	movq	-16(%rbp), %rdi                 # 8-byte Reload
	addq	$32, %rdi
	callq	_ZNSt6vectorIN4seal7ModulusESaIS1_EED2Ev
	movq	-16(%rbp), %rdi                 # 8-byte Reload
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end82:
	.size	_ZN4seal20EncryptionParametersD2Ev, .Lfunc_end82-_ZN4seal20EncryptionParametersD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_,"axG",@progbits,_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_,comdat
	.weak	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_ # -- Begin function _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
	.p2align	4, 0x90
	.type	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_,@function
_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_: # @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)                 # 8-byte Spill
	movq	%rdi, %rax
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rdi
	movq	-24(%rbp), %rsi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc@PLT
	movq	%rax, %rdi
	callq	_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_
	movq	-40(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@PLT
	movq	-32(%rbp), %rax                 # 8-byte Reload
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end83:
	.size	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_, .Lfunc_end83-_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_,"axG",@progbits,_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_,comdat
	.weak	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_ # -- Begin function _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_
	.p2align	4, 0x90
	.type	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_,@function
_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_: # @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)                 # 8-byte Spill
	movq	%rdi, %rax
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-24(%rbp), %rdi
	movq	-16(%rbp), %rdx
	xorl	%eax, %eax
	movl	%eax, %esi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEmPKc@PLT
	movq	%rax, %rdi
	callq	_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_
	movq	-40(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@PLT
	movq	-32(%rbp), %rax                 # 8-byte Reload
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end84:
	.size	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_, .Lfunc_end84-_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEmcRKS3_,"axG",@progbits,_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEmcRKS3_,comdat
	.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEmcRKS3_ # -- Begin function _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEmcRKS3_
	.p2align	4, 0x90
	.type	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEmcRKS3_,@function
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEmcRKS3_: # @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEmcRKS3_
.Lfunc_begin29:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception29
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movb	%dl, %al
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movb	%al, -17(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -56(%rbp)                 # 8-byte Spill
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@PLT
	movq	-56(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rsi
	movq	-32(%rbp), %rdx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@PLT
	movq	-56(%rbp), %rdi                 # 8-byte Reload
	movq	-16(%rbp), %rsi
	movsbl	-17(%rbp), %edx
.Ltmp745:
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc@PLT
.Ltmp746:
	jmp	.LBB85_1
.LBB85_1:
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB85_2:
	.cfi_def_cfa %rbp, 16
.Ltmp747:
	movq	-56(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -40(%rbp)
	movl	%eax, -44(%rbp)
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev
# %bb.3:
	movq	-40(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end85:
	.size	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEmcRKS3_, .Lfunc_end85-_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEmcRKS3_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEmcRKS3_,"aG",@progbits,_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEmcRKS3_,comdat
	.p2align	2
GCC_except_table85:
.Lexception29:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end29-.Lcst_begin29
.Lcst_begin29:
	.uleb128 .Lfunc_begin29-.Lfunc_begin29  # >> Call Site 1 <<
	.uleb128 .Ltmp745-.Lfunc_begin29        #   Call between .Lfunc_begin29 and .Ltmp745
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp745-.Lfunc_begin29        # >> Call Site 2 <<
	.uleb128 .Ltmp746-.Ltmp745              #   Call between .Ltmp745 and .Ltmp746
	.uleb128 .Ltmp747-.Lfunc_begin29        #     jumps to .Ltmp747
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp746-.Lfunc_begin29        # >> Call Site 3 <<
	.uleb128 .Lfunc_end85-.Ltmp746          #   Call between .Ltmp746 and .Lfunc_end85
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end29:
	.p2align	2
                                        # -- End function
	.section	.text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_,"axG",@progbits,_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_,comdat
	.weak	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_ # -- Begin function _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_
	.p2align	4, 0x90
	.type	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_,@function
_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_: # @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%rdi, -56(%rbp)                 # 8-byte Spill
	movq	%rdi, %rax
	movq	%rax, -48(%rbp)                 # 8-byte Spill
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movb	$0, -25(%rbp)
	movb	$1, -25(%rbp)
	testb	$1, -25(%rbp)
	je	.LBB86_5
# %bb.1:
	movq	-16(%rbp), %rdi
	callq	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@PLT
	movq	%rax, -72(%rbp)                 # 8-byte Spill
	movq	-24(%rbp), %rdi
	callq	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@PLT
	movq	%rax, %rcx
	movq	-72(%rbp), %rax                 # 8-byte Reload
	addq	%rcx, %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -64(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	callq	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv@PLT
	movq	%rax, %rcx
	movq	-64(%rbp), %rax                 # 8-byte Reload
	cmpq	%rcx, %rax
	jbe	.LBB86_4
# %bb.2:
	movq	-40(%rbp), %rax
	movq	%rax, -80(%rbp)                 # 8-byte Spill
	movq	-24(%rbp), %rdi
	callq	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv@PLT
	movq	%rax, %rcx
	movq	-80(%rbp), %rax                 # 8-byte Reload
	cmpq	%rcx, %rax
	ja	.LBB86_4
# %bb.3:
	movq	-24(%rbp), %rdi
	movq	-16(%rbp), %rdx
	xorl	%eax, %eax
	movl	%eax, %esi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEmRKS4_@PLT
	movq	%rax, %rdi
	callq	_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_
	movq	-56(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@PLT
	jmp	.LBB86_6
.LBB86_4:
	jmp	.LBB86_5
.LBB86_5:
	movq	-16(%rbp), %rdi
	movq	-24(%rbp), %rsi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_@PLT
	movq	%rax, %rdi
	callq	_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_
	movq	-56(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@PLT
.LBB86_6:
	movq	-48(%rbp), %rax                 # 8-byte Reload
	addq	$80, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end86:
	.size	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_, .Lfunc_end86-_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_,"axG",@progbits,_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_,comdat
	.weak	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_ # -- Begin function _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_
	.p2align	4, 0x90
	.type	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_,@function
_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_: # @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)                 # 8-byte Spill
	movq	%rdi, %rax
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rdi
	movq	-24(%rbp), %rsi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_@PLT
	movq	%rax, %rdi
	callq	_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_
	movq	-40(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@PLT
	movq	-32(%rbp), %rax                 # 8-byte Reload
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end87:
	.size	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_, .Lfunc_end87-_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_,"axG",@progbits,_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_,comdat
	.weak	_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_ # -- Begin function _ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_
	.p2align	4, 0x90
	.type	_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_,@function
_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_: # @_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end88:
	.size	_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_, .Lfunc_end88-_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev,"axG",@progbits,_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev,comdat
	.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev # -- Begin function _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev
	.p2align	4, 0x90
	.type	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev,@function
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev: # @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSaIcED2Ev@PLT
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end89:
	.size	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev, .Lfunc_end89-_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN4seal7ModulusESaIS1_EEC2Ev,"axG",@progbits,_ZNSt6vectorIN4seal7ModulusESaIS1_EEC2Ev,comdat
	.weak	_ZNSt6vectorIN4seal7ModulusESaIS1_EEC2Ev # -- Begin function _ZNSt6vectorIN4seal7ModulusESaIS1_EEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN4seal7ModulusESaIS1_EEC2Ev,@function
_ZNSt6vectorIN4seal7ModulusESaIS1_EEC2Ev: # @_ZNSt6vectorIN4seal7ModulusESaIS1_EEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EEC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end90:
	.size	_ZNSt6vectorIN4seal7ModulusESaIS1_EEC2Ev, .Lfunc_end90-_ZNSt6vectorIN4seal7ModulusESaIS1_EEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt10shared_ptrIN4seal29UniformRandomGeneratorFactoryEEC2EDn,"axG",@progbits,_ZNSt10shared_ptrIN4seal29UniformRandomGeneratorFactoryEEC2EDn,comdat
	.weak	_ZNSt10shared_ptrIN4seal29UniformRandomGeneratorFactoryEEC2EDn # -- Begin function _ZNSt10shared_ptrIN4seal29UniformRandomGeneratorFactoryEEC2EDn
	.p2align	4, 0x90
	.type	_ZNSt10shared_ptrIN4seal29UniformRandomGeneratorFactoryEEC2EDn,@function
_ZNSt10shared_ptrIN4seal29UniformRandomGeneratorFactoryEEC2EDn: # @_ZNSt10shared_ptrIN4seal29UniformRandomGeneratorFactoryEEC2EDn
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt10shared_ptrIN4seal29UniformRandomGeneratorFactoryEEC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end91:
	.size	_ZNSt10shared_ptrIN4seal29UniformRandomGeneratorFactoryEEC2EDn, .Lfunc_end91-_ZNSt10shared_ptrIN4seal29UniformRandomGeneratorFactoryEEC2EDn
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal7ModulusC2Em,"axG",@progbits,_ZN4seal7ModulusC2Em,comdat
	.weak	_ZN4seal7ModulusC2Em            # -- Begin function _ZN4seal7ModulusC2Em
	.p2align	4, 0x90
	.type	_ZN4seal7ModulusC2Em,@function
_ZN4seal7ModulusC2Em:                   # @_ZN4seal7ModulusC2Em
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -24(%rbp)                 # 8-byte Spill
	movq	$0, (%rdi)
	addq	$8, %rdi
	xorl	%esi, %esi
	movl	$24, %edx
	callq	memset@PLT
	movq	-24(%rbp), %rdi                 # 8-byte Reload
	movq	.Lconstinit(%rip), %rax
	movq	%rax, 8(%rdi)
	movq	.Lconstinit+8(%rip), %rax
	movq	%rax, 16(%rdi)
	movq	.Lconstinit+16(%rip), %rax
	movq	%rax, 24(%rdi)
	movq	$0, 32(%rdi)
	movl	$0, 40(%rdi)
	movb	$0, 44(%rdi)
	movq	-16(%rbp), %rsi
	callq	_ZN4seal7Modulus9set_valueEm@PLT
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end92:
	.size	_ZN4seal7ModulusC2Em, .Lfunc_end92-_ZN4seal7ModulusC2Em
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt10shared_ptrIN4seal29UniformRandomGeneratorFactoryEED2Ev,"axG",@progbits,_ZNSt10shared_ptrIN4seal29UniformRandomGeneratorFactoryEED2Ev,comdat
	.weak	_ZNSt10shared_ptrIN4seal29UniformRandomGeneratorFactoryEED2Ev # -- Begin function _ZNSt10shared_ptrIN4seal29UniformRandomGeneratorFactoryEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt10shared_ptrIN4seal29UniformRandomGeneratorFactoryEED2Ev,@function
_ZNSt10shared_ptrIN4seal29UniformRandomGeneratorFactoryEED2Ev: # @_ZNSt10shared_ptrIN4seal29UniformRandomGeneratorFactoryEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt12__shared_ptrIN4seal29UniformRandomGeneratorFactoryELN9__gnu_cxx12_Lock_policyE2EED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end93:
	.size	_ZNSt10shared_ptrIN4seal29UniformRandomGeneratorFactoryEED2Ev, .Lfunc_end93-_ZNSt10shared_ptrIN4seal29UniformRandomGeneratorFactoryEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EEC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EEC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EEC2Ev # -- Begin function _ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EEC2Ev,@function
_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EEC2Ev: # @_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE12_Vector_implC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end94:
	.size	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EEC2Ev, .Lfunc_end94-_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE12_Vector_implC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE12_Vector_implC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE12_Vector_implC2Ev # -- Begin function _ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE12_Vector_implC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE12_Vector_implC2Ev,@function
_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE12_Vector_implC2Ev: # @_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE12_Vector_implC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -16(%rbp)                 # 8-byte Spill
	callq	_ZNSaIN4seal7ModulusEEC2Ev
	movq	-16(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE17_Vector_impl_dataC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end95:
	.size	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE12_Vector_implC2Ev, .Lfunc_end95-_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE12_Vector_implC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSaIN4seal7ModulusEEC2Ev,"axG",@progbits,_ZNSaIN4seal7ModulusEEC2Ev,comdat
	.weak	_ZNSaIN4seal7ModulusEEC2Ev      # -- Begin function _ZNSaIN4seal7ModulusEEC2Ev
	.p2align	4, 0x90
	.type	_ZNSaIN4seal7ModulusEEC2Ev,@function
_ZNSaIN4seal7ModulusEEC2Ev:             # @_ZNSaIN4seal7ModulusEEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEEC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end96:
	.size	_ZNSaIN4seal7ModulusEEC2Ev, .Lfunc_end96-_ZNSaIN4seal7ModulusEEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE17_Vector_impl_dataC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE17_Vector_impl_dataC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE17_Vector_impl_dataC2Ev # -- Begin function _ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE17_Vector_impl_dataC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE17_Vector_impl_dataC2Ev,@function
_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE17_Vector_impl_dataC2Ev: # @_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE17_Vector_impl_dataC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	$0, (%rax)
	movq	$0, 8(%rax)
	movq	$0, 16(%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end97:
	.size	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE17_Vector_impl_dataC2Ev, .Lfunc_end97-_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE17_Vector_impl_dataC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEEC2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEEC2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEEC2Ev # -- Begin function _ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEEC2Ev
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEEC2Ev,@function
_ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEEC2Ev: # @_ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end98:
	.size	_ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEEC2Ev, .Lfunc_end98-_ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt10shared_ptrIN4seal29UniformRandomGeneratorFactoryEEC2Ev,"axG",@progbits,_ZNSt10shared_ptrIN4seal29UniformRandomGeneratorFactoryEEC2Ev,comdat
	.weak	_ZNSt10shared_ptrIN4seal29UniformRandomGeneratorFactoryEEC2Ev # -- Begin function _ZNSt10shared_ptrIN4seal29UniformRandomGeneratorFactoryEEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt10shared_ptrIN4seal29UniformRandomGeneratorFactoryEEC2Ev,@function
_ZNSt10shared_ptrIN4seal29UniformRandomGeneratorFactoryEEC2Ev: # @_ZNSt10shared_ptrIN4seal29UniformRandomGeneratorFactoryEEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt12__shared_ptrIN4seal29UniformRandomGeneratorFactoryELN9__gnu_cxx12_Lock_policyE2EEC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end99:
	.size	_ZNSt10shared_ptrIN4seal29UniformRandomGeneratorFactoryEEC2Ev, .Lfunc_end99-_ZNSt10shared_ptrIN4seal29UniformRandomGeneratorFactoryEEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12__shared_ptrIN4seal29UniformRandomGeneratorFactoryELN9__gnu_cxx12_Lock_policyE2EEC2Ev,"axG",@progbits,_ZNSt12__shared_ptrIN4seal29UniformRandomGeneratorFactoryELN9__gnu_cxx12_Lock_policyE2EEC2Ev,comdat
	.weak	_ZNSt12__shared_ptrIN4seal29UniformRandomGeneratorFactoryELN9__gnu_cxx12_Lock_policyE2EEC2Ev # -- Begin function _ZNSt12__shared_ptrIN4seal29UniformRandomGeneratorFactoryELN9__gnu_cxx12_Lock_policyE2EEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12__shared_ptrIN4seal29UniformRandomGeneratorFactoryELN9__gnu_cxx12_Lock_policyE2EEC2Ev,@function
_ZNSt12__shared_ptrIN4seal29UniformRandomGeneratorFactoryELN9__gnu_cxx12_Lock_policyE2EEC2Ev: # @_ZNSt12__shared_ptrIN4seal29UniformRandomGeneratorFactoryELN9__gnu_cxx12_Lock_policyE2EEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	$0, (%rdi)
	addq	$8, %rdi
	callq	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end100:
	.size	_ZNSt12__shared_ptrIN4seal29UniformRandomGeneratorFactoryELN9__gnu_cxx12_Lock_policyE2EEC2Ev, .Lfunc_end100-_ZNSt12__shared_ptrIN4seal29UniformRandomGeneratorFactoryELN9__gnu_cxx12_Lock_policyE2EEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2Ev,"axG",@progbits,_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2Ev,comdat
	.weak	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2Ev # -- Begin function _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2Ev,@function
_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2Ev: # @_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	$0, (%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end101:
	.size	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2Ev, .Lfunc_end101-_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12__shared_ptrIN4seal29UniformRandomGeneratorFactoryELN9__gnu_cxx12_Lock_policyE2EED2Ev,"axG",@progbits,_ZNSt12__shared_ptrIN4seal29UniformRandomGeneratorFactoryELN9__gnu_cxx12_Lock_policyE2EED2Ev,comdat
	.weak	_ZNSt12__shared_ptrIN4seal29UniformRandomGeneratorFactoryELN9__gnu_cxx12_Lock_policyE2EED2Ev # -- Begin function _ZNSt12__shared_ptrIN4seal29UniformRandomGeneratorFactoryELN9__gnu_cxx12_Lock_policyE2EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt12__shared_ptrIN4seal29UniformRandomGeneratorFactoryELN9__gnu_cxx12_Lock_policyE2EED2Ev,@function
_ZNSt12__shared_ptrIN4seal29UniformRandomGeneratorFactoryELN9__gnu_cxx12_Lock_policyE2EED2Ev: # @_ZNSt12__shared_ptrIN4seal29UniformRandomGeneratorFactoryELN9__gnu_cxx12_Lock_policyE2EED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	addq	$8, %rdi
	callq	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end102:
	.size	_ZNSt12__shared_ptrIN4seal29UniformRandomGeneratorFactoryELN9__gnu_cxx12_Lock_policyE2EED2Ev, .Lfunc_end102-_ZNSt12__shared_ptrIN4seal29UniformRandomGeneratorFactoryELN9__gnu_cxx12_Lock_policyE2EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev,"axG",@progbits,_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev,comdat
	.weak	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev # -- Begin function _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev,@function
_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev: # @_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -16(%rbp)                 # 8-byte Spill
	cmpq	$0, (%rax)
	je	.LBB103_2
# %bb.1:
	movq	-16(%rbp), %rax                 # 8-byte Reload
	movq	(%rax), %rdi
	callq	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv
.LBB103_2:
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end103:
	.size	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, .Lfunc_end103-_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv,"axG",@progbits,_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv,comdat
	.weak	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv # -- Begin function _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv
	.p2align	4, 0x90
	.type	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv,@function
_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv: # @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$144, %rsp
	movq	%rdi, -128(%rbp)
	movq	-128(%rbp), %rax
	movq	%rax, -136(%rbp)                # 8-byte Spill
	addq	$8, %rax
	movq	%rax, -96(%rbp)
	movl	$-1, -100(%rbp)
	movq	__libc_single_threaded@GOTPCREL(%rip), %rax
	cmpb	$0, (%rax)
	je	.LBB104_2
# %bb.1:
	movq	-96(%rbp), %rcx
	movl	-100(%rbp), %eax
	movq	%rcx, -72(%rbp)
	movl	%eax, -76(%rbp)
	movq	-72(%rbp), %rax
	movl	(%rax), %eax
	movl	%eax, -80(%rbp)
	movl	-76(%rbp), %ecx
	movq	-72(%rbp), %rax
	addl	(%rax), %ecx
	movl	%ecx, (%rax)
	movl	-80(%rbp), %eax
	movl	%eax, -84(%rbp)
	jmp	.LBB104_3
.LBB104_2:
	movq	-96(%rbp), %rcx
	movl	-100(%rbp), %eax
	movq	%rcx, -32(%rbp)
	movl	%eax, -36(%rbp)
	movq	-32(%rbp), %rcx
	movl	-36(%rbp), %eax
	movl	%eax, -40(%rbp)
	movl	-40(%rbp), %eax
	lock		xaddl	%eax, (%rcx)
	movl	%eax, -44(%rbp)
	movl	-44(%rbp), %eax
	movl	%eax, -84(%rbp)
.LBB104_3:
	movl	-84(%rbp), %eax
	movl	%eax, -140(%rbp)                # 4-byte Spill
# %bb.4:
	movl	-140(%rbp), %eax                # 4-byte Reload
	cmpl	$1, %eax
	jne	.LBB104_12
# %bb.5:
	movq	-136(%rbp), %rdi                # 8-byte Reload
	movq	(%rdi), %rax
	callq	*16(%rax)
	movq	-136(%rbp), %rax                # 8-byte Reload
	addq	$12, %rax
	movq	%rax, -112(%rbp)
	movl	$-1, -116(%rbp)
	movq	__libc_single_threaded@GOTPCREL(%rip), %rax
	cmpb	$0, (%rax)
	je	.LBB104_7
# %bb.6:
	movq	-112(%rbp), %rcx
	movl	-116(%rbp), %eax
	movq	%rcx, -56(%rbp)
	movl	%eax, -60(%rbp)
	movq	-56(%rbp), %rax
	movl	(%rax), %eax
	movl	%eax, -64(%rbp)
	movl	-60(%rbp), %ecx
	movq	-56(%rbp), %rax
	addl	(%rax), %ecx
	movl	%ecx, (%rax)
	movl	-64(%rbp), %eax
	movl	%eax, -104(%rbp)
	jmp	.LBB104_8
.LBB104_7:
	movq	-112(%rbp), %rcx
	movl	-116(%rbp), %eax
	movq	%rcx, -8(%rbp)
	movl	%eax, -12(%rbp)
	movq	-8(%rbp), %rcx
	movl	-12(%rbp), %eax
	movl	%eax, -16(%rbp)
	movl	-16(%rbp), %eax
	lock		xaddl	%eax, (%rcx)
	movl	%eax, -20(%rbp)
	movl	-20(%rbp), %eax
	movl	%eax, -104(%rbp)
.LBB104_8:
	movl	-104(%rbp), %eax
	movl	%eax, -144(%rbp)                # 4-byte Spill
# %bb.9:
	movl	-144(%rbp), %eax                # 4-byte Reload
	cmpl	$1, %eax
	jne	.LBB104_11
# %bb.10:
	movq	-136(%rbp), %rdi                # 8-byte Reload
	movq	(%rdi), %rax
	callq	*24(%rax)
.LBB104_11:
	jmp	.LBB104_12
.LBB104_12:
	addq	$144, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end104:
	.size	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, .Lfunc_end104-_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv
	.cfi_endproc
                                        # -- End function
	.section	.text.__clang_call_terminate,"axG",@progbits,__clang_call_terminate,comdat
	.hidden	__clang_call_terminate          # -- Begin function __clang_call_terminate
	.weak	__clang_call_terminate
	.p2align	4, 0x90
	.type	__clang_call_terminate,@function
__clang_call_terminate:                 # @__clang_call_terminate
# %bb.0:
	pushq	%rax
	callq	__cxa_begin_catch@PLT
	callq	_ZSt9terminatev@PLT
.Lfunc_end105:
	.size	__clang_call_terminate, .Lfunc_end105-__clang_call_terminate
                                        # -- End function
	.section	.text._ZNKSt6vectorIN4seal7ModulusESaIS1_EE5emptyEv,"axG",@progbits,_ZNKSt6vectorIN4seal7ModulusESaIS1_EE5emptyEv,comdat
	.weak	_ZNKSt6vectorIN4seal7ModulusESaIS1_EE5emptyEv # -- Begin function _ZNKSt6vectorIN4seal7ModulusESaIS1_EE5emptyEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIN4seal7ModulusESaIS1_EE5emptyEv,@function
_ZNKSt6vectorIN4seal7ModulusESaIS1_EE5emptyEv: # @_ZNKSt6vectorIN4seal7ModulusESaIS1_EE5emptyEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -32(%rbp)                 # 8-byte Spill
	callq	_ZNKSt6vectorIN4seal7ModulusESaIS1_EE5beginEv
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, -16(%rbp)
	callq	_ZNKSt6vectorIN4seal7ModulusESaIS1_EE3endEv
	movq	%rax, -24(%rbp)
	leaq	-16(%rbp), %rdi
	leaq	-24(%rbp), %rsi
	callq	_ZN9__gnu_cxxeqIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_
	andb	$1, %al
	movzbl	%al, %eax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end106:
	.size	_ZNKSt6vectorIN4seal7ModulusESaIS1_EE5emptyEv, .Lfunc_end106-_ZNKSt6vectorIN4seal7ModulusESaIS1_EE5emptyEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIN4seal7ModulusESaIS1_EE4sizeEv,"axG",@progbits,_ZNKSt6vectorIN4seal7ModulusESaIS1_EE4sizeEv,comdat
	.weak	_ZNKSt6vectorIN4seal7ModulusESaIS1_EE4sizeEv # -- Begin function _ZNKSt6vectorIN4seal7ModulusESaIS1_EE4sizeEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIN4seal7ModulusESaIS1_EE4sizeEv,@function
_ZNKSt6vectorIN4seal7ModulusESaIS1_EE4sizeEv: # @_ZNKSt6vectorIN4seal7ModulusESaIS1_EE4sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rcx
	movq	8(%rcx), %rax
	movq	(%rcx), %rcx
	subq	%rcx, %rax
	movl	$48, %ecx
	cqto
	idivq	%rcx
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end107:
	.size	_ZNKSt6vectorIN4seal7ModulusESaIS1_EE4sizeEv, .Lfunc_end107-_ZNKSt6vectorIN4seal7ModulusESaIS1_EE4sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN4seal7ModulusESaIS1_EEaSERKS3_,"axG",@progbits,_ZNSt6vectorIN4seal7ModulusESaIS1_EEaSERKS3_,comdat
	.weak	_ZNSt6vectorIN4seal7ModulusESaIS1_EEaSERKS3_ # -- Begin function _ZNSt6vectorIN4seal7ModulusESaIS1_EEaSERKS3_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN4seal7ModulusESaIS1_EEaSERKS3_,@function
_ZNSt6vectorIN4seal7ModulusESaIS1_EEaSERKS3_: # @_ZNSt6vectorIN4seal7ModulusESaIS1_EEaSERKS3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$176, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -96(%rbp)                 # 8-byte Spill
	cmpq	%rax, -16(%rbp)
	je	.LBB108_8
# %bb.1:
	movq	-16(%rbp), %rdi
	callq	_ZNKSt6vectorIN4seal7ModulusESaIS1_EE4sizeEv
	movq	-96(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -104(%rbp)                # 8-byte Spill
	callq	_ZNKSt6vectorIN4seal7ModulusESaIS1_EE8capacityEv
	movq	%rax, %rcx
	movq	-104(%rbp), %rax                # 8-byte Reload
	cmpq	%rcx, %rax
	jbe	.LBB108_3
# %bb.2:
	movq	-24(%rbp), %rax
	movq	%rax, -128(%rbp)                # 8-byte Spill
	movq	-16(%rbp), %rdi
	callq	_ZNKSt6vectorIN4seal7ModulusESaIS1_EE5beginEv
	movq	%rax, -40(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZNKSt6vectorIN4seal7ModulusESaIS1_EE3endEv
	movq	-128(%rbp), %rsi                # 8-byte Reload
	movq	-96(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, -48(%rbp)
	movq	-40(%rbp), %rdx
	movq	-48(%rbp), %rcx
	callq	_ZNSt6vectorIN4seal7ModulusESaIS1_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEEEPS1_mT_SB_
	movq	-96(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, -32(%rbp)
	movq	(%rdi), %rax
	movq	%rax, -120(%rbp)                # 8-byte Spill
	movq	8(%rdi), %rax
	movq	%rax, -112(%rbp)                # 8-byte Spill
	callq	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE19_M_get_Tp_allocatorEv
	movq	-120(%rbp), %rdi                # 8-byte Reload
	movq	-112(%rbp), %rsi                # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt8_DestroyIPN4seal7ModulusES1_EvT_S3_RSaIT0_E
	movq	-96(%rbp), %rcx                 # 8-byte Reload
	movq	%rcx, %rdi
	movq	(%rcx), %rsi
	movq	16(%rcx), %rax
	movq	(%rcx), %rcx
	subq	%rcx, %rax
	movl	$48, %ecx
	cqto
	idivq	%rcx
	movq	%rax, %rdx
	callq	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE13_M_deallocateEPS1_m
	movq	-96(%rbp), %rax                 # 8-byte Reload
	movq	-32(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	(%rax), %rcx
	imulq	$48, -24(%rbp), %rdx
	addq	%rdx, %rcx
	movq	%rcx, 16(%rax)
	jmp	.LBB108_7
.LBB108_3:
	movq	-96(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNKSt6vectorIN4seal7ModulusESaIS1_EE4sizeEv
	cmpq	-24(%rbp), %rax
	jb	.LBB108_5
# %bb.4:
	movq	-16(%rbp), %rdi
	callq	_ZNKSt6vectorIN4seal7ModulusESaIS1_EE5beginEv
	movq	%rax, -64(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZNKSt6vectorIN4seal7ModulusESaIS1_EE3endEv
	movq	-96(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, -72(%rbp)
	callq	_ZNSt6vectorIN4seal7ModulusESaIS1_EE5beginEv
	movq	%rax, -80(%rbp)
	movq	-64(%rbp), %rdi
	movq	-72(%rbp), %rsi
	movq	-80(%rbp), %rdx
	callq	_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET0_T_SD_SC_
	movq	-96(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, -56(%rbp)
	callq	_ZNSt6vectorIN4seal7ModulusESaIS1_EE3endEv
	movq	-96(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, -88(%rbp)
	callq	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE19_M_get_Tp_allocatorEv
	movq	%rax, %rdx
	movq	-56(%rbp), %rdi
	movq	-88(%rbp), %rsi
	callq	_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS3_SaIS3_EEEES3_EvT_S9_RSaIT0_E
	jmp	.LBB108_6
.LBB108_5:
	movq	-96(%rbp), %rdi                 # 8-byte Reload
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, -168(%rbp)                # 8-byte Spill
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, -176(%rbp)                # 8-byte Spill
	callq	_ZNKSt6vectorIN4seal7ModulusESaIS1_EE4sizeEv
	movq	-176(%rbp), %rsi                # 8-byte Reload
	movq	-168(%rbp), %rdi                # 8-byte Reload
	movq	%rax, %rcx
	movq	-96(%rbp), %rax                 # 8-byte Reload
	imulq	$48, %rcx, %rcx
	addq	%rcx, %rsi
	movq	(%rax), %rdx
	callq	_ZSt4copyIPN4seal7ModulusES2_ET0_T_S4_S3_
	movq	-96(%rbp), %rdi                 # 8-byte Reload
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, -160(%rbp)                # 8-byte Spill
	callq	_ZNKSt6vectorIN4seal7ModulusESaIS1_EE4sizeEv
	movq	-96(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rcx
	movq	-160(%rbp), %rax                # 8-byte Reload
	imulq	$48, %rcx, %rcx
	addq	%rcx, %rax
	movq	%rax, -152(%rbp)                # 8-byte Spill
	movq	-16(%rbp), %rax
	movq	8(%rax), %rax
	movq	%rax, -144(%rbp)                # 8-byte Spill
	movq	8(%rdi), %rax
	movq	%rax, -136(%rbp)                # 8-byte Spill
	callq	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE19_M_get_Tp_allocatorEv
	movq	-152(%rbp), %rdi                # 8-byte Reload
	movq	-144(%rbp), %rsi                # 8-byte Reload
	movq	-136(%rbp), %rdx                # 8-byte Reload
	movq	%rax, %rcx
	callq	_ZSt22__uninitialized_copy_aIPN4seal7ModulusES2_S1_ET0_T_S4_S3_RSaIT1_E
.LBB108_6:
	jmp	.LBB108_7
.LBB108_7:
	movq	-96(%rbp), %rax                 # 8-byte Reload
	movq	(%rax), %rcx
	imulq	$48, -24(%rbp), %rdx
	addq	%rdx, %rcx
	movq	%rcx, 8(%rax)
.LBB108_8:
	movq	-96(%rbp), %rax                 # 8-byte Reload
	addq	$176, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end108:
	.size	_ZNSt6vectorIN4seal7ModulusESaIS1_EEaSERKS3_, .Lfunc_end108-_ZNSt6vectorIN4seal7ModulusESaIS1_EEaSERKS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxxeqIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_,"axG",@progbits,_ZN9__gnu_cxxeqIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_,comdat
	.weak	_ZN9__gnu_cxxeqIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_ # -- Begin function _ZN9__gnu_cxxeqIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxxeqIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_,@function
_ZN9__gnu_cxxeqIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_: # @_ZN9__gnu_cxxeqIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rax
	movq	%rax, -24(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEE4baseEv
	movq	%rax, %rcx
	movq	-24(%rbp), %rax                 # 8-byte Reload
	cmpq	(%rcx), %rax
	sete	%al
	andb	$1, %al
	movzbl	%al, %eax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end109:
	.size	_ZN9__gnu_cxxeqIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_, .Lfunc_end109-_ZN9__gnu_cxxeqIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEE4baseEv,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEE4baseEv,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEE4baseEv # -- Begin function _ZNK9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEE4baseEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEE4baseEv,@function
_ZNK9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEE4baseEv: # @_ZNK9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEE4baseEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end110:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEE4baseEv, .Lfunc_end110-_ZNK9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEE4baseEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIN4seal7ModulusESaIS1_EE8capacityEv,"axG",@progbits,_ZNKSt6vectorIN4seal7ModulusESaIS1_EE8capacityEv,comdat
	.weak	_ZNKSt6vectorIN4seal7ModulusESaIS1_EE8capacityEv # -- Begin function _ZNKSt6vectorIN4seal7ModulusESaIS1_EE8capacityEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIN4seal7ModulusESaIS1_EE8capacityEv,@function
_ZNKSt6vectorIN4seal7ModulusESaIS1_EE8capacityEv: # @_ZNKSt6vectorIN4seal7ModulusESaIS1_EE8capacityEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rcx
	movq	16(%rcx), %rax
	movq	(%rcx), %rcx
	subq	%rcx, %rax
	movl	$48, %ecx
	cqto
	idivq	%rcx
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end111:
	.size	_ZNKSt6vectorIN4seal7ModulusESaIS1_EE8capacityEv, .Lfunc_end111-_ZNKSt6vectorIN4seal7ModulusESaIS1_EE8capacityEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN4seal7ModulusESaIS1_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEEEPS1_mT_SB_,"axG",@progbits,_ZNSt6vectorIN4seal7ModulusESaIS1_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEEEPS1_mT_SB_,comdat
	.weak	_ZNSt6vectorIN4seal7ModulusESaIS1_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEEEPS1_mT_SB_ # -- Begin function _ZNSt6vectorIN4seal7ModulusESaIS1_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEEEPS1_mT_SB_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN4seal7ModulusESaIS1_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEEEPS1_mT_SB_,@function
_ZNSt6vectorIN4seal7ModulusESaIS1_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEEEPS1_mT_SB_: # @_ZNSt6vectorIN4seal7ModulusESaIS1_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEEEPS1_mT_SB_
.Lfunc_begin30:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception30
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%rdx, -8(%rbp)
	movq	%rcx, -16(%rbp)
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdi
	movq	%rdi, -88(%rbp)                 # 8-byte Spill
	movq	-32(%rbp), %rsi
	callq	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE11_M_allocateEm
	movq	-88(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, -40(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -80(%rbp)                 # 8-byte Spill
	callq	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE19_M_get_Tp_allocatorEv
	movq	-80(%rbp), %rdx                 # 8-byte Reload
	movq	%rax, %rcx
	movq	-48(%rbp), %rdi
	movq	-56(%rbp), %rsi
.Ltmp748:
	callq	_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E
.Ltmp749:
	jmp	.LBB112_1
.LBB112_1:
	movq	-40(%rbp), %rax
	addq	$96, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB112_2:
	.cfi_def_cfa %rbp, 16
.Ltmp750:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -64(%rbp)
	movl	%eax, -68(%rbp)
# %bb.3:
	movq	-64(%rbp), %rdi
	callq	__cxa_begin_catch@PLT
	movq	-88(%rbp), %rdi                 # 8-byte Reload
	movq	-40(%rbp), %rsi
	movq	-32(%rbp), %rdx
.Ltmp751:
	callq	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE13_M_deallocateEPS1_m
.Ltmp752:
	jmp	.LBB112_4
.LBB112_4:
.Ltmp753:
	callq	__cxa_rethrow@PLT
.Ltmp754:
	jmp	.LBB112_9
.LBB112_5:
.Ltmp755:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -64(%rbp)
	movl	%eax, -68(%rbp)
.Ltmp756:
	callq	__cxa_end_catch@PLT
.Ltmp757:
	jmp	.LBB112_6
.LBB112_6:
	jmp	.LBB112_7
.LBB112_7:
	movq	-64(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.LBB112_8:
.Ltmp758:
	movq	%rax, %rdi
                                        # kill: def $eax killed $edx killed $rdx
	callq	__clang_call_terminate
.LBB112_9:
.Lfunc_end112:
	.size	_ZNSt6vectorIN4seal7ModulusESaIS1_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEEEPS1_mT_SB_, .Lfunc_end112-_ZNSt6vectorIN4seal7ModulusESaIS1_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEEEPS1_mT_SB_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt6vectorIN4seal7ModulusESaIS1_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEEEPS1_mT_SB_,"aG",@progbits,_ZNSt6vectorIN4seal7ModulusESaIS1_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEEEPS1_mT_SB_,comdat
	.p2align	2
GCC_except_table112:
.Lexception30:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase3-.Lttbaseref3
.Lttbaseref3:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end30-.Lcst_begin30
.Lcst_begin30:
	.uleb128 .Lfunc_begin30-.Lfunc_begin30  # >> Call Site 1 <<
	.uleb128 .Ltmp748-.Lfunc_begin30        #   Call between .Lfunc_begin30 and .Ltmp748
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp748-.Lfunc_begin30        # >> Call Site 2 <<
	.uleb128 .Ltmp749-.Ltmp748              #   Call between .Ltmp748 and .Ltmp749
	.uleb128 .Ltmp750-.Lfunc_begin30        #     jumps to .Ltmp750
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp749-.Lfunc_begin30        # >> Call Site 3 <<
	.uleb128 .Ltmp751-.Ltmp749              #   Call between .Ltmp749 and .Ltmp751
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp751-.Lfunc_begin30        # >> Call Site 4 <<
	.uleb128 .Ltmp754-.Ltmp751              #   Call between .Ltmp751 and .Ltmp754
	.uleb128 .Ltmp755-.Lfunc_begin30        #     jumps to .Ltmp755
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp756-.Lfunc_begin30        # >> Call Site 5 <<
	.uleb128 .Ltmp757-.Ltmp756              #   Call between .Ltmp756 and .Ltmp757
	.uleb128 .Ltmp758-.Lfunc_begin30        #     jumps to .Ltmp758
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp757-.Lfunc_begin30        # >> Call Site 6 <<
	.uleb128 .Lfunc_end112-.Ltmp757         #   Call between .Ltmp757 and .Lfunc_end112
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end30:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase3:
	.p2align	2
                                        # -- End function
	.section	.text._ZSt8_DestroyIPN4seal7ModulusES1_EvT_S3_RSaIT0_E,"axG",@progbits,_ZSt8_DestroyIPN4seal7ModulusES1_EvT_S3_RSaIT0_E,comdat
	.weak	_ZSt8_DestroyIPN4seal7ModulusES1_EvT_S3_RSaIT0_E # -- Begin function _ZSt8_DestroyIPN4seal7ModulusES1_EvT_S3_RSaIT0_E
	.p2align	4, 0x90
	.type	_ZSt8_DestroyIPN4seal7ModulusES1_EvT_S3_RSaIT0_E,@function
_ZSt8_DestroyIPN4seal7ModulusES1_EvT_S3_RSaIT0_E: # @_ZSt8_DestroyIPN4seal7ModulusES1_EvT_S3_RSaIT0_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZSt8_DestroyIPN4seal7ModulusEEvT_S3_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end113:
	.size	_ZSt8_DestroyIPN4seal7ModulusES1_EvT_S3_RSaIT0_E, .Lfunc_end113-_ZSt8_DestroyIPN4seal7ModulusES1_EvT_S3_RSaIT0_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE19_M_get_Tp_allocatorEv,comdat
	.weak	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE19_M_get_Tp_allocatorEv # -- Begin function _ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE19_M_get_Tp_allocatorEv
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE19_M_get_Tp_allocatorEv,@function
_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE19_M_get_Tp_allocatorEv: # @_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE19_M_get_Tp_allocatorEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end114:
	.size	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE19_M_get_Tp_allocatorEv, .Lfunc_end114-_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE19_M_get_Tp_allocatorEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE13_M_deallocateEPS1_m,"axG",@progbits,_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE13_M_deallocateEPS1_m,comdat
	.weak	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE13_M_deallocateEPS1_m # -- Begin function _ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE13_M_deallocateEPS1_m
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE13_M_deallocateEPS1_m,@function
_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE13_M_deallocateEPS1_m: # @_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE13_M_deallocateEPS1_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	cmpq	$0, -16(%rbp)
	je	.LBB115_2
# %bb.1:
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZNSt16allocator_traitsISaIN4seal7ModulusEEE10deallocateERS2_PS1_m
.LBB115_2:
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end115:
	.size	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE13_M_deallocateEPS1_m, .Lfunc_end115-_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE13_M_deallocateEPS1_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS3_SaIS3_EEEES3_EvT_S9_RSaIT0_E,"axG",@progbits,_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS3_SaIS3_EEEES3_EvT_S9_RSaIT0_E,comdat
	.weak	_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS3_SaIS3_EEEES3_EvT_S9_RSaIT0_E # -- Begin function _ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS3_SaIS3_EEEES3_EvT_S9_RSaIT0_E
	.p2align	4, 0x90
	.type	_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS3_SaIS3_EEEES3_EvT_S9_RSaIT0_E,@function
_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS3_SaIS3_EEEES3_EvT_S9_RSaIT0_E: # @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS3_SaIS3_EEEES3_EvT_S9_RSaIT0_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -32(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-32(%rbp), %rdi
	movq	-40(%rbp), %rsi
	callq	_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS3_SaIS3_EEEEEvT_S9_
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end116:
	.size	_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS3_SaIS3_EEEES3_EvT_S9_RSaIT0_E, .Lfunc_end116-_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS3_SaIS3_EEEES3_EvT_S9_RSaIT0_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET0_T_SD_SC_,"axG",@progbits,_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET0_T_SD_SC_,comdat
	.weak	_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET0_T_SD_SC_ # -- Begin function _ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET0_T_SD_SC_
	.p2align	4, 0x90
	.type	_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET0_T_SD_SC_,@function
_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET0_T_SD_SC_: # @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET0_T_SD_SC_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rdx, -32(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-48(%rbp), %rdi
	callq	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEEET_SA_
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)
	movq	-64(%rbp), %rdi
	callq	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEEET_SA_
	movq	%rax, -56(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -72(%rbp)
	movq	-40(%rbp), %rdi
	movq	-56(%rbp), %rsi
	movq	-72(%rbp), %rdx
	callq	_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET1_T0_SD_SC_
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	addq	$80, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end117:
	.size	_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET0_T_SD_SC_, .Lfunc_end117-_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET0_T_SD_SC_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN4seal7ModulusESaIS1_EE5beginEv,"axG",@progbits,_ZNSt6vectorIN4seal7ModulusESaIS1_EE5beginEv,comdat
	.weak	_ZNSt6vectorIN4seal7ModulusESaIS1_EE5beginEv # -- Begin function _ZNSt6vectorIN4seal7ModulusESaIS1_EE5beginEv
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN4seal7ModulusESaIS1_EE5beginEv,@function
_ZNSt6vectorIN4seal7ModulusESaIS1_EE5beginEv: # @_ZNSt6vectorIN4seal7ModulusESaIS1_EE5beginEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -16(%rbp)
	movq	-16(%rbp), %rsi
	leaq	-8(%rbp), %rdi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEEC2ERKS3_
	movq	-8(%rbp), %rax
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end118:
	.size	_ZNSt6vectorIN4seal7ModulusESaIS1_EE5beginEv, .Lfunc_end118-_ZNSt6vectorIN4seal7ModulusESaIS1_EE5beginEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN4seal7ModulusESaIS1_EE3endEv,"axG",@progbits,_ZNSt6vectorIN4seal7ModulusESaIS1_EE3endEv,comdat
	.weak	_ZNSt6vectorIN4seal7ModulusESaIS1_EE3endEv # -- Begin function _ZNSt6vectorIN4seal7ModulusESaIS1_EE3endEv
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN4seal7ModulusESaIS1_EE3endEv,@function
_ZNSt6vectorIN4seal7ModulusESaIS1_EE3endEv: # @_ZNSt6vectorIN4seal7ModulusESaIS1_EE3endEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -16(%rbp)
	movq	-16(%rbp), %rsi
	addq	$8, %rsi
	leaq	-8(%rbp), %rdi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEEC2ERKS3_
	movq	-8(%rbp), %rax
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end119:
	.size	_ZNSt6vectorIN4seal7ModulusESaIS1_EE3endEv, .Lfunc_end119-_ZNSt6vectorIN4seal7ModulusESaIS1_EE3endEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4copyIPN4seal7ModulusES2_ET0_T_S4_S3_,"axG",@progbits,_ZSt4copyIPN4seal7ModulusES2_ET0_T_S4_S3_,comdat
	.weak	_ZSt4copyIPN4seal7ModulusES2_ET0_T_S4_S3_ # -- Begin function _ZSt4copyIPN4seal7ModulusES2_ET0_T_S4_S3_
	.p2align	4, 0x90
	.type	_ZSt4copyIPN4seal7ModulusES2_ET0_T_S4_S3_,@function
_ZSt4copyIPN4seal7ModulusES2_ET0_T_S4_S3_: # @_ZSt4copyIPN4seal7ModulusES2_ET0_T_S4_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt12__miter_baseIPN4seal7ModulusEET_S3_
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	callq	_ZSt12__miter_baseIPN4seal7ModulusEET_S3_
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rsi
	movq	-24(%rbp), %rdx
	callq	_ZSt13__copy_move_aILb0EPN4seal7ModulusES2_ET1_T0_S4_S3_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end120:
	.size	_ZSt4copyIPN4seal7ModulusES2_ET0_T_S4_S3_, .Lfunc_end120-_ZSt4copyIPN4seal7ModulusES2_ET0_T_S4_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt22__uninitialized_copy_aIPN4seal7ModulusES2_S1_ET0_T_S4_S3_RSaIT1_E,"axG",@progbits,_ZSt22__uninitialized_copy_aIPN4seal7ModulusES2_S1_ET0_T_S4_S3_RSaIT1_E,comdat
	.weak	_ZSt22__uninitialized_copy_aIPN4seal7ModulusES2_S1_ET0_T_S4_S3_RSaIT1_E # -- Begin function _ZSt22__uninitialized_copy_aIPN4seal7ModulusES2_S1_ET0_T_S4_S3_RSaIT1_E
	.p2align	4, 0x90
	.type	_ZSt22__uninitialized_copy_aIPN4seal7ModulusES2_S1_ET0_T_S4_S3_RSaIT1_E,@function
_ZSt22__uninitialized_copy_aIPN4seal7ModulusES2_S1_ET0_T_S4_S3_RSaIT1_E: # @_ZSt22__uninitialized_copy_aIPN4seal7ModulusES2_S1_ET0_T_S4_S3_RSaIT1_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZSt18uninitialized_copyIPN4seal7ModulusES2_ET0_T_S4_S3_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end121:
	.size	_ZSt22__uninitialized_copy_aIPN4seal7ModulusES2_S1_ET0_T_S4_S3_RSaIT1_E, .Lfunc_end121-_ZSt22__uninitialized_copy_aIPN4seal7ModulusES2_S1_ET0_T_S4_S3_RSaIT1_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE11_M_allocateEm,"axG",@progbits,_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE11_M_allocateEm,comdat
	.weak	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE11_M_allocateEm # -- Begin function _ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE11_M_allocateEm
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE11_M_allocateEm,@function
_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE11_M_allocateEm: # @_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE11_M_allocateEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -24(%rbp)                 # 8-byte Spill
	cmpq	$0, -16(%rbp)
	je	.LBB122_2
# %bb.1:
	movq	-24(%rbp), %rdi                 # 8-byte Reload
	movq	-16(%rbp), %rsi
	callq	_ZNSt16allocator_traitsISaIN4seal7ModulusEEE8allocateERS2_m
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	jmp	.LBB122_3
.LBB122_2:
	xorl	%eax, %eax
                                        # kill: def $rax killed $eax
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	jmp	.LBB122_3
.LBB122_3:
	movq	-32(%rbp), %rax                 # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end122:
	.size	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE11_M_allocateEm, .Lfunc_end122-_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE11_M_allocateEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E,"axG",@progbits,_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E,comdat
	.weak	_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E # -- Begin function _ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E
	.p2align	4, 0x90
	.type	_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E,@function
_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E: # @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-24(%rbp), %rdx
	movq	-40(%rbp), %rdi
	movq	-48(%rbp), %rsi
	callq	_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end123:
	.size	_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E, .Lfunc_end123-_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIN4seal7ModulusEEE8allocateERS2_m,"axG",@progbits,_ZNSt16allocator_traitsISaIN4seal7ModulusEEE8allocateERS2_m,comdat
	.weak	_ZNSt16allocator_traitsISaIN4seal7ModulusEEE8allocateERS2_m # -- Begin function _ZNSt16allocator_traitsISaIN4seal7ModulusEEE8allocateERS2_m
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIN4seal7ModulusEEE8allocateERS2_m,@function
_ZNSt16allocator_traitsISaIN4seal7ModulusEEE8allocateERS2_m: # @_ZNSt16allocator_traitsISaIN4seal7ModulusEEE8allocateERS2_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	xorl	%eax, %eax
	movl	%eax, %edx
	callq	_ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEE8allocateEmPKv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end124:
	.size	_ZNSt16allocator_traitsISaIN4seal7ModulusEEE8allocateERS2_m, .Lfunc_end124-_ZNSt16allocator_traitsISaIN4seal7ModulusEEE8allocateERS2_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEE8allocateEmPKv,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEE8allocateEmPKv,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEE8allocateEmPKv # -- Begin function _ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEE8allocateEmPKv
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEE8allocateEmPKv,@function
_ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEE8allocateEmPKv: # @_ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEE8allocateEmPKv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rax
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	callq	_ZNK9__gnu_cxx13new_allocatorIN4seal7ModulusEE11_M_max_sizeEv
	movq	%rax, %rcx
	movq	-32(%rbp), %rax                 # 8-byte Reload
	cmpq	%rcx, %rax
	jbe	.LBB125_4
# %bb.1:
	movabsq	$384307168202282325, %rax       # imm = 0x555555555555555
	cmpq	%rax, -16(%rbp)
	jbe	.LBB125_3
# %bb.2:
	callq	_ZSt28__throw_bad_array_new_lengthv@PLT
.LBB125_3:
	callq	_ZSt17__throw_bad_allocv@PLT
.LBB125_4:
	imulq	$48, -16(%rbp), %rdi
	callq	_Znwm@PLT
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end125:
	.size	_ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEE8allocateEmPKv, .Lfunc_end125-_ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEE8allocateEmPKv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx13new_allocatorIN4seal7ModulusEE11_M_max_sizeEv,"axG",@progbits,_ZNK9__gnu_cxx13new_allocatorIN4seal7ModulusEE11_M_max_sizeEv,comdat
	.weak	_ZNK9__gnu_cxx13new_allocatorIN4seal7ModulusEE11_M_max_sizeEv # -- Begin function _ZNK9__gnu_cxx13new_allocatorIN4seal7ModulusEE11_M_max_sizeEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx13new_allocatorIN4seal7ModulusEE11_M_max_sizeEv,@function
_ZNK9__gnu_cxx13new_allocatorIN4seal7ModulusEE11_M_max_sizeEv: # @_ZNK9__gnu_cxx13new_allocatorIN4seal7ModulusEE11_M_max_sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movabsq	$192153584101141162, %rax       # imm = 0x2AAAAAAAAAAAAAA
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end126:
	.size	_ZNK9__gnu_cxx13new_allocatorIN4seal7ModulusEE11_M_max_sizeEv, .Lfunc_end126-_ZNK9__gnu_cxx13new_allocatorIN4seal7ModulusEE11_M_max_sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_,"axG",@progbits,_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_,comdat
	.weak	_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_ # -- Begin function _ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_
	.p2align	4, 0x90
	.type	_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_,@function
_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_: # @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movb	$1, -25(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-24(%rbp), %rdx
	movq	-40(%rbp), %rdi
	movq	-48(%rbp), %rsi
	callq	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end127:
	.size	_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_, .Lfunc_end127-_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_,"axG",@progbits,_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_,comdat
	.weak	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_ # -- Begin function _ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_
	.p2align	4, 0x90
	.type	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_,@function
_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_: # @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_
.Lfunc_begin31:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception31
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -32(%rbp)
.LBB128_1:                              # =>This Inner Loop Header: Depth=1
	leaq	-8(%rbp), %rdi
	leaq	-16(%rbp), %rsi
	callq	_ZN9__gnu_cxxneIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_
	testb	$1, %al
	jne	.LBB128_2
	jmp	.LBB128_8
.LBB128_2:                              #   in Loop: Header=BB128_1 Depth=1
	movq	-32(%rbp), %rdi
	callq	_ZSt11__addressofIN4seal7ModulusEEPT_RS2_
	movq	%rax, -56(%rbp)                 # 8-byte Spill
	leaq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEdeEv
	movq	-56(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rsi
.Ltmp759:
	callq	_ZSt10_ConstructIN4seal7ModulusEJRKS1_EEvPT_DpOT0_
.Ltmp760:
	jmp	.LBB128_3
.LBB128_3:                              #   in Loop: Header=BB128_1 Depth=1
	jmp	.LBB128_4
.LBB128_4:                              #   in Loop: Header=BB128_1 Depth=1
	leaq	-8(%rbp), %rdi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEppEv
	movq	-32(%rbp), %rax
	addq	$48, %rax
	movq	%rax, -32(%rbp)
	jmp	.LBB128_1
.LBB128_5:
.Ltmp761:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -40(%rbp)
	movl	%eax, -44(%rbp)
# %bb.6:
	movq	-40(%rbp), %rdi
	callq	__cxa_begin_catch@PLT
	movq	-24(%rbp), %rdi
	movq	-32(%rbp), %rsi
.Ltmp762:
	callq	_ZSt8_DestroyIPN4seal7ModulusEEvT_S3_
.Ltmp763:
	jmp	.LBB128_7
.LBB128_7:
.Ltmp764:
	callq	__cxa_rethrow@PLT
.Ltmp765:
	jmp	.LBB128_13
.LBB128_8:
	movq	-32(%rbp), %rax
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB128_9:
	.cfi_def_cfa %rbp, 16
.Ltmp766:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -40(%rbp)
	movl	%eax, -44(%rbp)
.Ltmp767:
	callq	__cxa_end_catch@PLT
.Ltmp768:
	jmp	.LBB128_10
.LBB128_10:
	jmp	.LBB128_11
.LBB128_11:
	movq	-40(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.LBB128_12:
.Ltmp769:
	movq	%rax, %rdi
                                        # kill: def $eax killed $edx killed $rdx
	callq	__clang_call_terminate
.LBB128_13:
.Lfunc_end128:
	.size	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_, .Lfunc_end128-_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_,"aG",@progbits,_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_,comdat
	.p2align	2
GCC_except_table128:
.Lexception31:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase4-.Lttbaseref4
.Lttbaseref4:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end31-.Lcst_begin31
.Lcst_begin31:
	.uleb128 .Ltmp759-.Lfunc_begin31        # >> Call Site 1 <<
	.uleb128 .Ltmp760-.Ltmp759              #   Call between .Ltmp759 and .Ltmp760
	.uleb128 .Ltmp761-.Lfunc_begin31        #     jumps to .Ltmp761
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp760-.Lfunc_begin31        # >> Call Site 2 <<
	.uleb128 .Ltmp762-.Ltmp760              #   Call between .Ltmp760 and .Ltmp762
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp762-.Lfunc_begin31        # >> Call Site 3 <<
	.uleb128 .Ltmp765-.Ltmp762              #   Call between .Ltmp762 and .Ltmp765
	.uleb128 .Ltmp766-.Lfunc_begin31        #     jumps to .Ltmp766
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp767-.Lfunc_begin31        # >> Call Site 4 <<
	.uleb128 .Ltmp768-.Ltmp767              #   Call between .Ltmp767 and .Ltmp768
	.uleb128 .Ltmp769-.Lfunc_begin31        #     jumps to .Ltmp769
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp768-.Lfunc_begin31        # >> Call Site 5 <<
	.uleb128 .Lfunc_end128-.Ltmp768         #   Call between .Ltmp768 and .Lfunc_end128
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end31:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase4:
	.p2align	2
                                        # -- End function
	.section	.text._ZSt10_ConstructIN4seal7ModulusEJRKS1_EEvPT_DpOT0_,"axG",@progbits,_ZSt10_ConstructIN4seal7ModulusEJRKS1_EEvPT_DpOT0_,comdat
	.weak	_ZSt10_ConstructIN4seal7ModulusEJRKS1_EEvPT_DpOT0_ # -- Begin function _ZSt10_ConstructIN4seal7ModulusEJRKS1_EEvPT_DpOT0_
	.p2align	4, 0x90
	.type	_ZSt10_ConstructIN4seal7ModulusEJRKS1_EEvPT_DpOT0_,@function
_ZSt10_ConstructIN4seal7ModulusEJRKS1_EEvPT_DpOT0_: # @_ZSt10_ConstructIN4seal7ModulusEJRKS1_EEvPT_DpOT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -24(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	callq	_ZSt7forwardIRKN4seal7ModulusEEOT_RNSt16remove_referenceIS4_E4typeE
	movq	-24(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rsi
	movl	$48, %edx
	callq	memcpy@PLT
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end129:
	.size	_ZSt10_ConstructIN4seal7ModulusEJRKS1_EEvPT_DpOT0_, .Lfunc_end129-_ZSt10_ConstructIN4seal7ModulusEJRKS1_EEvPT_DpOT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt11__addressofIN4seal7ModulusEEPT_RS2_,"axG",@progbits,_ZSt11__addressofIN4seal7ModulusEEPT_RS2_,comdat
	.weak	_ZSt11__addressofIN4seal7ModulusEEPT_RS2_ # -- Begin function _ZSt11__addressofIN4seal7ModulusEEPT_RS2_
	.p2align	4, 0x90
	.type	_ZSt11__addressofIN4seal7ModulusEEPT_RS2_,@function
_ZSt11__addressofIN4seal7ModulusEEPT_RS2_: # @_ZSt11__addressofIN4seal7ModulusEEPT_RS2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end130:
	.size	_ZSt11__addressofIN4seal7ModulusEEPT_RS2_, .Lfunc_end130-_ZSt11__addressofIN4seal7ModulusEEPT_RS2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt8_DestroyIPN4seal7ModulusEEvT_S3_,"axG",@progbits,_ZSt8_DestroyIPN4seal7ModulusEEvT_S3_,comdat
	.weak	_ZSt8_DestroyIPN4seal7ModulusEEvT_S3_ # -- Begin function _ZSt8_DestroyIPN4seal7ModulusEEvT_S3_
	.p2align	4, 0x90
	.type	_ZSt8_DestroyIPN4seal7ModulusEEvT_S3_,@function
_ZSt8_DestroyIPN4seal7ModulusEEvT_S3_:  # @_ZSt8_DestroyIPN4seal7ModulusEEvT_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZNSt12_Destroy_auxILb1EE9__destroyIPN4seal7ModulusEEEvT_S5_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end131:
	.size	_ZSt8_DestroyIPN4seal7ModulusEEvT_S3_, .Lfunc_end131-_ZSt8_DestroyIPN4seal7ModulusEEvT_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt7forwardIRKN4seal7ModulusEEOT_RNSt16remove_referenceIS4_E4typeE,"axG",@progbits,_ZSt7forwardIRKN4seal7ModulusEEOT_RNSt16remove_referenceIS4_E4typeE,comdat
	.weak	_ZSt7forwardIRKN4seal7ModulusEEOT_RNSt16remove_referenceIS4_E4typeE # -- Begin function _ZSt7forwardIRKN4seal7ModulusEEOT_RNSt16remove_referenceIS4_E4typeE
	.p2align	4, 0x90
	.type	_ZSt7forwardIRKN4seal7ModulusEEOT_RNSt16remove_referenceIS4_E4typeE,@function
_ZSt7forwardIRKN4seal7ModulusEEOT_RNSt16remove_referenceIS4_E4typeE: # @_ZSt7forwardIRKN4seal7ModulusEEOT_RNSt16remove_referenceIS4_E4typeE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end132:
	.size	_ZSt7forwardIRKN4seal7ModulusEEOT_RNSt16remove_referenceIS4_E4typeE, .Lfunc_end132-_ZSt7forwardIRKN4seal7ModulusEEOT_RNSt16remove_referenceIS4_E4typeE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Destroy_auxILb1EE9__destroyIPN4seal7ModulusEEEvT_S5_,"axG",@progbits,_ZNSt12_Destroy_auxILb1EE9__destroyIPN4seal7ModulusEEEvT_S5_,comdat
	.weak	_ZNSt12_Destroy_auxILb1EE9__destroyIPN4seal7ModulusEEEvT_S5_ # -- Begin function _ZNSt12_Destroy_auxILb1EE9__destroyIPN4seal7ModulusEEEvT_S5_
	.p2align	4, 0x90
	.type	_ZNSt12_Destroy_auxILb1EE9__destroyIPN4seal7ModulusEEEvT_S5_,@function
_ZNSt12_Destroy_auxILb1EE9__destroyIPN4seal7ModulusEEEvT_S5_: # @_ZNSt12_Destroy_auxILb1EE9__destroyIPN4seal7ModulusEEEvT_S5_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end133:
	.size	_ZNSt12_Destroy_auxILb1EE9__destroyIPN4seal7ModulusEEEvT_S5_, .Lfunc_end133-_ZNSt12_Destroy_auxILb1EE9__destroyIPN4seal7ModulusEEEvT_S5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIN4seal7ModulusEEE10deallocateERS2_PS1_m,"axG",@progbits,_ZNSt16allocator_traitsISaIN4seal7ModulusEEE10deallocateERS2_PS1_m,comdat
	.weak	_ZNSt16allocator_traitsISaIN4seal7ModulusEEE10deallocateERS2_PS1_m # -- Begin function _ZNSt16allocator_traitsISaIN4seal7ModulusEEE10deallocateERS2_PS1_m
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIN4seal7ModulusEEE10deallocateERS2_PS1_m,@function
_ZNSt16allocator_traitsISaIN4seal7ModulusEEE10deallocateERS2_PS1_m: # @_ZNSt16allocator_traitsISaIN4seal7ModulusEEE10deallocateERS2_PS1_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEE10deallocateEPS2_m
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end134:
	.size	_ZNSt16allocator_traitsISaIN4seal7ModulusEEE10deallocateERS2_PS1_m, .Lfunc_end134-_ZNSt16allocator_traitsISaIN4seal7ModulusEEE10deallocateERS2_PS1_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEE10deallocateEPS2_m,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEE10deallocateEPS2_m,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEE10deallocateEPS2_m # -- Begin function _ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEE10deallocateEPS2_m
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEE10deallocateEPS2_m,@function
_ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEE10deallocateEPS2_m: # @_ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEE10deallocateEPS2_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZdlPv@PLT
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end135:
	.size	_ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEE10deallocateEPS2_m, .Lfunc_end135-_ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEE10deallocateEPS2_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS3_SaIS3_EEEEEvT_S9_,"axG",@progbits,_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS3_SaIS3_EEEEEvT_S9_,comdat
	.weak	_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS3_SaIS3_EEEEEvT_S9_ # -- Begin function _ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS3_SaIS3_EEEEEvT_S9_
	.p2align	4, 0x90
	.type	_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS3_SaIS3_EEEEEvT_S9_,@function
_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS3_SaIS3_EEEEEvT_S9_: # @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS3_SaIS3_EEEEEvT_S9_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -32(%rbp)
	movq	-24(%rbp), %rdi
	movq	-32(%rbp), %rsi
	callq	_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS5_SaIS5_EEEEEEvT_SB_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end136:
	.size	_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS3_SaIS3_EEEEEvT_S9_, .Lfunc_end136-_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS3_SaIS3_EEEEEvT_S9_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS5_SaIS5_EEEEEEvT_SB_,"axG",@progbits,_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS5_SaIS5_EEEEEEvT_SB_,comdat
	.weak	_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS5_SaIS5_EEEEEEvT_SB_ # -- Begin function _ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS5_SaIS5_EEEEEEvT_SB_
	.p2align	4, 0x90
	.type	_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS5_SaIS5_EEEEEEvT_SB_,@function
_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS5_SaIS5_EEEEEEvT_SB_: # @_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS5_SaIS5_EEEEEEvT_SB_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end137:
	.size	_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS5_SaIS5_EEEEEEvT_SB_, .Lfunc_end137-_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS5_SaIS5_EEEEEEvT_SB_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET1_T0_SD_SC_,"axG",@progbits,_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET1_T0_SD_SC_,comdat
	.weak	_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET1_T0_SD_SC_ # -- Begin function _ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET1_T0_SD_SC_
	.p2align	4, 0x90
	.type	_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET1_T0_SD_SC_,@function
_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET1_T0_SD_SC_: # @_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET1_T0_SD_SC_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rdx, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-48(%rbp), %rdi
	callq	_ZSt12__niter_baseIPKN4seal7ModulusESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE
	movq	%rax, -80(%rbp)                 # 8-byte Spill
	movq	-24(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rdi
	callq	_ZSt12__niter_baseIPKN4seal7ModulusESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE
	movq	%rax, -72(%rbp)                 # 8-byte Spill
	movq	-32(%rbp), %rax
	movq	%rax, -64(%rbp)
	movq	-64(%rbp), %rdi
	callq	_ZSt12__niter_baseIPN4seal7ModulusESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE
	movq	-80(%rbp), %rdi                 # 8-byte Reload
	movq	-72(%rbp), %rsi                 # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt14__copy_move_a1ILb0EPKN4seal7ModulusEPS1_ET1_T0_S6_S5_
	movq	%rax, %rsi
	movq	-40(%rbp), %rdi
	callq	_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	addq	$80, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end138:
	.size	_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET1_T0_SD_SC_, .Lfunc_end138-_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET1_T0_SD_SC_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEEET_SA_,"axG",@progbits,_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEEET_SA_,comdat
	.weak	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEEET_SA_ # -- Begin function _ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEEET_SA_
	.p2align	4, 0x90
	.type	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEEET_SA_,@function
_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEEET_SA_: # @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEEET_SA_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end139:
	.size	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEEET_SA_, .Lfunc_end139-_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEEET_SA_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_,"axG",@progbits,_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_,comdat
	.weak	_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_ # -- Begin function _ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_
	.p2align	4, 0x90
	.type	_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_,@function
_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_: # @_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -40(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rax
	movq	%rax, -32(%rbp)
	movq	-32(%rbp), %rdi
	callq	_ZSt12__niter_baseIPN4seal7ModulusESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE
	movq	%rax, %rcx
	movq	-40(%rbp), %rax                 # 8-byte Reload
	subq	%rcx, %rax
	movl	$48, %ecx
	cqto
	idivq	%rcx
	movq	%rax, %rsi
	leaq	-16(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEEplEl
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end140:
	.size	_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_, .Lfunc_end140-_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt14__copy_move_a1ILb0EPKN4seal7ModulusEPS1_ET1_T0_S6_S5_,"axG",@progbits,_ZSt14__copy_move_a1ILb0EPKN4seal7ModulusEPS1_ET1_T0_S6_S5_,comdat
	.weak	_ZSt14__copy_move_a1ILb0EPKN4seal7ModulusEPS1_ET1_T0_S6_S5_ # -- Begin function _ZSt14__copy_move_a1ILb0EPKN4seal7ModulusEPS1_ET1_T0_S6_S5_
	.p2align	4, 0x90
	.type	_ZSt14__copy_move_a1ILb0EPKN4seal7ModulusEPS1_ET1_T0_S6_S5_,@function
_ZSt14__copy_move_a1ILb0EPKN4seal7ModulusEPS1_ET1_T0_S6_S5_: # @_ZSt14__copy_move_a1ILb0EPKN4seal7ModulusEPS1_ET1_T0_S6_S5_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZSt14__copy_move_a2ILb0EPKN4seal7ModulusEPS1_ET1_T0_S6_S5_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end141:
	.size	_ZSt14__copy_move_a1ILb0EPKN4seal7ModulusEPS1_ET1_T0_S6_S5_, .Lfunc_end141-_ZSt14__copy_move_a1ILb0EPKN4seal7ModulusEPS1_ET1_T0_S6_S5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__niter_baseIPKN4seal7ModulusESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE,"axG",@progbits,_ZSt12__niter_baseIPKN4seal7ModulusESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE,comdat
	.weak	_ZSt12__niter_baseIPKN4seal7ModulusESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE # -- Begin function _ZSt12__niter_baseIPKN4seal7ModulusESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE
	.p2align	4, 0x90
	.type	_ZSt12__niter_baseIPKN4seal7ModulusESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE,@function
_ZSt12__niter_baseIPKN4seal7ModulusESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE: # @_ZSt12__niter_baseIPKN4seal7ModulusESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	leaq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rax
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end142:
	.size	_ZSt12__niter_baseIPKN4seal7ModulusESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE, .Lfunc_end142-_ZSt12__niter_baseIPKN4seal7ModulusESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__niter_baseIPN4seal7ModulusESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE,"axG",@progbits,_ZSt12__niter_baseIPN4seal7ModulusESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE,comdat
	.weak	_ZSt12__niter_baseIPN4seal7ModulusESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE # -- Begin function _ZSt12__niter_baseIPN4seal7ModulusESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE
	.p2align	4, 0x90
	.type	_ZSt12__niter_baseIPN4seal7ModulusESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE,@function
_ZSt12__niter_baseIPN4seal7ModulusESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE: # @_ZSt12__niter_baseIPN4seal7ModulusESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	leaq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rax
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end143:
	.size	_ZSt12__niter_baseIPN4seal7ModulusESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, .Lfunc_end143-_ZSt12__niter_baseIPN4seal7ModulusESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEEplEl,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEEplEl,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEEplEl # -- Begin function _ZNK9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEEplEl
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEEplEl,@function
_ZNK9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEEplEl: # @_ZNK9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEEplEl
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	imulq	$48, -24(%rbp), %rcx
	addq	%rcx, %rax
	movq	%rax, -32(%rbp)
	leaq	-8(%rbp), %rdi
	leaq	-32(%rbp), %rsi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEEC2ERKS3_
	movq	-8(%rbp), %rax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end144:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEEplEl, .Lfunc_end144-_ZNK9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEEplEl
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEEC2ERKS3_,"axG",@progbits,_ZN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEEC2ERKS3_,comdat
	.weak	_ZN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEEC2ERKS3_ # -- Begin function _ZN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEEC2ERKS3_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEEC2ERKS3_,@function
_ZN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEEC2ERKS3_: # @_ZN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEEC2ERKS3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	(%rcx), %rcx
	movq	%rcx, (%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end145:
	.size	_ZN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEEC2ERKS3_, .Lfunc_end145-_ZN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEEC2ERKS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt14__copy_move_a2ILb0EPKN4seal7ModulusEPS1_ET1_T0_S6_S5_,"axG",@progbits,_ZSt14__copy_move_a2ILb0EPKN4seal7ModulusEPS1_ET1_T0_S6_S5_,comdat
	.weak	_ZSt14__copy_move_a2ILb0EPKN4seal7ModulusEPS1_ET1_T0_S6_S5_ # -- Begin function _ZSt14__copy_move_a2ILb0EPKN4seal7ModulusEPS1_ET1_T0_S6_S5_
	.p2align	4, 0x90
	.type	_ZSt14__copy_move_a2ILb0EPKN4seal7ModulusEPS1_ET1_T0_S6_S5_,@function
_ZSt14__copy_move_a2ILb0EPKN4seal7ModulusEPS1_ET1_T0_S6_S5_: # @_ZSt14__copy_move_a2ILb0EPKN4seal7ModulusEPS1_ET1_T0_S6_S5_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN4seal7ModulusEEEPT_PKS5_S8_S6_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end146:
	.size	_ZSt14__copy_move_a2ILb0EPKN4seal7ModulusEPS1_ET1_T0_S6_S5_, .Lfunc_end146-_ZSt14__copy_move_a2ILb0EPKN4seal7ModulusEPS1_ET1_T0_S6_S5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN4seal7ModulusEEEPT_PKS5_S8_S6_,"axG",@progbits,_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN4seal7ModulusEEEPT_PKS5_S8_S6_,comdat
	.weak	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN4seal7ModulusEEEPT_PKS5_S8_S6_ # -- Begin function _ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN4seal7ModulusEEEPT_PKS5_S8_S6_
	.p2align	4, 0x90
	.type	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN4seal7ModulusEEEPT_PKS5_S8_S6_,@function
_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN4seal7ModulusEEEPT_PKS5_S8_S6_: # @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN4seal7ModulusEEEPT_PKS5_S8_S6_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	-8(%rbp), %rcx
	subq	%rcx, %rax
	movl	$48, %ecx
	cqto
	idivq	%rcx
	movq	%rax, -32(%rbp)
	cmpq	$0, -32(%rbp)
	je	.LBB147_2
# %bb.1:
	movq	-24(%rbp), %rdi
	movq	-8(%rbp), %rsi
	imulq	$48, -32(%rbp), %rdx
	callq	memmove@PLT
.LBB147_2:
	movq	-24(%rbp), %rax
	imulq	$48, -32(%rbp), %rcx
	addq	%rcx, %rax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end147:
	.size	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN4seal7ModulusEEEPT_PKS5_S8_S6_, .Lfunc_end147-_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN4seal7ModulusEEEPT_PKS5_S8_S6_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEE4baseEv,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEE4baseEv,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEE4baseEv # -- Begin function _ZNK9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEE4baseEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEE4baseEv,@function
_ZNK9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEE4baseEv: # @_ZNK9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEE4baseEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end148:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEE4baseEv, .Lfunc_end148-_ZNK9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEE4baseEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt13__copy_move_aILb0EPN4seal7ModulusES2_ET1_T0_S4_S3_,"axG",@progbits,_ZSt13__copy_move_aILb0EPN4seal7ModulusES2_ET1_T0_S4_S3_,comdat
	.weak	_ZSt13__copy_move_aILb0EPN4seal7ModulusES2_ET1_T0_S4_S3_ # -- Begin function _ZSt13__copy_move_aILb0EPN4seal7ModulusES2_ET1_T0_S4_S3_
	.p2align	4, 0x90
	.type	_ZSt13__copy_move_aILb0EPN4seal7ModulusES2_ET1_T0_S4_S3_,@function
_ZSt13__copy_move_aILb0EPN4seal7ModulusES2_ET1_T0_S4_S3_: # @_ZSt13__copy_move_aILb0EPN4seal7ModulusES2_ET1_T0_S4_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt12__niter_baseIPN4seal7ModulusEET_S3_
	movq	%rax, -40(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	callq	_ZSt12__niter_baseIPN4seal7ModulusEET_S3_
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	movq	-24(%rbp), %rdi
	callq	_ZSt12__niter_baseIPN4seal7ModulusEET_S3_
	movq	-40(%rbp), %rdi                 # 8-byte Reload
	movq	-32(%rbp), %rsi                 # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt14__copy_move_a1ILb0EPN4seal7ModulusES2_ET1_T0_S4_S3_
	movq	%rax, %rsi
	leaq	-24(%rbp), %rdi
	callq	_ZSt12__niter_wrapIPN4seal7ModulusEET_RKS3_S3_
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end149:
	.size	_ZSt13__copy_move_aILb0EPN4seal7ModulusES2_ET1_T0_S4_S3_, .Lfunc_end149-_ZSt13__copy_move_aILb0EPN4seal7ModulusES2_ET1_T0_S4_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__miter_baseIPN4seal7ModulusEET_S3_,"axG",@progbits,_ZSt12__miter_baseIPN4seal7ModulusEET_S3_,comdat
	.weak	_ZSt12__miter_baseIPN4seal7ModulusEET_S3_ # -- Begin function _ZSt12__miter_baseIPN4seal7ModulusEET_S3_
	.p2align	4, 0x90
	.type	_ZSt12__miter_baseIPN4seal7ModulusEET_S3_,@function
_ZSt12__miter_baseIPN4seal7ModulusEET_S3_: # @_ZSt12__miter_baseIPN4seal7ModulusEET_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end150:
	.size	_ZSt12__miter_baseIPN4seal7ModulusEET_S3_, .Lfunc_end150-_ZSt12__miter_baseIPN4seal7ModulusEET_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__niter_wrapIPN4seal7ModulusEET_RKS3_S3_,"axG",@progbits,_ZSt12__niter_wrapIPN4seal7ModulusEET_RKS3_S3_,comdat
	.weak	_ZSt12__niter_wrapIPN4seal7ModulusEET_RKS3_S3_ # -- Begin function _ZSt12__niter_wrapIPN4seal7ModulusEET_RKS3_S3_
	.p2align	4, 0x90
	.type	_ZSt12__niter_wrapIPN4seal7ModulusEET_RKS3_S3_,@function
_ZSt12__niter_wrapIPN4seal7ModulusEET_RKS3_S3_: # @_ZSt12__niter_wrapIPN4seal7ModulusEET_RKS3_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-16(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end151:
	.size	_ZSt12__niter_wrapIPN4seal7ModulusEET_RKS3_S3_, .Lfunc_end151-_ZSt12__niter_wrapIPN4seal7ModulusEET_RKS3_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt14__copy_move_a1ILb0EPN4seal7ModulusES2_ET1_T0_S4_S3_,"axG",@progbits,_ZSt14__copy_move_a1ILb0EPN4seal7ModulusES2_ET1_T0_S4_S3_,comdat
	.weak	_ZSt14__copy_move_a1ILb0EPN4seal7ModulusES2_ET1_T0_S4_S3_ # -- Begin function _ZSt14__copy_move_a1ILb0EPN4seal7ModulusES2_ET1_T0_S4_S3_
	.p2align	4, 0x90
	.type	_ZSt14__copy_move_a1ILb0EPN4seal7ModulusES2_ET1_T0_S4_S3_,@function
_ZSt14__copy_move_a1ILb0EPN4seal7ModulusES2_ET1_T0_S4_S3_: # @_ZSt14__copy_move_a1ILb0EPN4seal7ModulusES2_ET1_T0_S4_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZSt14__copy_move_a2ILb0EPN4seal7ModulusES2_ET1_T0_S4_S3_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end152:
	.size	_ZSt14__copy_move_a1ILb0EPN4seal7ModulusES2_ET1_T0_S4_S3_, .Lfunc_end152-_ZSt14__copy_move_a1ILb0EPN4seal7ModulusES2_ET1_T0_S4_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__niter_baseIPN4seal7ModulusEET_S3_,"axG",@progbits,_ZSt12__niter_baseIPN4seal7ModulusEET_S3_,comdat
	.weak	_ZSt12__niter_baseIPN4seal7ModulusEET_S3_ # -- Begin function _ZSt12__niter_baseIPN4seal7ModulusEET_S3_
	.p2align	4, 0x90
	.type	_ZSt12__niter_baseIPN4seal7ModulusEET_S3_,@function
_ZSt12__niter_baseIPN4seal7ModulusEET_S3_: # @_ZSt12__niter_baseIPN4seal7ModulusEET_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end153:
	.size	_ZSt12__niter_baseIPN4seal7ModulusEET_S3_, .Lfunc_end153-_ZSt12__niter_baseIPN4seal7ModulusEET_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt14__copy_move_a2ILb0EPN4seal7ModulusES2_ET1_T0_S4_S3_,"axG",@progbits,_ZSt14__copy_move_a2ILb0EPN4seal7ModulusES2_ET1_T0_S4_S3_,comdat
	.weak	_ZSt14__copy_move_a2ILb0EPN4seal7ModulusES2_ET1_T0_S4_S3_ # -- Begin function _ZSt14__copy_move_a2ILb0EPN4seal7ModulusES2_ET1_T0_S4_S3_
	.p2align	4, 0x90
	.type	_ZSt14__copy_move_a2ILb0EPN4seal7ModulusES2_ET1_T0_S4_S3_,@function
_ZSt14__copy_move_a2ILb0EPN4seal7ModulusES2_ET1_T0_S4_S3_: # @_ZSt14__copy_move_a2ILb0EPN4seal7ModulusES2_ET1_T0_S4_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN4seal7ModulusEEEPT_PKS5_S8_S6_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end154:
	.size	_ZSt14__copy_move_a2ILb0EPN4seal7ModulusES2_ET1_T0_S4_S3_, .Lfunc_end154-_ZSt14__copy_move_a2ILb0EPN4seal7ModulusES2_ET1_T0_S4_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt18uninitialized_copyIPN4seal7ModulusES2_ET0_T_S4_S3_,"axG",@progbits,_ZSt18uninitialized_copyIPN4seal7ModulusES2_ET0_T_S4_S3_,comdat
	.weak	_ZSt18uninitialized_copyIPN4seal7ModulusES2_ET0_T_S4_S3_ # -- Begin function _ZSt18uninitialized_copyIPN4seal7ModulusES2_ET0_T_S4_S3_
	.p2align	4, 0x90
	.type	_ZSt18uninitialized_copyIPN4seal7ModulusES2_ET0_T_S4_S3_,@function
_ZSt18uninitialized_copyIPN4seal7ModulusES2_ET0_T_S4_S3_: # @_ZSt18uninitialized_copyIPN4seal7ModulusES2_ET0_T_S4_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movb	$1, -25(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN4seal7ModulusES4_EET0_T_S6_S5_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end155:
	.size	_ZSt18uninitialized_copyIPN4seal7ModulusES2_ET0_T_S4_S3_, .Lfunc_end155-_ZSt18uninitialized_copyIPN4seal7ModulusES2_ET0_T_S4_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN4seal7ModulusES4_EET0_T_S6_S5_,"axG",@progbits,_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN4seal7ModulusES4_EET0_T_S6_S5_,comdat
	.weak	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN4seal7ModulusES4_EET0_T_S6_S5_ # -- Begin function _ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN4seal7ModulusES4_EET0_T_S6_S5_
	.p2align	4, 0x90
	.type	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN4seal7ModulusES4_EET0_T_S6_S5_,@function
_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN4seal7ModulusES4_EET0_T_S6_S5_: # @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN4seal7ModulusES4_EET0_T_S6_S5_
.Lfunc_begin32:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception32
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -32(%rbp)
.LBB156_1:                              # =>This Inner Loop Header: Depth=1
	movq	-8(%rbp), %rax
	cmpq	-16(%rbp), %rax
	je	.LBB156_8
# %bb.2:                                #   in Loop: Header=BB156_1 Depth=1
	movq	-32(%rbp), %rdi
	callq	_ZSt11__addressofIN4seal7ModulusEEPT_RS2_
	movq	%rax, %rdi
	movq	-8(%rbp), %rsi
.Ltmp770:
	callq	_ZSt10_ConstructIN4seal7ModulusEJRS1_EEvPT_DpOT0_
.Ltmp771:
	jmp	.LBB156_3
.LBB156_3:                              #   in Loop: Header=BB156_1 Depth=1
	jmp	.LBB156_4
.LBB156_4:                              #   in Loop: Header=BB156_1 Depth=1
	movq	-8(%rbp), %rax
	addq	$48, %rax
	movq	%rax, -8(%rbp)
	movq	-32(%rbp), %rax
	addq	$48, %rax
	movq	%rax, -32(%rbp)
	jmp	.LBB156_1
.LBB156_5:
.Ltmp772:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -40(%rbp)
	movl	%eax, -44(%rbp)
# %bb.6:
	movq	-40(%rbp), %rdi
	callq	__cxa_begin_catch@PLT
	movq	-24(%rbp), %rdi
	movq	-32(%rbp), %rsi
.Ltmp773:
	callq	_ZSt8_DestroyIPN4seal7ModulusEEvT_S3_
.Ltmp774:
	jmp	.LBB156_7
.LBB156_7:
.Ltmp775:
	callq	__cxa_rethrow@PLT
.Ltmp776:
	jmp	.LBB156_13
.LBB156_8:
	movq	-32(%rbp), %rax
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB156_9:
	.cfi_def_cfa %rbp, 16
.Ltmp777:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -40(%rbp)
	movl	%eax, -44(%rbp)
.Ltmp778:
	callq	__cxa_end_catch@PLT
.Ltmp779:
	jmp	.LBB156_10
.LBB156_10:
	jmp	.LBB156_11
.LBB156_11:
	movq	-40(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.LBB156_12:
.Ltmp780:
	movq	%rax, %rdi
                                        # kill: def $eax killed $edx killed $rdx
	callq	__clang_call_terminate
.LBB156_13:
.Lfunc_end156:
	.size	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN4seal7ModulusES4_EET0_T_S6_S5_, .Lfunc_end156-_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN4seal7ModulusES4_EET0_T_S6_S5_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN4seal7ModulusES4_EET0_T_S6_S5_,"aG",@progbits,_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN4seal7ModulusES4_EET0_T_S6_S5_,comdat
	.p2align	2
GCC_except_table156:
.Lexception32:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase5-.Lttbaseref5
.Lttbaseref5:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end32-.Lcst_begin32
.Lcst_begin32:
	.uleb128 .Ltmp770-.Lfunc_begin32        # >> Call Site 1 <<
	.uleb128 .Ltmp771-.Ltmp770              #   Call between .Ltmp770 and .Ltmp771
	.uleb128 .Ltmp772-.Lfunc_begin32        #     jumps to .Ltmp772
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp771-.Lfunc_begin32        # >> Call Site 2 <<
	.uleb128 .Ltmp773-.Ltmp771              #   Call between .Ltmp771 and .Ltmp773
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp773-.Lfunc_begin32        # >> Call Site 3 <<
	.uleb128 .Ltmp776-.Ltmp773              #   Call between .Ltmp773 and .Ltmp776
	.uleb128 .Ltmp777-.Lfunc_begin32        #     jumps to .Ltmp777
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp778-.Lfunc_begin32        # >> Call Site 4 <<
	.uleb128 .Ltmp779-.Ltmp778              #   Call between .Ltmp778 and .Ltmp779
	.uleb128 .Ltmp780-.Lfunc_begin32        #     jumps to .Ltmp780
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp779-.Lfunc_begin32        # >> Call Site 5 <<
	.uleb128 .Lfunc_end156-.Ltmp779         #   Call between .Ltmp779 and .Lfunc_end156
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end32:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase5:
	.p2align	2
                                        # -- End function
	.section	.text._ZSt10_ConstructIN4seal7ModulusEJRS1_EEvPT_DpOT0_,"axG",@progbits,_ZSt10_ConstructIN4seal7ModulusEJRS1_EEvPT_DpOT0_,comdat
	.weak	_ZSt10_ConstructIN4seal7ModulusEJRS1_EEvPT_DpOT0_ # -- Begin function _ZSt10_ConstructIN4seal7ModulusEJRS1_EEvPT_DpOT0_
	.p2align	4, 0x90
	.type	_ZSt10_ConstructIN4seal7ModulusEJRS1_EEvPT_DpOT0_,@function
_ZSt10_ConstructIN4seal7ModulusEJRS1_EEvPT_DpOT0_: # @_ZSt10_ConstructIN4seal7ModulusEJRS1_EEvPT_DpOT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -24(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	callq	_ZSt7forwardIRN4seal7ModulusEEOT_RNSt16remove_referenceIS3_E4typeE
	movq	-24(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rsi
	movl	$48, %edx
	callq	memcpy@PLT
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end157:
	.size	_ZSt10_ConstructIN4seal7ModulusEJRS1_EEvPT_DpOT0_, .Lfunc_end157-_ZSt10_ConstructIN4seal7ModulusEJRS1_EEvPT_DpOT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt7forwardIRN4seal7ModulusEEOT_RNSt16remove_referenceIS3_E4typeE,"axG",@progbits,_ZSt7forwardIRN4seal7ModulusEEOT_RNSt16remove_referenceIS3_E4typeE,comdat
	.weak	_ZSt7forwardIRN4seal7ModulusEEOT_RNSt16remove_referenceIS3_E4typeE # -- Begin function _ZSt7forwardIRN4seal7ModulusEEOT_RNSt16remove_referenceIS3_E4typeE
	.p2align	4, 0x90
	.type	_ZSt7forwardIRN4seal7ModulusEEOT_RNSt16remove_referenceIS3_E4typeE,@function
_ZSt7forwardIRN4seal7ModulusEEOT_RNSt16remove_referenceIS3_E4typeE: # @_ZSt7forwardIRN4seal7ModulusEEOT_RNSt16remove_referenceIS3_E4typeE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end158:
	.size	_ZSt7forwardIRN4seal7ModulusEEOT_RNSt16remove_referenceIS3_E4typeE, .Lfunc_end158-_ZSt7forwardIRN4seal7ModulusEEOT_RNSt16remove_referenceIS3_E4typeE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal20EncryptionParametersC2ERKS0_,"axG",@progbits,_ZN4seal20EncryptionParametersC2ERKS0_,comdat
	.weak	_ZN4seal20EncryptionParametersC2ERKS0_ # -- Begin function _ZN4seal20EncryptionParametersC2ERKS0_
	.p2align	4, 0x90
	.type	_ZN4seal20EncryptionParametersC2ERKS0_,@function
_ZN4seal20EncryptionParametersC2ERKS0_: # @_ZN4seal20EncryptionParametersC2ERKS0_
.Lfunc_begin33:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception33
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -40(%rbp)                 # 8-byte Spill
	movq	%rdi, %rax
	movq	%rax, -48(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rsi
	callq	_ZN4seal16MemoryPoolHandleC2ERKS0_
	movq	-40(%rbp), %rdi                 # 8-byte Reload
	movq	-16(%rbp), %rax
	movups	16(%rax), %xmm0
	movups	%xmm0, 16(%rdi)
	addq	$32, %rdi
	movq	-16(%rbp), %rsi
	addq	$32, %rsi
.Ltmp781:
	callq	_ZNSt6vectorIN4seal7ModulusESaIS1_EEC2ERKS3_
.Ltmp782:
	jmp	.LBB159_1
.LBB159_1:
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	addq	$56, %rdi
	movq	-16(%rbp), %rsi
	addq	$56, %rsi
	callq	_ZNSt10shared_ptrIN4seal29UniformRandomGeneratorFactoryEEC2ERKS2_
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	addq	$72, %rdi
	movq	-16(%rbp), %rsi
	addq	$72, %rsi
	movl	$80, %edx
	callq	memcpy@PLT
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB159_2:
	.cfi_def_cfa %rbp, 16
.Ltmp783:
	movq	-40(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -24(%rbp)
	movl	%eax, -28(%rbp)
	callq	_ZN4seal16MemoryPoolHandleD2Ev
# %bb.3:
	movq	-24(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end159:
	.size	_ZN4seal20EncryptionParametersC2ERKS0_, .Lfunc_end159-_ZN4seal20EncryptionParametersC2ERKS0_
	.cfi_endproc
	.section	.gcc_except_table._ZN4seal20EncryptionParametersC2ERKS0_,"aG",@progbits,_ZN4seal20EncryptionParametersC2ERKS0_,comdat
	.p2align	2
GCC_except_table159:
.Lexception33:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end33-.Lcst_begin33
.Lcst_begin33:
	.uleb128 .Ltmp781-.Lfunc_begin33        # >> Call Site 1 <<
	.uleb128 .Ltmp782-.Ltmp781              #   Call between .Ltmp781 and .Ltmp782
	.uleb128 .Ltmp783-.Lfunc_begin33        #     jumps to .Ltmp783
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp782-.Lfunc_begin33        # >> Call Site 2 <<
	.uleb128 .Lfunc_end159-.Ltmp782         #   Call between .Ltmp782 and .Lfunc_end159
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end33:
	.p2align	2
                                        # -- End function
	.section	.text._ZN4seal16MemoryPoolHandleC2ERKS0_,"axG",@progbits,_ZN4seal16MemoryPoolHandleC2ERKS0_,comdat
	.weak	_ZN4seal16MemoryPoolHandleC2ERKS0_ # -- Begin function _ZN4seal16MemoryPoolHandleC2ERKS0_
	.p2align	4, 0x90
	.type	_ZN4seal16MemoryPoolHandleC2ERKS0_,@function
_ZN4seal16MemoryPoolHandleC2ERKS0_:     # @_ZN4seal16MemoryPoolHandleC2ERKS0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -24(%rbp)                 # 8-byte Spill
	xorl	%eax, %eax
	movl	%eax, %esi
	callq	_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2EDn
	movq	-24(%rbp), %rdi                 # 8-byte Reload
	movq	-16(%rbp), %rsi
	callq	_ZN4seal16MemoryPoolHandleaSERKS0_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end160:
	.size	_ZN4seal16MemoryPoolHandleC2ERKS0_, .Lfunc_end160-_ZN4seal16MemoryPoolHandleC2ERKS0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN4seal7ModulusESaIS1_EEC2ERKS3_,"axG",@progbits,_ZNSt6vectorIN4seal7ModulusESaIS1_EEC2ERKS3_,comdat
	.weak	_ZNSt6vectorIN4seal7ModulusESaIS1_EEC2ERKS3_ # -- Begin function _ZNSt6vectorIN4seal7ModulusESaIS1_EEC2ERKS3_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN4seal7ModulusESaIS1_EEC2ERKS3_,@function
_ZNSt6vectorIN4seal7ModulusESaIS1_EEC2ERKS3_: # @_ZNSt6vectorIN4seal7ModulusESaIS1_EEC2ERKS3_
.Lfunc_begin34:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception34
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -80(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	callq	_ZNKSt6vectorIN4seal7ModulusESaIS1_EE4sizeEv
	movq	%rax, -72(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	callq	_ZNKSt12_Vector_baseIN4seal7ModulusESaIS1_EE19_M_get_Tp_allocatorEv
	movq	%rax, %rsi
	leaq	-24(%rbp), %rdi
	movq	%rdi, -64(%rbp)                 # 8-byte Spill
	callq	_ZN9__gnu_cxx14__alloc_traitsISaIN4seal7ModulusEES2_E17_S_select_on_copyERKS3_
	movq	-80(%rbp), %rdi                 # 8-byte Reload
	movq	-72(%rbp), %rsi                 # 8-byte Reload
	movq	-64(%rbp), %rdx                 # 8-byte Reload
.Ltmp784:
	callq	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EEC2EmRKS2_
.Ltmp785:
	jmp	.LBB161_1
.LBB161_1:
	leaq	-24(%rbp), %rdi
	callq	_ZNSaIN4seal7ModulusEED2Ev
	movq	-16(%rbp), %rdi
	callq	_ZNKSt6vectorIN4seal7ModulusESaIS1_EE5beginEv
	movq	%rax, -48(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZNKSt6vectorIN4seal7ModulusESaIS1_EE3endEv
	movq	-80(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, -56(%rbp)
	movq	(%rdi), %rax
	movq	%rax, -96(%rbp)                 # 8-byte Spill
	callq	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE19_M_get_Tp_allocatorEv
	movq	-96(%rbp), %rdx                 # 8-byte Reload
	movq	%rax, %rcx
	movq	-48(%rbp), %rdi
	movq	-56(%rbp), %rsi
.Ltmp787:
	callq	_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E
.Ltmp788:
	movq	%rax, -88(%rbp)                 # 8-byte Spill
	jmp	.LBB161_2
.LBB161_2:
	movq	-80(%rbp), %rax                 # 8-byte Reload
	movq	-88(%rbp), %rcx                 # 8-byte Reload
	movq	%rcx, 8(%rax)
	addq	$96, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB161_3:
	.cfi_def_cfa %rbp, 16
.Ltmp786:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -32(%rbp)
	movl	%eax, -36(%rbp)
	leaq	-24(%rbp), %rdi
	callq	_ZNSaIN4seal7ModulusEED2Ev
	jmp	.LBB161_5
.LBB161_4:
.Ltmp789:
	movq	-80(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -32(%rbp)
	movl	%eax, -36(%rbp)
	callq	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EED2Ev
.LBB161_5:
	movq	-32(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end161:
	.size	_ZNSt6vectorIN4seal7ModulusESaIS1_EEC2ERKS3_, .Lfunc_end161-_ZNSt6vectorIN4seal7ModulusESaIS1_EEC2ERKS3_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt6vectorIN4seal7ModulusESaIS1_EEC2ERKS3_,"aG",@progbits,_ZNSt6vectorIN4seal7ModulusESaIS1_EEC2ERKS3_,comdat
	.p2align	2
GCC_except_table161:
.Lexception34:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end34-.Lcst_begin34
.Lcst_begin34:
	.uleb128 .Lfunc_begin34-.Lfunc_begin34  # >> Call Site 1 <<
	.uleb128 .Ltmp784-.Lfunc_begin34        #   Call between .Lfunc_begin34 and .Ltmp784
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp784-.Lfunc_begin34        # >> Call Site 2 <<
	.uleb128 .Ltmp785-.Ltmp784              #   Call between .Ltmp784 and .Ltmp785
	.uleb128 .Ltmp786-.Lfunc_begin34        #     jumps to .Ltmp786
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp787-.Lfunc_begin34        # >> Call Site 3 <<
	.uleb128 .Ltmp788-.Ltmp787              #   Call between .Ltmp787 and .Ltmp788
	.uleb128 .Ltmp789-.Lfunc_begin34        #     jumps to .Ltmp789
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp788-.Lfunc_begin34        # >> Call Site 4 <<
	.uleb128 .Lfunc_end161-.Ltmp788         #   Call between .Ltmp788 and .Lfunc_end161
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end34:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt10shared_ptrIN4seal29UniformRandomGeneratorFactoryEEC2ERKS2_,"axG",@progbits,_ZNSt10shared_ptrIN4seal29UniformRandomGeneratorFactoryEEC2ERKS2_,comdat
	.weak	_ZNSt10shared_ptrIN4seal29UniformRandomGeneratorFactoryEEC2ERKS2_ # -- Begin function _ZNSt10shared_ptrIN4seal29UniformRandomGeneratorFactoryEEC2ERKS2_
	.p2align	4, 0x90
	.type	_ZNSt10shared_ptrIN4seal29UniformRandomGeneratorFactoryEEC2ERKS2_,@function
_ZNSt10shared_ptrIN4seal29UniformRandomGeneratorFactoryEEC2ERKS2_: # @_ZNSt10shared_ptrIN4seal29UniformRandomGeneratorFactoryEEC2ERKS2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZNSt12__shared_ptrIN4seal29UniformRandomGeneratorFactoryELN9__gnu_cxx12_Lock_policyE2EEC2ERKS4_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end162:
	.size	_ZNSt10shared_ptrIN4seal29UniformRandomGeneratorFactoryEEC2ERKS2_, .Lfunc_end162-_ZNSt10shared_ptrIN4seal29UniformRandomGeneratorFactoryEEC2ERKS2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2EDn,"axG",@progbits,_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2EDn,comdat
	.weak	_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2EDn # -- Begin function _ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2EDn
	.p2align	4, 0x90
	.type	_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2EDn,@function
_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2EDn: # @_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2EDn
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end163:
	.size	_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2EDn, .Lfunc_end163-_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2EDn
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal16MemoryPoolHandleaSERKS0_,"axG",@progbits,_ZN4seal16MemoryPoolHandleaSERKS0_,comdat
	.weak	_ZN4seal16MemoryPoolHandleaSERKS0_ # -- Begin function _ZN4seal16MemoryPoolHandleaSERKS0_
	.p2align	4, 0x90
	.type	_ZN4seal16MemoryPoolHandleaSERKS0_,@function
_ZN4seal16MemoryPoolHandleaSERKS0_:     # @_ZN4seal16MemoryPoolHandleaSERKS0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -24(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rsi
	callq	_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEaSERKS3_
                                        # kill: def $rcx killed $rax
	movq	-24(%rbp), %rax                 # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end164:
	.size	_ZN4seal16MemoryPoolHandleaSERKS0_, .Lfunc_end164-_ZN4seal16MemoryPoolHandleaSERKS0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2Ev,"axG",@progbits,_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2Ev,comdat
	.weak	_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2Ev # -- Begin function _ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2Ev,@function
_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2Ev: # @_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end165:
	.size	_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2Ev, .Lfunc_end165-_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEC2Ev,"axG",@progbits,_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEC2Ev,comdat
	.weak	_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEC2Ev # -- Begin function _ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEC2Ev,@function
_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEC2Ev: # @_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	$0, (%rdi)
	addq	$8, %rdi
	callq	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end166:
	.size	_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEC2Ev, .Lfunc_end166-_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt10shared_ptrIN4seal4util10MemoryPoolEEaSERKS3_,"axG",@progbits,_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEaSERKS3_,comdat
	.weak	_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEaSERKS3_ # -- Begin function _ZNSt10shared_ptrIN4seal4util10MemoryPoolEEaSERKS3_
	.p2align	4, 0x90
	.type	_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEaSERKS3_,@function
_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEaSERKS3_: # @_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEaSERKS3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -24(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rsi
	callq	_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEaSERKS5_
                                        # kill: def $rcx killed $rax
	movq	-24(%rbp), %rax                 # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end167:
	.size	_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEaSERKS3_, .Lfunc_end167-_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEaSERKS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEaSERKS5_,"axG",@progbits,_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEaSERKS5_,comdat
	.weak	_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEaSERKS5_ # -- Begin function _ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEaSERKS5_
	.p2align	4, 0x90
	.type	_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEaSERKS5_,@function
_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEaSERKS5_: # @_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEaSERKS5_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -24(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, (%rdi)
	addq	$8, %rdi
	movq	-16(%rbp), %rsi
	addq	$8, %rsi
	callq	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEaSERKS2_
                                        # kill: def $rcx killed $rax
	movq	-24(%rbp), %rax                 # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end168:
	.size	_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEaSERKS5_, .Lfunc_end168-_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEaSERKS5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEaSERKS2_,"axG",@progbits,_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEaSERKS2_,comdat
	.weak	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEaSERKS2_ # -- Begin function _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEaSERKS2_
	.p2align	4, 0x90
	.type	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEaSERKS2_,@function
_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEaSERKS2_: # @_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEaSERKS2_
.Lfunc_begin35:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception35
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rcx
	movq	%rcx, -32(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, -24(%rbp)
	movq	-24(%rbp), %rax
	cmpq	(%rcx), %rax
	je	.LBB169_7
# %bb.1:
	cmpq	$0, -24(%rbp)
	je	.LBB169_4
# %bb.2:
	movq	-24(%rbp), %rdi
.Ltmp790:
	callq	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE15_M_add_ref_copyEv
.Ltmp791:
	jmp	.LBB169_3
.LBB169_3:
	jmp	.LBB169_4
.LBB169_4:
	movq	-32(%rbp), %rax                 # 8-byte Reload
	cmpq	$0, (%rax)
	je	.LBB169_6
# %bb.5:
	movq	-32(%rbp), %rax                 # 8-byte Reload
	movq	(%rax), %rdi
	callq	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv
.LBB169_6:
	movq	-32(%rbp), %rax                 # 8-byte Reload
	movq	-24(%rbp), %rcx
	movq	%rcx, (%rax)
.LBB169_7:
	movq	-32(%rbp), %rax                 # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB169_8:
	.cfi_def_cfa %rbp, 16
.Ltmp792:
	movq	%rax, %rdi
                                        # kill: def $eax killed $edx killed $rdx
	callq	__clang_call_terminate
.Lfunc_end169:
	.size	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEaSERKS2_, .Lfunc_end169-_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEaSERKS2_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEaSERKS2_,"aG",@progbits,_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEaSERKS2_,comdat
	.p2align	2
GCC_except_table169:
.Lexception35:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase6-.Lttbaseref6
.Lttbaseref6:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end35-.Lcst_begin35
.Lcst_begin35:
	.uleb128 .Ltmp790-.Lfunc_begin35        # >> Call Site 1 <<
	.uleb128 .Ltmp791-.Ltmp790              #   Call between .Ltmp790 and .Ltmp791
	.uleb128 .Ltmp792-.Lfunc_begin35        #     jumps to .Ltmp792
	.byte	1                               #   On action: 1
.Lcst_end35:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase6:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE15_M_add_ref_copyEv,"axG",@progbits,_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE15_M_add_ref_copyEv,comdat
	.weak	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE15_M_add_ref_copyEv # -- Begin function _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE15_M_add_ref_copyEv
	.p2align	4, 0x90
	.type	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE15_M_add_ref_copyEv,@function
_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE15_M_add_ref_copyEv: # @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE15_M_add_ref_copyEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -64(%rbp)
	movq	-64(%rbp), %rax
	addq	$8, %rax
	movq	%rax, -48(%rbp)
	movl	$1, -52(%rbp)
	movq	__libc_single_threaded@GOTPCREL(%rip), %rax
	cmpb	$0, (%rax)
	je	.LBB170_2
# %bb.1:
	movq	-48(%rbp), %rcx
	movl	-52(%rbp), %eax
	movq	%rcx, -32(%rbp)
	movl	%eax, -36(%rbp)
	movl	-36(%rbp), %ecx
	movq	-32(%rbp), %rax
	addl	(%rax), %ecx
	movl	%ecx, (%rax)
	jmp	.LBB170_3
.LBB170_2:
	movq	-48(%rbp), %rcx
	movl	-52(%rbp), %eax
	movq	%rcx, -8(%rbp)
	movl	%eax, -12(%rbp)
	movq	-8(%rbp), %rcx
	movl	-12(%rbp), %eax
	movl	%eax, -16(%rbp)
	movl	-16(%rbp), %eax
	lock		xaddl	%eax, (%rcx)
	movl	%eax, -20(%rbp)
.LBB170_3:
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end170:
	.size	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE15_M_add_ref_copyEv, .Lfunc_end170-_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE15_M_add_ref_copyEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx14__alloc_traitsISaIN4seal7ModulusEES2_E17_S_select_on_copyERKS3_,"axG",@progbits,_ZN9__gnu_cxx14__alloc_traitsISaIN4seal7ModulusEES2_E17_S_select_on_copyERKS3_,comdat
	.weak	_ZN9__gnu_cxx14__alloc_traitsISaIN4seal7ModulusEES2_E17_S_select_on_copyERKS3_ # -- Begin function _ZN9__gnu_cxx14__alloc_traitsISaIN4seal7ModulusEES2_E17_S_select_on_copyERKS3_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx14__alloc_traitsISaIN4seal7ModulusEES2_E17_S_select_on_copyERKS3_,@function
_ZN9__gnu_cxx14__alloc_traitsISaIN4seal7ModulusEES2_E17_S_select_on_copyERKS3_: # @_ZN9__gnu_cxx14__alloc_traitsISaIN4seal7ModulusEES2_E17_S_select_on_copyERKS3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, %rax
	movq	%rax, -24(%rbp)                 # 8-byte Spill
	movq	%rdi, %rax
	movq	%rax, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-16(%rbp), %rsi
	callq	_ZNSt16allocator_traitsISaIN4seal7ModulusEEE37select_on_container_copy_constructionERKS2_
	movq	-24(%rbp), %rax                 # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end171:
	.size	_ZN9__gnu_cxx14__alloc_traitsISaIN4seal7ModulusEES2_E17_S_select_on_copyERKS3_, .Lfunc_end171-_ZN9__gnu_cxx14__alloc_traitsISaIN4seal7ModulusEES2_E17_S_select_on_copyERKS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt12_Vector_baseIN4seal7ModulusESaIS1_EE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNKSt12_Vector_baseIN4seal7ModulusESaIS1_EE19_M_get_Tp_allocatorEv,comdat
	.weak	_ZNKSt12_Vector_baseIN4seal7ModulusESaIS1_EE19_M_get_Tp_allocatorEv # -- Begin function _ZNKSt12_Vector_baseIN4seal7ModulusESaIS1_EE19_M_get_Tp_allocatorEv
	.p2align	4, 0x90
	.type	_ZNKSt12_Vector_baseIN4seal7ModulusESaIS1_EE19_M_get_Tp_allocatorEv,@function
_ZNKSt12_Vector_baseIN4seal7ModulusESaIS1_EE19_M_get_Tp_allocatorEv: # @_ZNKSt12_Vector_baseIN4seal7ModulusESaIS1_EE19_M_get_Tp_allocatorEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end172:
	.size	_ZNKSt12_Vector_baseIN4seal7ModulusESaIS1_EE19_M_get_Tp_allocatorEv, .Lfunc_end172-_ZNKSt12_Vector_baseIN4seal7ModulusESaIS1_EE19_M_get_Tp_allocatorEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EEC2EmRKS2_,"axG",@progbits,_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EEC2EmRKS2_,comdat
	.weak	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EEC2EmRKS2_ # -- Begin function _ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EEC2EmRKS2_
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EEC2EmRKS2_,@function
_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EEC2EmRKS2_: # @_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EEC2EmRKS2_
.Lfunc_begin36:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception36
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -48(%rbp)                 # 8-byte Spill
	movq	-24(%rbp), %rsi
	callq	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE12_Vector_implC2ERKS2_
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	movq	-16(%rbp), %rsi
.Ltmp793:
	callq	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE17_M_create_storageEm
.Ltmp794:
	jmp	.LBB173_1
.LBB173_1:
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB173_2:
	.cfi_def_cfa %rbp, 16
.Ltmp795:
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -32(%rbp)
	movl	%eax, -36(%rbp)
	callq	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE12_Vector_implD2Ev
# %bb.3:
	movq	-32(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end173:
	.size	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EEC2EmRKS2_, .Lfunc_end173-_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EEC2EmRKS2_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EEC2EmRKS2_,"aG",@progbits,_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EEC2EmRKS2_,comdat
	.p2align	2
GCC_except_table173:
.Lexception36:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end36-.Lcst_begin36
.Lcst_begin36:
	.uleb128 .Ltmp793-.Lfunc_begin36        # >> Call Site 1 <<
	.uleb128 .Ltmp794-.Ltmp793              #   Call between .Ltmp793 and .Ltmp794
	.uleb128 .Ltmp795-.Lfunc_begin36        #     jumps to .Ltmp795
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp794-.Lfunc_begin36        # >> Call Site 2 <<
	.uleb128 .Lfunc_end173-.Ltmp794         #   Call between .Ltmp794 and .Lfunc_end173
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end36:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSaIN4seal7ModulusEED2Ev,"axG",@progbits,_ZNSaIN4seal7ModulusEED2Ev,comdat
	.weak	_ZNSaIN4seal7ModulusEED2Ev      # -- Begin function _ZNSaIN4seal7ModulusEED2Ev
	.p2align	4, 0x90
	.type	_ZNSaIN4seal7ModulusEED2Ev,@function
_ZNSaIN4seal7ModulusEED2Ev:             # @_ZNSaIN4seal7ModulusEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end174:
	.size	_ZNSaIN4seal7ModulusEED2Ev, .Lfunc_end174-_ZNSaIN4seal7ModulusEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EED2Ev,"axG",@progbits,_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EED2Ev,comdat
	.weak	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EED2Ev # -- Begin function _ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EED2Ev,@function
_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EED2Ev: # @_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EED2Ev
.Lfunc_begin37:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception37
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -32(%rbp)                 # 8-byte Spill
	movq	(%rdi), %rsi
	movq	16(%rdi), %rdx
	subq	%rsi, %rdx
	sarq	$4, %rdx
	movabsq	$-6148914691236517205, %rax     # imm = 0xAAAAAAAAAAAAAAAB
	imulq	%rax, %rdx
.Ltmp796:
	callq	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE13_M_deallocateEPS1_m
.Ltmp797:
	jmp	.LBB175_1
.LBB175_1:
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE12_Vector_implD2Ev
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB175_2:
	.cfi_def_cfa %rbp, 16
.Ltmp798:
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -16(%rbp)
	movl	%eax, -20(%rbp)
	callq	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE12_Vector_implD2Ev
# %bb.3:
	movq	-16(%rbp), %rdi
	callq	__clang_call_terminate
.Lfunc_end175:
	.size	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EED2Ev, .Lfunc_end175-_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EED2Ev,"aG",@progbits,_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EED2Ev,comdat
	.p2align	2
GCC_except_table175:
.Lexception37:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase7-.Lttbaseref7
.Lttbaseref7:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end37-.Lcst_begin37
.Lcst_begin37:
	.uleb128 .Ltmp796-.Lfunc_begin37        # >> Call Site 1 <<
	.uleb128 .Ltmp797-.Ltmp796              #   Call between .Ltmp796 and .Ltmp797
	.uleb128 .Ltmp798-.Lfunc_begin37        #     jumps to .Ltmp798
	.byte	1                               #   On action: 1
.Lcst_end37:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase7:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIN4seal7ModulusEEE37select_on_container_copy_constructionERKS2_,"axG",@progbits,_ZNSt16allocator_traitsISaIN4seal7ModulusEEE37select_on_container_copy_constructionERKS2_,comdat
	.weak	_ZNSt16allocator_traitsISaIN4seal7ModulusEEE37select_on_container_copy_constructionERKS2_ # -- Begin function _ZNSt16allocator_traitsISaIN4seal7ModulusEEE37select_on_container_copy_constructionERKS2_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIN4seal7ModulusEEE37select_on_container_copy_constructionERKS2_,@function
_ZNSt16allocator_traitsISaIN4seal7ModulusEEE37select_on_container_copy_constructionERKS2_: # @_ZNSt16allocator_traitsISaIN4seal7ModulusEEE37select_on_container_copy_constructionERKS2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, %rax
	movq	%rax, -24(%rbp)                 # 8-byte Spill
	movq	%rdi, %rax
	movq	%rax, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-16(%rbp), %rsi
	callq	_ZNSaIN4seal7ModulusEEC2ERKS1_
	movq	-24(%rbp), %rax                 # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end176:
	.size	_ZNSt16allocator_traitsISaIN4seal7ModulusEEE37select_on_container_copy_constructionERKS2_, .Lfunc_end176-_ZNSt16allocator_traitsISaIN4seal7ModulusEEE37select_on_container_copy_constructionERKS2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSaIN4seal7ModulusEEC2ERKS1_,"axG",@progbits,_ZNSaIN4seal7ModulusEEC2ERKS1_,comdat
	.weak	_ZNSaIN4seal7ModulusEEC2ERKS1_  # -- Begin function _ZNSaIN4seal7ModulusEEC2ERKS1_
	.p2align	4, 0x90
	.type	_ZNSaIN4seal7ModulusEEC2ERKS1_,@function
_ZNSaIN4seal7ModulusEEC2ERKS1_:         # @_ZNSaIN4seal7ModulusEEC2ERKS1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEEC2ERKS3_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end177:
	.size	_ZNSaIN4seal7ModulusEEC2ERKS1_, .Lfunc_end177-_ZNSaIN4seal7ModulusEEC2ERKS1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEEC2ERKS3_,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEEC2ERKS3_,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEEC2ERKS3_ # -- Begin function _ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEEC2ERKS3_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEEC2ERKS3_,@function
_ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEEC2ERKS3_: # @_ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEEC2ERKS3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end178:
	.size	_ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEEC2ERKS3_, .Lfunc_end178-_ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEEC2ERKS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE12_Vector_implC2ERKS2_,"axG",@progbits,_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE12_Vector_implC2ERKS2_,comdat
	.weak	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE12_Vector_implC2ERKS2_ # -- Begin function _ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE12_Vector_implC2ERKS2_
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE12_Vector_implC2ERKS2_,@function
_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE12_Vector_implC2ERKS2_: # @_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE12_Vector_implC2ERKS2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -24(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rsi
	callq	_ZNSaIN4seal7ModulusEEC2ERKS1_
	movq	-24(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE17_Vector_impl_dataC2Ev
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end179:
	.size	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE12_Vector_implC2ERKS2_, .Lfunc_end179-_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE12_Vector_implC2ERKS2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE17_M_create_storageEm,"axG",@progbits,_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE17_M_create_storageEm,comdat
	.weak	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE17_M_create_storageEm # -- Begin function _ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE17_M_create_storageEm
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE17_M_create_storageEm,@function
_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE17_M_create_storageEm: # @_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE17_M_create_storageEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -24(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rsi
	callq	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE11_M_allocateEm
	movq	%rax, %rcx
	movq	-24(%rbp), %rax                 # 8-byte Reload
	movq	%rcx, (%rax)
	movq	(%rax), %rcx
	movq	%rcx, 8(%rax)
	movq	(%rax), %rcx
	imulq	$48, -16(%rbp), %rdx
	addq	%rdx, %rcx
	movq	%rcx, 16(%rax)
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end180:
	.size	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE17_M_create_storageEm, .Lfunc_end180-_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE17_M_create_storageEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE12_Vector_implD2Ev,"axG",@progbits,_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE12_Vector_implD2Ev,comdat
	.weak	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE12_Vector_implD2Ev # -- Begin function _ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE12_Vector_implD2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE12_Vector_implD2Ev,@function
_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE12_Vector_implD2Ev: # @_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE12_Vector_implD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSaIN4seal7ModulusEED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end181:
	.size	_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE12_Vector_implD2Ev, .Lfunc_end181-_ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE12_Vector_implD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEED2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEED2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEED2Ev # -- Begin function _ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEED2Ev
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEED2Ev,@function
_ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEED2Ev: # @_ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end182:
	.size	_ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEED2Ev, .Lfunc_end182-_ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12__shared_ptrIN4seal29UniformRandomGeneratorFactoryELN9__gnu_cxx12_Lock_policyE2EEC2ERKS4_,"axG",@progbits,_ZNSt12__shared_ptrIN4seal29UniformRandomGeneratorFactoryELN9__gnu_cxx12_Lock_policyE2EEC2ERKS4_,comdat
	.weak	_ZNSt12__shared_ptrIN4seal29UniformRandomGeneratorFactoryELN9__gnu_cxx12_Lock_policyE2EEC2ERKS4_ # -- Begin function _ZNSt12__shared_ptrIN4seal29UniformRandomGeneratorFactoryELN9__gnu_cxx12_Lock_policyE2EEC2ERKS4_
	.p2align	4, 0x90
	.type	_ZNSt12__shared_ptrIN4seal29UniformRandomGeneratorFactoryELN9__gnu_cxx12_Lock_policyE2EEC2ERKS4_,@function
_ZNSt12__shared_ptrIN4seal29UniformRandomGeneratorFactoryELN9__gnu_cxx12_Lock_policyE2EEC2ERKS4_: # @_ZNSt12__shared_ptrIN4seal29UniformRandomGeneratorFactoryELN9__gnu_cxx12_Lock_policyE2EEC2ERKS4_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, (%rdi)
	addq	$8, %rdi
	movq	-16(%rbp), %rsi
	addq	$8, %rsi
	callq	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2ERKS2_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end183:
	.size	_ZNSt12__shared_ptrIN4seal29UniformRandomGeneratorFactoryELN9__gnu_cxx12_Lock_policyE2EEC2ERKS4_, .Lfunc_end183-_ZNSt12__shared_ptrIN4seal29UniformRandomGeneratorFactoryELN9__gnu_cxx12_Lock_policyE2EEC2ERKS4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2ERKS2_,"axG",@progbits,_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2ERKS2_,comdat
	.weak	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2ERKS2_ # -- Begin function _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2ERKS2_
	.p2align	4, 0x90
	.type	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2ERKS2_,@function
_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2ERKS2_: # @_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2ERKS2_
.Lfunc_begin38:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception38
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -24(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rcx
	movq	(%rcx), %rcx
	movq	%rcx, (%rax)
	cmpq	$0, (%rax)
	je	.LBB184_3
# %bb.1:
	movq	-24(%rbp), %rax                 # 8-byte Reload
	movq	(%rax), %rdi
.Ltmp799:
	callq	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE15_M_add_ref_copyEv
.Ltmp800:
	jmp	.LBB184_2
.LBB184_2:
	jmp	.LBB184_3
.LBB184_3:
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB184_4:
	.cfi_def_cfa %rbp, 16
.Ltmp801:
	movq	%rax, %rdi
                                        # kill: def $eax killed $edx killed $rdx
	callq	__clang_call_terminate
.Lfunc_end184:
	.size	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2ERKS2_, .Lfunc_end184-_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2ERKS2_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2ERKS2_,"aG",@progbits,_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2ERKS2_,comdat
	.p2align	2
GCC_except_table184:
.Lexception38:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase8-.Lttbaseref8
.Lttbaseref8:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end38-.Lcst_begin38
.Lcst_begin38:
	.uleb128 .Ltmp799-.Lfunc_begin38        # >> Call Site 1 <<
	.uleb128 .Ltmp800-.Ltmp799              #   Call between .Ltmp799 and .Ltmp800
	.uleb128 .Ltmp801-.Lfunc_begin38        #     jumps to .Ltmp801
	.byte	1                               #   On action: 1
.Lcst_end38:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase8:
	.p2align	2
                                        # -- End function
	.section	.text._ZNK4seal11SEALContext16key_context_dataEv,"axG",@progbits,_ZNK4seal11SEALContext16key_context_dataEv,comdat
	.weak	_ZNK4seal11SEALContext16key_context_dataEv # -- Begin function _ZNK4seal11SEALContext16key_context_dataEv
	.p2align	4, 0x90
	.type	_ZNK4seal11SEALContext16key_context_dataEv,@function
_ZNK4seal11SEALContext16key_context_dataEv: # @_ZNK4seal11SEALContext16key_context_dataEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%rdi, -88(%rbp)                 # 8-byte Spill
	movq	%rdi, %rax
	movq	%rax, -80(%rbp)                 # 8-byte Spill
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-16(%rbp), %rsi
	movq	%rsi, -72(%rbp)                 # 8-byte Spill
	movq	%rsi, %rdi
	addq	$112, %rdi
	addq	$16, %rsi
	callq	_ZNKSt13unordered_mapISt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S7_EEE4findERSD_
	movq	-72(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, -24(%rbp)
	leaq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)                 # 8-byte Spill
	addq	$112, %rdi
	callq	_ZNKSt13unordered_mapISt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S7_EEE3endEv
	movq	-64(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, -32(%rbp)
	leaq	-32(%rbp), %rsi
	callq	_ZNSt8__detailneERKNS_19_Node_iterator_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEESE_
	movb	$0, -49(%rbp)
	testb	$1, %al
	jne	.LBB185_1
	jmp	.LBB185_2
.LBB185_1:
	leaq	-24(%rbp), %rdi
	callq	_ZNKSt8__detail20_Node_const_iteratorISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb0ELb1EEptEv
	movq	-88(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rsi
	addq	$32, %rsi
	callq	_ZNSt10shared_ptrIKN4seal11SEALContext11ContextDataEEC2ERKS4_
	jmp	.LBB185_3
.LBB185_2:
	leaq	-48(%rbp), %rdi
	xorl	%eax, %eax
	movl	%eax, %esi
	callq	_ZNSt10shared_ptrIN4seal11SEALContext11ContextDataEEC2EDn
	movq	-88(%rbp), %rdi                 # 8-byte Reload
	movb	$1, -49(%rbp)
	leaq	-48(%rbp), %rsi
	callq	_ZNSt10shared_ptrIKN4seal11SEALContext11ContextDataEEC2IS2_vEEOS_IT_E
.LBB185_3:
	testb	$1, -49(%rbp)
	jne	.LBB185_4
	jmp	.LBB185_5
.LBB185_4:
	leaq	-48(%rbp), %rdi
	callq	_ZNSt10shared_ptrIN4seal11SEALContext11ContextDataEED2Ev
.LBB185_5:
	movq	-80(%rbp), %rax                 # 8-byte Reload
	addq	$96, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end185:
	.size	_ZNK4seal11SEALContext16key_context_dataEv, .Lfunc_end185-_ZNK4seal11SEALContext16key_context_dataEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt19__shared_ptr_accessIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2ELb0ELb0EEdeEv,"axG",@progbits,_ZNKSt19__shared_ptr_accessIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2ELb0ELb0EEdeEv,comdat
	.weak	_ZNKSt19__shared_ptr_accessIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2ELb0ELb0EEdeEv # -- Begin function _ZNKSt19__shared_ptr_accessIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2ELb0ELb0EEdeEv
	.p2align	4, 0x90
	.type	_ZNKSt19__shared_ptr_accessIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2ELb0ELb0EEdeEv,@function
_ZNKSt19__shared_ptr_accessIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2ELb0ELb0EEdeEv: # @_ZNKSt19__shared_ptr_accessIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2ELb0ELb0EEdeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -16(%rbp)                 # 8-byte Spill
# %bb.1:
	jmp	.LBB186_2
.LBB186_2:
	jmp	.LBB186_3
.LBB186_3:
	movq	-16(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNKSt19__shared_ptr_accessIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2ELb0ELb0EE6_M_getEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end186:
	.size	_ZNKSt19__shared_ptr_accessIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2ELb0ELb0EEdeEv, .Lfunc_end186-_ZNKSt19__shared_ptr_accessIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2ELb0ELb0EEdeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK4seal11SEALContext11ContextData5parmsEv,"axG",@progbits,_ZNK4seal11SEALContext11ContextData5parmsEv,comdat
	.weak	_ZNK4seal11SEALContext11ContextData5parmsEv # -- Begin function _ZNK4seal11SEALContext11ContextData5parmsEv
	.p2align	4, 0x90
	.type	_ZNK4seal11SEALContext11ContextData5parmsEv,@function
_ZNK4seal11SEALContext11ContextData5parmsEv: # @_ZNK4seal11SEALContext11ContextData5parmsEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	addq	$16, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end187:
	.size	_ZNK4seal11SEALContext11ContextData5parmsEv, .Lfunc_end187-_ZNK4seal11SEALContext11ContextData5parmsEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK4seal20EncryptionParameters6schemeEv,"axG",@progbits,_ZNK4seal20EncryptionParameters6schemeEv,comdat
	.weak	_ZNK4seal20EncryptionParameters6schemeEv # -- Begin function _ZNK4seal20EncryptionParameters6schemeEv
	.p2align	4, 0x90
	.type	_ZNK4seal20EncryptionParameters6schemeEv,@function
_ZNK4seal20EncryptionParameters6schemeEv: # @_ZNK4seal20EncryptionParameters6schemeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movzbl	16(%rax), %eax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end188:
	.size	_ZNK4seal20EncryptionParameters6schemeEv, .Lfunc_end188-_ZNK4seal20EncryptionParameters6schemeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK4seal20EncryptionParameters19poly_modulus_degreeEv,"axG",@progbits,_ZNK4seal20EncryptionParameters19poly_modulus_degreeEv,comdat
	.weak	_ZNK4seal20EncryptionParameters19poly_modulus_degreeEv # -- Begin function _ZNK4seal20EncryptionParameters19poly_modulus_degreeEv
	.p2align	4, 0x90
	.type	_ZNK4seal20EncryptionParameters19poly_modulus_degreeEv,@function
_ZNK4seal20EncryptionParameters19poly_modulus_degreeEv: # @_ZNK4seal20EncryptionParameters19poly_modulus_degreeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	24(%rax), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end189:
	.size	_ZNK4seal20EncryptionParameters19poly_modulus_degreeEv, .Lfunc_end189-_ZNK4seal20EncryptionParameters19poly_modulus_degreeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK4seal11SEALContext11ContextData29total_coeff_modulus_bit_countEv,"axG",@progbits,_ZNK4seal11SEALContext11ContextData29total_coeff_modulus_bit_countEv,comdat
	.weak	_ZNK4seal11SEALContext11ContextData29total_coeff_modulus_bit_countEv # -- Begin function _ZNK4seal11SEALContext11ContextData29total_coeff_modulus_bit_countEv
	.p2align	4, 0x90
	.type	_ZNK4seal11SEALContext11ContextData29total_coeff_modulus_bit_countEv,@function
_ZNK4seal11SEALContext11ContextData29total_coeff_modulus_bit_countEv: # @_ZNK4seal11SEALContext11ContextData29total_coeff_modulus_bit_countEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movl	344(%rax), %eax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end190:
	.size	_ZNK4seal11SEALContext11ContextData29total_coeff_modulus_bit_countEv, .Lfunc_end190-_ZNK4seal11SEALContext11ContextData29total_coeff_modulus_bit_countEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN4seal7ModulusESaIS1_EEixEm,"axG",@progbits,_ZNSt6vectorIN4seal7ModulusESaIS1_EEixEm,comdat
	.weak	_ZNSt6vectorIN4seal7ModulusESaIS1_EEixEm # -- Begin function _ZNSt6vectorIN4seal7ModulusESaIS1_EEixEm
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN4seal7ModulusESaIS1_EEixEm,@function
_ZNSt6vectorIN4seal7ModulusESaIS1_EEixEm: # @_ZNSt6vectorIN4seal7ModulusESaIS1_EEixEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	imulq	$48, -16(%rbp), %rcx
	addq	%rcx, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end191:
	.size	_ZNSt6vectorIN4seal7ModulusESaIS1_EEixEm, .Lfunc_end191-_ZNSt6vectorIN4seal7ModulusESaIS1_EEixEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK4seal7Modulus9bit_countEv,"axG",@progbits,_ZNK4seal7Modulus9bit_countEv,comdat
	.weak	_ZNK4seal7Modulus9bit_countEv   # -- Begin function _ZNK4seal7Modulus9bit_countEv
	.p2align	4, 0x90
	.type	_ZNK4seal7Modulus9bit_countEv,@function
_ZNK4seal7Modulus9bit_countEv:          # @_ZNK4seal7Modulus9bit_countEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movl	40(%rax), %eax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end192:
	.size	_ZNK4seal7Modulus9bit_countEv, .Lfunc_end192-_ZNK4seal7Modulus9bit_countEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN4seal7ModulusESaIS1_EE4backEv,"axG",@progbits,_ZNSt6vectorIN4seal7ModulusESaIS1_EE4backEv,comdat
	.weak	_ZNSt6vectorIN4seal7ModulusESaIS1_EE4backEv # -- Begin function _ZNSt6vectorIN4seal7ModulusESaIS1_EE4backEv
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN4seal7ModulusESaIS1_EE4backEv,@function
_ZNSt6vectorIN4seal7ModulusESaIS1_EE4backEv: # @_ZNSt6vectorIN4seal7ModulusESaIS1_EE4backEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt6vectorIN4seal7ModulusESaIS1_EE3endEv
	movq	%rax, -24(%rbp)
	leaq	-24(%rbp), %rdi
	movl	$1, %esi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEEmiEl
	movq	%rax, -16(%rbp)
	leaq	-16(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEEdeEv
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end193:
	.size	_ZNSt6vectorIN4seal7ModulusESaIS1_EE4backEv, .Lfunc_end193-_ZNSt6vectorIN4seal7ModulusESaIS1_EE4backEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK4seal20EncryptionParameters13plain_modulusEv,"axG",@progbits,_ZNK4seal20EncryptionParameters13plain_modulusEv,comdat
	.weak	_ZNK4seal20EncryptionParameters13plain_modulusEv # -- Begin function _ZNK4seal20EncryptionParameters13plain_modulusEv
	.p2align	4, 0x90
	.type	_ZNK4seal20EncryptionParameters13plain_modulusEv,@function
_ZNK4seal20EncryptionParameters13plain_modulusEv: # @_ZNK4seal20EncryptionParameters13plain_modulusEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	addq	$72, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end194:
	.size	_ZNK4seal20EncryptionParameters13plain_modulusEv, .Lfunc_end194-_ZNK4seal20EncryptionParameters13plain_modulusEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt13unordered_mapISt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S7_EEE4findERSD_,"axG",@progbits,_ZNKSt13unordered_mapISt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S7_EEE4findERSD_,comdat
	.weak	_ZNKSt13unordered_mapISt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S7_EEE4findERSD_ # -- Begin function _ZNKSt13unordered_mapISt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S7_EEE4findERSD_
	.p2align	4, 0x90
	.type	_ZNKSt13unordered_mapISt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S7_EEE4findERSD_,@function
_ZNKSt13unordered_mapISt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S7_EEE4findERSD_: # @_ZNKSt13unordered_mapISt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S7_EEE4findERSD_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	-16(%rbp), %rdi
	movq	-24(%rbp), %rsi
	callq	_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE4findERS3_
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end195:
	.size	_ZNKSt13unordered_mapISt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S7_EEE4findERSD_, .Lfunc_end195-_ZNKSt13unordered_mapISt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S7_EEE4findERSD_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detailneERKNS_19_Node_iterator_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEESE_,"axG",@progbits,_ZNSt8__detailneERKNS_19_Node_iterator_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEESE_,comdat
	.weak	_ZNSt8__detailneERKNS_19_Node_iterator_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEESE_ # -- Begin function _ZNSt8__detailneERKNS_19_Node_iterator_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEESE_
	.p2align	4, 0x90
	.type	_ZNSt8__detailneERKNS_19_Node_iterator_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEESE_,@function
_ZNSt8__detailneERKNS_19_Node_iterator_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEESE_: # @_ZNSt8__detailneERKNS_19_Node_iterator_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEESE_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	movq	-16(%rbp), %rcx
	cmpq	(%rcx), %rax
	setne	%al
	andb	$1, %al
	movzbl	%al, %eax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end196:
	.size	_ZNSt8__detailneERKNS_19_Node_iterator_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEESE_, .Lfunc_end196-_ZNSt8__detailneERKNS_19_Node_iterator_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEESE_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt13unordered_mapISt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S7_EEE3endEv,"axG",@progbits,_ZNKSt13unordered_mapISt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S7_EEE3endEv,comdat
	.weak	_ZNKSt13unordered_mapISt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S7_EEE3endEv # -- Begin function _ZNKSt13unordered_mapISt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S7_EEE3endEv
	.p2align	4, 0x90
	.type	_ZNKSt13unordered_mapISt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S7_EEE3endEv,@function
_ZNKSt13unordered_mapISt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S7_EEE3endEv: # @_ZNKSt13unordered_mapISt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S7_EEE3endEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -16(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE3endEv
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end197:
	.size	_ZNKSt13unordered_mapISt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S7_EEE3endEv, .Lfunc_end197-_ZNKSt13unordered_mapISt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S7_EEE3endEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt8__detail20_Node_const_iteratorISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb0ELb1EEptEv,"axG",@progbits,_ZNKSt8__detail20_Node_const_iteratorISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb0ELb1EEptEv,comdat
	.weak	_ZNKSt8__detail20_Node_const_iteratorISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb0ELb1EEptEv # -- Begin function _ZNKSt8__detail20_Node_const_iteratorISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb0ELb1EEptEv
	.p2align	4, 0x90
	.type	_ZNKSt8__detail20_Node_const_iteratorISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb0ELb1EEptEv,@function
_ZNKSt8__detail20_Node_const_iteratorISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb0ELb1EEptEv: # @_ZNKSt8__detail20_Node_const_iteratorISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb0ELb1EEptEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rdi
	addq	$8, %rdi
	callq	_ZNSt8__detail21_Hash_node_value_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE9_M_valptrEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end198:
	.size	_ZNKSt8__detail20_Node_const_iteratorISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb0ELb1EEptEv, .Lfunc_end198-_ZNKSt8__detail20_Node_const_iteratorISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb0ELb1EEptEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt10shared_ptrIKN4seal11SEALContext11ContextDataEEC2ERKS4_,"axG",@progbits,_ZNSt10shared_ptrIKN4seal11SEALContext11ContextDataEEC2ERKS4_,comdat
	.weak	_ZNSt10shared_ptrIKN4seal11SEALContext11ContextDataEEC2ERKS4_ # -- Begin function _ZNSt10shared_ptrIKN4seal11SEALContext11ContextDataEEC2ERKS4_
	.p2align	4, 0x90
	.type	_ZNSt10shared_ptrIKN4seal11SEALContext11ContextDataEEC2ERKS4_,@function
_ZNSt10shared_ptrIKN4seal11SEALContext11ContextDataEEC2ERKS4_: # @_ZNSt10shared_ptrIKN4seal11SEALContext11ContextDataEEC2ERKS4_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZNSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EEC2ERKS6_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end199:
	.size	_ZNSt10shared_ptrIKN4seal11SEALContext11ContextDataEEC2ERKS4_, .Lfunc_end199-_ZNSt10shared_ptrIKN4seal11SEALContext11ContextDataEEC2ERKS4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt10shared_ptrIN4seal11SEALContext11ContextDataEEC2EDn,"axG",@progbits,_ZNSt10shared_ptrIN4seal11SEALContext11ContextDataEEC2EDn,comdat
	.weak	_ZNSt10shared_ptrIN4seal11SEALContext11ContextDataEEC2EDn # -- Begin function _ZNSt10shared_ptrIN4seal11SEALContext11ContextDataEEC2EDn
	.p2align	4, 0x90
	.type	_ZNSt10shared_ptrIN4seal11SEALContext11ContextDataEEC2EDn,@function
_ZNSt10shared_ptrIN4seal11SEALContext11ContextDataEEC2EDn: # @_ZNSt10shared_ptrIN4seal11SEALContext11ContextDataEEC2EDn
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt10shared_ptrIN4seal11SEALContext11ContextDataEEC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end200:
	.size	_ZNSt10shared_ptrIN4seal11SEALContext11ContextDataEEC2EDn, .Lfunc_end200-_ZNSt10shared_ptrIN4seal11SEALContext11ContextDataEEC2EDn
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt10shared_ptrIKN4seal11SEALContext11ContextDataEEC2IS2_vEEOS_IT_E,"axG",@progbits,_ZNSt10shared_ptrIKN4seal11SEALContext11ContextDataEEC2IS2_vEEOS_IT_E,comdat
	.weak	_ZNSt10shared_ptrIKN4seal11SEALContext11ContextDataEEC2IS2_vEEOS_IT_E # -- Begin function _ZNSt10shared_ptrIKN4seal11SEALContext11ContextDataEEC2IS2_vEEOS_IT_E
	.p2align	4, 0x90
	.type	_ZNSt10shared_ptrIKN4seal11SEALContext11ContextDataEEC2IS2_vEEOS_IT_E,@function
_ZNSt10shared_ptrIKN4seal11SEALContext11ContextDataEEC2IS2_vEEOS_IT_E: # @_ZNSt10shared_ptrIKN4seal11SEALContext11ContextDataEEC2IS2_vEEOS_IT_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -24(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	callq	_ZSt4moveIRSt10shared_ptrIN4seal11SEALContext11ContextDataEEEONSt16remove_referenceIT_E4typeEOS7_
	movq	-24(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EEC2IS2_vEEOS_IT_LS5_2EE
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end201:
	.size	_ZNSt10shared_ptrIKN4seal11SEALContext11ContextDataEEC2IS2_vEEOS_IT_E, .Lfunc_end201-_ZNSt10shared_ptrIKN4seal11SEALContext11ContextDataEEC2IS2_vEEOS_IT_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt10shared_ptrIN4seal11SEALContext11ContextDataEED2Ev,"axG",@progbits,_ZNSt10shared_ptrIN4seal11SEALContext11ContextDataEED2Ev,comdat
	.weak	_ZNSt10shared_ptrIN4seal11SEALContext11ContextDataEED2Ev # -- Begin function _ZNSt10shared_ptrIN4seal11SEALContext11ContextDataEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt10shared_ptrIN4seal11SEALContext11ContextDataEED2Ev,@function
_ZNSt10shared_ptrIN4seal11SEALContext11ContextDataEED2Ev: # @_ZNSt10shared_ptrIN4seal11SEALContext11ContextDataEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt12__shared_ptrIN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end202:
	.size	_ZNSt10shared_ptrIN4seal11SEALContext11ContextDataEED2Ev, .Lfunc_end202-_ZNSt10shared_ptrIN4seal11SEALContext11ContextDataEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE4findERS3_,"axG",@progbits,_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE4findERS3_,comdat
	.weak	_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE4findERS3_ # -- Begin function _ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE4findERS3_
	.p2align	4, 0x90
	.type	_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE4findERS3_,@function
_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE4findERS3_: # @_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE4findERS3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	-16(%rbp), %rdi
	movq	%rdi, -48(%rbp)                 # 8-byte Spill
	movq	-24(%rbp), %rsi
	callq	_ZNKSt8__detail15_Hash_code_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE12_M_hash_codeERS4_
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, -32(%rbp)
	movq	-32(%rbp), %rsi
	callq	_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexEm
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rcx
	callq	_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE12_M_find_nodeEmRS3_m
	movq	%rax, %rsi
	leaq	-8(%rbp), %rdi
	callq	_ZNSt8__detail20_Node_const_iteratorISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb0ELb1EEC2EPNS_10_Hash_nodeISB_Lb1EEE
	movq	-8(%rbp), %rax
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end203:
	.size	_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE4findERS3_, .Lfunc_end203-_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE4findERS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt8__detail15_Hash_code_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE12_M_hash_codeERS4_,"axG",@progbits,_ZNKSt8__detail15_Hash_code_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE12_M_hash_codeERS4_,comdat
	.weak	_ZNKSt8__detail15_Hash_code_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE12_M_hash_codeERS4_ # -- Begin function _ZNKSt8__detail15_Hash_code_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE12_M_hash_codeERS4_
	.p2align	4, 0x90
	.type	_ZNKSt8__detail15_Hash_code_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE12_M_hash_codeERS4_,@function
_ZNKSt8__detail15_Hash_code_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE12_M_hash_codeERS4_: # @_ZNKSt8__detail15_Hash_code_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE12_M_hash_codeERS4_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNKSt8__detail15_Hash_code_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE7_M_hashEv
	movq	%rax, %rdi
	movq	-16(%rbp), %rsi
	callq	_ZNKSt4hashISt5arrayImLm4EEEclERKS1_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end204:
	.size	_ZNKSt8__detail15_Hash_code_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE12_M_hash_codeERS4_, .Lfunc_end204-_ZNKSt8__detail15_Hash_code_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE12_M_hash_codeERS4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexEm,"axG",@progbits,_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexEm,comdat
	.weak	_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexEm # -- Begin function _ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexEm
	.p2align	4, 0x90
	.type	_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexEm,@function
_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexEm: # @_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	movq	-16(%rbp), %rsi
	movq	8(%rax), %rdx
	callq	_ZNKSt8__detail15_Hash_code_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexEmm
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end205:
	.size	_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexEm, .Lfunc_end205-_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE12_M_find_nodeEmRS3_m,"axG",@progbits,_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE12_M_find_nodeEmRS3_m,comdat
	.weak	_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE12_M_find_nodeEmRS3_m # -- Begin function _ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE12_M_find_nodeEmRS3_m
	.p2align	4, 0x90
	.type	_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE12_M_find_nodeEmRS3_m,@function
_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE12_M_find_nodeEmRS3_m: # @_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE12_M_find_nodeEmRS3_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rdx, -32(%rbp)
	movq	%rcx, -40(%rbp)
	movq	-16(%rbp), %rdi
	movq	-24(%rbp), %rsi
	movq	-32(%rbp), %rdx
	movq	-40(%rbp), %rcx
	callq	_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_find_before_nodeEmRS3_m
	movq	%rax, -48(%rbp)
	cmpq	$0, -48(%rbp)
	je	.LBB206_2
# %bb.1:
	movq	-48(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, -8(%rbp)
	jmp	.LBB206_3
.LBB206_2:
	movq	$0, -8(%rbp)
.LBB206_3:
	movq	-8(%rbp), %rax
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end206:
	.size	_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE12_M_find_nodeEmRS3_m, .Lfunc_end206-_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE12_M_find_nodeEmRS3_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail20_Node_const_iteratorISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb0ELb1EEC2EPNS_10_Hash_nodeISB_Lb1EEE,"axG",@progbits,_ZNSt8__detail20_Node_const_iteratorISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb0ELb1EEC2EPNS_10_Hash_nodeISB_Lb1EEE,comdat
	.weak	_ZNSt8__detail20_Node_const_iteratorISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb0ELb1EEC2EPNS_10_Hash_nodeISB_Lb1EEE # -- Begin function _ZNSt8__detail20_Node_const_iteratorISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb0ELb1EEC2EPNS_10_Hash_nodeISB_Lb1EEE
	.p2align	4, 0x90
	.type	_ZNSt8__detail20_Node_const_iteratorISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb0ELb1EEC2EPNS_10_Hash_nodeISB_Lb1EEE,@function
_ZNSt8__detail20_Node_const_iteratorISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb0ELb1EEC2EPNS_10_Hash_nodeISB_Lb1EEE: # @_ZNSt8__detail20_Node_const_iteratorISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb0ELb1EEC2EPNS_10_Hash_nodeISB_Lb1EEE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZNSt8__detail19_Node_iterator_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEC2EPNS_10_Hash_nodeISB_Lb1EEE
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end207:
	.size	_ZNSt8__detail20_Node_const_iteratorISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb0ELb1EEC2EPNS_10_Hash_nodeISB_Lb1EEE, .Lfunc_end207-_ZNSt8__detail20_Node_const_iteratorISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb0ELb1EEC2EPNS_10_Hash_nodeISB_Lb1EEE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt8__detail15_Hash_code_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE7_M_hashEv,"axG",@progbits,_ZNKSt8__detail15_Hash_code_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE7_M_hashEv,comdat
	.weak	_ZNKSt8__detail15_Hash_code_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE7_M_hashEv # -- Begin function _ZNKSt8__detail15_Hash_code_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE7_M_hashEv
	.p2align	4, 0x90
	.type	_ZNKSt8__detail15_Hash_code_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE7_M_hashEv,@function
_ZNKSt8__detail15_Hash_code_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE7_M_hashEv: # @_ZNKSt8__detail15_Hash_code_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE7_M_hashEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNKSt8__detail21_Hashtable_ebo_helperILi1ESt4hashISt5arrayImLm4EEELb1EE7_M_cgetEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end208:
	.size	_ZNKSt8__detail15_Hash_code_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE7_M_hashEv, .Lfunc_end208-_ZNKSt8__detail15_Hash_code_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE7_M_hashEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt4hashISt5arrayImLm4EEEclERKS1_,"axG",@progbits,_ZNKSt4hashISt5arrayImLm4EEEclERKS1_,comdat
	.weak	_ZNKSt4hashISt5arrayImLm4EEEclERKS1_ # -- Begin function _ZNKSt4hashISt5arrayImLm4EEEclERKS1_
	.p2align	4, 0x90
	.type	_ZNKSt4hashISt5arrayImLm4EEEclERKS1_,@function
_ZNKSt4hashISt5arrayImLm4EEEclERKS1_:   # @_ZNKSt4hashISt5arrayImLm4EEEclERKS1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	$17, -24(%rbp)
	imulq	$31, -24(%rbp), %rax
	movq	%rax, -56(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	xorl	%eax, %eax
	movl	%eax, %esi
	callq	_ZNKSt5arrayImLm4EEixEm
	movq	%rax, %rcx
	movq	-56(%rbp), %rax                 # 8-byte Reload
	addq	(%rcx), %rax
	movq	%rax, -24(%rbp)
	imulq	$31, -24(%rbp), %rax
	movq	%rax, -48(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	movl	$1, %esi
	callq	_ZNKSt5arrayImLm4EEixEm
	movq	%rax, %rcx
	movq	-48(%rbp), %rax                 # 8-byte Reload
	addq	(%rcx), %rax
	movq	%rax, -24(%rbp)
	imulq	$31, -24(%rbp), %rax
	movq	%rax, -40(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	movl	$2, %esi
	callq	_ZNKSt5arrayImLm4EEixEm
	movq	%rax, %rcx
	movq	-40(%rbp), %rax                 # 8-byte Reload
	addq	(%rcx), %rax
	movq	%rax, -24(%rbp)
	imulq	$31, -24(%rbp), %rax
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	movl	$3, %esi
	callq	_ZNKSt5arrayImLm4EEixEm
	movq	%rax, %rcx
	movq	-32(%rbp), %rax                 # 8-byte Reload
	addq	(%rcx), %rax
	movq	%rax, -24(%rbp)
	movq	-24(%rbp), %rax
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end209:
	.size	_ZNKSt4hashISt5arrayImLm4EEEclERKS1_, .Lfunc_end209-_ZNKSt4hashISt5arrayImLm4EEEclERKS1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt8__detail21_Hashtable_ebo_helperILi1ESt4hashISt5arrayImLm4EEELb1EE7_M_cgetEv,"axG",@progbits,_ZNKSt8__detail21_Hashtable_ebo_helperILi1ESt4hashISt5arrayImLm4EEELb1EE7_M_cgetEv,comdat
	.weak	_ZNKSt8__detail21_Hashtable_ebo_helperILi1ESt4hashISt5arrayImLm4EEELb1EE7_M_cgetEv # -- Begin function _ZNKSt8__detail21_Hashtable_ebo_helperILi1ESt4hashISt5arrayImLm4EEELb1EE7_M_cgetEv
	.p2align	4, 0x90
	.type	_ZNKSt8__detail21_Hashtable_ebo_helperILi1ESt4hashISt5arrayImLm4EEELb1EE7_M_cgetEv,@function
_ZNKSt8__detail21_Hashtable_ebo_helperILi1ESt4hashISt5arrayImLm4EEELb1EE7_M_cgetEv: # @_ZNKSt8__detail21_Hashtable_ebo_helperILi1ESt4hashISt5arrayImLm4EEELb1EE7_M_cgetEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end210:
	.size	_ZNKSt8__detail21_Hashtable_ebo_helperILi1ESt4hashISt5arrayImLm4EEELb1EE7_M_cgetEv, .Lfunc_end210-_ZNKSt8__detail21_Hashtable_ebo_helperILi1ESt4hashISt5arrayImLm4EEELb1EE7_M_cgetEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt5arrayImLm4EEixEm,"axG",@progbits,_ZNKSt5arrayImLm4EEixEm,comdat
	.weak	_ZNKSt5arrayImLm4EEixEm         # -- Begin function _ZNKSt5arrayImLm4EEixEm
	.p2align	4, 0x90
	.type	_ZNKSt5arrayImLm4EEixEm,@function
_ZNKSt5arrayImLm4EEixEm:                # @_ZNKSt5arrayImLm4EEixEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZNSt14__array_traitsImLm4EE6_S_refERA4_Kmm
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end211:
	.size	_ZNKSt5arrayImLm4EEixEm, .Lfunc_end211-_ZNKSt5arrayImLm4EEixEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt14__array_traitsImLm4EE6_S_refERA4_Kmm,"axG",@progbits,_ZNSt14__array_traitsImLm4EE6_S_refERA4_Kmm,comdat
	.weak	_ZNSt14__array_traitsImLm4EE6_S_refERA4_Kmm # -- Begin function _ZNSt14__array_traitsImLm4EE6_S_refERA4_Kmm
	.p2align	4, 0x90
	.type	_ZNSt14__array_traitsImLm4EE6_S_refERA4_Kmm,@function
_ZNSt14__array_traitsImLm4EE6_S_refERA4_Kmm: # @_ZNSt14__array_traitsImLm4EE6_S_refERA4_Kmm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
	shlq	$3, %rcx
	addq	%rcx, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end212:
	.size	_ZNSt14__array_traitsImLm4EE6_S_refERA4_Kmm, .Lfunc_end212-_ZNSt14__array_traitsImLm4EE6_S_refERA4_Kmm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt8__detail15_Hash_code_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexEmm,"axG",@progbits,_ZNKSt8__detail15_Hash_code_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexEmm,comdat
	.weak	_ZNKSt8__detail15_Hash_code_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexEmm # -- Begin function _ZNKSt8__detail15_Hash_code_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexEmm
	.p2align	4, 0x90
	.type	_ZNKSt8__detail15_Hash_code_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexEmm,@function
_ZNKSt8__detail15_Hash_code_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexEmm: # @_ZNKSt8__detail15_Hash_code_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexEmm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	leaq	-32(%rbp), %rdi
	callq	_ZNKSt8__detail18_Mod_range_hashingclEmm
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end213:
	.size	_ZNKSt8__detail15_Hash_code_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexEmm, .Lfunc_end213-_ZNKSt8__detail15_Hash_code_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexEmm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt8__detail18_Mod_range_hashingclEmm,"axG",@progbits,_ZNKSt8__detail18_Mod_range_hashingclEmm,comdat
	.weak	_ZNKSt8__detail18_Mod_range_hashingclEmm # -- Begin function _ZNKSt8__detail18_Mod_range_hashingclEmm
	.p2align	4, 0x90
	.type	_ZNKSt8__detail18_Mod_range_hashingclEmm,@function
_ZNKSt8__detail18_Mod_range_hashingclEmm: # @_ZNKSt8__detail18_Mod_range_hashingclEmm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rax
	xorl	%ecx, %ecx
	movl	%ecx, %edx
	divq	-24(%rbp)
	movq	%rdx, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end214:
	.size	_ZNKSt8__detail18_Mod_range_hashingclEmm, .Lfunc_end214-_ZNKSt8__detail18_Mod_range_hashingclEmm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_find_before_nodeEmRS3_m,"axG",@progbits,_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_find_before_nodeEmRS3_m,comdat
	.weak	_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_find_before_nodeEmRS3_m # -- Begin function _ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_find_before_nodeEmRS3_m
	.p2align	4, 0x90
	.type	_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_find_before_nodeEmRS3_m,@function
_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_find_before_nodeEmRS3_m: # @_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_find_before_nodeEmRS3_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rdx, -32(%rbp)
	movq	%rcx, -40(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -64(%rbp)                 # 8-byte Spill
	movq	(%rax), %rax
	movq	-24(%rbp), %rcx
	movq	(%rax,%rcx,8), %rax
	movq	%rax, -48(%rbp)
	cmpq	$0, -48(%rbp)
	jne	.LBB215_2
# %bb.1:
	movq	$0, -8(%rbp)
	jmp	.LBB215_11
.LBB215_2:
	movq	-48(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, -56(%rbp)
.LBB215_3:                              # =>This Inner Loop Header: Depth=1
	movq	-64(%rbp), %rdi                 # 8-byte Reload
	movq	-32(%rbp), %rsi
	movq	-40(%rbp), %rdx
	movq	-56(%rbp), %rcx
	addq	$8, %rcx
	callq	_ZNKSt8__detail15_Hashtable_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt8equal_toIS2_ESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE9_M_equalsERS4_mRKNS_16_Hash_node_valueISB_Lb1EEE
	testb	$1, %al
	jne	.LBB215_4
	jmp	.LBB215_5
.LBB215_4:
	movq	-48(%rbp), %rax
	movq	%rax, -8(%rbp)
	jmp	.LBB215_11
.LBB215_5:                              #   in Loop: Header=BB215_3 Depth=1
	movq	-56(%rbp), %rax
	cmpq	$0, (%rax)
	je	.LBB215_7
# %bb.6:                                #   in Loop: Header=BB215_3 Depth=1
	movq	-56(%rbp), %rdi
	callq	_ZNKSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EE7_M_nextEv
	movq	-64(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rsi
	addq	$8, %rsi
	callq	_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexERKNSC_16_Hash_node_valueISA_Lb1EEE
	cmpq	-24(%rbp), %rax
	je	.LBB215_8
.LBB215_7:
	jmp	.LBB215_10
.LBB215_8:                              #   in Loop: Header=BB215_3 Depth=1
	movq	-56(%rbp), %rax
	movq	%rax, -48(%rbp)
# %bb.9:                                #   in Loop: Header=BB215_3 Depth=1
	movq	-56(%rbp), %rdi
	callq	_ZNKSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EE7_M_nextEv
	movq	%rax, -56(%rbp)
	jmp	.LBB215_3
.LBB215_10:
	movq	$0, -8(%rbp)
.LBB215_11:
	movq	-8(%rbp), %rax
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end215:
	.size	_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_find_before_nodeEmRS3_m, .Lfunc_end215-_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_find_before_nodeEmRS3_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt8__detail15_Hashtable_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt8equal_toIS2_ESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE9_M_equalsERS4_mRKNS_16_Hash_node_valueISB_Lb1EEE,"axG",@progbits,_ZNKSt8__detail15_Hashtable_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt8equal_toIS2_ESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE9_M_equalsERS4_mRKNS_16_Hash_node_valueISB_Lb1EEE,comdat
	.weak	_ZNKSt8__detail15_Hashtable_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt8equal_toIS2_ESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE9_M_equalsERS4_mRKNS_16_Hash_node_valueISB_Lb1EEE # -- Begin function _ZNKSt8__detail15_Hashtable_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt8equal_toIS2_ESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE9_M_equalsERS4_mRKNS_16_Hash_node_valueISB_Lb1EEE
	.p2align	4, 0x90
	.type	_ZNKSt8__detail15_Hashtable_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt8equal_toIS2_ESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE9_M_equalsERS4_mRKNS_16_Hash_node_valueISB_Lb1EEE,@function
_ZNKSt8__detail15_Hashtable_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt8equal_toIS2_ESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE9_M_equalsERS4_mRKNS_16_Hash_node_valueISB_Lb1EEE: # @_ZNKSt8__detail15_Hashtable_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt8equal_toIS2_ESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE9_M_equalsERS4_mRKNS_16_Hash_node_valueISB_Lb1EEE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -56(%rbp)                 # 8-byte Spill
	movq	-24(%rbp), %rdi
	movq	-32(%rbp), %rsi
	addq	$48, %rsi
	callq	_ZNSt8__detail15_Hashtable_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt8equal_toIS2_ESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE9_S_equalsEmRKNS_21_Hash_node_code_cacheILb1EEE
	movb	%al, %cl
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	testb	$1, %cl
	movb	%al, -41(%rbp)                  # 1-byte Spill
	jne	.LBB216_1
	jmp	.LBB216_2
.LBB216_1:
	movq	-56(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNKSt8__detail15_Hashtable_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt8equal_toIS2_ESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE5_M_eqEv
	movq	%rax, -72(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rax
	movq	%rax, -64(%rbp)                 # 8-byte Spill
	movq	-32(%rbp), %rdi
	callq	_ZNKSt8__detail21_Hash_node_value_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE4_M_vEv
	movq	%rax, %rsi
	leaq	-40(%rbp), %rdi
	callq	_ZNKSt8__detail10_Select1stclIRKSt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEEEDTclsr3stdE3getILi0EEclsr3stdE7forwardIT_Efp_EEEOSF_
	movq	-72(%rbp), %rdi                 # 8-byte Reload
	movq	-64(%rbp), %rsi                 # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNKSt8equal_toISt5arrayImLm4EEEclERKS1_S4_
	movb	%al, -41(%rbp)                  # 1-byte Spill
.LBB216_2:
	movb	-41(%rbp), %al                  # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %eax
	addq	$80, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end216:
	.size	_ZNKSt8__detail15_Hashtable_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt8equal_toIS2_ESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE9_M_equalsERS4_mRKNS_16_Hash_node_valueISB_Lb1EEE, .Lfunc_end216-_ZNKSt8__detail15_Hashtable_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt8equal_toIS2_ESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE9_M_equalsERS4_mRKNS_16_Hash_node_valueISB_Lb1EEE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexERKNSC_16_Hash_node_valueISA_Lb1EEE,"axG",@progbits,_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexERKNSC_16_Hash_node_valueISA_Lb1EEE,comdat
	.weak	_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexERKNSC_16_Hash_node_valueISA_Lb1EEE # -- Begin function _ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexERKNSC_16_Hash_node_valueISA_Lb1EEE
	.p2align	4, 0x90
	.type	_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexERKNSC_16_Hash_node_valueISA_Lb1EEE,@function
_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexERKNSC_16_Hash_node_valueISA_Lb1EEE: # @_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexERKNSC_16_Hash_node_valueISA_Lb1EEE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	movq	-16(%rbp), %rsi
	movq	8(%rax), %rdx
	callq	_ZNKSt8__detail15_Hash_code_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexERKNS_16_Hash_node_valueISB_Lb1EEEm
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end217:
	.size	_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexERKNSC_16_Hash_node_valueISA_Lb1EEE, .Lfunc_end217-_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexERKNSC_16_Hash_node_valueISA_Lb1EEE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EE7_M_nextEv,"axG",@progbits,_ZNKSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EE7_M_nextEv,comdat
	.weak	_ZNKSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EE7_M_nextEv # -- Begin function _ZNKSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EE7_M_nextEv
	.p2align	4, 0x90
	.type	_ZNKSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EE7_M_nextEv,@function
_ZNKSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EE7_M_nextEv: # @_ZNKSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EE7_M_nextEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end218:
	.size	_ZNKSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EE7_M_nextEv, .Lfunc_end218-_ZNKSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EE7_M_nextEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail15_Hashtable_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt8equal_toIS2_ESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE9_S_equalsEmRKNS_21_Hash_node_code_cacheILb1EEE,"axG",@progbits,_ZNSt8__detail15_Hashtable_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt8equal_toIS2_ESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE9_S_equalsEmRKNS_21_Hash_node_code_cacheILb1EEE,comdat
	.weak	_ZNSt8__detail15_Hashtable_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt8equal_toIS2_ESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE9_S_equalsEmRKNS_21_Hash_node_code_cacheILb1EEE # -- Begin function _ZNSt8__detail15_Hashtable_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt8equal_toIS2_ESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE9_S_equalsEmRKNS_21_Hash_node_code_cacheILb1EEE
	.p2align	4, 0x90
	.type	_ZNSt8__detail15_Hashtable_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt8equal_toIS2_ESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE9_S_equalsEmRKNS_21_Hash_node_code_cacheILb1EEE,@function
_ZNSt8__detail15_Hashtable_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt8equal_toIS2_ESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE9_S_equalsEmRKNS_21_Hash_node_code_cacheILb1EEE: # @_ZNSt8__detail15_Hashtable_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt8equal_toIS2_ESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE9_S_equalsEmRKNS_21_Hash_node_code_cacheILb1EEE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
	cmpq	(%rcx), %rax
	sete	%al
	andb	$1, %al
	movzbl	%al, %eax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end219:
	.size	_ZNSt8__detail15_Hashtable_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt8equal_toIS2_ESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE9_S_equalsEmRKNS_21_Hash_node_code_cacheILb1EEE, .Lfunc_end219-_ZNSt8__detail15_Hashtable_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt8equal_toIS2_ESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE9_S_equalsEmRKNS_21_Hash_node_code_cacheILb1EEE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt8__detail15_Hashtable_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt8equal_toIS2_ESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE5_M_eqEv,"axG",@progbits,_ZNKSt8__detail15_Hashtable_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt8equal_toIS2_ESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE5_M_eqEv,comdat
	.weak	_ZNKSt8__detail15_Hashtable_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt8equal_toIS2_ESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE5_M_eqEv # -- Begin function _ZNKSt8__detail15_Hashtable_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt8equal_toIS2_ESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE5_M_eqEv
	.p2align	4, 0x90
	.type	_ZNKSt8__detail15_Hashtable_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt8equal_toIS2_ESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE5_M_eqEv,@function
_ZNKSt8__detail15_Hashtable_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt8equal_toIS2_ESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE5_M_eqEv: # @_ZNKSt8__detail15_Hashtable_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt8equal_toIS2_ESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE5_M_eqEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNKSt8__detail21_Hashtable_ebo_helperILi0ESt8equal_toISt5arrayImLm4EEELb1EE7_M_cgetEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end220:
	.size	_ZNKSt8__detail15_Hashtable_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt8equal_toIS2_ESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE5_M_eqEv, .Lfunc_end220-_ZNKSt8__detail15_Hashtable_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt8equal_toIS2_ESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE5_M_eqEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt8equal_toISt5arrayImLm4EEEclERKS1_S4_,"axG",@progbits,_ZNKSt8equal_toISt5arrayImLm4EEEclERKS1_S4_,comdat
	.weak	_ZNKSt8equal_toISt5arrayImLm4EEEclERKS1_S4_ # -- Begin function _ZNKSt8equal_toISt5arrayImLm4EEEclERKS1_S4_
	.p2align	4, 0x90
	.type	_ZNKSt8equal_toISt5arrayImLm4EEEclERKS1_S4_,@function
_ZNKSt8equal_toISt5arrayImLm4EEEclERKS1_S4_: # @_ZNKSt8equal_toISt5arrayImLm4EEEclERKS1_S4_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rdi
	movq	-24(%rbp), %rsi
	callq	_ZSteqImLm4EEbRKSt5arrayIT_XT0_EES4_
	andb	$1, %al
	movzbl	%al, %eax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end221:
	.size	_ZNKSt8equal_toISt5arrayImLm4EEEclERKS1_S4_, .Lfunc_end221-_ZNKSt8equal_toISt5arrayImLm4EEEclERKS1_S4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt8__detail10_Select1stclIRKSt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEEEDTclsr3stdE3getILi0EEclsr3stdE7forwardIT_Efp_EEEOSF_,"axG",@progbits,_ZNKSt8__detail10_Select1stclIRKSt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEEEDTclsr3stdE3getILi0EEclsr3stdE7forwardIT_Efp_EEEOSF_,comdat
	.weak	_ZNKSt8__detail10_Select1stclIRKSt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEEEDTclsr3stdE3getILi0EEclsr3stdE7forwardIT_Efp_EEEOSF_ # -- Begin function _ZNKSt8__detail10_Select1stclIRKSt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEEEDTclsr3stdE3getILi0EEclsr3stdE7forwardIT_Efp_EEEOSF_
	.p2align	4, 0x90
	.type	_ZNKSt8__detail10_Select1stclIRKSt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEEEDTclsr3stdE3getILi0EEclsr3stdE7forwardIT_Efp_EEEOSF_,@function
_ZNKSt8__detail10_Select1stclIRKSt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEEEDTclsr3stdE3getILi0EEclsr3stdE7forwardIT_Efp_EEEOSF_: # @_ZNKSt8__detail10_Select1stclIRKSt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEEEDTclsr3stdE3getILi0EEclsr3stdE7forwardIT_Efp_EEEOSF_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZSt7forwardIRKSt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEEOT_RNSt16remove_referenceISD_E4typeE
	movq	%rax, %rdi
	callq	_ZSt3getILm0EKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEERKNSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeERKSD_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end222:
	.size	_ZNKSt8__detail10_Select1stclIRKSt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEEEDTclsr3stdE3getILi0EEclsr3stdE7forwardIT_Efp_EEEOSF_, .Lfunc_end222-_ZNKSt8__detail10_Select1stclIRKSt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEEEDTclsr3stdE3getILi0EEclsr3stdE7forwardIT_Efp_EEEOSF_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt8__detail21_Hash_node_value_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE4_M_vEv,"axG",@progbits,_ZNKSt8__detail21_Hash_node_value_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE4_M_vEv,comdat
	.weak	_ZNKSt8__detail21_Hash_node_value_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE4_M_vEv # -- Begin function _ZNKSt8__detail21_Hash_node_value_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE4_M_vEv
	.p2align	4, 0x90
	.type	_ZNKSt8__detail21_Hash_node_value_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE4_M_vEv,@function
_ZNKSt8__detail21_Hash_node_value_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE4_M_vEv: # @_ZNKSt8__detail21_Hash_node_value_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE4_M_vEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNKSt8__detail21_Hash_node_value_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE9_M_valptrEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end223:
	.size	_ZNKSt8__detail21_Hash_node_value_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE4_M_vEv, .Lfunc_end223-_ZNKSt8__detail21_Hash_node_value_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE4_M_vEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt8__detail21_Hashtable_ebo_helperILi0ESt8equal_toISt5arrayImLm4EEELb1EE7_M_cgetEv,"axG",@progbits,_ZNKSt8__detail21_Hashtable_ebo_helperILi0ESt8equal_toISt5arrayImLm4EEELb1EE7_M_cgetEv,comdat
	.weak	_ZNKSt8__detail21_Hashtable_ebo_helperILi0ESt8equal_toISt5arrayImLm4EEELb1EE7_M_cgetEv # -- Begin function _ZNKSt8__detail21_Hashtable_ebo_helperILi0ESt8equal_toISt5arrayImLm4EEELb1EE7_M_cgetEv
	.p2align	4, 0x90
	.type	_ZNKSt8__detail21_Hashtable_ebo_helperILi0ESt8equal_toISt5arrayImLm4EEELb1EE7_M_cgetEv,@function
_ZNKSt8__detail21_Hashtable_ebo_helperILi0ESt8equal_toISt5arrayImLm4EEELb1EE7_M_cgetEv: # @_ZNKSt8__detail21_Hashtable_ebo_helperILi0ESt8equal_toISt5arrayImLm4EEELb1EE7_M_cgetEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end224:
	.size	_ZNKSt8__detail21_Hashtable_ebo_helperILi0ESt8equal_toISt5arrayImLm4EEELb1EE7_M_cgetEv, .Lfunc_end224-_ZNKSt8__detail21_Hashtable_ebo_helperILi0ESt8equal_toISt5arrayImLm4EEELb1EE7_M_cgetEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSteqImLm4EEbRKSt5arrayIT_XT0_EES4_,"axG",@progbits,_ZSteqImLm4EEbRKSt5arrayIT_XT0_EES4_,comdat
	.weak	_ZSteqImLm4EEbRKSt5arrayIT_XT0_EES4_ # -- Begin function _ZSteqImLm4EEbRKSt5arrayIT_XT0_EES4_
	.p2align	4, 0x90
	.type	_ZSteqImLm4EEbRKSt5arrayIT_XT0_EES4_,@function
_ZSteqImLm4EEbRKSt5arrayIT_XT0_EES4_:   # @_ZSteqImLm4EEbRKSt5arrayIT_XT0_EES4_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNKSt5arrayImLm4EE5beginEv
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	movq	-8(%rbp), %rdi
	callq	_ZNKSt5arrayImLm4EE3endEv
	movq	%rax, -24(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	callq	_ZNKSt5arrayImLm4EE5beginEv
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	movq	-24(%rbp), %rsi                 # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt5equalIPKmS1_EbT_S2_T0_
	andb	$1, %al
	movzbl	%al, %eax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end225:
	.size	_ZSteqImLm4EEbRKSt5arrayIT_XT0_EES4_, .Lfunc_end225-_ZSteqImLm4EEbRKSt5arrayIT_XT0_EES4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt5equalIPKmS1_EbT_S2_T0_,"axG",@progbits,_ZSt5equalIPKmS1_EbT_S2_T0_,comdat
	.weak	_ZSt5equalIPKmS1_EbT_S2_T0_     # -- Begin function _ZSt5equalIPKmS1_EbT_S2_T0_
	.p2align	4, 0x90
	.type	_ZSt5equalIPKmS1_EbT_S2_T0_,@function
_ZSt5equalIPKmS1_EbT_S2_T0_:            # @_ZSt5equalIPKmS1_EbT_S2_T0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZSt11__equal_auxIPKmS1_EbT_S2_T0_
	andb	$1, %al
	movzbl	%al, %eax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end226:
	.size	_ZSt5equalIPKmS1_EbT_S2_T0_, .Lfunc_end226-_ZSt5equalIPKmS1_EbT_S2_T0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt5arrayImLm4EE5beginEv,"axG",@progbits,_ZNKSt5arrayImLm4EE5beginEv,comdat
	.weak	_ZNKSt5arrayImLm4EE5beginEv     # -- Begin function _ZNKSt5arrayImLm4EE5beginEv
	.p2align	4, 0x90
	.type	_ZNKSt5arrayImLm4EE5beginEv,@function
_ZNKSt5arrayImLm4EE5beginEv:            # @_ZNKSt5arrayImLm4EE5beginEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNKSt5arrayImLm4EE4dataEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end227:
	.size	_ZNKSt5arrayImLm4EE5beginEv, .Lfunc_end227-_ZNKSt5arrayImLm4EE5beginEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt5arrayImLm4EE3endEv,"axG",@progbits,_ZNKSt5arrayImLm4EE3endEv,comdat
	.weak	_ZNKSt5arrayImLm4EE3endEv       # -- Begin function _ZNKSt5arrayImLm4EE3endEv
	.p2align	4, 0x90
	.type	_ZNKSt5arrayImLm4EE3endEv,@function
_ZNKSt5arrayImLm4EE3endEv:              # @_ZNKSt5arrayImLm4EE3endEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNKSt5arrayImLm4EE4dataEv
	addq	$32, %rax
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end228:
	.size	_ZNKSt5arrayImLm4EE3endEv, .Lfunc_end228-_ZNKSt5arrayImLm4EE3endEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt11__equal_auxIPKmS1_EbT_S2_T0_,"axG",@progbits,_ZSt11__equal_auxIPKmS1_EbT_S2_T0_,comdat
	.weak	_ZSt11__equal_auxIPKmS1_EbT_S2_T0_ # -- Begin function _ZSt11__equal_auxIPKmS1_EbT_S2_T0_
	.p2align	4, 0x90
	.type	_ZSt11__equal_auxIPKmS1_EbT_S2_T0_,@function
_ZSt11__equal_auxIPKmS1_EbT_S2_T0_:     # @_ZSt11__equal_auxIPKmS1_EbT_S2_T0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt12__niter_baseIPKmET_S2_
	movq	%rax, -40(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	callq	_ZSt12__niter_baseIPKmET_S2_
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	movq	-24(%rbp), %rdi
	callq	_ZSt12__niter_baseIPKmET_S2_
	movq	-40(%rbp), %rdi                 # 8-byte Reload
	movq	-32(%rbp), %rsi                 # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt12__equal_aux1IPKmS1_EbT_S2_T0_
	andb	$1, %al
	movzbl	%al, %eax
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end229:
	.size	_ZSt11__equal_auxIPKmS1_EbT_S2_T0_, .Lfunc_end229-_ZSt11__equal_auxIPKmS1_EbT_S2_T0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__equal_aux1IPKmS1_EbT_S2_T0_,"axG",@progbits,_ZSt12__equal_aux1IPKmS1_EbT_S2_T0_,comdat
	.weak	_ZSt12__equal_aux1IPKmS1_EbT_S2_T0_ # -- Begin function _ZSt12__equal_aux1IPKmS1_EbT_S2_T0_
	.p2align	4, 0x90
	.type	_ZSt12__equal_aux1IPKmS1_EbT_S2_T0_,@function
_ZSt12__equal_aux1IPKmS1_EbT_S2_T0_:    # @_ZSt12__equal_aux1IPKmS1_EbT_S2_T0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movb	$1, -25(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZNSt7__equalILb1EE5equalImEEbPKT_S4_S4_
	andb	$1, %al
	movzbl	%al, %eax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end230:
	.size	_ZSt12__equal_aux1IPKmS1_EbT_S2_T0_, .Lfunc_end230-_ZSt12__equal_aux1IPKmS1_EbT_S2_T0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__niter_baseIPKmET_S2_,"axG",@progbits,_ZSt12__niter_baseIPKmET_S2_,comdat
	.weak	_ZSt12__niter_baseIPKmET_S2_    # -- Begin function _ZSt12__niter_baseIPKmET_S2_
	.p2align	4, 0x90
	.type	_ZSt12__niter_baseIPKmET_S2_,@function
_ZSt12__niter_baseIPKmET_S2_:           # @_ZSt12__niter_baseIPKmET_S2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end231:
	.size	_ZSt12__niter_baseIPKmET_S2_, .Lfunc_end231-_ZSt12__niter_baseIPKmET_S2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt7__equalILb1EE5equalImEEbPKT_S4_S4_,"axG",@progbits,_ZNSt7__equalILb1EE5equalImEEbPKT_S4_S4_,comdat
	.weak	_ZNSt7__equalILb1EE5equalImEEbPKT_S4_S4_ # -- Begin function _ZNSt7__equalILb1EE5equalImEEbPKT_S4_S4_
	.p2align	4, 0x90
	.type	_ZNSt7__equalILb1EE5equalImEEbPKT_S4_S4_,@function
_ZNSt7__equalILb1EE5equalImEEbPKT_S4_S4_: # @_ZNSt7__equalILb1EE5equalImEEbPKT_S4_S4_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rdx, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	-16(%rbp), %rcx
	subq	%rcx, %rax
	sarq	$3, %rax
	movq	%rax, -40(%rbp)
	cmpq	$0, -40(%rbp)
	je	.LBB232_2
# %bb.1:
	movq	-16(%rbp), %rdi
	movq	-32(%rbp), %rsi
	movq	-40(%rbp), %rdx
	callq	_ZSt8__memcmpImmEiPKT_PKT0_m
	cmpl	$0, %eax
	setne	%al
	xorb	$-1, %al
	andb	$1, %al
	movb	%al, -1(%rbp)
	jmp	.LBB232_3
.LBB232_2:
	movb	$1, -1(%rbp)
.LBB232_3:
	movb	-1(%rbp), %al
	andb	$1, %al
	movzbl	%al, %eax
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end232:
	.size	_ZNSt7__equalILb1EE5equalImEEbPKT_S4_S4_, .Lfunc_end232-_ZNSt7__equalILb1EE5equalImEEbPKT_S4_S4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt8__memcmpImmEiPKT_PKT0_m,"axG",@progbits,_ZSt8__memcmpImmEiPKT_PKT0_m,comdat
	.weak	_ZSt8__memcmpImmEiPKT_PKT0_m    # -- Begin function _ZSt8__memcmpImmEiPKT_PKT0_m
	.p2align	4, 0x90
	.type	_ZSt8__memcmpImmEiPKT_PKT0_m,@function
_ZSt8__memcmpImmEiPKT_PKT0_m:           # @_ZSt8__memcmpImmEiPKT_PKT0_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	shlq	$3, %rdx
	callq	memcmp@PLT
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end233:
	.size	_ZSt8__memcmpImmEiPKT_PKT0_m, .Lfunc_end233-_ZSt8__memcmpImmEiPKT_PKT0_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt5arrayImLm4EE4dataEv,"axG",@progbits,_ZNKSt5arrayImLm4EE4dataEv,comdat
	.weak	_ZNKSt5arrayImLm4EE4dataEv      # -- Begin function _ZNKSt5arrayImLm4EE4dataEv
	.p2align	4, 0x90
	.type	_ZNKSt5arrayImLm4EE4dataEv,@function
_ZNKSt5arrayImLm4EE4dataEv:             # @_ZNKSt5arrayImLm4EE4dataEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt14__array_traitsImLm4EE6_S_ptrERA4_Km
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end234:
	.size	_ZNKSt5arrayImLm4EE4dataEv, .Lfunc_end234-_ZNKSt5arrayImLm4EE4dataEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt14__array_traitsImLm4EE6_S_ptrERA4_Km,"axG",@progbits,_ZNSt14__array_traitsImLm4EE6_S_ptrERA4_Km,comdat
	.weak	_ZNSt14__array_traitsImLm4EE6_S_ptrERA4_Km # -- Begin function _ZNSt14__array_traitsImLm4EE6_S_ptrERA4_Km
	.p2align	4, 0x90
	.type	_ZNSt14__array_traitsImLm4EE6_S_ptrERA4_Km,@function
_ZNSt14__array_traitsImLm4EE6_S_ptrERA4_Km: # @_ZNSt14__array_traitsImLm4EE6_S_ptrERA4_Km
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end235:
	.size	_ZNSt14__array_traitsImLm4EE6_S_ptrERA4_Km, .Lfunc_end235-_ZNSt14__array_traitsImLm4EE6_S_ptrERA4_Km
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt3getILm0EKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEERKNSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeERKSD_,"axG",@progbits,_ZSt3getILm0EKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEERKNSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeERKSD_,comdat
	.weak	_ZSt3getILm0EKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEERKNSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeERKSD_ # -- Begin function _ZSt3getILm0EKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEERKNSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeERKSD_
	.p2align	4, 0x90
	.type	_ZSt3getILm0EKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEERKNSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeERKSD_,@function
_ZSt3getILm0EKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEERKNSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeERKSD_: # @_ZSt3getILm0EKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEERKNSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeERKSD_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt10__pair_getILm0EE11__const_getIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEERKT_RKSt4pairISB_T0_E
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end236:
	.size	_ZSt3getILm0EKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEERKNSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeERKSD_, .Lfunc_end236-_ZSt3getILm0EKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEERKNSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeERKSD_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt7forwardIRKSt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEEOT_RNSt16remove_referenceISD_E4typeE,"axG",@progbits,_ZSt7forwardIRKSt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEEOT_RNSt16remove_referenceISD_E4typeE,comdat
	.weak	_ZSt7forwardIRKSt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEEOT_RNSt16remove_referenceISD_E4typeE # -- Begin function _ZSt7forwardIRKSt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEEOT_RNSt16remove_referenceISD_E4typeE
	.p2align	4, 0x90
	.type	_ZSt7forwardIRKSt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEEOT_RNSt16remove_referenceISD_E4typeE,@function
_ZSt7forwardIRKSt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEEOT_RNSt16remove_referenceISD_E4typeE: # @_ZSt7forwardIRKSt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEEOT_RNSt16remove_referenceISD_E4typeE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end237:
	.size	_ZSt7forwardIRKSt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEEOT_RNSt16remove_referenceISD_E4typeE, .Lfunc_end237-_ZSt7forwardIRKSt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEEOT_RNSt16remove_referenceISD_E4typeE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt10__pair_getILm0EE11__const_getIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEERKT_RKSt4pairISB_T0_E,"axG",@progbits,_ZNSt10__pair_getILm0EE11__const_getIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEERKT_RKSt4pairISB_T0_E,comdat
	.weak	_ZNSt10__pair_getILm0EE11__const_getIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEERKT_RKSt4pairISB_T0_E # -- Begin function _ZNSt10__pair_getILm0EE11__const_getIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEERKT_RKSt4pairISB_T0_E
	.p2align	4, 0x90
	.type	_ZNSt10__pair_getILm0EE11__const_getIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEERKT_RKSt4pairISB_T0_E,@function
_ZNSt10__pair_getILm0EE11__const_getIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEERKT_RKSt4pairISB_T0_E: # @_ZNSt10__pair_getILm0EE11__const_getIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEERKT_RKSt4pairISB_T0_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end238:
	.size	_ZNSt10__pair_getILm0EE11__const_getIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEERKT_RKSt4pairISB_T0_E, .Lfunc_end238-_ZNSt10__pair_getILm0EE11__const_getIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEERKT_RKSt4pairISB_T0_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt8__detail21_Hash_node_value_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE9_M_valptrEv,"axG",@progbits,_ZNKSt8__detail21_Hash_node_value_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE9_M_valptrEv,comdat
	.weak	_ZNKSt8__detail21_Hash_node_value_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE9_M_valptrEv # -- Begin function _ZNKSt8__detail21_Hash_node_value_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE9_M_valptrEv
	.p2align	4, 0x90
	.type	_ZNKSt8__detail21_Hash_node_value_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE9_M_valptrEv,@function
_ZNKSt8__detail21_Hash_node_value_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE9_M_valptrEv: # @_ZNKSt8__detail21_Hash_node_value_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE9_M_valptrEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx16__aligned_bufferISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE6_M_ptrEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end239:
	.size	_ZNKSt8__detail21_Hash_node_value_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE9_M_valptrEv, .Lfunc_end239-_ZNKSt8__detail21_Hash_node_value_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE9_M_valptrEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx16__aligned_bufferISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE6_M_ptrEv,"axG",@progbits,_ZNK9__gnu_cxx16__aligned_bufferISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE6_M_ptrEv,comdat
	.weak	_ZNK9__gnu_cxx16__aligned_bufferISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE6_M_ptrEv # -- Begin function _ZNK9__gnu_cxx16__aligned_bufferISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE6_M_ptrEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx16__aligned_bufferISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE6_M_ptrEv,@function
_ZNK9__gnu_cxx16__aligned_bufferISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE6_M_ptrEv: # @_ZNK9__gnu_cxx16__aligned_bufferISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE6_M_ptrEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx16__aligned_bufferISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE7_M_addrEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end240:
	.size	_ZNK9__gnu_cxx16__aligned_bufferISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE6_M_ptrEv, .Lfunc_end240-_ZNK9__gnu_cxx16__aligned_bufferISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE6_M_ptrEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx16__aligned_bufferISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE7_M_addrEv,"axG",@progbits,_ZNK9__gnu_cxx16__aligned_bufferISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE7_M_addrEv,comdat
	.weak	_ZNK9__gnu_cxx16__aligned_bufferISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE7_M_addrEv # -- Begin function _ZNK9__gnu_cxx16__aligned_bufferISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE7_M_addrEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx16__aligned_bufferISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE7_M_addrEv,@function
_ZNK9__gnu_cxx16__aligned_bufferISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE7_M_addrEv: # @_ZNK9__gnu_cxx16__aligned_bufferISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE7_M_addrEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end241:
	.size	_ZNK9__gnu_cxx16__aligned_bufferISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE7_M_addrEv, .Lfunc_end241-_ZNK9__gnu_cxx16__aligned_bufferISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE7_M_addrEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt8__detail15_Hash_code_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexERKNS_16_Hash_node_valueISB_Lb1EEEm,"axG",@progbits,_ZNKSt8__detail15_Hash_code_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexERKNS_16_Hash_node_valueISB_Lb1EEEm,comdat
	.weak	_ZNKSt8__detail15_Hash_code_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexERKNS_16_Hash_node_valueISB_Lb1EEEm # -- Begin function _ZNKSt8__detail15_Hash_code_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexERKNS_16_Hash_node_valueISB_Lb1EEEm
	.p2align	4, 0x90
	.type	_ZNKSt8__detail15_Hash_code_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexERKNS_16_Hash_node_valueISB_Lb1EEEm,@function
_ZNKSt8__detail15_Hash_code_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexERKNS_16_Hash_node_valueISB_Lb1EEEm: # @_ZNKSt8__detail15_Hash_code_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexERKNS_16_Hash_node_valueISB_Lb1EEEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	48(%rax), %rsi
	movq	-24(%rbp), %rdx
	leaq	-32(%rbp), %rdi
	callq	_ZNKSt8__detail18_Mod_range_hashingclEmm
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end242:
	.size	_ZNKSt8__detail15_Hash_code_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexERKNS_16_Hash_node_valueISB_Lb1EEEm, .Lfunc_end242-_ZNKSt8__detail15_Hash_code_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexERKNS_16_Hash_node_valueISB_Lb1EEEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail19_Node_iterator_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEC2EPNS_10_Hash_nodeISB_Lb1EEE,"axG",@progbits,_ZNSt8__detail19_Node_iterator_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEC2EPNS_10_Hash_nodeISB_Lb1EEE,comdat
	.weak	_ZNSt8__detail19_Node_iterator_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEC2EPNS_10_Hash_nodeISB_Lb1EEE # -- Begin function _ZNSt8__detail19_Node_iterator_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEC2EPNS_10_Hash_nodeISB_Lb1EEE
	.p2align	4, 0x90
	.type	_ZNSt8__detail19_Node_iterator_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEC2EPNS_10_Hash_nodeISB_Lb1EEE,@function
_ZNSt8__detail19_Node_iterator_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEC2EPNS_10_Hash_nodeISB_Lb1EEE: # @_ZNSt8__detail19_Node_iterator_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEC2EPNS_10_Hash_nodeISB_Lb1EEE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	%rcx, (%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end243:
	.size	_ZNSt8__detail19_Node_iterator_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEC2EPNS_10_Hash_nodeISB_Lb1EEE, .Lfunc_end243-_ZNSt8__detail19_Node_iterator_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEC2EPNS_10_Hash_nodeISB_Lb1EEE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE3endEv,"axG",@progbits,_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE3endEv,comdat
	.weak	_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE3endEv # -- Begin function _ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE3endEv
	.p2align	4, 0x90
	.type	_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE3endEv,@function
_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE3endEv: # @_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE3endEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -16(%rbp)
	leaq	-8(%rbp), %rdi
	xorl	%eax, %eax
	movl	%eax, %esi
	callq	_ZNSt8__detail20_Node_const_iteratorISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb0ELb1EEC2EPNS_10_Hash_nodeISB_Lb1EEE
	movq	-8(%rbp), %rax
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end244:
	.size	_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE3endEv, .Lfunc_end244-_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE3endEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail21_Hash_node_value_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE9_M_valptrEv,"axG",@progbits,_ZNSt8__detail21_Hash_node_value_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE9_M_valptrEv,comdat
	.weak	_ZNSt8__detail21_Hash_node_value_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE9_M_valptrEv # -- Begin function _ZNSt8__detail21_Hash_node_value_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE9_M_valptrEv
	.p2align	4, 0x90
	.type	_ZNSt8__detail21_Hash_node_value_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE9_M_valptrEv,@function
_ZNSt8__detail21_Hash_node_value_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE9_M_valptrEv: # @_ZNSt8__detail21_Hash_node_value_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE9_M_valptrEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN9__gnu_cxx16__aligned_bufferISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE6_M_ptrEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end245:
	.size	_ZNSt8__detail21_Hash_node_value_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE9_M_valptrEv, .Lfunc_end245-_ZNSt8__detail21_Hash_node_value_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE9_M_valptrEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx16__aligned_bufferISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE6_M_ptrEv,"axG",@progbits,_ZN9__gnu_cxx16__aligned_bufferISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE6_M_ptrEv,comdat
	.weak	_ZN9__gnu_cxx16__aligned_bufferISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE6_M_ptrEv # -- Begin function _ZN9__gnu_cxx16__aligned_bufferISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE6_M_ptrEv
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx16__aligned_bufferISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE6_M_ptrEv,@function
_ZN9__gnu_cxx16__aligned_bufferISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE6_M_ptrEv: # @_ZN9__gnu_cxx16__aligned_bufferISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE6_M_ptrEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN9__gnu_cxx16__aligned_bufferISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE7_M_addrEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end246:
	.size	_ZN9__gnu_cxx16__aligned_bufferISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE6_M_ptrEv, .Lfunc_end246-_ZN9__gnu_cxx16__aligned_bufferISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE6_M_ptrEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx16__aligned_bufferISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE7_M_addrEv,"axG",@progbits,_ZN9__gnu_cxx16__aligned_bufferISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE7_M_addrEv,comdat
	.weak	_ZN9__gnu_cxx16__aligned_bufferISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE7_M_addrEv # -- Begin function _ZN9__gnu_cxx16__aligned_bufferISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE7_M_addrEv
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx16__aligned_bufferISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE7_M_addrEv,@function
_ZN9__gnu_cxx16__aligned_bufferISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE7_M_addrEv: # @_ZN9__gnu_cxx16__aligned_bufferISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE7_M_addrEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end247:
	.size	_ZN9__gnu_cxx16__aligned_bufferISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE7_M_addrEv, .Lfunc_end247-_ZN9__gnu_cxx16__aligned_bufferISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE7_M_addrEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EEC2ERKS6_,"axG",@progbits,_ZNSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EEC2ERKS6_,comdat
	.weak	_ZNSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EEC2ERKS6_ # -- Begin function _ZNSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EEC2ERKS6_
	.p2align	4, 0x90
	.type	_ZNSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EEC2ERKS6_,@function
_ZNSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EEC2ERKS6_: # @_ZNSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EEC2ERKS6_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, (%rdi)
	addq	$8, %rdi
	movq	-16(%rbp), %rsi
	addq	$8, %rsi
	callq	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2ERKS2_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end248:
	.size	_ZNSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EEC2ERKS6_, .Lfunc_end248-_ZNSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EEC2ERKS6_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt10shared_ptrIN4seal11SEALContext11ContextDataEEC2Ev,"axG",@progbits,_ZNSt10shared_ptrIN4seal11SEALContext11ContextDataEEC2Ev,comdat
	.weak	_ZNSt10shared_ptrIN4seal11SEALContext11ContextDataEEC2Ev # -- Begin function _ZNSt10shared_ptrIN4seal11SEALContext11ContextDataEEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt10shared_ptrIN4seal11SEALContext11ContextDataEEC2Ev,@function
_ZNSt10shared_ptrIN4seal11SEALContext11ContextDataEEC2Ev: # @_ZNSt10shared_ptrIN4seal11SEALContext11ContextDataEEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt12__shared_ptrIN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EEC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end249:
	.size	_ZNSt10shared_ptrIN4seal11SEALContext11ContextDataEEC2Ev, .Lfunc_end249-_ZNSt10shared_ptrIN4seal11SEALContext11ContextDataEEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12__shared_ptrIN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EEC2Ev,"axG",@progbits,_ZNSt12__shared_ptrIN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EEC2Ev,comdat
	.weak	_ZNSt12__shared_ptrIN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EEC2Ev # -- Begin function _ZNSt12__shared_ptrIN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12__shared_ptrIN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EEC2Ev,@function
_ZNSt12__shared_ptrIN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EEC2Ev: # @_ZNSt12__shared_ptrIN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	$0, (%rdi)
	addq	$8, %rdi
	callq	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end250:
	.size	_ZNSt12__shared_ptrIN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EEC2Ev, .Lfunc_end250-_ZNSt12__shared_ptrIN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4moveIRSt10shared_ptrIN4seal11SEALContext11ContextDataEEEONSt16remove_referenceIT_E4typeEOS7_,"axG",@progbits,_ZSt4moveIRSt10shared_ptrIN4seal11SEALContext11ContextDataEEEONSt16remove_referenceIT_E4typeEOS7_,comdat
	.weak	_ZSt4moveIRSt10shared_ptrIN4seal11SEALContext11ContextDataEEEONSt16remove_referenceIT_E4typeEOS7_ # -- Begin function _ZSt4moveIRSt10shared_ptrIN4seal11SEALContext11ContextDataEEEONSt16remove_referenceIT_E4typeEOS7_
	.p2align	4, 0x90
	.type	_ZSt4moveIRSt10shared_ptrIN4seal11SEALContext11ContextDataEEEONSt16remove_referenceIT_E4typeEOS7_,@function
_ZSt4moveIRSt10shared_ptrIN4seal11SEALContext11ContextDataEEEONSt16remove_referenceIT_E4typeEOS7_: # @_ZSt4moveIRSt10shared_ptrIN4seal11SEALContext11ContextDataEEEONSt16remove_referenceIT_E4typeEOS7_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end251:
	.size	_ZSt4moveIRSt10shared_ptrIN4seal11SEALContext11ContextDataEEEONSt16remove_referenceIT_E4typeEOS7_, .Lfunc_end251-_ZSt4moveIRSt10shared_ptrIN4seal11SEALContext11ContextDataEEEONSt16remove_referenceIT_E4typeEOS7_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EEC2IS2_vEEOS_IT_LS5_2EE,"axG",@progbits,_ZNSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EEC2IS2_vEEOS_IT_LS5_2EE,comdat
	.weak	_ZNSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EEC2IS2_vEEOS_IT_LS5_2EE # -- Begin function _ZNSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EEC2IS2_vEEOS_IT_LS5_2EE
	.p2align	4, 0x90
	.type	_ZNSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EEC2IS2_vEEOS_IT_LS5_2EE,@function
_ZNSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EEC2IS2_vEEOS_IT_LS5_2EE: # @_ZNSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EEC2IS2_vEEOS_IT_LS5_2EE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -24(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, (%rdi)
	addq	$8, %rdi
	callq	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2Ev
	movq	-24(%rbp), %rdi                 # 8-byte Reload
	addq	$8, %rdi
	movq	-16(%rbp), %rsi
	addq	$8, %rsi
	callq	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EE7_M_swapERS2_
	movq	-16(%rbp), %rax
	movq	$0, (%rax)
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end252:
	.size	_ZNSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EEC2IS2_vEEOS_IT_LS5_2EE, .Lfunc_end252-_ZNSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EEC2IS2_vEEOS_IT_LS5_2EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EE7_M_swapERS2_,"axG",@progbits,_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EE7_M_swapERS2_,comdat
	.weak	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EE7_M_swapERS2_ # -- Begin function _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EE7_M_swapERS2_
	.p2align	4, 0x90
	.type	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EE7_M_swapERS2_,@function
_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EE7_M_swapERS2_: # @_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EE7_M_swapERS2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	(%rcx), %rcx
	movq	%rcx, -24(%rbp)
	movq	(%rax), %rdx
	movq	-16(%rbp), %rcx
	movq	%rdx, (%rcx)
	movq	-24(%rbp), %rcx
	movq	%rcx, (%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end253:
	.size	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EE7_M_swapERS2_, .Lfunc_end253-_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EE7_M_swapERS2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12__shared_ptrIN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EED2Ev,"axG",@progbits,_ZNSt12__shared_ptrIN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EED2Ev,comdat
	.weak	_ZNSt12__shared_ptrIN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EED2Ev # -- Begin function _ZNSt12__shared_ptrIN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt12__shared_ptrIN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EED2Ev,@function
_ZNSt12__shared_ptrIN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EED2Ev: # @_ZNSt12__shared_ptrIN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	addq	$8, %rdi
	callq	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end254:
	.size	_ZNSt12__shared_ptrIN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EED2Ev, .Lfunc_end254-_ZNSt12__shared_ptrIN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt19__shared_ptr_accessIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2ELb0ELb0EE6_M_getEv,"axG",@progbits,_ZNKSt19__shared_ptr_accessIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2ELb0ELb0EE6_M_getEv,comdat
	.weak	_ZNKSt19__shared_ptr_accessIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2ELb0ELb0EE6_M_getEv # -- Begin function _ZNKSt19__shared_ptr_accessIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2ELb0ELb0EE6_M_getEv
	.p2align	4, 0x90
	.type	_ZNKSt19__shared_ptr_accessIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2ELb0ELb0EE6_M_getEv,@function
_ZNKSt19__shared_ptr_accessIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2ELb0ELb0EE6_M_getEv: # @_ZNKSt19__shared_ptr_accessIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2ELb0ELb0EE6_M_getEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNKSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EE3getEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end255:
	.size	_ZNKSt19__shared_ptr_accessIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2ELb0ELb0EE6_M_getEv, .Lfunc_end255-_ZNKSt19__shared_ptr_accessIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2ELb0ELb0EE6_M_getEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EE3getEv,"axG",@progbits,_ZNKSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EE3getEv,comdat
	.weak	_ZNKSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EE3getEv # -- Begin function _ZNKSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EE3getEv
	.p2align	4, 0x90
	.type	_ZNKSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EE3getEv,@function
_ZNKSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EE3getEv: # @_ZNKSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EE3getEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end256:
	.size	_ZNKSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EE3getEv, .Lfunc_end256-_ZNKSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EE3getEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEEmiEl,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEEmiEl,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEEmiEl # -- Begin function _ZNK9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEEmiEl
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEEmiEl,@function
_ZNK9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEEmiEl: # @_ZNK9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEEmiEl
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	xorl	%ecx, %ecx
                                        # kill: def $rcx killed $ecx
	subq	-24(%rbp), %rcx
	imulq	$48, %rcx, %rcx
	addq	%rcx, %rax
	movq	%rax, -32(%rbp)
	leaq	-8(%rbp), %rdi
	leaq	-32(%rbp), %rsi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEEC2ERKS3_
	movq	-8(%rbp), %rax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end257:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEEmiEl, .Lfunc_end257-_ZNK9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEEmiEl
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEEdeEv,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEEdeEv,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEEdeEv # -- Begin function _ZNK9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEEdeEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEEdeEv,@function
_ZNK9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEEdeEv: # @_ZNK9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEEdeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end258:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEEdeEv, .Lfunc_end258-_ZNK9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEEdeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal13MemoryManager7GetPoolIJbEEENS_16MemoryPoolHandleEmDpOT_,"axG",@progbits,_ZN4seal13MemoryManager7GetPoolIJbEEENS_16MemoryPoolHandleEmDpOT_,comdat
	.weak	_ZN4seal13MemoryManager7GetPoolIJbEEENS_16MemoryPoolHandleEmDpOT_ # -- Begin function _ZN4seal13MemoryManager7GetPoolIJbEEENS_16MemoryPoolHandleEmDpOT_
	.p2align	4, 0x90
	.type	_ZN4seal13MemoryManager7GetPoolIJbEEENS_16MemoryPoolHandleEmDpOT_,@function
_ZN4seal13MemoryManager7GetPoolIJbEEENS_16MemoryPoolHandleEmDpOT_: # @_ZN4seal13MemoryManager7GetPoolIJbEEENS_16MemoryPoolHandleEmDpOT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -48(%rbp)                 # 8-byte Spill
	movq	%rdi, %rax
	movq	%rax, -40(%rbp)                 # 8-byte Spill
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	subq	$1, %rax
	je	.LBB259_1
	jmp	.LBB259_6
.LBB259_6:
	movq	-32(%rbp), %rax                 # 8-byte Reload
	subq	$2, %rax
	je	.LBB259_2
	jmp	.LBB259_7
.LBB259_7:
	movq	-32(%rbp), %rax                 # 8-byte Reload
	subq	$4, %rax
	je	.LBB259_3
	jmp	.LBB259_4
.LBB259_1:
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	callq	_ZN4seal16MemoryPoolHandle6GlobalEv
	jmp	.LBB259_5
.LBB259_2:
	movq	-24(%rbp), %rdi
	callq	_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	movb	(%rax), %al
	andb	$1, %al
	movzbl	%al, %esi
	callq	_ZN4seal16MemoryPoolHandle3NewEb
	jmp	.LBB259_5
.LBB259_3:
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	callq	_ZN4seal16MemoryPoolHandle11ThreadLocalEv
	jmp	.LBB259_5
.LBB259_4:
	callq	_ZN4seal13MemoryManager9GetMMProfEv
	movq	%rax, %rdi
	callq	_ZNKSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EEptEv
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rsi
	movq	-16(%rbp), %rdx
	movq	(%rsi), %rax
	callq	*16(%rax)
.LBB259_5:
	movq	-40(%rbp), %rax                 # 8-byte Reload
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end259:
	.size	_ZN4seal13MemoryManager7GetPoolIJbEEENS_16MemoryPoolHandleEmDpOT_, .Lfunc_end259-_ZN4seal13MemoryManager7GetPoolIJbEEENS_16MemoryPoolHandleEmDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal9PlaintextaSERKS0_,"axG",@progbits,_ZN4seal9PlaintextaSERKS0_,comdat
	.weak	_ZN4seal9PlaintextaSERKS0_      # -- Begin function _ZN4seal9PlaintextaSERKS0_
	.p2align	4, 0x90
	.type	_ZN4seal9PlaintextaSERKS0_,@function
_ZN4seal9PlaintextaSERKS0_:             # @_ZN4seal9PlaintextaSERKS0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -24(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rsi
	movl	$48, %edx
	callq	memcpy@PLT
	movq	-24(%rbp), %rdi                 # 8-byte Reload
	addq	$48, %rdi
	movq	-16(%rbp), %rsi
	addq	$48, %rsi
	callq	_ZN4seal8DynArrayImEaSERKS1_
                                        # kill: def $rcx killed $rax
	movq	-24(%rbp), %rax                 # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end260:
	.size	_ZN4seal9PlaintextaSERKS0_, .Lfunc_end260-_ZN4seal9PlaintextaSERKS0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal16MemoryPoolHandle6GlobalEv,"axG",@progbits,_ZN4seal16MemoryPoolHandle6GlobalEv,comdat
	.weak	_ZN4seal16MemoryPoolHandle6GlobalEv # -- Begin function _ZN4seal16MemoryPoolHandle6GlobalEv
	.p2align	4, 0x90
	.type	_ZN4seal16MemoryPoolHandle6GlobalEv,@function
_ZN4seal16MemoryPoolHandle6GlobalEv:    # @_ZN4seal16MemoryPoolHandle6GlobalEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)                 # 8-byte Spill
	movq	%rdi, %rax
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	movq	%rdi, -8(%rbp)
	leaq	-24(%rbp), %rdi
	movq	_ZN4seal4util16global_variables18global_memory_poolE@GOTPCREL(%rip), %rsi
	callq	_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2ERKS3_
	movq	-40(%rbp), %rdi                 # 8-byte Reload
	leaq	-24(%rbp), %rsi
	callq	_ZN4seal16MemoryPoolHandleC2ESt10shared_ptrINS_4util10MemoryPoolEE
	leaq	-24(%rbp), %rdi
	callq	_ZNSt10shared_ptrIN4seal4util10MemoryPoolEED2Ev
	movq	-32(%rbp), %rax                 # 8-byte Reload
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end261:
	.size	_ZN4seal16MemoryPoolHandle6GlobalEv, .Lfunc_end261-_ZN4seal16MemoryPoolHandle6GlobalEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal16MemoryPoolHandle3NewEb,"axG",@progbits,_ZN4seal16MemoryPoolHandle3NewEb,comdat
	.weak	_ZN4seal16MemoryPoolHandle3NewEb # -- Begin function _ZN4seal16MemoryPoolHandle3NewEb
	.p2align	4, 0x90
	.type	_ZN4seal16MemoryPoolHandle3NewEb,@function
_ZN4seal16MemoryPoolHandle3NewEb:       # @_ZN4seal16MemoryPoolHandle3NewEb
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -64(%rbp)                 # 8-byte Spill
	movb	%sil, %al
	movq	%rdi, %rcx
	movq	%rcx, -56(%rbp)                 # 8-byte Spill
	movq	%rdi, -8(%rbp)
	andb	$1, %al
	movb	%al, -9(%rbp)
	leaq	-48(%rbp), %rdi
	leaq	-9(%rbp), %rsi
	callq	_ZSt11make_sharedIN4seal4util12MemoryPoolMTEJRbEESt10shared_ptrIT_EDpOT0_
	leaq	-32(%rbp), %rdi
	leaq	-48(%rbp), %rsi
	callq	_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2INS1_12MemoryPoolMTEvEEOS_IT_E
	movq	-64(%rbp), %rdi                 # 8-byte Reload
	leaq	-32(%rbp), %rsi
	callq	_ZN4seal16MemoryPoolHandleC2ESt10shared_ptrINS_4util10MemoryPoolEE
	leaq	-32(%rbp), %rdi
	callq	_ZNSt10shared_ptrIN4seal4util10MemoryPoolEED2Ev
	leaq	-48(%rbp), %rdi
	callq	_ZNSt10shared_ptrIN4seal4util12MemoryPoolMTEED2Ev
	movq	-56(%rbp), %rax                 # 8-byte Reload
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end262:
	.size	_ZN4seal16MemoryPoolHandle3NewEb, .Lfunc_end262-_ZN4seal16MemoryPoolHandle3NewEb
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE,"axG",@progbits,_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE,comdat
	.weak	_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE # -- Begin function _ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE
	.p2align	4, 0x90
	.type	_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE,@function
_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE: # @_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end263:
	.size	_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE, .Lfunc_end263-_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal16MemoryPoolHandle11ThreadLocalEv,"axG",@progbits,_ZN4seal16MemoryPoolHandle11ThreadLocalEv,comdat
	.weak	_ZN4seal16MemoryPoolHandle11ThreadLocalEv # -- Begin function _ZN4seal16MemoryPoolHandle11ThreadLocalEv
	.p2align	4, 0x90
	.type	_ZN4seal16MemoryPoolHandle11ThreadLocalEv,@function
_ZN4seal16MemoryPoolHandle11ThreadLocalEv: # @_ZN4seal16MemoryPoolHandle11ThreadLocalEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)                 # 8-byte Spill
	movq	%rdi, %rax
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	movq	%rdi, -8(%rbp)
	callq	_ZTWN4seal4util16global_variables15tls_memory_poolE
	movq	%rax, %rsi
	leaq	-24(%rbp), %rdi
	callq	_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2ERKS3_
	movq	-40(%rbp), %rdi                 # 8-byte Reload
	leaq	-24(%rbp), %rsi
	callq	_ZN4seal16MemoryPoolHandleC2ESt10shared_ptrINS_4util10MemoryPoolEE
	leaq	-24(%rbp), %rdi
	callq	_ZNSt10shared_ptrIN4seal4util10MemoryPoolEED2Ev
	movq	-32(%rbp), %rax                 # 8-byte Reload
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end264:
	.size	_ZN4seal16MemoryPoolHandle11ThreadLocalEv, .Lfunc_end264-_ZN4seal16MemoryPoolHandle11ThreadLocalEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal13MemoryManager9GetMMProfEv,"axG",@progbits,_ZN4seal13MemoryManager9GetMMProfEv,comdat
	.weak	_ZN4seal13MemoryManager9GetMMProfEv # -- Begin function _ZN4seal13MemoryManager9GetMMProfEv
	.p2align	4, 0x90
	.type	_ZN4seal13MemoryManager9GetMMProfEv,@function
_ZN4seal13MemoryManager9GetMMProfEv:    # @_ZN4seal13MemoryManager9GetMMProfEv
.Lfunc_begin39:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception39
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	cmpb	$0, _ZGVZN4seal13MemoryManager9GetMMProfEvE7mm_prof(%rip)
	jne	.LBB265_4
# %bb.1:
	leaq	_ZGVZN4seal13MemoryManager9GetMMProfEvE7mm_prof(%rip), %rdi
	callq	__cxa_guard_acquire@PLT
	cmpl	$0, %eax
	je	.LBB265_4
# %bb.2:
.Ltmp802:
	movl	$8, %edi
	callq	_Znwm@PLT
.Ltmp803:
	movq	%rax, -24(%rbp)                 # 8-byte Spill
	jmp	.LBB265_3
.LBB265_3:
	movq	-24(%rbp), %rdi                 # 8-byte Reload
	movq	%rdi, -32(%rbp)                 # 8-byte Spill
	callq	_ZN4seal12MMProfGlobalC2Ev
	movq	-32(%rbp), %rsi                 # 8-byte Reload
	leaq	_ZZN4seal13MemoryManager9GetMMProfEvE7mm_prof(%rip), %rdi
	callq	_ZNSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EEC2IS3_vEEPS1_
	leaq	_ZNSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EED2Ev(%rip), %rdi
	leaq	_ZZN4seal13MemoryManager9GetMMProfEvE7mm_prof(%rip), %rsi
	leaq	__dso_handle(%rip), %rdx
	callq	__cxa_atexit@PLT
	leaq	_ZGVZN4seal13MemoryManager9GetMMProfEvE7mm_prof(%rip), %rdi
	callq	__cxa_guard_release@PLT
.LBB265_4:
	leaq	_ZZN4seal13MemoryManager9GetMMProfEvE7mm_prof(%rip), %rax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB265_5:
	.cfi_def_cfa %rbp, 16
.Ltmp804:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -8(%rbp)
	movl	%eax, -12(%rbp)
	leaq	_ZGVZN4seal13MemoryManager9GetMMProfEvE7mm_prof(%rip), %rdi
	callq	__cxa_guard_abort@PLT
# %bb.6:
	movq	-8(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end265:
	.size	_ZN4seal13MemoryManager9GetMMProfEv, .Lfunc_end265-_ZN4seal13MemoryManager9GetMMProfEv
	.cfi_endproc
	.section	.gcc_except_table._ZN4seal13MemoryManager9GetMMProfEv,"aG",@progbits,_ZN4seal13MemoryManager9GetMMProfEv,comdat
	.p2align	2
GCC_except_table265:
.Lexception39:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end39-.Lcst_begin39
.Lcst_begin39:
	.uleb128 .Ltmp802-.Lfunc_begin39        # >> Call Site 1 <<
	.uleb128 .Ltmp803-.Ltmp802              #   Call between .Ltmp802 and .Ltmp803
	.uleb128 .Ltmp804-.Lfunc_begin39        #     jumps to .Ltmp804
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp803-.Lfunc_begin39        # >> Call Site 2 <<
	.uleb128 .Lfunc_end265-.Ltmp803         #   Call between .Ltmp803 and .Lfunc_end265
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end39:
	.p2align	2
                                        # -- End function
	.section	.text._ZNKSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EEptEv,"axG",@progbits,_ZNKSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EEptEv,comdat
	.weak	_ZNKSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EEptEv # -- Begin function _ZNKSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EEptEv
	.p2align	4, 0x90
	.type	_ZNKSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EEptEv,@function
_ZNKSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EEptEv: # @_ZNKSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EEptEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNKSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EE3getEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end266:
	.size	_ZNKSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EEptEv, .Lfunc_end266-_ZNKSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EEptEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2ERKS3_,"axG",@progbits,_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2ERKS3_,comdat
	.weak	_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2ERKS3_ # -- Begin function _ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2ERKS3_
	.p2align	4, 0x90
	.type	_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2ERKS3_,@function
_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2ERKS3_: # @_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2ERKS3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEC2ERKS5_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end267:
	.size	_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2ERKS3_, .Lfunc_end267-_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2ERKS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal16MemoryPoolHandleC2ESt10shared_ptrINS_4util10MemoryPoolEE,"axG",@progbits,_ZN4seal16MemoryPoolHandleC2ESt10shared_ptrINS_4util10MemoryPoolEE,comdat
	.weak	_ZN4seal16MemoryPoolHandleC2ESt10shared_ptrINS_4util10MemoryPoolEE # -- Begin function _ZN4seal16MemoryPoolHandleC2ESt10shared_ptrINS_4util10MemoryPoolEE
	.p2align	4, 0x90
	.type	_ZN4seal16MemoryPoolHandleC2ESt10shared_ptrINS_4util10MemoryPoolEE,@function
_ZN4seal16MemoryPoolHandleC2ESt10shared_ptrINS_4util10MemoryPoolEE: # @_ZN4seal16MemoryPoolHandleC2ESt10shared_ptrINS_4util10MemoryPoolEE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rsi, -24(%rbp)                 # 8-byte Spill
	movq	%rdi, %rax
	movq	-24(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -16(%rbp)                 # 8-byte Spill
	callq	_ZSt4moveIRSt10shared_ptrIN4seal4util10MemoryPoolEEEONSt16remove_referenceIT_E4typeEOS7_
	movq	-16(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2EOS3_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end268:
	.size	_ZN4seal16MemoryPoolHandleC2ESt10shared_ptrINS_4util10MemoryPoolEE, .Lfunc_end268-_ZN4seal16MemoryPoolHandleC2ESt10shared_ptrINS_4util10MemoryPoolEE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt10shared_ptrIN4seal4util10MemoryPoolEED2Ev,"axG",@progbits,_ZNSt10shared_ptrIN4seal4util10MemoryPoolEED2Ev,comdat
	.weak	_ZNSt10shared_ptrIN4seal4util10MemoryPoolEED2Ev # -- Begin function _ZNSt10shared_ptrIN4seal4util10MemoryPoolEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt10shared_ptrIN4seal4util10MemoryPoolEED2Ev,@function
_ZNSt10shared_ptrIN4seal4util10MemoryPoolEED2Ev: # @_ZNSt10shared_ptrIN4seal4util10MemoryPoolEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end269:
	.size	_ZNSt10shared_ptrIN4seal4util10MemoryPoolEED2Ev, .Lfunc_end269-_ZNSt10shared_ptrIN4seal4util10MemoryPoolEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEC2ERKS5_,"axG",@progbits,_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEC2ERKS5_,comdat
	.weak	_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEC2ERKS5_ # -- Begin function _ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEC2ERKS5_
	.p2align	4, 0x90
	.type	_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEC2ERKS5_,@function
_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEC2ERKS5_: # @_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEC2ERKS5_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, (%rdi)
	addq	$8, %rdi
	movq	-16(%rbp), %rsi
	addq	$8, %rsi
	callq	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2ERKS2_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end270:
	.size	_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEC2ERKS5_, .Lfunc_end270-_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEC2ERKS5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4moveIRSt10shared_ptrIN4seal4util10MemoryPoolEEEONSt16remove_referenceIT_E4typeEOS7_,"axG",@progbits,_ZSt4moveIRSt10shared_ptrIN4seal4util10MemoryPoolEEEONSt16remove_referenceIT_E4typeEOS7_,comdat
	.weak	_ZSt4moveIRSt10shared_ptrIN4seal4util10MemoryPoolEEEONSt16remove_referenceIT_E4typeEOS7_ # -- Begin function _ZSt4moveIRSt10shared_ptrIN4seal4util10MemoryPoolEEEONSt16remove_referenceIT_E4typeEOS7_
	.p2align	4, 0x90
	.type	_ZSt4moveIRSt10shared_ptrIN4seal4util10MemoryPoolEEEONSt16remove_referenceIT_E4typeEOS7_,@function
_ZSt4moveIRSt10shared_ptrIN4seal4util10MemoryPoolEEEONSt16remove_referenceIT_E4typeEOS7_: # @_ZSt4moveIRSt10shared_ptrIN4seal4util10MemoryPoolEEEONSt16remove_referenceIT_E4typeEOS7_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end271:
	.size	_ZSt4moveIRSt10shared_ptrIN4seal4util10MemoryPoolEEEONSt16remove_referenceIT_E4typeEOS7_, .Lfunc_end271-_ZSt4moveIRSt10shared_ptrIN4seal4util10MemoryPoolEEEONSt16remove_referenceIT_E4typeEOS7_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2EOS3_,"axG",@progbits,_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2EOS3_,comdat
	.weak	_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2EOS3_ # -- Begin function _ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2EOS3_
	.p2align	4, 0x90
	.type	_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2EOS3_,@function
_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2EOS3_: # @_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2EOS3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -24(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	callq	_ZSt4moveIRSt10shared_ptrIN4seal4util10MemoryPoolEEEONSt16remove_referenceIT_E4typeEOS7_
	movq	-24(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEC2EOS5_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end272:
	.size	_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2EOS3_, .Lfunc_end272-_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2EOS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt11make_sharedIN4seal4util12MemoryPoolMTEJRbEESt10shared_ptrIT_EDpOT0_,"axG",@progbits,_ZSt11make_sharedIN4seal4util12MemoryPoolMTEJRbEESt10shared_ptrIT_EDpOT0_,comdat
	.weak	_ZSt11make_sharedIN4seal4util12MemoryPoolMTEJRbEESt10shared_ptrIT_EDpOT0_ # -- Begin function _ZSt11make_sharedIN4seal4util12MemoryPoolMTEJRbEESt10shared_ptrIT_EDpOT0_
	.p2align	4, 0x90
	.type	_ZSt11make_sharedIN4seal4util12MemoryPoolMTEJRbEESt10shared_ptrIT_EDpOT0_,@function
_ZSt11make_sharedIN4seal4util12MemoryPoolMTEJRbEESt10shared_ptrIT_EDpOT0_: # @_ZSt11make_sharedIN4seal4util12MemoryPoolMTEJRbEESt10shared_ptrIT_EDpOT0_
.Lfunc_begin40:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception40
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -56(%rbp)                 # 8-byte Spill
	movq	%rdi, %rax
	movq	%rax, -64(%rbp)                 # 8-byte Spill
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	leaq	-24(%rbp), %rdi
	movq	%rdi, -48(%rbp)                 # 8-byte Spill
	callq	_ZNSaIN4seal4util12MemoryPoolMTEEC2Ev
	movq	-16(%rbp), %rdi
	callq	_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE
	movq	-56(%rbp), %rdi                 # 8-byte Reload
	movq	-48(%rbp), %rsi                 # 8-byte Reload
	movq	%rax, %rdx
.Ltmp805:
	callq	_ZSt15allocate_sharedIN4seal4util12MemoryPoolMTESaIS2_EJRbEESt10shared_ptrIT_ERKT0_DpOT1_
.Ltmp806:
	jmp	.LBB273_1
.LBB273_1:
	leaq	-24(%rbp), %rdi
	callq	_ZNSaIN4seal4util12MemoryPoolMTEED2Ev
	movq	-64(%rbp), %rax                 # 8-byte Reload
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB273_2:
	.cfi_def_cfa %rbp, 16
.Ltmp807:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -32(%rbp)
	movl	%eax, -36(%rbp)
	leaq	-24(%rbp), %rdi
	callq	_ZNSaIN4seal4util12MemoryPoolMTEED2Ev
# %bb.3:
	movq	-32(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end273:
	.size	_ZSt11make_sharedIN4seal4util12MemoryPoolMTEJRbEESt10shared_ptrIT_EDpOT0_, .Lfunc_end273-_ZSt11make_sharedIN4seal4util12MemoryPoolMTEJRbEESt10shared_ptrIT_EDpOT0_
	.cfi_endproc
	.section	.gcc_except_table._ZSt11make_sharedIN4seal4util12MemoryPoolMTEJRbEESt10shared_ptrIT_EDpOT0_,"aG",@progbits,_ZSt11make_sharedIN4seal4util12MemoryPoolMTEJRbEESt10shared_ptrIT_EDpOT0_,comdat
	.p2align	2
GCC_except_table273:
.Lexception40:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end40-.Lcst_begin40
.Lcst_begin40:
	.uleb128 .Ltmp805-.Lfunc_begin40        # >> Call Site 1 <<
	.uleb128 .Ltmp806-.Ltmp805              #   Call between .Ltmp805 and .Ltmp806
	.uleb128 .Ltmp807-.Lfunc_begin40        #     jumps to .Ltmp807
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp806-.Lfunc_begin40        # >> Call Site 2 <<
	.uleb128 .Lfunc_end273-.Ltmp806         #   Call between .Ltmp806 and .Lfunc_end273
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end40:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2INS1_12MemoryPoolMTEvEEOS_IT_E,"axG",@progbits,_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2INS1_12MemoryPoolMTEvEEOS_IT_E,comdat
	.weak	_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2INS1_12MemoryPoolMTEvEEOS_IT_E # -- Begin function _ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2INS1_12MemoryPoolMTEvEEOS_IT_E
	.p2align	4, 0x90
	.type	_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2INS1_12MemoryPoolMTEvEEOS_IT_E,@function
_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2INS1_12MemoryPoolMTEvEEOS_IT_E: # @_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2INS1_12MemoryPoolMTEvEEOS_IT_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -24(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	callq	_ZSt4moveIRSt10shared_ptrIN4seal4util12MemoryPoolMTEEEONSt16remove_referenceIT_E4typeEOS7_
	movq	-24(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEC2INS1_12MemoryPoolMTEvEEOS_IT_LS4_2EE
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end274:
	.size	_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2INS1_12MemoryPoolMTEvEEOS_IT_E, .Lfunc_end274-_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2INS1_12MemoryPoolMTEvEEOS_IT_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt10shared_ptrIN4seal4util12MemoryPoolMTEED2Ev,"axG",@progbits,_ZNSt10shared_ptrIN4seal4util12MemoryPoolMTEED2Ev,comdat
	.weak	_ZNSt10shared_ptrIN4seal4util12MemoryPoolMTEED2Ev # -- Begin function _ZNSt10shared_ptrIN4seal4util12MemoryPoolMTEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt10shared_ptrIN4seal4util12MemoryPoolMTEED2Ev,@function
_ZNSt10shared_ptrIN4seal4util12MemoryPoolMTEED2Ev: # @_ZNSt10shared_ptrIN4seal4util12MemoryPoolMTEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt12__shared_ptrIN4seal4util12MemoryPoolMTELN9__gnu_cxx12_Lock_policyE2EED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end275:
	.size	_ZNSt10shared_ptrIN4seal4util12MemoryPoolMTEED2Ev, .Lfunc_end275-_ZNSt10shared_ptrIN4seal4util12MemoryPoolMTEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt15allocate_sharedIN4seal4util12MemoryPoolMTESaIS2_EJRbEESt10shared_ptrIT_ERKT0_DpOT1_,"axG",@progbits,_ZSt15allocate_sharedIN4seal4util12MemoryPoolMTESaIS2_EJRbEESt10shared_ptrIT_ERKT0_DpOT1_,comdat
	.weak	_ZSt15allocate_sharedIN4seal4util12MemoryPoolMTESaIS2_EJRbEESt10shared_ptrIT_ERKT0_DpOT1_ # -- Begin function _ZSt15allocate_sharedIN4seal4util12MemoryPoolMTESaIS2_EJRbEESt10shared_ptrIT_ERKT0_DpOT1_
	.p2align	4, 0x90
	.type	_ZSt15allocate_sharedIN4seal4util12MemoryPoolMTESaIS2_EJRbEESt10shared_ptrIT_ERKT0_DpOT1_,@function
_ZSt15allocate_sharedIN4seal4util12MemoryPoolMTESaIS2_EJRbEESt10shared_ptrIT_ERKT0_DpOT1_: # @_ZSt15allocate_sharedIN4seal4util12MemoryPoolMTESaIS2_EJRbEESt10shared_ptrIT_ERKT0_DpOT1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -48(%rbp)                 # 8-byte Spill
	movq	%rdi, %rax
	movq	%rax, -40(%rbp)                 # 8-byte Spill
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -32(%rbp)
	movq	-24(%rbp), %rdi
	callq	_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rdx
	movq	-32(%rbp), %rsi
	callq	_ZNSt10shared_ptrIN4seal4util12MemoryPoolMTEEC2ISaIS2_EJRbEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
	movq	-40(%rbp), %rax                 # 8-byte Reload
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end276:
	.size	_ZSt15allocate_sharedIN4seal4util12MemoryPoolMTESaIS2_EJRbEESt10shared_ptrIT_ERKT0_DpOT1_, .Lfunc_end276-_ZSt15allocate_sharedIN4seal4util12MemoryPoolMTESaIS2_EJRbEESt10shared_ptrIT_ERKT0_DpOT1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSaIN4seal4util12MemoryPoolMTEEC2Ev,"axG",@progbits,_ZNSaIN4seal4util12MemoryPoolMTEEC2Ev,comdat
	.weak	_ZNSaIN4seal4util12MemoryPoolMTEEC2Ev # -- Begin function _ZNSaIN4seal4util12MemoryPoolMTEEC2Ev
	.p2align	4, 0x90
	.type	_ZNSaIN4seal4util12MemoryPoolMTEEC2Ev,@function
_ZNSaIN4seal4util12MemoryPoolMTEEC2Ev:  # @_ZNSaIN4seal4util12MemoryPoolMTEEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEEC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end277:
	.size	_ZNSaIN4seal4util12MemoryPoolMTEEC2Ev, .Lfunc_end277-_ZNSaIN4seal4util12MemoryPoolMTEEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE,"axG",@progbits,_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE,comdat
	.weak	_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE # -- Begin function _ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE
	.p2align	4, 0x90
	.type	_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE,@function
_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE: # @_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end278:
	.size	_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE, .Lfunc_end278-_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSaIN4seal4util12MemoryPoolMTEED2Ev,"axG",@progbits,_ZNSaIN4seal4util12MemoryPoolMTEED2Ev,comdat
	.weak	_ZNSaIN4seal4util12MemoryPoolMTEED2Ev # -- Begin function _ZNSaIN4seal4util12MemoryPoolMTEED2Ev
	.p2align	4, 0x90
	.type	_ZNSaIN4seal4util12MemoryPoolMTEED2Ev,@function
_ZNSaIN4seal4util12MemoryPoolMTEED2Ev:  # @_ZNSaIN4seal4util12MemoryPoolMTEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end279:
	.size	_ZNSaIN4seal4util12MemoryPoolMTEED2Ev, .Lfunc_end279-_ZNSaIN4seal4util12MemoryPoolMTEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt10shared_ptrIN4seal4util12MemoryPoolMTEEC2ISaIS2_EJRbEEESt20_Sp_alloc_shared_tagIT_EDpOT0_,"axG",@progbits,_ZNSt10shared_ptrIN4seal4util12MemoryPoolMTEEC2ISaIS2_EJRbEEESt20_Sp_alloc_shared_tagIT_EDpOT0_,comdat
	.weak	_ZNSt10shared_ptrIN4seal4util12MemoryPoolMTEEC2ISaIS2_EJRbEEESt20_Sp_alloc_shared_tagIT_EDpOT0_ # -- Begin function _ZNSt10shared_ptrIN4seal4util12MemoryPoolMTEEC2ISaIS2_EJRbEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
	.p2align	4, 0x90
	.type	_ZNSt10shared_ptrIN4seal4util12MemoryPoolMTEEC2ISaIS2_EJRbEEESt20_Sp_alloc_shared_tagIT_EDpOT0_,@function
_ZNSt10shared_ptrIN4seal4util12MemoryPoolMTEEC2ISaIS2_EJRbEEESt20_Sp_alloc_shared_tagIT_EDpOT0_: # @_ZNSt10shared_ptrIN4seal4util12MemoryPoolMTEEC2ISaIS2_EJRbEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rsi, -8(%rbp)
	movq	%rdi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -40(%rbp)                 # 8-byte Spill
	movq	-8(%rbp), %rax
	movq	%rax, -32(%rbp)
	movq	-24(%rbp), %rdi
	callq	_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE
	movq	-40(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rdx
	movq	-32(%rbp), %rsi
	callq	_ZNSt12__shared_ptrIN4seal4util12MemoryPoolMTELN9__gnu_cxx12_Lock_policyE2EEC2ISaIS2_EJRbEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end280:
	.size	_ZNSt10shared_ptrIN4seal4util12MemoryPoolMTEEC2ISaIS2_EJRbEEESt20_Sp_alloc_shared_tagIT_EDpOT0_, .Lfunc_end280-_ZNSt10shared_ptrIN4seal4util12MemoryPoolMTEEC2ISaIS2_EJRbEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12__shared_ptrIN4seal4util12MemoryPoolMTELN9__gnu_cxx12_Lock_policyE2EEC2ISaIS2_EJRbEEESt20_Sp_alloc_shared_tagIT_EDpOT0_,"axG",@progbits,_ZNSt12__shared_ptrIN4seal4util12MemoryPoolMTELN9__gnu_cxx12_Lock_policyE2EEC2ISaIS2_EJRbEEESt20_Sp_alloc_shared_tagIT_EDpOT0_,comdat
	.weak	_ZNSt12__shared_ptrIN4seal4util12MemoryPoolMTELN9__gnu_cxx12_Lock_policyE2EEC2ISaIS2_EJRbEEESt20_Sp_alloc_shared_tagIT_EDpOT0_ # -- Begin function _ZNSt12__shared_ptrIN4seal4util12MemoryPoolMTELN9__gnu_cxx12_Lock_policyE2EEC2ISaIS2_EJRbEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
	.p2align	4, 0x90
	.type	_ZNSt12__shared_ptrIN4seal4util12MemoryPoolMTELN9__gnu_cxx12_Lock_policyE2EEC2ISaIS2_EJRbEEESt20_Sp_alloc_shared_tagIT_EDpOT0_,@function
_ZNSt12__shared_ptrIN4seal4util12MemoryPoolMTELN9__gnu_cxx12_Lock_policyE2EEC2ISaIS2_EJRbEEESt20_Sp_alloc_shared_tagIT_EDpOT0_: # @_ZNSt12__shared_ptrIN4seal4util12MemoryPoolMTELN9__gnu_cxx12_Lock_policyE2EEC2ISaIS2_EJRbEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rsi, -8(%rbp)
	movq	%rdi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -40(%rbp)                 # 8-byte Spill
	movq	$0, (%rax)
	addq	$8, %rax
	movq	%rax, -48(%rbp)                 # 8-byte Spill
	movq	-8(%rbp), %rax
	movq	%rax, -32(%rbp)
	movq	-24(%rbp), %rdi
	callq	_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	movq	-40(%rbp), %rsi                 # 8-byte Reload
	movq	%rax, %rcx
	movq	-32(%rbp), %rdx
	callq	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2IN4seal4util12MemoryPoolMTESaIS6_EJRbEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
	movq	-40(%rbp), %rdi                 # 8-byte Reload
	movq	(%rdi), %rsi
	callq	_ZNSt12__shared_ptrIN4seal4util12MemoryPoolMTELN9__gnu_cxx12_Lock_policyE2EE31_M_enable_shared_from_this_withIS2_S2_EENSt9enable_ifIXntsr15__has_esft_baseIT0_EE5valueEvE4typeEPT_
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end281:
	.size	_ZNSt12__shared_ptrIN4seal4util12MemoryPoolMTELN9__gnu_cxx12_Lock_policyE2EEC2ISaIS2_EJRbEEESt20_Sp_alloc_shared_tagIT_EDpOT0_, .Lfunc_end281-_ZNSt12__shared_ptrIN4seal4util12MemoryPoolMTELN9__gnu_cxx12_Lock_policyE2EEC2ISaIS2_EJRbEEESt20_Sp_alloc_shared_tagIT_EDpOT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2IN4seal4util12MemoryPoolMTESaIS6_EJRbEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_,"axG",@progbits,_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2IN4seal4util12MemoryPoolMTESaIS6_EJRbEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_,comdat
	.weak	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2IN4seal4util12MemoryPoolMTESaIS6_EJRbEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_ # -- Begin function _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2IN4seal4util12MemoryPoolMTESaIS6_EJRbEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
	.p2align	4, 0x90
	.type	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2IN4seal4util12MemoryPoolMTESaIS6_EJRbEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_,@function
_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2IN4seal4util12MemoryPoolMTESaIS6_EJRbEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_: # @_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2IN4seal4util12MemoryPoolMTESaIS6_EJRbEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
.Lfunc_begin41:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception41
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$144, %rsp
	movq	%rdx, -8(%rbp)
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -112(%rbp)                # 8-byte Spill
	movq	-8(%rbp), %rsi
	leaq	-40(%rbp), %rdi
	movq	%rdi, -104(%rbp)                # 8-byte Spill
	callq	_ZNSaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEEC2IS2_EERKSaIT_E
	movq	-104(%rbp), %rsi                # 8-byte Reload
.Ltmp808:
	leaq	-56(%rbp), %rdi
	callq	_ZSt18__allocate_guardedISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEESt15__allocated_ptrIT_ERSA_
.Ltmp809:
	jmp	.LBB282_1
.LBB282_1:
.Ltmp811:
	leaq	-56(%rbp), %rdi
	callq	_ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEE3getEv
.Ltmp812:
	movq	%rax, -120(%rbp)                # 8-byte Spill
	jmp	.LBB282_2
.LBB282_2:
	movq	-120(%rbp), %rax                # 8-byte Reload
	movq	%rax, -80(%rbp)
	movq	-80(%rbp), %rax
	movq	%rax, -136(%rbp)                # 8-byte Spill
	movq	-8(%rbp), %rsi
	leaq	-96(%rbp), %rdi
	movq	%rdi, -128(%rbp)                # 8-byte Spill
	callq	_ZNSaIN4seal4util12MemoryPoolMTEEC2ERKS2_
	movq	-32(%rbp), %rdi
	callq	_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE
	movq	-136(%rbp), %rdi                # 8-byte Reload
	movq	-128(%rbp), %rsi                # 8-byte Reload
	movq	%rax, %rdx
.Ltmp814:
	callq	_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEC2IJRbEEES3_DpOT_
.Ltmp815:
	jmp	.LBB282_3
.LBB282_3:
	leaq	-96(%rbp), %rdi
	callq	_ZNSaIN4seal4util12MemoryPoolMTEED2Ev
	movq	-136(%rbp), %rax                # 8-byte Reload
	movq	%rax, -88(%rbp)
	leaq	-56(%rbp), %rdi
	xorl	%eax, %eax
	movl	%eax, %esi
	callq	_ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEEaSEDn
                                        # kill: def $rcx killed $rax
	movq	-112(%rbp), %rax                # 8-byte Reload
	movq	-88(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-88(%rbp), %rdi
	callq	_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE6_M_ptrEv
	movq	%rax, %rcx
	movq	-24(%rbp), %rax
	movq	%rcx, (%rax)
	leaq	-56(%rbp), %rdi
	callq	_ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEED2Ev
	leaq	-40(%rbp), %rdi
	callq	_ZNSaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEED2Ev
	addq	$144, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB282_4:
	.cfi_def_cfa %rbp, 16
.Ltmp810:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -64(%rbp)
	movl	%eax, -68(%rbp)
	jmp	.LBB282_8
.LBB282_5:
.Ltmp813:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -64(%rbp)
	movl	%eax, -68(%rbp)
	jmp	.LBB282_7
.LBB282_6:
.Ltmp816:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -64(%rbp)
	movl	%eax, -68(%rbp)
	leaq	-96(%rbp), %rdi
	callq	_ZNSaIN4seal4util12MemoryPoolMTEED2Ev
.LBB282_7:
	leaq	-56(%rbp), %rdi
	callq	_ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEED2Ev
.LBB282_8:
	leaq	-40(%rbp), %rdi
	callq	_ZNSaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEED2Ev
# %bb.9:
	movq	-64(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end282:
	.size	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2IN4seal4util12MemoryPoolMTESaIS6_EJRbEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_, .Lfunc_end282-_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2IN4seal4util12MemoryPoolMTESaIS6_EJRbEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2IN4seal4util12MemoryPoolMTESaIS6_EJRbEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_,"aG",@progbits,_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2IN4seal4util12MemoryPoolMTESaIS6_EJRbEEERPT_St20_Sp_alloc_shared_tagIT0_EDpOT1_,comdat
	.p2align	2
GCC_except_table282:
.Lexception41:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end41-.Lcst_begin41
.Lcst_begin41:
	.uleb128 .Ltmp808-.Lfunc_begin41        # >> Call Site 1 <<
	.uleb128 .Ltmp809-.Ltmp808              #   Call between .Ltmp808 and .Ltmp809
	.uleb128 .Ltmp810-.Lfunc_begin41        #     jumps to .Ltmp810
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp811-.Lfunc_begin41        # >> Call Site 2 <<
	.uleb128 .Ltmp812-.Ltmp811              #   Call between .Ltmp811 and .Ltmp812
	.uleb128 .Ltmp813-.Lfunc_begin41        #     jumps to .Ltmp813
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp814-.Lfunc_begin41        # >> Call Site 3 <<
	.uleb128 .Ltmp815-.Ltmp814              #   Call between .Ltmp814 and .Ltmp815
	.uleb128 .Ltmp816-.Lfunc_begin41        #     jumps to .Ltmp816
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp815-.Lfunc_begin41        # >> Call Site 4 <<
	.uleb128 .Lfunc_end282-.Ltmp815         #   Call between .Ltmp815 and .Lfunc_end282
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end41:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt12__shared_ptrIN4seal4util12MemoryPoolMTELN9__gnu_cxx12_Lock_policyE2EE31_M_enable_shared_from_this_withIS2_S2_EENSt9enable_ifIXntsr15__has_esft_baseIT0_EE5valueEvE4typeEPT_,"axG",@progbits,_ZNSt12__shared_ptrIN4seal4util12MemoryPoolMTELN9__gnu_cxx12_Lock_policyE2EE31_M_enable_shared_from_this_withIS2_S2_EENSt9enable_ifIXntsr15__has_esft_baseIT0_EE5valueEvE4typeEPT_,comdat
	.weak	_ZNSt12__shared_ptrIN4seal4util12MemoryPoolMTELN9__gnu_cxx12_Lock_policyE2EE31_M_enable_shared_from_this_withIS2_S2_EENSt9enable_ifIXntsr15__has_esft_baseIT0_EE5valueEvE4typeEPT_ # -- Begin function _ZNSt12__shared_ptrIN4seal4util12MemoryPoolMTELN9__gnu_cxx12_Lock_policyE2EE31_M_enable_shared_from_this_withIS2_S2_EENSt9enable_ifIXntsr15__has_esft_baseIT0_EE5valueEvE4typeEPT_
	.p2align	4, 0x90
	.type	_ZNSt12__shared_ptrIN4seal4util12MemoryPoolMTELN9__gnu_cxx12_Lock_policyE2EE31_M_enable_shared_from_this_withIS2_S2_EENSt9enable_ifIXntsr15__has_esft_baseIT0_EE5valueEvE4typeEPT_,@function
_ZNSt12__shared_ptrIN4seal4util12MemoryPoolMTELN9__gnu_cxx12_Lock_policyE2EE31_M_enable_shared_from_this_withIS2_S2_EENSt9enable_ifIXntsr15__has_esft_baseIT0_EE5valueEvE4typeEPT_: # @_ZNSt12__shared_ptrIN4seal4util12MemoryPoolMTELN9__gnu_cxx12_Lock_policyE2EE31_M_enable_shared_from_this_withIS2_S2_EENSt9enable_ifIXntsr15__has_esft_baseIT0_EE5valueEvE4typeEPT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end283:
	.size	_ZNSt12__shared_ptrIN4seal4util12MemoryPoolMTELN9__gnu_cxx12_Lock_policyE2EE31_M_enable_shared_from_this_withIS2_S2_EENSt9enable_ifIXntsr15__has_esft_baseIT0_EE5valueEvE4typeEPT_, .Lfunc_end283-_ZNSt12__shared_ptrIN4seal4util12MemoryPoolMTELN9__gnu_cxx12_Lock_policyE2EE31_M_enable_shared_from_this_withIS2_S2_EENSt9enable_ifIXntsr15__has_esft_baseIT0_EE5valueEvE4typeEPT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEEC2IS2_EERKSaIT_E,"axG",@progbits,_ZNSaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEEC2IS2_EERKSaIT_E,comdat
	.weak	_ZNSaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEEC2IS2_EERKSaIT_E # -- Begin function _ZNSaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEEC2IS2_EERKSaIT_E
	.p2align	4, 0x90
	.type	_ZNSaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEEC2IS2_EERKSaIT_E,@function
_ZNSaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEEC2IS2_EERKSaIT_E: # @_ZNSaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEEC2IS2_EERKSaIT_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEEC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end284:
	.size	_ZNSaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEEC2IS2_EERKSaIT_E, .Lfunc_end284-_ZNSaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEEC2IS2_EERKSaIT_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt18__allocate_guardedISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEESt15__allocated_ptrIT_ERSA_,"axG",@progbits,_ZSt18__allocate_guardedISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEESt15__allocated_ptrIT_ERSA_,comdat
	.weak	_ZSt18__allocate_guardedISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEESt15__allocated_ptrIT_ERSA_ # -- Begin function _ZSt18__allocate_guardedISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEESt15__allocated_ptrIT_ERSA_
	.p2align	4, 0x90
	.type	_ZSt18__allocate_guardedISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEESt15__allocated_ptrIT_ERSA_,@function
_ZSt18__allocate_guardedISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEESt15__allocated_ptrIT_ERSA_: # @_ZSt18__allocate_guardedISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEESt15__allocated_ptrIT_ERSA_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)                 # 8-byte Spill
	movq	%rdi, %rax
	movq	%rax, -24(%rbp)                 # 8-byte Spill
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	movl	$1, %esi
	callq	_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERS8_m
	movq	-40(%rbp), %rdi                 # 8-byte Reload
	movq	-32(%rbp), %rsi                 # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEEC2ERS8_PS7_
	movq	-24(%rbp), %rax                 # 8-byte Reload
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end285:
	.size	_ZSt18__allocate_guardedISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEESt15__allocated_ptrIT_ERSA_, .Lfunc_end285-_ZSt18__allocate_guardedISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEESt15__allocated_ptrIT_ERSA_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEE3getEv,"axG",@progbits,_ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEE3getEv,comdat
	.weak	_ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEE3getEv # -- Begin function _ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEE3getEv
	.p2align	4, 0x90
	.type	_ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEE3getEv,@function
_ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEE3getEv: # @_ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEE3getEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	8(%rax), %rdi
	callq	_ZSt12__to_addressISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEPT_S9_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end286:
	.size	_ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEE3getEv, .Lfunc_end286-_ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEE3getEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSaIN4seal4util12MemoryPoolMTEEC2ERKS2_,"axG",@progbits,_ZNSaIN4seal4util12MemoryPoolMTEEC2ERKS2_,comdat
	.weak	_ZNSaIN4seal4util12MemoryPoolMTEEC2ERKS2_ # -- Begin function _ZNSaIN4seal4util12MemoryPoolMTEEC2ERKS2_
	.p2align	4, 0x90
	.type	_ZNSaIN4seal4util12MemoryPoolMTEEC2ERKS2_,@function
_ZNSaIN4seal4util12MemoryPoolMTEEC2ERKS2_: # @_ZNSaIN4seal4util12MemoryPoolMTEEC2ERKS2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEEC2ERKS4_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end287:
	.size	_ZNSaIN4seal4util12MemoryPoolMTEEC2ERKS2_, .Lfunc_end287-_ZNSaIN4seal4util12MemoryPoolMTEEC2ERKS2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEC2IJRbEEES3_DpOT_,"axG",@progbits,_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEC2IJRbEEES3_DpOT_,comdat
	.weak	_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEC2IJRbEEES3_DpOT_ # -- Begin function _ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEC2IJRbEEES3_DpOT_
	.p2align	4, 0x90
	.type	_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEC2IJRbEEES3_DpOT_,@function
_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEC2IJRbEEES3_DpOT_: # @_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEC2IJRbEEES3_DpOT_
.Lfunc_begin42:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception42
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%rsi, -56(%rbp)                 # 8-byte Spill
	movq	%rdi, -8(%rbp)
	movq	%rdx, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -64(%rbp)                 # 8-byte Spill
	callq	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EEC2Ev
	movq	-64(%rbp), %rax                 # 8-byte Reload
	movq	-56(%rbp), %rsi                 # 8-byte Reload
	leaq	_ZTVSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE+16(%rip), %rcx
	movq	%rcx, (%rax)
	addq	$16, %rax
	movq	%rax, -80(%rbp)                 # 8-byte Spill
	leaq	-24(%rbp), %rdi
	movq	%rdi, -72(%rbp)                 # 8-byte Spill
	callq	_ZNSaIN4seal4util12MemoryPoolMTEEC2ERKS2_
	movq	-80(%rbp), %rdi                 # 8-byte Reload
	movq	-72(%rbp), %rsi                 # 8-byte Reload
	callq	_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE5_ImplC2ES3_
	movq	-72(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNSaIN4seal4util12MemoryPoolMTEED2Ev
	movq	-64(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE6_M_ptrEv
	movq	%rax, -48(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	callq	_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE
	movq	-56(%rbp), %rdi                 # 8-byte Reload
	movq	-48(%rbp), %rsi                 # 8-byte Reload
	movq	%rax, %rdx
.Ltmp817:
	callq	_ZNSt16allocator_traitsISaIN4seal4util12MemoryPoolMTEEE9constructIS2_JRbEEEvRS3_PT_DpOT0_
.Ltmp818:
	jmp	.LBB288_1
.LBB288_1:
	addq	$80, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB288_2:
	.cfi_def_cfa %rbp, 16
.Ltmp819:
	movq	-80(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -32(%rbp)
	movl	%eax, -36(%rbp)
	callq	_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE5_ImplD2Ev
	movq	-64(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev
# %bb.3:
	movq	-32(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end288:
	.size	_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEC2IJRbEEES3_DpOT_, .Lfunc_end288-_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEC2IJRbEEES3_DpOT_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEC2IJRbEEES3_DpOT_,"aG",@progbits,_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEC2IJRbEEES3_DpOT_,comdat
	.p2align	2
GCC_except_table288:
.Lexception42:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end42-.Lcst_begin42
.Lcst_begin42:
	.uleb128 .Ltmp817-.Lfunc_begin42        # >> Call Site 1 <<
	.uleb128 .Ltmp818-.Ltmp817              #   Call between .Ltmp817 and .Ltmp818
	.uleb128 .Ltmp819-.Lfunc_begin42        #     jumps to .Ltmp819
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp818-.Lfunc_begin42        # >> Call Site 2 <<
	.uleb128 .Lfunc_end288-.Ltmp818         #   Call between .Ltmp818 and .Lfunc_end288
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end42:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEEaSEDn,"axG",@progbits,_ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEEaSEDn,comdat
	.weak	_ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEEaSEDn # -- Begin function _ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEEaSEDn
	.p2align	4, 0x90
	.type	_ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEEaSEDn,@function
_ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEEaSEDn: # @_ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEEaSEDn
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	$0, 8(%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end289:
	.size	_ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEEaSEDn, .Lfunc_end289-_ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEEaSEDn
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE6_M_ptrEv,"axG",@progbits,_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE6_M_ptrEv,comdat
	.weak	_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE6_M_ptrEv # -- Begin function _ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE6_M_ptrEv
	.p2align	4, 0x90
	.type	_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE6_M_ptrEv,@function
_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE6_M_ptrEv: # @_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE6_M_ptrEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	addq	$16, %rdi
	callq	_ZN9__gnu_cxx16__aligned_bufferIN4seal4util12MemoryPoolMTEE6_M_ptrEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end290:
	.size	_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE6_M_ptrEv, .Lfunc_end290-_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE6_M_ptrEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEED2Ev,"axG",@progbits,_ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEED2Ev,comdat
	.weak	_ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEED2Ev # -- Begin function _ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEED2Ev,@function
_ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEED2Ev: # @_ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEED2Ev
.Lfunc_begin43:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception43
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -16(%rbp)                 # 8-byte Spill
	cmpq	$0, 8(%rax)
	je	.LBB291_3
# %bb.1:
	movq	-16(%rbp), %rax                 # 8-byte Reload
	movq	(%rax), %rdi
	movq	8(%rax), %rsi
.Ltmp820:
	movl	$1, %edx
	callq	_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEE10deallocateERS8_PS7_m
.Ltmp821:
	jmp	.LBB291_2
.LBB291_2:
	jmp	.LBB291_3
.LBB291_3:
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB291_4:
	.cfi_def_cfa %rbp, 16
.Ltmp822:
	movq	%rax, %rdi
                                        # kill: def $eax killed $edx killed $rdx
	callq	__clang_call_terminate
.Lfunc_end291:
	.size	_ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEED2Ev, .Lfunc_end291-_ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEED2Ev,"aG",@progbits,_ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEED2Ev,comdat
	.p2align	2
GCC_except_table291:
.Lexception43:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase9-.Lttbaseref9
.Lttbaseref9:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end43-.Lcst_begin43
.Lcst_begin43:
	.uleb128 .Ltmp820-.Lfunc_begin43        # >> Call Site 1 <<
	.uleb128 .Ltmp821-.Ltmp820              #   Call between .Ltmp820 and .Ltmp821
	.uleb128 .Ltmp822-.Lfunc_begin43        #     jumps to .Ltmp822
	.byte	1                               #   On action: 1
.Lcst_end43:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase9:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEED2Ev,"axG",@progbits,_ZNSaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEED2Ev,comdat
	.weak	_ZNSaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEED2Ev # -- Begin function _ZNSaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEED2Ev
	.p2align	4, 0x90
	.type	_ZNSaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEED2Ev,@function
_ZNSaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEED2Ev: # @_ZNSaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end292:
	.size	_ZNSaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEED2Ev, .Lfunc_end292-_ZNSaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEEC2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEEC2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEEC2Ev # -- Begin function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEEC2Ev
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEEC2Ev,@function
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEEC2Ev: # @_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end293:
	.size	_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEEC2Ev, .Lfunc_end293-_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERS8_m,"axG",@progbits,_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERS8_m,comdat
	.weak	_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERS8_m # -- Begin function _ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERS8_m
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERS8_m,@function
_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERS8_m: # @_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERS8_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	xorl	%eax, %eax
	movl	%eax, %edx
	callq	_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEE8allocateEmPKv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end294:
	.size	_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERS8_m, .Lfunc_end294-_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERS8_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEEC2ERS8_PS7_,"axG",@progbits,_ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEEC2ERS8_PS7_,comdat
	.weak	_ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEEC2ERS8_PS7_ # -- Begin function _ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEEC2ERS8_PS7_
	.p2align	4, 0x90
	.type	_ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEEC2ERS8_PS7_,@function
_ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEEC2ERS8_PS7_: # @_ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEEC2ERS8_PS7_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	callq	_ZSt11__addressofISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEEPT_RS9_
	movq	%rax, %rcx
	movq	-32(%rbp), %rax                 # 8-byte Reload
	movq	%rcx, (%rax)
	movq	-24(%rbp), %rcx
	movq	%rcx, 8(%rax)
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end295:
	.size	_ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEEC2ERS8_PS7_, .Lfunc_end295-_ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEEC2ERS8_PS7_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEE8allocateEmPKv,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEE8allocateEmPKv,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEE8allocateEmPKv # -- Begin function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEE8allocateEmPKv
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEE8allocateEmPKv,@function
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEE8allocateEmPKv: # @_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEE8allocateEmPKv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rax
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	callq	_ZNK9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEE11_M_max_sizeEv
	movq	%rax, %rcx
	movq	-32(%rbp), %rax                 # 8-byte Reload
	cmpq	%rcx, %rax
	jbe	.LBB296_4
# %bb.1:
	movabsq	$164703072086692425, %rax       # imm = 0x249249249249249
	cmpq	%rax, -16(%rbp)
	jbe	.LBB296_3
# %bb.2:
	callq	_ZSt28__throw_bad_array_new_lengthv@PLT
.LBB296_3:
	callq	_ZSt17__throw_bad_allocv@PLT
.LBB296_4:
	imulq	$112, -16(%rbp), %rdi
	callq	_Znwm@PLT
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end296:
	.size	_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEE8allocateEmPKv, .Lfunc_end296-_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEE8allocateEmPKv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEE11_M_max_sizeEv,"axG",@progbits,_ZNK9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEE11_M_max_sizeEv,comdat
	.weak	_ZNK9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEE11_M_max_sizeEv # -- Begin function _ZNK9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEE11_M_max_sizeEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEE11_M_max_sizeEv,@function
_ZNK9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEE11_M_max_sizeEv: # @_ZNK9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEE11_M_max_sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movabsq	$82351536043346212, %rax        # imm = 0x124924924924924
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end297:
	.size	_ZNK9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEE11_M_max_sizeEv, .Lfunc_end297-_ZNK9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEE11_M_max_sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt11__addressofISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEEPT_RS9_,"axG",@progbits,_ZSt11__addressofISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEEPT_RS9_,comdat
	.weak	_ZSt11__addressofISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEEPT_RS9_ # -- Begin function _ZSt11__addressofISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEEPT_RS9_
	.p2align	4, 0x90
	.type	_ZSt11__addressofISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEEPT_RS9_,@function
_ZSt11__addressofISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEEPT_RS9_: # @_ZSt11__addressofISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEEPT_RS9_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end298:
	.size	_ZSt11__addressofISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEEPT_RS9_, .Lfunc_end298-_ZSt11__addressofISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEEPT_RS9_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__to_addressISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEPT_S9_,"axG",@progbits,_ZSt12__to_addressISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEPT_S9_,comdat
	.weak	_ZSt12__to_addressISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEPT_S9_ # -- Begin function _ZSt12__to_addressISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEPT_S9_
	.p2align	4, 0x90
	.type	_ZSt12__to_addressISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEPT_S9_,@function
_ZSt12__to_addressISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEPT_S9_: # @_ZSt12__to_addressISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEPT_S9_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end299:
	.size	_ZSt12__to_addressISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEPT_S9_, .Lfunc_end299-_ZSt12__to_addressISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEPT_S9_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEEC2ERKS4_,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEEC2ERKS4_,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEEC2ERKS4_ # -- Begin function _ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEEC2ERKS4_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEEC2ERKS4_,@function
_ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEEC2ERKS4_: # @_ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEEC2ERKS4_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end300:
	.size	_ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEEC2ERKS4_, .Lfunc_end300-_ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEEC2ERKS4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EEC2Ev,"axG",@progbits,_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EEC2Ev,comdat
	.weak	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EEC2Ev # -- Begin function _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EEC2Ev,@function
_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EEC2Ev: # @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	leaq	_ZTVSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE(%rip), %rcx
	addq	$16, %rcx
	movq	%rcx, (%rax)
	movl	$1, 8(%rax)
	movl	$1, 12(%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end301:
	.size	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EEC2Ev, .Lfunc_end301-_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE5_ImplC2ES3_,"axG",@progbits,_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE5_ImplC2ES3_,comdat
	.weak	_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE5_ImplC2ES3_ # -- Begin function _ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE5_ImplC2ES3_
	.p2align	4, 0x90
	.type	_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE5_ImplC2ES3_,@function
_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE5_ImplC2ES3_: # @_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE5_ImplC2ES3_
.Lfunc_begin44:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception44
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
.Ltmp823:
	callq	_ZNSt14_Sp_ebo_helperILi0ESaIN4seal4util12MemoryPoolMTEELb1EEC2ERKS3_
.Ltmp824:
	jmp	.LBB302_1
.LBB302_1:
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB302_2:
	.cfi_def_cfa %rbp, 16
.Ltmp825:
	movq	%rax, %rdi
                                        # kill: def $eax killed $edx killed $rdx
	callq	__clang_call_terminate
.Lfunc_end302:
	.size	_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE5_ImplC2ES3_, .Lfunc_end302-_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE5_ImplC2ES3_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE5_ImplC2ES3_,"aG",@progbits,_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE5_ImplC2ES3_,comdat
	.p2align	2
GCC_except_table302:
.Lexception44:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase10-.Lttbaseref10
.Lttbaseref10:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end44-.Lcst_begin44
.Lcst_begin44:
	.uleb128 .Ltmp823-.Lfunc_begin44        # >> Call Site 1 <<
	.uleb128 .Ltmp824-.Ltmp823              #   Call between .Ltmp823 and .Ltmp824
	.uleb128 .Ltmp825-.Lfunc_begin44        #     jumps to .Ltmp825
	.byte	1                               #   On action: 1
.Lcst_end44:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase10:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIN4seal4util12MemoryPoolMTEEE9constructIS2_JRbEEEvRS3_PT_DpOT0_,"axG",@progbits,_ZNSt16allocator_traitsISaIN4seal4util12MemoryPoolMTEEE9constructIS2_JRbEEEvRS3_PT_DpOT0_,comdat
	.weak	_ZNSt16allocator_traitsISaIN4seal4util12MemoryPoolMTEEE9constructIS2_JRbEEEvRS3_PT_DpOT0_ # -- Begin function _ZNSt16allocator_traitsISaIN4seal4util12MemoryPoolMTEEE9constructIS2_JRbEEEvRS3_PT_DpOT0_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIN4seal4util12MemoryPoolMTEEE9constructIS2_JRbEEEvRS3_PT_DpOT0_,@function
_ZNSt16allocator_traitsISaIN4seal4util12MemoryPoolMTEEE9constructIS2_JRbEEEvRS3_PT_DpOT0_: # @_ZNSt16allocator_traitsISaIN4seal4util12MemoryPoolMTEEE9constructIS2_JRbEEEvRS3_PT_DpOT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -40(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rax
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	movq	-24(%rbp), %rdi
	callq	_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE
	movq	-40(%rbp), %rdi                 # 8-byte Reload
	movq	-32(%rbp), %rsi                 # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEE9constructIS3_JRbEEEvPT_DpOT0_
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end303:
	.size	_ZNSt16allocator_traitsISaIN4seal4util12MemoryPoolMTEEE9constructIS2_JRbEEEvRS3_PT_DpOT0_, .Lfunc_end303-_ZNSt16allocator_traitsISaIN4seal4util12MemoryPoolMTEEE9constructIS2_JRbEEEvRS3_PT_DpOT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE5_ImplD2Ev,"axG",@progbits,_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE5_ImplD2Ev,comdat
	.weak	_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE5_ImplD2Ev # -- Begin function _ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE5_ImplD2Ev
	.p2align	4, 0x90
	.type	_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE5_ImplD2Ev,@function
_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE5_ImplD2Ev: # @_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE5_ImplD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt14_Sp_ebo_helperILi0ESaIN4seal4util12MemoryPoolMTEELb1EED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end304:
	.size	_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE5_ImplD2Ev, .Lfunc_end304-_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE5_ImplD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EED2Ev,"axG",@progbits,_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EED2Ev,comdat
	.weak	_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EED2Ev # -- Begin function _ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EED2Ev,@function
_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EED2Ev: # @_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -16(%rbp)                 # 8-byte Spill
	addq	$16, %rdi
	callq	_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE5_ImplD2Ev
	movq	-16(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end305:
	.size	_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EED2Ev, .Lfunc_end305-_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EED0Ev,"axG",@progbits,_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EED0Ev,comdat
	.weak	_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EED0Ev # -- Begin function _ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.p2align	4, 0x90
	.type	_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EED0Ev,@function
_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EED0Ev: # @_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -16(%rbp)                 # 8-byte Spill
	callq	_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EED2Ev
	movq	-16(%rbp), %rdi                 # 8-byte Reload
	callq	_ZdlPv@PLT
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end306:
	.size	_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EED0Ev, .Lfunc_end306-_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv,"axG",@progbits,_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv,comdat
	.weak	_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv # -- Begin function _ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.p2align	4, 0x90
	.type	_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv,@function
_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv: # @_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -24(%rbp)                 # 8-byte Spill
	addq	$16, %rdi
	callq	_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE5_Impl8_M_allocEv
	movq	-24(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, -16(%rbp)                 # 8-byte Spill
	callq	_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE6_M_ptrEv
	movq	-16(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNSt16allocator_traitsISaIN4seal4util12MemoryPoolMTEEE7destroyIS2_EEvRS3_PT_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end307:
	.size	_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv, .Lfunc_end307-_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv,"axG",@progbits,_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv,comdat
	.weak	_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv # -- Begin function _ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.p2align	4, 0x90
	.type	_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv,@function
_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv: # @_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -40(%rbp)                 # 8-byte Spill
	addq	$16, %rdi
	callq	_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE5_Impl8_M_allocEv
	movq	%rax, %rsi
	leaq	-16(%rbp), %rdi
	callq	_ZNSaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEEC2IS2_EERKSaIT_E
	movq	-40(%rbp), %rdx                 # 8-byte Reload
	leaq	-32(%rbp), %rdi
	leaq	-16(%rbp), %rsi
	callq	_ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEEC2ERS8_PS7_
	movq	-40(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EED2Ev
	leaq	-32(%rbp), %rdi
	callq	_ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEED2Ev
	leaq	-16(%rbp), %rdi
	callq	_ZNSaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEED2Ev
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end308:
	.size	_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv, .Lfunc_end308-_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info,"axG",@progbits,_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info,comdat
	.weak	_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info # -- Begin function _ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.p2align	4, 0x90
	.type	_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info,@function
_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info: # @_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE6_M_ptrEv
	movq	%rax, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -40(%rbp)                 # 8-byte Spill
	callq	_ZNSt19_Sp_make_shared_tag5_S_tiEv
	movq	%rax, %rcx
	movq	-40(%rbp), %rax                 # 8-byte Reload
	cmpq	%rcx, %rax
	je	.LBB309_2
# %bb.1:
	movq	-24(%rbp), %rdi
	leaq	_ZTISt19_Sp_make_shared_tag(%rip), %rsi
	callq	_ZNKSt9type_infoeqERKS_
	testb	$1, %al
	jne	.LBB309_2
	jmp	.LBB309_3
.LBB309_2:
	movq	-32(%rbp), %rax
	movq	%rax, -8(%rbp)
	jmp	.LBB309_4
.LBB309_3:
	movq	$0, -8(%rbp)
.LBB309_4:
	movq	-8(%rbp), %rax
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end309:
	.size	_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info, .Lfunc_end309-_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev,"axG",@progbits,_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev,comdat
	.weak	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev # -- Begin function _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev,@function
_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev: # @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end310:
	.size	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev, .Lfunc_end310-_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED0Ev,"axG",@progbits,_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED0Ev,comdat
	.weak	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED0Ev # -- Begin function _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED0Ev
	.p2align	4, 0x90
	.type	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED0Ev,@function
_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED0Ev: # @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED0Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	ud2
.Lfunc_end311:
	.size	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED0Ev, .Lfunc_end311-_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED0Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv,"axG",@progbits,_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv,comdat
	.weak	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv # -- Begin function _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.p2align	4, 0x90
	.type	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv,@function
_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv: # @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -16(%rbp)                 # 8-byte Spill
	cmpq	$0, %rax
	je	.LBB312_2
# %bb.1:
	movq	-16(%rbp), %rdi                 # 8-byte Reload
	movq	(%rdi), %rax
	callq	*8(%rax)
.LBB312_2:
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end312:
	.size	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv, .Lfunc_end312-_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt14_Sp_ebo_helperILi0ESaIN4seal4util12MemoryPoolMTEELb1EEC2ERKS3_,"axG",@progbits,_ZNSt14_Sp_ebo_helperILi0ESaIN4seal4util12MemoryPoolMTEELb1EEC2ERKS3_,comdat
	.weak	_ZNSt14_Sp_ebo_helperILi0ESaIN4seal4util12MemoryPoolMTEELb1EEC2ERKS3_ # -- Begin function _ZNSt14_Sp_ebo_helperILi0ESaIN4seal4util12MemoryPoolMTEELb1EEC2ERKS3_
	.p2align	4, 0x90
	.type	_ZNSt14_Sp_ebo_helperILi0ESaIN4seal4util12MemoryPoolMTEELb1EEC2ERKS3_,@function
_ZNSt14_Sp_ebo_helperILi0ESaIN4seal4util12MemoryPoolMTEELb1EEC2ERKS3_: # @_ZNSt14_Sp_ebo_helperILi0ESaIN4seal4util12MemoryPoolMTEELb1EEC2ERKS3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZNSaIN4seal4util12MemoryPoolMTEEC2ERKS2_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end313:
	.size	_ZNSt14_Sp_ebo_helperILi0ESaIN4seal4util12MemoryPoolMTEELb1EEC2ERKS3_, .Lfunc_end313-_ZNSt14_Sp_ebo_helperILi0ESaIN4seal4util12MemoryPoolMTEELb1EEC2ERKS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEE9constructIS3_JRbEEEvPT_DpOT0_,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEE9constructIS3_JRbEEEvPT_DpOT0_,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEE9constructIS3_JRbEEEvPT_DpOT0_ # -- Begin function _ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEE9constructIS3_JRbEEEvPT_DpOT0_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEE9constructIS3_JRbEEEvPT_DpOT0_,@function
_ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEE9constructIS3_JRbEEEvPT_DpOT0_: # @_ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEE9constructIS3_JRbEEEvPT_DpOT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	movq	-24(%rbp), %rdi
	callq	_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	movb	(%rax), %al
	andb	$1, %al
	movzbl	%al, %esi
	callq	_ZN4seal4util12MemoryPoolMTC2Eb
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end314:
	.size	_ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEE9constructIS3_JRbEEEvPT_DpOT0_, .Lfunc_end314-_ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEE9constructIS3_JRbEEEvPT_DpOT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal4util12MemoryPoolMTC2Eb,"axG",@progbits,_ZN4seal4util12MemoryPoolMTC2Eb,comdat
	.weak	_ZN4seal4util12MemoryPoolMTC2Eb # -- Begin function _ZN4seal4util12MemoryPoolMTC2Eb
	.p2align	4, 0x90
	.type	_ZN4seal4util12MemoryPoolMTC2Eb,@function
_ZN4seal4util12MemoryPoolMTC2Eb:        # @_ZN4seal4util12MemoryPoolMTC2Eb
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movb	%sil, %al
	movq	%rdi, -8(%rbp)
	andb	$1, %al
	movb	%al, -9(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -24(%rbp)                 # 8-byte Spill
	callq	_ZN4seal4util10MemoryPoolC2Ev
	movq	-24(%rbp), %rdi                 # 8-byte Reload
	movq	_ZTVN4seal4util12MemoryPoolMTE@GOTPCREL(%rip), %rax
	addq	$16, %rax
	movq	%rax, (%rdi)
	movb	-9(%rbp), %al
	andb	$1, %al
	movb	%al, 8(%rdi)
	addq	$16, %rdi
	callq	_ZN4seal4util18ReaderWriterLockerC2Ev
	movq	-24(%rbp), %rdi                 # 8-byte Reload
	addq	$72, %rdi
	callq	_ZNSt6vectorIPN4seal4util14MemoryPoolHeadESaIS3_EEC2Ev
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end315:
	.size	_ZN4seal4util12MemoryPoolMTC2Eb, .Lfunc_end315-_ZN4seal4util12MemoryPoolMTC2Eb
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal4util10MemoryPoolC2Ev,"axG",@progbits,_ZN4seal4util10MemoryPoolC2Ev,comdat
	.weak	_ZN4seal4util10MemoryPoolC2Ev   # -- Begin function _ZN4seal4util10MemoryPoolC2Ev
	.p2align	4, 0x90
	.type	_ZN4seal4util10MemoryPoolC2Ev,@function
_ZN4seal4util10MemoryPoolC2Ev:          # @_ZN4seal4util10MemoryPoolC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	leaq	_ZTVN4seal4util10MemoryPoolE(%rip), %rcx
	addq	$16, %rcx
	movq	%rcx, (%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end316:
	.size	_ZN4seal4util10MemoryPoolC2Ev, .Lfunc_end316-_ZN4seal4util10MemoryPoolC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal4util18ReaderWriterLockerC2Ev,"axG",@progbits,_ZN4seal4util18ReaderWriterLockerC2Ev,comdat
	.weak	_ZN4seal4util18ReaderWriterLockerC2Ev # -- Begin function _ZN4seal4util18ReaderWriterLockerC2Ev
	.p2align	4, 0x90
	.type	_ZN4seal4util18ReaderWriterLockerC2Ev,@function
_ZN4seal4util18ReaderWriterLockerC2Ev:  # @_ZN4seal4util18ReaderWriterLockerC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -16(%rbp)                 # 8-byte Spill
	xorl	%esi, %esi
	movl	$56, %edx
	callq	memset@PLT
	movq	-16(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNSt12shared_mutexC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end317:
	.size	_ZN4seal4util18ReaderWriterLockerC2Ev, .Lfunc_end317-_ZN4seal4util18ReaderWriterLockerC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIPN4seal4util14MemoryPoolHeadESaIS3_EEC2Ev,"axG",@progbits,_ZNSt6vectorIPN4seal4util14MemoryPoolHeadESaIS3_EEC2Ev,comdat
	.weak	_ZNSt6vectorIPN4seal4util14MemoryPoolHeadESaIS3_EEC2Ev # -- Begin function _ZNSt6vectorIPN4seal4util14MemoryPoolHeadESaIS3_EEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt6vectorIPN4seal4util14MemoryPoolHeadESaIS3_EEC2Ev,@function
_ZNSt6vectorIPN4seal4util14MemoryPoolHeadESaIS3_EEC2Ev: # @_ZNSt6vectorIPN4seal4util14MemoryPoolHeadESaIS3_EEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt12_Vector_baseIPN4seal4util14MemoryPoolHeadESaIS3_EEC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end318:
	.size	_ZNSt6vectorIPN4seal4util14MemoryPoolHeadESaIS3_EEC2Ev, .Lfunc_end318-_ZNSt6vectorIPN4seal4util14MemoryPoolHeadESaIS3_EEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal4util10MemoryPoolD2Ev,"axG",@progbits,_ZN4seal4util10MemoryPoolD2Ev,comdat
	.weak	_ZN4seal4util10MemoryPoolD2Ev   # -- Begin function _ZN4seal4util10MemoryPoolD2Ev
	.p2align	4, 0x90
	.type	_ZN4seal4util10MemoryPoolD2Ev,@function
_ZN4seal4util10MemoryPoolD2Ev:          # @_ZN4seal4util10MemoryPoolD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end319:
	.size	_ZN4seal4util10MemoryPoolD2Ev, .Lfunc_end319-_ZN4seal4util10MemoryPoolD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal4util10MemoryPoolD0Ev,"axG",@progbits,_ZN4seal4util10MemoryPoolD0Ev,comdat
	.weak	_ZN4seal4util10MemoryPoolD0Ev   # -- Begin function _ZN4seal4util10MemoryPoolD0Ev
	.p2align	4, 0x90
	.type	_ZN4seal4util10MemoryPoolD0Ev,@function
_ZN4seal4util10MemoryPoolD0Ev:          # @_ZN4seal4util10MemoryPoolD0Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	ud2
.Lfunc_end320:
	.size	_ZN4seal4util10MemoryPoolD0Ev, .Lfunc_end320-_ZN4seal4util10MemoryPoolD0Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12shared_mutexC2Ev,"axG",@progbits,_ZNSt12shared_mutexC2Ev,comdat
	.weak	_ZNSt12shared_mutexC2Ev         # -- Begin function _ZNSt12shared_mutexC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12shared_mutexC2Ev,@function
_ZNSt12shared_mutexC2Ev:                # @_ZNSt12shared_mutexC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt22__shared_mutex_pthreadC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end321:
	.size	_ZNSt12shared_mutexC2Ev, .Lfunc_end321-_ZNSt12shared_mutexC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt22__shared_mutex_pthreadC2Ev,"axG",@progbits,_ZNSt22__shared_mutex_pthreadC2Ev,comdat
	.weak	_ZNSt22__shared_mutex_pthreadC2Ev # -- Begin function _ZNSt22__shared_mutex_pthreadC2Ev
	.p2align	4, 0x90
	.type	_ZNSt22__shared_mutex_pthreadC2Ev,@function
_ZNSt22__shared_mutex_pthreadC2Ev:      # @_ZNSt22__shared_mutex_pthreadC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -16(%rbp)                 # 8-byte Spill
	xorl	%esi, %esi
	movl	$56, %edx
	callq	memset@PLT
	movq	-16(%rbp), %rax                 # 8-byte Reload
	movl	$0, 48(%rax)
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end322:
	.size	_ZNSt22__shared_mutex_pthreadC2Ev, .Lfunc_end322-_ZNSt22__shared_mutex_pthreadC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIPN4seal4util14MemoryPoolHeadESaIS3_EEC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIPN4seal4util14MemoryPoolHeadESaIS3_EEC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIPN4seal4util14MemoryPoolHeadESaIS3_EEC2Ev # -- Begin function _ZNSt12_Vector_baseIPN4seal4util14MemoryPoolHeadESaIS3_EEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIPN4seal4util14MemoryPoolHeadESaIS3_EEC2Ev,@function
_ZNSt12_Vector_baseIPN4seal4util14MemoryPoolHeadESaIS3_EEC2Ev: # @_ZNSt12_Vector_baseIPN4seal4util14MemoryPoolHeadESaIS3_EEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt12_Vector_baseIPN4seal4util14MemoryPoolHeadESaIS3_EE12_Vector_implC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end323:
	.size	_ZNSt12_Vector_baseIPN4seal4util14MemoryPoolHeadESaIS3_EEC2Ev, .Lfunc_end323-_ZNSt12_Vector_baseIPN4seal4util14MemoryPoolHeadESaIS3_EEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIPN4seal4util14MemoryPoolHeadESaIS3_EE12_Vector_implC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIPN4seal4util14MemoryPoolHeadESaIS3_EE12_Vector_implC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIPN4seal4util14MemoryPoolHeadESaIS3_EE12_Vector_implC2Ev # -- Begin function _ZNSt12_Vector_baseIPN4seal4util14MemoryPoolHeadESaIS3_EE12_Vector_implC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIPN4seal4util14MemoryPoolHeadESaIS3_EE12_Vector_implC2Ev,@function
_ZNSt12_Vector_baseIPN4seal4util14MemoryPoolHeadESaIS3_EE12_Vector_implC2Ev: # @_ZNSt12_Vector_baseIPN4seal4util14MemoryPoolHeadESaIS3_EE12_Vector_implC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -16(%rbp)                 # 8-byte Spill
	callq	_ZNSaIPN4seal4util14MemoryPoolHeadEEC2Ev
	movq	-16(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNSt12_Vector_baseIPN4seal4util14MemoryPoolHeadESaIS3_EE17_Vector_impl_dataC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end324:
	.size	_ZNSt12_Vector_baseIPN4seal4util14MemoryPoolHeadESaIS3_EE12_Vector_implC2Ev, .Lfunc_end324-_ZNSt12_Vector_baseIPN4seal4util14MemoryPoolHeadESaIS3_EE12_Vector_implC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSaIPN4seal4util14MemoryPoolHeadEEC2Ev,"axG",@progbits,_ZNSaIPN4seal4util14MemoryPoolHeadEEC2Ev,comdat
	.weak	_ZNSaIPN4seal4util14MemoryPoolHeadEEC2Ev # -- Begin function _ZNSaIPN4seal4util14MemoryPoolHeadEEC2Ev
	.p2align	4, 0x90
	.type	_ZNSaIPN4seal4util14MemoryPoolHeadEEC2Ev,@function
_ZNSaIPN4seal4util14MemoryPoolHeadEEC2Ev: # @_ZNSaIPN4seal4util14MemoryPoolHeadEEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIPN4seal4util14MemoryPoolHeadEEC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end325:
	.size	_ZNSaIPN4seal4util14MemoryPoolHeadEEC2Ev, .Lfunc_end325-_ZNSaIPN4seal4util14MemoryPoolHeadEEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIPN4seal4util14MemoryPoolHeadESaIS3_EE17_Vector_impl_dataC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIPN4seal4util14MemoryPoolHeadESaIS3_EE17_Vector_impl_dataC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIPN4seal4util14MemoryPoolHeadESaIS3_EE17_Vector_impl_dataC2Ev # -- Begin function _ZNSt12_Vector_baseIPN4seal4util14MemoryPoolHeadESaIS3_EE17_Vector_impl_dataC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIPN4seal4util14MemoryPoolHeadESaIS3_EE17_Vector_impl_dataC2Ev,@function
_ZNSt12_Vector_baseIPN4seal4util14MemoryPoolHeadESaIS3_EE17_Vector_impl_dataC2Ev: # @_ZNSt12_Vector_baseIPN4seal4util14MemoryPoolHeadESaIS3_EE17_Vector_impl_dataC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	$0, (%rax)
	movq	$0, 8(%rax)
	movq	$0, 16(%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end326:
	.size	_ZNSt12_Vector_baseIPN4seal4util14MemoryPoolHeadESaIS3_EE17_Vector_impl_dataC2Ev, .Lfunc_end326-_ZNSt12_Vector_baseIPN4seal4util14MemoryPoolHeadESaIS3_EE17_Vector_impl_dataC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIPN4seal4util14MemoryPoolHeadEEC2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIPN4seal4util14MemoryPoolHeadEEC2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIPN4seal4util14MemoryPoolHeadEEC2Ev # -- Begin function _ZN9__gnu_cxx13new_allocatorIPN4seal4util14MemoryPoolHeadEEC2Ev
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIPN4seal4util14MemoryPoolHeadEEC2Ev,@function
_ZN9__gnu_cxx13new_allocatorIPN4seal4util14MemoryPoolHeadEEC2Ev: # @_ZN9__gnu_cxx13new_allocatorIPN4seal4util14MemoryPoolHeadEEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end327:
	.size	_ZN9__gnu_cxx13new_allocatorIPN4seal4util14MemoryPoolHeadEEC2Ev, .Lfunc_end327-_ZN9__gnu_cxx13new_allocatorIPN4seal4util14MemoryPoolHeadEEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt14_Sp_ebo_helperILi0ESaIN4seal4util12MemoryPoolMTEELb1EED2Ev,"axG",@progbits,_ZNSt14_Sp_ebo_helperILi0ESaIN4seal4util12MemoryPoolMTEELb1EED2Ev,comdat
	.weak	_ZNSt14_Sp_ebo_helperILi0ESaIN4seal4util12MemoryPoolMTEELb1EED2Ev # -- Begin function _ZNSt14_Sp_ebo_helperILi0ESaIN4seal4util12MemoryPoolMTEELb1EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt14_Sp_ebo_helperILi0ESaIN4seal4util12MemoryPoolMTEELb1EED2Ev,@function
_ZNSt14_Sp_ebo_helperILi0ESaIN4seal4util12MemoryPoolMTEELb1EED2Ev: # @_ZNSt14_Sp_ebo_helperILi0ESaIN4seal4util12MemoryPoolMTEELb1EED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSaIN4seal4util12MemoryPoolMTEED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end328:
	.size	_ZNSt14_Sp_ebo_helperILi0ESaIN4seal4util12MemoryPoolMTEELb1EED2Ev, .Lfunc_end328-_ZNSt14_Sp_ebo_helperILi0ESaIN4seal4util12MemoryPoolMTEELb1EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEED2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEED2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEED2Ev # -- Begin function _ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEED2Ev
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEED2Ev,@function
_ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEED2Ev: # @_ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end329:
	.size	_ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEED2Ev, .Lfunc_end329-_ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIN4seal4util12MemoryPoolMTEEE7destroyIS2_EEvRS3_PT_,"axG",@progbits,_ZNSt16allocator_traitsISaIN4seal4util12MemoryPoolMTEEE7destroyIS2_EEvRS3_PT_,comdat
	.weak	_ZNSt16allocator_traitsISaIN4seal4util12MemoryPoolMTEEE7destroyIS2_EEvRS3_PT_ # -- Begin function _ZNSt16allocator_traitsISaIN4seal4util12MemoryPoolMTEEE7destroyIS2_EEvRS3_PT_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIN4seal4util12MemoryPoolMTEEE7destroyIS2_EEvRS3_PT_,@function
_ZNSt16allocator_traitsISaIN4seal4util12MemoryPoolMTEEE7destroyIS2_EEvRS3_PT_: # @_ZNSt16allocator_traitsISaIN4seal4util12MemoryPoolMTEEE7destroyIS2_EEvRS3_PT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEE7destroyIS3_EEvPT_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end330:
	.size	_ZNSt16allocator_traitsISaIN4seal4util12MemoryPoolMTEEE7destroyIS2_EEvRS3_PT_, .Lfunc_end330-_ZNSt16allocator_traitsISaIN4seal4util12MemoryPoolMTEEE7destroyIS2_EEvRS3_PT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE5_Impl8_M_allocEv,"axG",@progbits,_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE5_Impl8_M_allocEv,comdat
	.weak	_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE5_Impl8_M_allocEv # -- Begin function _ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE5_Impl8_M_allocEv
	.p2align	4, 0x90
	.type	_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE5_Impl8_M_allocEv,@function
_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE5_Impl8_M_allocEv: # @_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE5_Impl8_M_allocEv
.Lfunc_begin45:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception45
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
.Ltmp826:
	callq	_ZNSt14_Sp_ebo_helperILi0ESaIN4seal4util12MemoryPoolMTEELb1EE6_S_getERS4_
.Ltmp827:
	movq	%rax, -16(%rbp)                 # 8-byte Spill
	jmp	.LBB331_1
.LBB331_1:
	movq	-16(%rbp), %rax                 # 8-byte Reload
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB331_2:
	.cfi_def_cfa %rbp, 16
.Ltmp828:
	movq	%rax, %rdi
                                        # kill: def $eax killed $edx killed $rdx
	callq	__clang_call_terminate
.Lfunc_end331:
	.size	_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE5_Impl8_M_allocEv, .Lfunc_end331-_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE5_Impl8_M_allocEv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE5_Impl8_M_allocEv,"aG",@progbits,_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE5_Impl8_M_allocEv,comdat
	.p2align	2
GCC_except_table331:
.Lexception45:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase11-.Lttbaseref11
.Lttbaseref11:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end45-.Lcst_begin45
.Lcst_begin45:
	.uleb128 .Ltmp826-.Lfunc_begin45        # >> Call Site 1 <<
	.uleb128 .Ltmp827-.Ltmp826              #   Call between .Ltmp826 and .Ltmp827
	.uleb128 .Ltmp828-.Lfunc_begin45        #     jumps to .Ltmp828
	.byte	1                               #   On action: 1
.Lcst_end45:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase11:
	.p2align	2
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEE7destroyIS3_EEvPT_,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEE7destroyIS3_EEvPT_,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEE7destroyIS3_EEvPT_ # -- Begin function _ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEE7destroyIS3_EEvPT_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEE7destroyIS3_EEvPT_,@function
_ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEE7destroyIS3_EEvPT_: # @_ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEE7destroyIS3_EEvPT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-16(%rbp), %rdi
	movq	(%rdi), %rax
	callq	*(%rax)
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end332:
	.size	_ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEE7destroyIS3_EEvPT_, .Lfunc_end332-_ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEE7destroyIS3_EEvPT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt14_Sp_ebo_helperILi0ESaIN4seal4util12MemoryPoolMTEELb1EE6_S_getERS4_,"axG",@progbits,_ZNSt14_Sp_ebo_helperILi0ESaIN4seal4util12MemoryPoolMTEELb1EE6_S_getERS4_,comdat
	.weak	_ZNSt14_Sp_ebo_helperILi0ESaIN4seal4util12MemoryPoolMTEELb1EE6_S_getERS4_ # -- Begin function _ZNSt14_Sp_ebo_helperILi0ESaIN4seal4util12MemoryPoolMTEELb1EE6_S_getERS4_
	.p2align	4, 0x90
	.type	_ZNSt14_Sp_ebo_helperILi0ESaIN4seal4util12MemoryPoolMTEELb1EE6_S_getERS4_,@function
_ZNSt14_Sp_ebo_helperILi0ESaIN4seal4util12MemoryPoolMTEELb1EE6_S_getERS4_: # @_ZNSt14_Sp_ebo_helperILi0ESaIN4seal4util12MemoryPoolMTEELb1EE6_S_getERS4_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end333:
	.size	_ZNSt14_Sp_ebo_helperILi0ESaIN4seal4util12MemoryPoolMTEELb1EE6_S_getERS4_, .Lfunc_end333-_ZNSt14_Sp_ebo_helperILi0ESaIN4seal4util12MemoryPoolMTEELb1EE6_S_getERS4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt19_Sp_make_shared_tag5_S_tiEv,"axG",@progbits,_ZNSt19_Sp_make_shared_tag5_S_tiEv,comdat
	.weak	_ZNSt19_Sp_make_shared_tag5_S_tiEv # -- Begin function _ZNSt19_Sp_make_shared_tag5_S_tiEv
	.p2align	4, 0x90
	.type	_ZNSt19_Sp_make_shared_tag5_S_tiEv,@function
_ZNSt19_Sp_make_shared_tag5_S_tiEv:     # @_ZNSt19_Sp_make_shared_tag5_S_tiEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	leaq	_ZZNSt19_Sp_make_shared_tag5_S_tiEvE5__tag(%rip), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end334:
	.size	_ZNSt19_Sp_make_shared_tag5_S_tiEv, .Lfunc_end334-_ZNSt19_Sp_make_shared_tag5_S_tiEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt9type_infoeqERKS_,"axG",@progbits,_ZNKSt9type_infoeqERKS_,comdat
	.weak	_ZNKSt9type_infoeqERKS_         # -- Begin function _ZNKSt9type_infoeqERKS_
	.p2align	4, 0x90
	.type	_ZNKSt9type_infoeqERKS_,@function
_ZNKSt9type_infoeqERKS_:                # @_ZNKSt9type_infoeqERKS_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	movq	8(%rax), %rcx
	movq	-16(%rbp), %rdx
	movb	$1, %al
	cmpq	8(%rdx), %rcx
	movb	%al, -17(%rbp)                  # 1-byte Spill
	je	.LBB335_4
# %bb.1:
	movq	-32(%rbp), %rax                 # 8-byte Reload
	movq	8(%rax), %rax
	movsbl	(%rax), %ecx
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	cmpl	$42, %ecx
	movb	%al, -33(%rbp)                  # 1-byte Spill
	je	.LBB335_3
# %bb.2:
	movq	-32(%rbp), %rax                 # 8-byte Reload
	movq	8(%rax), %rdi
	movq	-16(%rbp), %rax
	movq	8(%rax), %rsi
	callq	strcmp@PLT
	cmpl	$0, %eax
	sete	%al
	movb	%al, -33(%rbp)                  # 1-byte Spill
.LBB335_3:
	movb	-33(%rbp), %al                  # 1-byte Reload
	movb	%al, -17(%rbp)                  # 1-byte Spill
.LBB335_4:
	movb	-17(%rbp), %al                  # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %eax
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end335:
	.size	_ZNKSt9type_infoeqERKS_, .Lfunc_end335-_ZNKSt9type_infoeqERKS_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx16__aligned_bufferIN4seal4util12MemoryPoolMTEE6_M_ptrEv,"axG",@progbits,_ZN9__gnu_cxx16__aligned_bufferIN4seal4util12MemoryPoolMTEE6_M_ptrEv,comdat
	.weak	_ZN9__gnu_cxx16__aligned_bufferIN4seal4util12MemoryPoolMTEE6_M_ptrEv # -- Begin function _ZN9__gnu_cxx16__aligned_bufferIN4seal4util12MemoryPoolMTEE6_M_ptrEv
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx16__aligned_bufferIN4seal4util12MemoryPoolMTEE6_M_ptrEv,@function
_ZN9__gnu_cxx16__aligned_bufferIN4seal4util12MemoryPoolMTEE6_M_ptrEv: # @_ZN9__gnu_cxx16__aligned_bufferIN4seal4util12MemoryPoolMTEE6_M_ptrEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN9__gnu_cxx16__aligned_bufferIN4seal4util12MemoryPoolMTEE7_M_addrEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end336:
	.size	_ZN9__gnu_cxx16__aligned_bufferIN4seal4util12MemoryPoolMTEE6_M_ptrEv, .Lfunc_end336-_ZN9__gnu_cxx16__aligned_bufferIN4seal4util12MemoryPoolMTEE6_M_ptrEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx16__aligned_bufferIN4seal4util12MemoryPoolMTEE7_M_addrEv,"axG",@progbits,_ZN9__gnu_cxx16__aligned_bufferIN4seal4util12MemoryPoolMTEE7_M_addrEv,comdat
	.weak	_ZN9__gnu_cxx16__aligned_bufferIN4seal4util12MemoryPoolMTEE7_M_addrEv # -- Begin function _ZN9__gnu_cxx16__aligned_bufferIN4seal4util12MemoryPoolMTEE7_M_addrEv
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx16__aligned_bufferIN4seal4util12MemoryPoolMTEE7_M_addrEv,@function
_ZN9__gnu_cxx16__aligned_bufferIN4seal4util12MemoryPoolMTEE7_M_addrEv: # @_ZN9__gnu_cxx16__aligned_bufferIN4seal4util12MemoryPoolMTEE7_M_addrEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end337:
	.size	_ZN9__gnu_cxx16__aligned_bufferIN4seal4util12MemoryPoolMTEE7_M_addrEv, .Lfunc_end337-_ZN9__gnu_cxx16__aligned_bufferIN4seal4util12MemoryPoolMTEE7_M_addrEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEE10deallocateERS8_PS7_m,"axG",@progbits,_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEE10deallocateERS8_PS7_m,comdat
	.weak	_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEE10deallocateERS8_PS7_m # -- Begin function _ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEE10deallocateERS8_PS7_m
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEE10deallocateERS8_PS7_m,@function
_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEE10deallocateERS8_PS7_m: # @_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEE10deallocateERS8_PS7_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEE10deallocateEPS7_m
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end338:
	.size	_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEE10deallocateERS8_PS7_m, .Lfunc_end338-_ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEE10deallocateERS8_PS7_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEE10deallocateEPS7_m,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEE10deallocateEPS7_m,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEE10deallocateEPS7_m # -- Begin function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEE10deallocateEPS7_m
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEE10deallocateEPS7_m,@function
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEE10deallocateEPS7_m: # @_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEE10deallocateEPS7_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZdlPv@PLT
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end339:
	.size	_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEE10deallocateEPS7_m, .Lfunc_end339-_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEE10deallocateEPS7_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEED2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEED2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEED2Ev # -- Begin function _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEED2Ev
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEED2Ev,@function
_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEED2Ev: # @_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end340:
	.size	_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEED2Ev, .Lfunc_end340-_ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEEC2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEEC2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEEC2Ev # -- Begin function _ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEEC2Ev
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEEC2Ev,@function
_ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEEC2Ev: # @_ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end341:
	.size	_ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEEC2Ev, .Lfunc_end341-_ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4moveIRSt10shared_ptrIN4seal4util12MemoryPoolMTEEEONSt16remove_referenceIT_E4typeEOS7_,"axG",@progbits,_ZSt4moveIRSt10shared_ptrIN4seal4util12MemoryPoolMTEEEONSt16remove_referenceIT_E4typeEOS7_,comdat
	.weak	_ZSt4moveIRSt10shared_ptrIN4seal4util12MemoryPoolMTEEEONSt16remove_referenceIT_E4typeEOS7_ # -- Begin function _ZSt4moveIRSt10shared_ptrIN4seal4util12MemoryPoolMTEEEONSt16remove_referenceIT_E4typeEOS7_
	.p2align	4, 0x90
	.type	_ZSt4moveIRSt10shared_ptrIN4seal4util12MemoryPoolMTEEEONSt16remove_referenceIT_E4typeEOS7_,@function
_ZSt4moveIRSt10shared_ptrIN4seal4util12MemoryPoolMTEEEONSt16remove_referenceIT_E4typeEOS7_: # @_ZSt4moveIRSt10shared_ptrIN4seal4util12MemoryPoolMTEEEONSt16remove_referenceIT_E4typeEOS7_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end342:
	.size	_ZSt4moveIRSt10shared_ptrIN4seal4util12MemoryPoolMTEEEONSt16remove_referenceIT_E4typeEOS7_, .Lfunc_end342-_ZSt4moveIRSt10shared_ptrIN4seal4util12MemoryPoolMTEEEONSt16remove_referenceIT_E4typeEOS7_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEC2INS1_12MemoryPoolMTEvEEOS_IT_LS4_2EE,"axG",@progbits,_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEC2INS1_12MemoryPoolMTEvEEOS_IT_LS4_2EE,comdat
	.weak	_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEC2INS1_12MemoryPoolMTEvEEOS_IT_LS4_2EE # -- Begin function _ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEC2INS1_12MemoryPoolMTEvEEOS_IT_LS4_2EE
	.p2align	4, 0x90
	.type	_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEC2INS1_12MemoryPoolMTEvEEOS_IT_LS4_2EE,@function
_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEC2INS1_12MemoryPoolMTEvEEOS_IT_LS4_2EE: # @_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEC2INS1_12MemoryPoolMTEvEEOS_IT_LS4_2EE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -24(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, (%rdi)
	addq	$8, %rdi
	callq	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2Ev
	movq	-24(%rbp), %rdi                 # 8-byte Reload
	addq	$8, %rdi
	movq	-16(%rbp), %rsi
	addq	$8, %rsi
	callq	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EE7_M_swapERS2_
	movq	-16(%rbp), %rax
	movq	$0, (%rax)
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end343:
	.size	_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEC2INS1_12MemoryPoolMTEvEEOS_IT_LS4_2EE, .Lfunc_end343-_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEC2INS1_12MemoryPoolMTEvEEOS_IT_LS4_2EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12__shared_ptrIN4seal4util12MemoryPoolMTELN9__gnu_cxx12_Lock_policyE2EED2Ev,"axG",@progbits,_ZNSt12__shared_ptrIN4seal4util12MemoryPoolMTELN9__gnu_cxx12_Lock_policyE2EED2Ev,comdat
	.weak	_ZNSt12__shared_ptrIN4seal4util12MemoryPoolMTELN9__gnu_cxx12_Lock_policyE2EED2Ev # -- Begin function _ZNSt12__shared_ptrIN4seal4util12MemoryPoolMTELN9__gnu_cxx12_Lock_policyE2EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt12__shared_ptrIN4seal4util12MemoryPoolMTELN9__gnu_cxx12_Lock_policyE2EED2Ev,@function
_ZNSt12__shared_ptrIN4seal4util12MemoryPoolMTELN9__gnu_cxx12_Lock_policyE2EED2Ev: # @_ZNSt12__shared_ptrIN4seal4util12MemoryPoolMTELN9__gnu_cxx12_Lock_policyE2EED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	addq	$8, %rdi
	callq	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end344:
	.size	_ZNSt12__shared_ptrIN4seal4util12MemoryPoolMTELN9__gnu_cxx12_Lock_policyE2EED2Ev, .Lfunc_end344-_ZNSt12__shared_ptrIN4seal4util12MemoryPoolMTELN9__gnu_cxx12_Lock_policyE2EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZTWN4seal4util16global_variables15tls_memory_poolE,"axG",@progbits,_ZTWN4seal4util16global_variables15tls_memory_poolE,comdat
	.hidden	_ZTWN4seal4util16global_variables15tls_memory_poolE # -- Begin function _ZTWN4seal4util16global_variables15tls_memory_poolE
	.weak	_ZTWN4seal4util16global_variables15tls_memory_poolE
	.p2align	4, 0x90
	.type	_ZTWN4seal4util16global_variables15tls_memory_poolE,@function
_ZTWN4seal4util16global_variables15tls_memory_poolE: # @_ZTWN4seal4util16global_variables15tls_memory_poolE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	_ZTHN4seal4util16global_variables15tls_memory_poolE@GOTPCREL(%rip), %rax
	testq	%rax, %rax
	je	.LBB345_2
	jmp	.LBB345_1
.LBB345_1:
	callq	_ZTHN4seal4util16global_variables15tls_memory_poolE@PLT
.LBB345_2:
	movq	_ZN4seal4util16global_variables15tls_memory_poolE@GOTTPOFF(%rip), %rcx
	movq	%fs:0, %rax
	addq	%rcx, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end345:
	.size	_ZTWN4seal4util16global_variables15tls_memory_poolE, .Lfunc_end345-_ZTWN4seal4util16global_variables15tls_memory_poolE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal12MMProfGlobalC2Ev,"axG",@progbits,_ZN4seal12MMProfGlobalC2Ev,comdat
	.weak	_ZN4seal12MMProfGlobalC2Ev      # -- Begin function _ZN4seal12MMProfGlobalC2Ev
	.p2align	4, 0x90
	.type	_ZN4seal12MMProfGlobalC2Ev,@function
_ZN4seal12MMProfGlobalC2Ev:             # @_ZN4seal12MMProfGlobalC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -16(%rbp)                 # 8-byte Spill
	callq	_ZN4seal6MMProfC2Ev
	movq	-16(%rbp), %rax                 # 8-byte Reload
	leaq	_ZTVN4seal12MMProfGlobalE(%rip), %rcx
	addq	$16, %rcx
	movq	%rcx, (%rax)
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end346:
	.size	_ZN4seal12MMProfGlobalC2Ev, .Lfunc_end346-_ZN4seal12MMProfGlobalC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EEC2IS3_vEEPS1_,"axG",@progbits,_ZNSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EEC2IS3_vEEPS1_,comdat
	.weak	_ZNSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EEC2IS3_vEEPS1_ # -- Begin function _ZNSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EEC2IS3_vEEPS1_
	.p2align	4, 0x90
	.type	_ZNSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EEC2IS3_vEEPS1_,@function
_ZNSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EEC2IS3_vEEPS1_: # @_ZNSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EEC2IS3_vEEPS1_
.Lfunc_begin46:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception46
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
.Ltmp829:
	callq	_ZNSt15__uniq_ptr_dataIN4seal6MMProfESt14default_deleteIS1_ELb1ELb1EECI2St15__uniq_ptr_implIS1_S3_EEPS1_
.Ltmp830:
	jmp	.LBB347_1
.LBB347_1:
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB347_2:
	.cfi_def_cfa %rbp, 16
.Ltmp831:
	movq	%rax, %rdi
                                        # kill: def $eax killed $edx killed $rdx
	callq	__clang_call_terminate
.Lfunc_end347:
	.size	_ZNSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EEC2IS3_vEEPS1_, .Lfunc_end347-_ZNSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EEC2IS3_vEEPS1_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EEC2IS3_vEEPS1_,"aG",@progbits,_ZNSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EEC2IS3_vEEPS1_,comdat
	.p2align	2
GCC_except_table347:
.Lexception46:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase12-.Lttbaseref12
.Lttbaseref12:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end46-.Lcst_begin46
.Lcst_begin46:
	.uleb128 .Ltmp829-.Lfunc_begin46        # >> Call Site 1 <<
	.uleb128 .Ltmp830-.Ltmp829              #   Call between .Ltmp829 and .Ltmp830
	.uleb128 .Ltmp831-.Lfunc_begin46        #     jumps to .Ltmp831
	.byte	1                               #   On action: 1
.Lcst_end46:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase12:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EED2Ev,"axG",@progbits,_ZNSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EED2Ev,comdat
	.weak	_ZNSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EED2Ev # -- Begin function _ZNSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EED2Ev,@function
_ZNSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EED2Ev: # @_ZNSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EED2Ev
.Lfunc_begin47:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception47
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -24(%rbp)                 # 8-byte Spill
	callq	_ZNSt15__uniq_ptr_implIN4seal6MMProfESt14default_deleteIS1_EE6_M_ptrEv
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	cmpq	$0, (%rax)
	je	.LBB348_3
# %bb.1:
	movq	-24(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EE11get_deleterEv
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	callq	_ZSt4moveIRPN4seal6MMProfEEONSt16remove_referenceIT_E4typeEOS5_
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	movq	(%rax), %rsi
.Ltmp832:
	callq	_ZNKSt14default_deleteIN4seal6MMProfEEclEPS1_
.Ltmp833:
	jmp	.LBB348_2
.LBB348_2:
	jmp	.LBB348_3
.LBB348_3:
	movq	-16(%rbp), %rax
	movq	$0, (%rax)
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB348_4:
	.cfi_def_cfa %rbp, 16
.Ltmp834:
	movq	%rax, %rdi
                                        # kill: def $eax killed $edx killed $rdx
	callq	__clang_call_terminate
.Lfunc_end348:
	.size	_ZNSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EED2Ev, .Lfunc_end348-_ZNSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EED2Ev,"aG",@progbits,_ZNSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EED2Ev,comdat
	.p2align	2
GCC_except_table348:
.Lexception47:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase13-.Lttbaseref13
.Lttbaseref13:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end47-.Lcst_begin47
.Lcst_begin47:
	.uleb128 .Ltmp832-.Lfunc_begin47        # >> Call Site 1 <<
	.uleb128 .Ltmp833-.Ltmp832              #   Call between .Ltmp832 and .Ltmp833
	.uleb128 .Ltmp834-.Lfunc_begin47        #     jumps to .Ltmp834
	.byte	1                               #   On action: 1
.Lcst_end47:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase13:
	.p2align	2
                                        # -- End function
	.section	.text._ZN4seal6MMProfC2Ev,"axG",@progbits,_ZN4seal6MMProfC2Ev,comdat
	.weak	_ZN4seal6MMProfC2Ev             # -- Begin function _ZN4seal6MMProfC2Ev
	.p2align	4, 0x90
	.type	_ZN4seal6MMProfC2Ev,@function
_ZN4seal6MMProfC2Ev:                    # @_ZN4seal6MMProfC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	leaq	_ZTVN4seal6MMProfE(%rip), %rcx
	addq	$16, %rcx
	movq	%rcx, (%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end349:
	.size	_ZN4seal6MMProfC2Ev, .Lfunc_end349-_ZN4seal6MMProfC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal12MMProfGlobalD2Ev,"axG",@progbits,_ZN4seal12MMProfGlobalD2Ev,comdat
	.weak	_ZN4seal12MMProfGlobalD2Ev      # -- Begin function _ZN4seal12MMProfGlobalD2Ev
	.p2align	4, 0x90
	.type	_ZN4seal12MMProfGlobalD2Ev,@function
_ZN4seal12MMProfGlobalD2Ev:             # @_ZN4seal12MMProfGlobalD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN4seal6MMProfD2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end350:
	.size	_ZN4seal12MMProfGlobalD2Ev, .Lfunc_end350-_ZN4seal12MMProfGlobalD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal12MMProfGlobalD0Ev,"axG",@progbits,_ZN4seal12MMProfGlobalD0Ev,comdat
	.weak	_ZN4seal12MMProfGlobalD0Ev      # -- Begin function _ZN4seal12MMProfGlobalD0Ev
	.p2align	4, 0x90
	.type	_ZN4seal12MMProfGlobalD0Ev,@function
_ZN4seal12MMProfGlobalD0Ev:             # @_ZN4seal12MMProfGlobalD0Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -16(%rbp)                 # 8-byte Spill
	callq	_ZN4seal12MMProfGlobalD2Ev
	movq	-16(%rbp), %rdi                 # 8-byte Reload
	callq	_ZdlPv@PLT
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end351:
	.size	_ZN4seal12MMProfGlobalD0Ev, .Lfunc_end351-_ZN4seal12MMProfGlobalD0Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal12MMProfGlobal8get_poolEm,"axG",@progbits,_ZN4seal12MMProfGlobal8get_poolEm,comdat
	.weak	_ZN4seal12MMProfGlobal8get_poolEm # -- Begin function _ZN4seal12MMProfGlobal8get_poolEm
	.p2align	4, 0x90
	.type	_ZN4seal12MMProfGlobal8get_poolEm,@function
_ZN4seal12MMProfGlobal8get_poolEm:      # @_ZN4seal12MMProfGlobal8get_poolEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, %rax
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	movq	%rdi, %rax
	movq	%rax, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	callq	_ZN4seal16MemoryPoolHandle6GlobalEv
	movq	-32(%rbp), %rax                 # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end352:
	.size	_ZN4seal12MMProfGlobal8get_poolEm, .Lfunc_end352-_ZN4seal12MMProfGlobal8get_poolEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal6MMProfD2Ev,"axG",@progbits,_ZN4seal6MMProfD2Ev,comdat
	.weak	_ZN4seal6MMProfD2Ev             # -- Begin function _ZN4seal6MMProfD2Ev
	.p2align	4, 0x90
	.type	_ZN4seal6MMProfD2Ev,@function
_ZN4seal6MMProfD2Ev:                    # @_ZN4seal6MMProfD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end353:
	.size	_ZN4seal6MMProfD2Ev, .Lfunc_end353-_ZN4seal6MMProfD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal6MMProfD0Ev,"axG",@progbits,_ZN4seal6MMProfD0Ev,comdat
	.weak	_ZN4seal6MMProfD0Ev             # -- Begin function _ZN4seal6MMProfD0Ev
	.p2align	4, 0x90
	.type	_ZN4seal6MMProfD0Ev,@function
_ZN4seal6MMProfD0Ev:                    # @_ZN4seal6MMProfD0Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	ud2
.Lfunc_end354:
	.size	_ZN4seal6MMProfD0Ev, .Lfunc_end354-_ZN4seal6MMProfD0Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt15__uniq_ptr_dataIN4seal6MMProfESt14default_deleteIS1_ELb1ELb1EECI2St15__uniq_ptr_implIS1_S3_EEPS1_,"axG",@progbits,_ZNSt15__uniq_ptr_dataIN4seal6MMProfESt14default_deleteIS1_ELb1ELb1EECI2St15__uniq_ptr_implIS1_S3_EEPS1_,comdat
	.weak	_ZNSt15__uniq_ptr_dataIN4seal6MMProfESt14default_deleteIS1_ELb1ELb1EECI2St15__uniq_ptr_implIS1_S3_EEPS1_ # -- Begin function _ZNSt15__uniq_ptr_dataIN4seal6MMProfESt14default_deleteIS1_ELb1ELb1EECI2St15__uniq_ptr_implIS1_S3_EEPS1_
	.p2align	4, 0x90
	.type	_ZNSt15__uniq_ptr_dataIN4seal6MMProfESt14default_deleteIS1_ELb1ELb1EECI2St15__uniq_ptr_implIS1_S3_EEPS1_,@function
_ZNSt15__uniq_ptr_dataIN4seal6MMProfESt14default_deleteIS1_ELb1ELb1EECI2St15__uniq_ptr_implIS1_S3_EEPS1_: # @_ZNSt15__uniq_ptr_dataIN4seal6MMProfESt14default_deleteIS1_ELb1ELb1EECI2St15__uniq_ptr_implIS1_S3_EEPS1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZNSt15__uniq_ptr_implIN4seal6MMProfESt14default_deleteIS1_EEC2EPS1_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end355:
	.size	_ZNSt15__uniq_ptr_dataIN4seal6MMProfESt14default_deleteIS1_ELb1ELb1EECI2St15__uniq_ptr_implIS1_S3_EEPS1_, .Lfunc_end355-_ZNSt15__uniq_ptr_dataIN4seal6MMProfESt14default_deleteIS1_ELb1ELb1EECI2St15__uniq_ptr_implIS1_S3_EEPS1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt15__uniq_ptr_implIN4seal6MMProfESt14default_deleteIS1_EEC2EPS1_,"axG",@progbits,_ZNSt15__uniq_ptr_implIN4seal6MMProfESt14default_deleteIS1_EEC2EPS1_,comdat
	.weak	_ZNSt15__uniq_ptr_implIN4seal6MMProfESt14default_deleteIS1_EEC2EPS1_ # -- Begin function _ZNSt15__uniq_ptr_implIN4seal6MMProfESt14default_deleteIS1_EEC2EPS1_
	.p2align	4, 0x90
	.type	_ZNSt15__uniq_ptr_implIN4seal6MMProfESt14default_deleteIS1_EEC2EPS1_,@function
_ZNSt15__uniq_ptr_implIN4seal6MMProfESt14default_deleteIS1_EEC2EPS1_: # @_ZNSt15__uniq_ptr_implIN4seal6MMProfESt14default_deleteIS1_EEC2EPS1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -32(%rbp)                 # 8-byte Spill
	callq	_ZNSt5tupleIJPN4seal6MMProfESt14default_deleteIS1_EEEC2ILb1ELb1EEEv
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	movq	-16(%rbp), %rax
	movq	%rax, -24(%rbp)                 # 8-byte Spill
	callq	_ZNSt15__uniq_ptr_implIN4seal6MMProfESt14default_deleteIS1_EE6_M_ptrEv
	movq	-24(%rbp), %rcx                 # 8-byte Reload
	movq	%rcx, (%rax)
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end356:
	.size	_ZNSt15__uniq_ptr_implIN4seal6MMProfESt14default_deleteIS1_EEC2EPS1_, .Lfunc_end356-_ZNSt15__uniq_ptr_implIN4seal6MMProfESt14default_deleteIS1_EEC2EPS1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5tupleIJPN4seal6MMProfESt14default_deleteIS1_EEEC2ILb1ELb1EEEv,"axG",@progbits,_ZNSt5tupleIJPN4seal6MMProfESt14default_deleteIS1_EEEC2ILb1ELb1EEEv,comdat
	.weak	_ZNSt5tupleIJPN4seal6MMProfESt14default_deleteIS1_EEEC2ILb1ELb1EEEv # -- Begin function _ZNSt5tupleIJPN4seal6MMProfESt14default_deleteIS1_EEEC2ILb1ELb1EEEv
	.p2align	4, 0x90
	.type	_ZNSt5tupleIJPN4seal6MMProfESt14default_deleteIS1_EEEC2ILb1ELb1EEEv,@function
_ZNSt5tupleIJPN4seal6MMProfESt14default_deleteIS1_EEEC2ILb1ELb1EEEv: # @_ZNSt5tupleIJPN4seal6MMProfESt14default_deleteIS1_EEEC2ILb1ELb1EEEv
.Lfunc_begin48:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception48
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
.Ltmp835:
	callq	_ZNSt11_Tuple_implILm0EJPN4seal6MMProfESt14default_deleteIS1_EEEC2Ev
.Ltmp836:
	jmp	.LBB357_1
.LBB357_1:
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB357_2:
	.cfi_def_cfa %rbp, 16
.Ltmp837:
	movq	%rax, %rdi
                                        # kill: def $eax killed $edx killed $rdx
	callq	__clang_call_terminate
.Lfunc_end357:
	.size	_ZNSt5tupleIJPN4seal6MMProfESt14default_deleteIS1_EEEC2ILb1ELb1EEEv, .Lfunc_end357-_ZNSt5tupleIJPN4seal6MMProfESt14default_deleteIS1_EEEC2ILb1ELb1EEEv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt5tupleIJPN4seal6MMProfESt14default_deleteIS1_EEEC2ILb1ELb1EEEv,"aG",@progbits,_ZNSt5tupleIJPN4seal6MMProfESt14default_deleteIS1_EEEC2ILb1ELb1EEEv,comdat
	.p2align	2
GCC_except_table357:
.Lexception48:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase14-.Lttbaseref14
.Lttbaseref14:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end48-.Lcst_begin48
.Lcst_begin48:
	.uleb128 .Ltmp835-.Lfunc_begin48        # >> Call Site 1 <<
	.uleb128 .Ltmp836-.Ltmp835              #   Call between .Ltmp835 and .Ltmp836
	.uleb128 .Ltmp837-.Lfunc_begin48        #     jumps to .Ltmp837
	.byte	1                               #   On action: 1
.Lcst_end48:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase14:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt15__uniq_ptr_implIN4seal6MMProfESt14default_deleteIS1_EE6_M_ptrEv,"axG",@progbits,_ZNSt15__uniq_ptr_implIN4seal6MMProfESt14default_deleteIS1_EE6_M_ptrEv,comdat
	.weak	_ZNSt15__uniq_ptr_implIN4seal6MMProfESt14default_deleteIS1_EE6_M_ptrEv # -- Begin function _ZNSt15__uniq_ptr_implIN4seal6MMProfESt14default_deleteIS1_EE6_M_ptrEv
	.p2align	4, 0x90
	.type	_ZNSt15__uniq_ptr_implIN4seal6MMProfESt14default_deleteIS1_EE6_M_ptrEv,@function
_ZNSt15__uniq_ptr_implIN4seal6MMProfESt14default_deleteIS1_EE6_M_ptrEv: # @_ZNSt15__uniq_ptr_implIN4seal6MMProfESt14default_deleteIS1_EE6_M_ptrEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt3getILm0EJPN4seal6MMProfESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end358:
	.size	_ZNSt15__uniq_ptr_implIN4seal6MMProfESt14default_deleteIS1_EE6_M_ptrEv, .Lfunc_end358-_ZNSt15__uniq_ptr_implIN4seal6MMProfESt14default_deleteIS1_EE6_M_ptrEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt11_Tuple_implILm0EJPN4seal6MMProfESt14default_deleteIS1_EEEC2Ev,"axG",@progbits,_ZNSt11_Tuple_implILm0EJPN4seal6MMProfESt14default_deleteIS1_EEEC2Ev,comdat
	.weak	_ZNSt11_Tuple_implILm0EJPN4seal6MMProfESt14default_deleteIS1_EEEC2Ev # -- Begin function _ZNSt11_Tuple_implILm0EJPN4seal6MMProfESt14default_deleteIS1_EEEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt11_Tuple_implILm0EJPN4seal6MMProfESt14default_deleteIS1_EEEC2Ev,@function
_ZNSt11_Tuple_implILm0EJPN4seal6MMProfESt14default_deleteIS1_EEEC2Ev: # @_ZNSt11_Tuple_implILm0EJPN4seal6MMProfESt14default_deleteIS1_EEEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -16(%rbp)                 # 8-byte Spill
	callq	_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4seal6MMProfEEEEC2Ev
	movq	-16(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNSt10_Head_baseILm0EPN4seal6MMProfELb0EEC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end359:
	.size	_ZNSt11_Tuple_implILm0EJPN4seal6MMProfESt14default_deleteIS1_EEEC2Ev, .Lfunc_end359-_ZNSt11_Tuple_implILm0EJPN4seal6MMProfESt14default_deleteIS1_EEEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt11_Tuple_implILm1EJSt14default_deleteIN4seal6MMProfEEEEC2Ev,"axG",@progbits,_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4seal6MMProfEEEEC2Ev,comdat
	.weak	_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4seal6MMProfEEEEC2Ev # -- Begin function _ZNSt11_Tuple_implILm1EJSt14default_deleteIN4seal6MMProfEEEEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4seal6MMProfEEEEC2Ev,@function
_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4seal6MMProfEEEEC2Ev: # @_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4seal6MMProfEEEEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt10_Head_baseILm1ESt14default_deleteIN4seal6MMProfEELb1EEC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end360:
	.size	_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4seal6MMProfEEEEC2Ev, .Lfunc_end360-_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4seal6MMProfEEEEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt10_Head_baseILm0EPN4seal6MMProfELb0EEC2Ev,"axG",@progbits,_ZNSt10_Head_baseILm0EPN4seal6MMProfELb0EEC2Ev,comdat
	.weak	_ZNSt10_Head_baseILm0EPN4seal6MMProfELb0EEC2Ev # -- Begin function _ZNSt10_Head_baseILm0EPN4seal6MMProfELb0EEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt10_Head_baseILm0EPN4seal6MMProfELb0EEC2Ev,@function
_ZNSt10_Head_baseILm0EPN4seal6MMProfELb0EEC2Ev: # @_ZNSt10_Head_baseILm0EPN4seal6MMProfELb0EEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	$0, (%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end361:
	.size	_ZNSt10_Head_baseILm0EPN4seal6MMProfELb0EEC2Ev, .Lfunc_end361-_ZNSt10_Head_baseILm0EPN4seal6MMProfELb0EEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt10_Head_baseILm1ESt14default_deleteIN4seal6MMProfEELb1EEC2Ev,"axG",@progbits,_ZNSt10_Head_baseILm1ESt14default_deleteIN4seal6MMProfEELb1EEC2Ev,comdat
	.weak	_ZNSt10_Head_baseILm1ESt14default_deleteIN4seal6MMProfEELb1EEC2Ev # -- Begin function _ZNSt10_Head_baseILm1ESt14default_deleteIN4seal6MMProfEELb1EEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt10_Head_baseILm1ESt14default_deleteIN4seal6MMProfEELb1EEC2Ev,@function
_ZNSt10_Head_baseILm1ESt14default_deleteIN4seal6MMProfEELb1EEC2Ev: # @_ZNSt10_Head_baseILm1ESt14default_deleteIN4seal6MMProfEELb1EEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end362:
	.size	_ZNSt10_Head_baseILm1ESt14default_deleteIN4seal6MMProfEELb1EEC2Ev, .Lfunc_end362-_ZNSt10_Head_baseILm1ESt14default_deleteIN4seal6MMProfEELb1EEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt3getILm0EJPN4seal6MMProfESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_,"axG",@progbits,_ZSt3getILm0EJPN4seal6MMProfESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_,comdat
	.weak	_ZSt3getILm0EJPN4seal6MMProfESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_ # -- Begin function _ZSt3getILm0EJPN4seal6MMProfESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_
	.p2align	4, 0x90
	.type	_ZSt3getILm0EJPN4seal6MMProfESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_,@function
_ZSt3getILm0EJPN4seal6MMProfESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_: # @_ZSt3getILm0EJPN4seal6MMProfESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt12__get_helperILm0EPN4seal6MMProfEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end363:
	.size	_ZSt3getILm0EJPN4seal6MMProfESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_, .Lfunc_end363-_ZSt3getILm0EJPN4seal6MMProfESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__get_helperILm0EPN4seal6MMProfEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE,"axG",@progbits,_ZSt12__get_helperILm0EPN4seal6MMProfEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE,comdat
	.weak	_ZSt12__get_helperILm0EPN4seal6MMProfEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE # -- Begin function _ZSt12__get_helperILm0EPN4seal6MMProfEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE
	.p2align	4, 0x90
	.type	_ZSt12__get_helperILm0EPN4seal6MMProfEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE,@function
_ZSt12__get_helperILm0EPN4seal6MMProfEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE: # @_ZSt12__get_helperILm0EPN4seal6MMProfEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt11_Tuple_implILm0EJPN4seal6MMProfESt14default_deleteIS1_EEE7_M_headERS5_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end364:
	.size	_ZSt12__get_helperILm0EPN4seal6MMProfEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE, .Lfunc_end364-_ZSt12__get_helperILm0EPN4seal6MMProfEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt11_Tuple_implILm0EJPN4seal6MMProfESt14default_deleteIS1_EEE7_M_headERS5_,"axG",@progbits,_ZNSt11_Tuple_implILm0EJPN4seal6MMProfESt14default_deleteIS1_EEE7_M_headERS5_,comdat
	.weak	_ZNSt11_Tuple_implILm0EJPN4seal6MMProfESt14default_deleteIS1_EEE7_M_headERS5_ # -- Begin function _ZNSt11_Tuple_implILm0EJPN4seal6MMProfESt14default_deleteIS1_EEE7_M_headERS5_
	.p2align	4, 0x90
	.type	_ZNSt11_Tuple_implILm0EJPN4seal6MMProfESt14default_deleteIS1_EEE7_M_headERS5_,@function
_ZNSt11_Tuple_implILm0EJPN4seal6MMProfESt14default_deleteIS1_EEE7_M_headERS5_: # @_ZNSt11_Tuple_implILm0EJPN4seal6MMProfESt14default_deleteIS1_EEE7_M_headERS5_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt10_Head_baseILm0EPN4seal6MMProfELb0EE7_M_headERS3_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end365:
	.size	_ZNSt11_Tuple_implILm0EJPN4seal6MMProfESt14default_deleteIS1_EEE7_M_headERS5_, .Lfunc_end365-_ZNSt11_Tuple_implILm0EJPN4seal6MMProfESt14default_deleteIS1_EEE7_M_headERS5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt10_Head_baseILm0EPN4seal6MMProfELb0EE7_M_headERS3_,"axG",@progbits,_ZNSt10_Head_baseILm0EPN4seal6MMProfELb0EE7_M_headERS3_,comdat
	.weak	_ZNSt10_Head_baseILm0EPN4seal6MMProfELb0EE7_M_headERS3_ # -- Begin function _ZNSt10_Head_baseILm0EPN4seal6MMProfELb0EE7_M_headERS3_
	.p2align	4, 0x90
	.type	_ZNSt10_Head_baseILm0EPN4seal6MMProfELb0EE7_M_headERS3_,@function
_ZNSt10_Head_baseILm0EPN4seal6MMProfELb0EE7_M_headERS3_: # @_ZNSt10_Head_baseILm0EPN4seal6MMProfELb0EE7_M_headERS3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end366:
	.size	_ZNSt10_Head_baseILm0EPN4seal6MMProfELb0EE7_M_headERS3_, .Lfunc_end366-_ZNSt10_Head_baseILm0EPN4seal6MMProfELb0EE7_M_headERS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EE11get_deleterEv,"axG",@progbits,_ZNSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EE11get_deleterEv,comdat
	.weak	_ZNSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EE11get_deleterEv # -- Begin function _ZNSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EE11get_deleterEv
	.p2align	4, 0x90
	.type	_ZNSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EE11get_deleterEv,@function
_ZNSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EE11get_deleterEv: # @_ZNSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EE11get_deleterEv
.Lfunc_begin49:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception49
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
.Ltmp838:
	callq	_ZNSt15__uniq_ptr_implIN4seal6MMProfESt14default_deleteIS1_EE10_M_deleterEv
.Ltmp839:
	movq	%rax, -16(%rbp)                 # 8-byte Spill
	jmp	.LBB367_1
.LBB367_1:
	movq	-16(%rbp), %rax                 # 8-byte Reload
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB367_2:
	.cfi_def_cfa %rbp, 16
.Ltmp840:
	movq	%rax, %rdi
                                        # kill: def $eax killed $edx killed $rdx
	callq	__clang_call_terminate
.Lfunc_end367:
	.size	_ZNSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EE11get_deleterEv, .Lfunc_end367-_ZNSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EE11get_deleterEv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EE11get_deleterEv,"aG",@progbits,_ZNSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EE11get_deleterEv,comdat
	.p2align	2
GCC_except_table367:
.Lexception49:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase15-.Lttbaseref15
.Lttbaseref15:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end49-.Lcst_begin49
.Lcst_begin49:
	.uleb128 .Ltmp838-.Lfunc_begin49        # >> Call Site 1 <<
	.uleb128 .Ltmp839-.Ltmp838              #   Call between .Ltmp838 and .Ltmp839
	.uleb128 .Ltmp840-.Lfunc_begin49        #     jumps to .Ltmp840
	.byte	1                               #   On action: 1
.Lcst_end49:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase15:
	.p2align	2
                                        # -- End function
	.section	.text._ZNKSt14default_deleteIN4seal6MMProfEEclEPS1_,"axG",@progbits,_ZNKSt14default_deleteIN4seal6MMProfEEclEPS1_,comdat
	.weak	_ZNKSt14default_deleteIN4seal6MMProfEEclEPS1_ # -- Begin function _ZNKSt14default_deleteIN4seal6MMProfEEclEPS1_
	.p2align	4, 0x90
	.type	_ZNKSt14default_deleteIN4seal6MMProfEEclEPS1_,@function
_ZNKSt14default_deleteIN4seal6MMProfEEclEPS1_: # @_ZNKSt14default_deleteIN4seal6MMProfEEclEPS1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -24(%rbp)                 # 8-byte Spill
	cmpq	$0, %rax
	je	.LBB368_2
# %bb.1:
	movq	-24(%rbp), %rdi                 # 8-byte Reload
	movq	(%rdi), %rax
	callq	*8(%rax)
.LBB368_2:
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end368:
	.size	_ZNKSt14default_deleteIN4seal6MMProfEEclEPS1_, .Lfunc_end368-_ZNKSt14default_deleteIN4seal6MMProfEEclEPS1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4moveIRPN4seal6MMProfEEONSt16remove_referenceIT_E4typeEOS5_,"axG",@progbits,_ZSt4moveIRPN4seal6MMProfEEONSt16remove_referenceIT_E4typeEOS5_,comdat
	.weak	_ZSt4moveIRPN4seal6MMProfEEONSt16remove_referenceIT_E4typeEOS5_ # -- Begin function _ZSt4moveIRPN4seal6MMProfEEONSt16remove_referenceIT_E4typeEOS5_
	.p2align	4, 0x90
	.type	_ZSt4moveIRPN4seal6MMProfEEONSt16remove_referenceIT_E4typeEOS5_,@function
_ZSt4moveIRPN4seal6MMProfEEONSt16remove_referenceIT_E4typeEOS5_: # @_ZSt4moveIRPN4seal6MMProfEEONSt16remove_referenceIT_E4typeEOS5_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end369:
	.size	_ZSt4moveIRPN4seal6MMProfEEONSt16remove_referenceIT_E4typeEOS5_, .Lfunc_end369-_ZSt4moveIRPN4seal6MMProfEEONSt16remove_referenceIT_E4typeEOS5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt15__uniq_ptr_implIN4seal6MMProfESt14default_deleteIS1_EE10_M_deleterEv,"axG",@progbits,_ZNSt15__uniq_ptr_implIN4seal6MMProfESt14default_deleteIS1_EE10_M_deleterEv,comdat
	.weak	_ZNSt15__uniq_ptr_implIN4seal6MMProfESt14default_deleteIS1_EE10_M_deleterEv # -- Begin function _ZNSt15__uniq_ptr_implIN4seal6MMProfESt14default_deleteIS1_EE10_M_deleterEv
	.p2align	4, 0x90
	.type	_ZNSt15__uniq_ptr_implIN4seal6MMProfESt14default_deleteIS1_EE10_M_deleterEv,@function
_ZNSt15__uniq_ptr_implIN4seal6MMProfESt14default_deleteIS1_EE10_M_deleterEv: # @_ZNSt15__uniq_ptr_implIN4seal6MMProfESt14default_deleteIS1_EE10_M_deleterEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt3getILm1EJPN4seal6MMProfESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end370:
	.size	_ZNSt15__uniq_ptr_implIN4seal6MMProfESt14default_deleteIS1_EE10_M_deleterEv, .Lfunc_end370-_ZNSt15__uniq_ptr_implIN4seal6MMProfESt14default_deleteIS1_EE10_M_deleterEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt3getILm1EJPN4seal6MMProfESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_,"axG",@progbits,_ZSt3getILm1EJPN4seal6MMProfESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_,comdat
	.weak	_ZSt3getILm1EJPN4seal6MMProfESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_ # -- Begin function _ZSt3getILm1EJPN4seal6MMProfESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_
	.p2align	4, 0x90
	.type	_ZSt3getILm1EJPN4seal6MMProfESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_,@function
_ZSt3getILm1EJPN4seal6MMProfESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_: # @_ZSt3getILm1EJPN4seal6MMProfESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt12__get_helperILm1ESt14default_deleteIN4seal6MMProfEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end371:
	.size	_ZSt3getILm1EJPN4seal6MMProfESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_, .Lfunc_end371-_ZSt3getILm1EJPN4seal6MMProfESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__get_helperILm1ESt14default_deleteIN4seal6MMProfEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE,"axG",@progbits,_ZSt12__get_helperILm1ESt14default_deleteIN4seal6MMProfEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE,comdat
	.weak	_ZSt12__get_helperILm1ESt14default_deleteIN4seal6MMProfEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE # -- Begin function _ZSt12__get_helperILm1ESt14default_deleteIN4seal6MMProfEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE
	.p2align	4, 0x90
	.type	_ZSt12__get_helperILm1ESt14default_deleteIN4seal6MMProfEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE,@function
_ZSt12__get_helperILm1ESt14default_deleteIN4seal6MMProfEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE: # @_ZSt12__get_helperILm1ESt14default_deleteIN4seal6MMProfEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4seal6MMProfEEEE7_M_headERS4_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end372:
	.size	_ZSt12__get_helperILm1ESt14default_deleteIN4seal6MMProfEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE, .Lfunc_end372-_ZSt12__get_helperILm1ESt14default_deleteIN4seal6MMProfEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt11_Tuple_implILm1EJSt14default_deleteIN4seal6MMProfEEEE7_M_headERS4_,"axG",@progbits,_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4seal6MMProfEEEE7_M_headERS4_,comdat
	.weak	_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4seal6MMProfEEEE7_M_headERS4_ # -- Begin function _ZNSt11_Tuple_implILm1EJSt14default_deleteIN4seal6MMProfEEEE7_M_headERS4_
	.p2align	4, 0x90
	.type	_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4seal6MMProfEEEE7_M_headERS4_,@function
_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4seal6MMProfEEEE7_M_headERS4_: # @_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4seal6MMProfEEEE7_M_headERS4_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt10_Head_baseILm1ESt14default_deleteIN4seal6MMProfEELb1EE7_M_headERS4_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end373:
	.size	_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4seal6MMProfEEEE7_M_headERS4_, .Lfunc_end373-_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4seal6MMProfEEEE7_M_headERS4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt10_Head_baseILm1ESt14default_deleteIN4seal6MMProfEELb1EE7_M_headERS4_,"axG",@progbits,_ZNSt10_Head_baseILm1ESt14default_deleteIN4seal6MMProfEELb1EE7_M_headERS4_,comdat
	.weak	_ZNSt10_Head_baseILm1ESt14default_deleteIN4seal6MMProfEELb1EE7_M_headERS4_ # -- Begin function _ZNSt10_Head_baseILm1ESt14default_deleteIN4seal6MMProfEELb1EE7_M_headERS4_
	.p2align	4, 0x90
	.type	_ZNSt10_Head_baseILm1ESt14default_deleteIN4seal6MMProfEELb1EE7_M_headERS4_,@function
_ZNSt10_Head_baseILm1ESt14default_deleteIN4seal6MMProfEELb1EE7_M_headERS4_: # @_ZNSt10_Head_baseILm1ESt14default_deleteIN4seal6MMProfEELb1EE7_M_headERS4_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end374:
	.size	_ZNSt10_Head_baseILm1ESt14default_deleteIN4seal6MMProfEELb1EE7_M_headERS4_, .Lfunc_end374-_ZNSt10_Head_baseILm1ESt14default_deleteIN4seal6MMProfEELb1EE7_M_headERS4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EE3getEv,"axG",@progbits,_ZNKSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EE3getEv,comdat
	.weak	_ZNKSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EE3getEv # -- Begin function _ZNKSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EE3getEv
	.p2align	4, 0x90
	.type	_ZNKSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EE3getEv,@function
_ZNKSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EE3getEv: # @_ZNKSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EE3getEv
.Lfunc_begin50:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception50
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
.Ltmp841:
	callq	_ZNKSt15__uniq_ptr_implIN4seal6MMProfESt14default_deleteIS1_EE6_M_ptrEv
.Ltmp842:
	movq	%rax, -16(%rbp)                 # 8-byte Spill
	jmp	.LBB375_1
.LBB375_1:
	movq	-16(%rbp), %rax                 # 8-byte Reload
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB375_2:
	.cfi_def_cfa %rbp, 16
.Ltmp843:
	movq	%rax, %rdi
                                        # kill: def $eax killed $edx killed $rdx
	callq	__clang_call_terminate
.Lfunc_end375:
	.size	_ZNKSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EE3getEv, .Lfunc_end375-_ZNKSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EE3getEv
	.cfi_endproc
	.section	.gcc_except_table._ZNKSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EE3getEv,"aG",@progbits,_ZNKSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EE3getEv,comdat
	.p2align	2
GCC_except_table375:
.Lexception50:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase16-.Lttbaseref16
.Lttbaseref16:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end50-.Lcst_begin50
.Lcst_begin50:
	.uleb128 .Ltmp841-.Lfunc_begin50        # >> Call Site 1 <<
	.uleb128 .Ltmp842-.Ltmp841              #   Call between .Ltmp841 and .Ltmp842
	.uleb128 .Ltmp843-.Lfunc_begin50        #     jumps to .Ltmp843
	.byte	1                               #   On action: 1
.Lcst_end50:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase16:
	.p2align	2
                                        # -- End function
	.section	.text._ZNKSt15__uniq_ptr_implIN4seal6MMProfESt14default_deleteIS1_EE6_M_ptrEv,"axG",@progbits,_ZNKSt15__uniq_ptr_implIN4seal6MMProfESt14default_deleteIS1_EE6_M_ptrEv,comdat
	.weak	_ZNKSt15__uniq_ptr_implIN4seal6MMProfESt14default_deleteIS1_EE6_M_ptrEv # -- Begin function _ZNKSt15__uniq_ptr_implIN4seal6MMProfESt14default_deleteIS1_EE6_M_ptrEv
	.p2align	4, 0x90
	.type	_ZNKSt15__uniq_ptr_implIN4seal6MMProfESt14default_deleteIS1_EE6_M_ptrEv,@function
_ZNKSt15__uniq_ptr_implIN4seal6MMProfESt14default_deleteIS1_EE6_M_ptrEv: # @_ZNKSt15__uniq_ptr_implIN4seal6MMProfESt14default_deleteIS1_EE6_M_ptrEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt3getILm0EJPN4seal6MMProfESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_
	movq	(%rax), %rax
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end376:
	.size	_ZNKSt15__uniq_ptr_implIN4seal6MMProfESt14default_deleteIS1_EE6_M_ptrEv, .Lfunc_end376-_ZNKSt15__uniq_ptr_implIN4seal6MMProfESt14default_deleteIS1_EE6_M_ptrEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt3getILm0EJPN4seal6MMProfESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_,"axG",@progbits,_ZSt3getILm0EJPN4seal6MMProfESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_,comdat
	.weak	_ZSt3getILm0EJPN4seal6MMProfESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_ # -- Begin function _ZSt3getILm0EJPN4seal6MMProfESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_
	.p2align	4, 0x90
	.type	_ZSt3getILm0EJPN4seal6MMProfESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_,@function
_ZSt3getILm0EJPN4seal6MMProfESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_: # @_ZSt3getILm0EJPN4seal6MMProfESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt12__get_helperILm0EPN4seal6MMProfEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end377:
	.size	_ZSt3getILm0EJPN4seal6MMProfESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_, .Lfunc_end377-_ZSt3getILm0EJPN4seal6MMProfESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__get_helperILm0EPN4seal6MMProfEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE,"axG",@progbits,_ZSt12__get_helperILm0EPN4seal6MMProfEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE,comdat
	.weak	_ZSt12__get_helperILm0EPN4seal6MMProfEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE # -- Begin function _ZSt12__get_helperILm0EPN4seal6MMProfEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE
	.p2align	4, 0x90
	.type	_ZSt12__get_helperILm0EPN4seal6MMProfEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE,@function
_ZSt12__get_helperILm0EPN4seal6MMProfEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE: # @_ZSt12__get_helperILm0EPN4seal6MMProfEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt11_Tuple_implILm0EJPN4seal6MMProfESt14default_deleteIS1_EEE7_M_headERKS5_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end378:
	.size	_ZSt12__get_helperILm0EPN4seal6MMProfEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE, .Lfunc_end378-_ZSt12__get_helperILm0EPN4seal6MMProfEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt11_Tuple_implILm0EJPN4seal6MMProfESt14default_deleteIS1_EEE7_M_headERKS5_,"axG",@progbits,_ZNSt11_Tuple_implILm0EJPN4seal6MMProfESt14default_deleteIS1_EEE7_M_headERKS5_,comdat
	.weak	_ZNSt11_Tuple_implILm0EJPN4seal6MMProfESt14default_deleteIS1_EEE7_M_headERKS5_ # -- Begin function _ZNSt11_Tuple_implILm0EJPN4seal6MMProfESt14default_deleteIS1_EEE7_M_headERKS5_
	.p2align	4, 0x90
	.type	_ZNSt11_Tuple_implILm0EJPN4seal6MMProfESt14default_deleteIS1_EEE7_M_headERKS5_,@function
_ZNSt11_Tuple_implILm0EJPN4seal6MMProfESt14default_deleteIS1_EEE7_M_headERKS5_: # @_ZNSt11_Tuple_implILm0EJPN4seal6MMProfESt14default_deleteIS1_EEE7_M_headERKS5_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt10_Head_baseILm0EPN4seal6MMProfELb0EE7_M_headERKS3_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end379:
	.size	_ZNSt11_Tuple_implILm0EJPN4seal6MMProfESt14default_deleteIS1_EEE7_M_headERKS5_, .Lfunc_end379-_ZNSt11_Tuple_implILm0EJPN4seal6MMProfESt14default_deleteIS1_EEE7_M_headERKS5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt10_Head_baseILm0EPN4seal6MMProfELb0EE7_M_headERKS3_,"axG",@progbits,_ZNSt10_Head_baseILm0EPN4seal6MMProfELb0EE7_M_headERKS3_,comdat
	.weak	_ZNSt10_Head_baseILm0EPN4seal6MMProfELb0EE7_M_headERKS3_ # -- Begin function _ZNSt10_Head_baseILm0EPN4seal6MMProfELb0EE7_M_headERKS3_
	.p2align	4, 0x90
	.type	_ZNSt10_Head_baseILm0EPN4seal6MMProfELb0EE7_M_headERKS3_,@function
_ZNSt10_Head_baseILm0EPN4seal6MMProfELb0EE7_M_headERKS3_: # @_ZNSt10_Head_baseILm0EPN4seal6MMProfELb0EE7_M_headERKS3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end380:
	.size	_ZNSt10_Head_baseILm0EPN4seal6MMProfELb0EE7_M_headERKS3_, .Lfunc_end380-_ZNSt10_Head_baseILm0EPN4seal6MMProfELb0EE7_M_headERKS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal8DynArrayImEaSERKS1_,"axG",@progbits,_ZN4seal8DynArrayImEaSERKS1_,comdat
	.weak	_ZN4seal8DynArrayImEaSERKS1_    # -- Begin function _ZN4seal8DynArrayImEaSERKS1_
	.p2align	4, 0x90
	.type	_ZN4seal8DynArrayImEaSERKS1_,@function
_ZN4seal8DynArrayImEaSERKS1_:           # @_ZN4seal8DynArrayImEaSERKS1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	cmpq	-24(%rbp), %rax
	jne	.LBB381_2
# %bb.1:
	movq	-32(%rbp), %rax                 # 8-byte Reload
	movq	%rax, -8(%rbp)
	jmp	.LBB381_3
.LBB381_2:
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	movq	-24(%rbp), %rax
	movq	24(%rax), %rsi
	movl	$1, %edx
	callq	_ZN4seal8DynArrayImE6resizeEmb
	movq	-24(%rbp), %rdi
	callq	_ZNK4seal8DynArrayImE6cbeginEv
	movq	%rax, -48(%rbp)                 # 8-byte Spill
	movq	-24(%rbp), %rdi
	callq	_ZNK4seal8DynArrayImE4cendEv
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, -40(%rbp)                 # 8-byte Spill
	callq	_ZN4seal8DynArrayImE5beginEv
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	movq	-40(%rbp), %rsi                 # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt4copyIPKmPmET0_T_S4_S3_
                                        # kill: def $rcx killed $rax
	movq	-32(%rbp), %rax                 # 8-byte Reload
	movq	%rax, -8(%rbp)
.LBB381_3:
	movq	-8(%rbp), %rax
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end381:
	.size	_ZN4seal8DynArrayImEaSERKS1_, .Lfunc_end381-_ZN4seal8DynArrayImEaSERKS1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal8DynArrayImE6resizeEmb,"axG",@progbits,_ZN4seal8DynArrayImE6resizeEmb,comdat
	.weak	_ZN4seal8DynArrayImE6resizeEmb  # -- Begin function _ZN4seal8DynArrayImE6resizeEmb
	.p2align	4, 0x90
	.type	_ZN4seal8DynArrayImE6resizeEmb,@function
_ZN4seal8DynArrayImE6resizeEmb:         # @_ZN4seal8DynArrayImE6resizeEmb
.Lfunc_begin51:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception51
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$160, %rsp
	movb	%dl, %al
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	andb	$1, %al
	movb	%al, -17(%rbp)
	movq	-8(%rbp), %rcx
	movq	%rcx, -96(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rax
	cmpq	16(%rcx), %rax
	ja	.LBB382_5
# %bb.1:
	movq	-96(%rbp), %rcx                 # 8-byte Reload
	movq	-16(%rbp), %rax
	cmpq	24(%rcx), %rax
	jbe	.LBB382_4
# %bb.2:
	testb	$1, -17(%rbp)
	je	.LBB382_4
# %bb.3:
	movq	-96(%rbp), %rdi                 # 8-byte Reload
	callq	_ZN4seal8DynArrayImE3endEv
	movq	-96(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, -104(%rbp)                # 8-byte Spill
	callq	_ZN4seal8DynArrayImE5beginEv
	movq	-104(%rbp), %rdi                # 8-byte Reload
	movq	%rax, %rsi
	movq	-16(%rbp), %rax
	shlq	$3, %rax
	addq	%rax, %rsi
	movq	$0, -32(%rbp)
	leaq	-32(%rbp), %rdx
	callq	_ZSt4fillIPmmEvT_S1_RKT0_
.LBB382_4:
	movq	-96(%rbp), %rax                 # 8-byte Reload
	movq	-16(%rbp), %rcx
	movq	%rcx, 24(%rax)
	jmp	.LBB382_11
.LBB382_5:
	movq	-96(%rbp), %rdi                 # 8-byte Reload
	movq	-16(%rbp), %rax
	movq	%rax, -136(%rbp)                # 8-byte Spill
	callq	_ZNK4seal16MemoryPoolHandlecvRNS_4util10MemoryPoolEEv
	movq	-136(%rbp), %rsi                # 8-byte Reload
	movq	%rax, %rdx
	leaq	-64(%rbp), %rdi
	movq	%rdi, -128(%rbp)                # 8-byte Spill
	callq	_ZN4seal4util8allocateImJEvEEDamRNS0_10MemoryPoolEDpOT0_
	movq	-96(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNK4seal8DynArrayImE6cbeginEv
	movq	-96(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, -120(%rbp)                # 8-byte Spill
	callq	_ZNK4seal8DynArrayImE4cendEv
	movq	-128(%rbp), %rdi                # 8-byte Reload
	movq	%rax, -112(%rbp)                # 8-byte Spill
	callq	_ZNK4seal4util7PointerImvE3getEv
	movq	-120(%rbp), %rdi                # 8-byte Reload
	movq	-112(%rbp), %rsi                # 8-byte Reload
	movq	%rax, %rdx
.Ltmp844:
	callq	_ZSt4copyIPKmPmET0_T_S4_S3_
.Ltmp845:
	jmp	.LBB382_6
.LBB382_6:
	testb	$1, -17(%rbp)
	je	.LBB382_10
# %bb.7:
	leaq	-64(%rbp), %rdi
	movq	%rdi, -152(%rbp)                # 8-byte Spill
	callq	_ZNK4seal4util7PointerImvE3getEv
	movq	-96(%rbp), %rcx                 # 8-byte Reload
	movq	-152(%rbp), %rdi                # 8-byte Reload
	movq	24(%rcx), %rcx
	leaq	(%rax,%rcx,8), %rax
	movq	%rax, -144(%rbp)                # 8-byte Spill
	callq	_ZNK4seal4util7PointerImvE3getEv
	movq	-144(%rbp), %rdi                # 8-byte Reload
	movq	-16(%rbp), %rcx
	leaq	(%rax,%rcx,8), %rsi
	movq	$0, -88(%rbp)
.Ltmp846:
	leaq	-88(%rbp), %rdx
	callq	_ZSt4fillIPmmEvT_S1_RKT0_
.Ltmp847:
	jmp	.LBB382_8
.LBB382_8:
	jmp	.LBB382_10
.LBB382_9:
.Ltmp848:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -72(%rbp)
	movl	%eax, -76(%rbp)
	leaq	-64(%rbp), %rdi
	callq	_ZN4seal4util7PointerImvED2Ev
	jmp	.LBB382_12
.LBB382_10:
	movq	-96(%rbp), %rdi                 # 8-byte Reload
	addq	$32, %rdi
	leaq	-64(%rbp), %rsi
	callq	_ZSt4swapIN4seal4util7PointerImvEEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS7_ESt18is_move_assignableIS7_EEE5valueEvE4typeERS7_SG_
	movq	-96(%rbp), %rax                 # 8-byte Reload
	movq	-16(%rbp), %rcx
	movq	%rcx, 16(%rax)
	movq	-16(%rbp), %rcx
	movq	%rcx, 24(%rax)
	leaq	-64(%rbp), %rdi
	callq	_ZN4seal4util7PointerImvED2Ev
.LBB382_11:
	addq	$160, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB382_12:
	.cfi_def_cfa %rbp, 16
	movq	-72(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end382:
	.size	_ZN4seal8DynArrayImE6resizeEmb, .Lfunc_end382-_ZN4seal8DynArrayImE6resizeEmb
	.cfi_endproc
	.section	.gcc_except_table._ZN4seal8DynArrayImE6resizeEmb,"aG",@progbits,_ZN4seal8DynArrayImE6resizeEmb,comdat
	.p2align	2
GCC_except_table382:
.Lexception51:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end51-.Lcst_begin51
.Lcst_begin51:
	.uleb128 .Lfunc_begin51-.Lfunc_begin51  # >> Call Site 1 <<
	.uleb128 .Ltmp844-.Lfunc_begin51        #   Call between .Lfunc_begin51 and .Ltmp844
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp844-.Lfunc_begin51        # >> Call Site 2 <<
	.uleb128 .Ltmp847-.Ltmp844              #   Call between .Ltmp844 and .Ltmp847
	.uleb128 .Ltmp848-.Lfunc_begin51        #     jumps to .Ltmp848
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp847-.Lfunc_begin51        # >> Call Site 3 <<
	.uleb128 .Lfunc_end382-.Ltmp847         #   Call between .Ltmp847 and .Lfunc_end382
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end51:
	.p2align	2
                                        # -- End function
	.section	.text._ZSt4copyIPKmPmET0_T_S4_S3_,"axG",@progbits,_ZSt4copyIPKmPmET0_T_S4_S3_,comdat
	.weak	_ZSt4copyIPKmPmET0_T_S4_S3_     # -- Begin function _ZSt4copyIPKmPmET0_T_S4_S3_
	.p2align	4, 0x90
	.type	_ZSt4copyIPKmPmET0_T_S4_S3_,@function
_ZSt4copyIPKmPmET0_T_S4_S3_:            # @_ZSt4copyIPKmPmET0_T_S4_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt12__miter_baseIPKmET_S2_
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	callq	_ZSt12__miter_baseIPKmET_S2_
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rsi
	movq	-24(%rbp), %rdx
	callq	_ZSt13__copy_move_aILb0EPKmPmET1_T0_S4_S3_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end383:
	.size	_ZSt4copyIPKmPmET0_T_S4_S3_, .Lfunc_end383-_ZSt4copyIPKmPmET0_T_S4_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK4seal8DynArrayImE6cbeginEv,"axG",@progbits,_ZNK4seal8DynArrayImE6cbeginEv,comdat
	.weak	_ZNK4seal8DynArrayImE6cbeginEv  # -- Begin function _ZNK4seal8DynArrayImE6cbeginEv
	.p2align	4, 0x90
	.type	_ZNK4seal8DynArrayImE6cbeginEv,@function
_ZNK4seal8DynArrayImE6cbeginEv:         # @_ZNK4seal8DynArrayImE6cbeginEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	addq	$32, %rdi
	callq	_ZNK4seal4util7PointerImvE3getEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end384:
	.size	_ZNK4seal8DynArrayImE6cbeginEv, .Lfunc_end384-_ZNK4seal8DynArrayImE6cbeginEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK4seal8DynArrayImE4cendEv,"axG",@progbits,_ZNK4seal8DynArrayImE4cendEv,comdat
	.weak	_ZNK4seal8DynArrayImE4cendEv    # -- Begin function _ZNK4seal8DynArrayImE4cendEv
	.p2align	4, 0x90
	.type	_ZNK4seal8DynArrayImE4cendEv,@function
_ZNK4seal8DynArrayImE4cendEv:           # @_ZNK4seal8DynArrayImE4cendEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -16(%rbp)                 # 8-byte Spill
	callq	_ZNK4seal8DynArrayImE6cbeginEv
	movq	-16(%rbp), %rcx                 # 8-byte Reload
	movq	24(%rcx), %rcx
	shlq	$3, %rcx
	addq	%rcx, %rax
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end385:
	.size	_ZNK4seal8DynArrayImE4cendEv, .Lfunc_end385-_ZNK4seal8DynArrayImE4cendEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal8DynArrayImE5beginEv,"axG",@progbits,_ZN4seal8DynArrayImE5beginEv,comdat
	.weak	_ZN4seal8DynArrayImE5beginEv    # -- Begin function _ZN4seal8DynArrayImE5beginEv
	.p2align	4, 0x90
	.type	_ZN4seal8DynArrayImE5beginEv,@function
_ZN4seal8DynArrayImE5beginEv:           # @_ZN4seal8DynArrayImE5beginEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	addq	$32, %rdi
	callq	_ZNK4seal4util7PointerImvE3getEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end386:
	.size	_ZN4seal8DynArrayImE5beginEv, .Lfunc_end386-_ZN4seal8DynArrayImE5beginEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4fillIPmmEvT_S1_RKT0_,"axG",@progbits,_ZSt4fillIPmmEvT_S1_RKT0_,comdat
	.weak	_ZSt4fillIPmmEvT_S1_RKT0_       # -- Begin function _ZSt4fillIPmmEvT_S1_RKT0_
	.p2align	4, 0x90
	.type	_ZSt4fillIPmmEvT_S1_RKT0_,@function
_ZSt4fillIPmmEvT_S1_RKT0_:              # @_ZSt4fillIPmmEvT_S1_RKT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZSt8__fill_aIPmmEvT_S1_RKT0_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end387:
	.size	_ZSt4fillIPmmEvT_S1_RKT0_, .Lfunc_end387-_ZSt4fillIPmmEvT_S1_RKT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal8DynArrayImE3endEv,"axG",@progbits,_ZN4seal8DynArrayImE3endEv,comdat
	.weak	_ZN4seal8DynArrayImE3endEv      # -- Begin function _ZN4seal8DynArrayImE3endEv
	.p2align	4, 0x90
	.type	_ZN4seal8DynArrayImE3endEv,@function
_ZN4seal8DynArrayImE3endEv:             # @_ZN4seal8DynArrayImE3endEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -16(%rbp)                 # 8-byte Spill
	callq	_ZN4seal8DynArrayImE5beginEv
	movq	-16(%rbp), %rcx                 # 8-byte Reload
	movq	24(%rcx), %rcx
	shlq	$3, %rcx
	addq	%rcx, %rax
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end388:
	.size	_ZN4seal8DynArrayImE3endEv, .Lfunc_end388-_ZN4seal8DynArrayImE3endEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal4util8allocateImJEvEEDamRNS0_10MemoryPoolEDpOT0_,"axG",@progbits,_ZN4seal4util8allocateImJEvEEDamRNS0_10MemoryPoolEDpOT0_,comdat
	.weak	_ZN4seal4util8allocateImJEvEEDamRNS0_10MemoryPoolEDpOT0_ # -- Begin function _ZN4seal4util8allocateImJEvEEDamRNS0_10MemoryPoolEDpOT0_
	.p2align	4, 0x90
	.type	_ZN4seal4util8allocateImJEvEEDamRNS0_10MemoryPoolEDpOT0_,@function
_ZN4seal4util8allocateImJEvEEDamRNS0_10MemoryPoolEDpOT0_: # @_ZN4seal4util8allocateImJEvEEDamRNS0_10MemoryPoolEDpOT0_
.Lfunc_begin52:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception52
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$112, %rsp
	movq	%rdi, -88(%rbp)                 # 8-byte Spill
	movq	%rdi, %rax
	movq	%rax, -104(%rbp)                # 8-byte Spill
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -96(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	movl	$8, %esi
	callq	_ZN4seal4util8mul_safeImvEET_S2_S2_
	movq	-96(%rbp), %rsi                 # 8-byte Reload
	movq	%rax, %rdx
	movq	(%rsi), %rax
	movq	16(%rax), %rax
	leaq	-56(%rbp), %rdi
	movq	%rdi, -80(%rbp)                 # 8-byte Spill
	callq	*%rax
	movq	-88(%rbp), %rdi                 # 8-byte Reload
	movq	-80(%rbp), %rsi                 # 8-byte Reload
.Ltmp849:
	callq	_ZN4seal4util7PointerImvEC2EONS1_ISt4bytevEE
.Ltmp850:
	jmp	.LBB389_1
.LBB389_1:
	leaq	-56(%rbp), %rdi
	callq	_ZN4seal4util7PointerISt4bytevED2Ev
	movq	-104(%rbp), %rax                # 8-byte Reload
	addq	$112, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB389_2:
	.cfi_def_cfa %rbp, 16
.Ltmp851:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -64(%rbp)
	movl	%eax, -68(%rbp)
	leaq	-56(%rbp), %rdi
	callq	_ZN4seal4util7PointerISt4bytevED2Ev
# %bb.3:
	movq	-64(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end389:
	.size	_ZN4seal4util8allocateImJEvEEDamRNS0_10MemoryPoolEDpOT0_, .Lfunc_end389-_ZN4seal4util8allocateImJEvEEDamRNS0_10MemoryPoolEDpOT0_
	.cfi_endproc
	.section	.gcc_except_table._ZN4seal4util8allocateImJEvEEDamRNS0_10MemoryPoolEDpOT0_,"aG",@progbits,_ZN4seal4util8allocateImJEvEEDamRNS0_10MemoryPoolEDpOT0_,comdat
	.p2align	2
GCC_except_table389:
.Lexception52:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end52-.Lcst_begin52
.Lcst_begin52:
	.uleb128 .Lfunc_begin52-.Lfunc_begin52  # >> Call Site 1 <<
	.uleb128 .Ltmp849-.Lfunc_begin52        #   Call between .Lfunc_begin52 and .Ltmp849
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp849-.Lfunc_begin52        # >> Call Site 2 <<
	.uleb128 .Ltmp850-.Ltmp849              #   Call between .Ltmp849 and .Ltmp850
	.uleb128 .Ltmp851-.Lfunc_begin52        #     jumps to .Ltmp851
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp850-.Lfunc_begin52        # >> Call Site 3 <<
	.uleb128 .Lfunc_end389-.Ltmp850         #   Call between .Ltmp850 and .Lfunc_end389
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end52:
	.p2align	2
                                        # -- End function
	.section	.text._ZNK4seal16MemoryPoolHandlecvRNS_4util10MemoryPoolEEv,"axG",@progbits,_ZNK4seal16MemoryPoolHandlecvRNS_4util10MemoryPoolEEv,comdat
	.weak	_ZNK4seal16MemoryPoolHandlecvRNS_4util10MemoryPoolEEv # -- Begin function _ZNK4seal16MemoryPoolHandlecvRNS_4util10MemoryPoolEEv
	.p2align	4, 0x90
	.type	_ZNK4seal16MemoryPoolHandlecvRNS_4util10MemoryPoolEEv,@function
_ZNK4seal16MemoryPoolHandlecvRNS_4util10MemoryPoolEEv: # @_ZNK4seal16MemoryPoolHandlecvRNS_4util10MemoryPoolEEv
.Lfunc_begin53:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception53
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -32(%rbp)                 # 8-byte Spill
	callq	_ZNKSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEcvbEv
	testb	$1, %al
	jne	.LBB390_4
# %bb.1:
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rdi
	movq	%rdi, %rax
	movq	%rax, -40(%rbp)                 # 8-byte Spill
.Ltmp852:
	leaq	.L.str.59(%rip), %rsi
	callq	_ZNSt11logic_errorC1EPKc@PLT
.Ltmp853:
	jmp	.LBB390_2
.LBB390_2:
	movq	-40(%rbp), %rdi                 # 8-byte Reload
	movq	_ZTISt11logic_error@GOTPCREL(%rip), %rsi
	movq	_ZNSt11logic_errorD1Ev@GOTPCREL(%rip), %rdx
	callq	__cxa_throw@PLT
.LBB390_3:
.Ltmp854:
	movq	-40(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -16(%rbp)
	movl	%eax, -20(%rbp)
	callq	__cxa_free_exception@PLT
	jmp	.LBB390_5
.LBB390_4:
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNKSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EE3getEv
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB390_5:
	.cfi_def_cfa %rbp, 16
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end390:
	.size	_ZNK4seal16MemoryPoolHandlecvRNS_4util10MemoryPoolEEv, .Lfunc_end390-_ZNK4seal16MemoryPoolHandlecvRNS_4util10MemoryPoolEEv
	.cfi_endproc
	.section	.gcc_except_table._ZNK4seal16MemoryPoolHandlecvRNS_4util10MemoryPoolEEv,"aG",@progbits,_ZNK4seal16MemoryPoolHandlecvRNS_4util10MemoryPoolEEv,comdat
	.p2align	2
GCC_except_table390:
.Lexception53:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end53-.Lcst_begin53
.Lcst_begin53:
	.uleb128 .Lfunc_begin53-.Lfunc_begin53  # >> Call Site 1 <<
	.uleb128 .Ltmp852-.Lfunc_begin53        #   Call between .Lfunc_begin53 and .Ltmp852
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp852-.Lfunc_begin53        # >> Call Site 2 <<
	.uleb128 .Ltmp853-.Ltmp852              #   Call between .Ltmp852 and .Ltmp853
	.uleb128 .Ltmp854-.Lfunc_begin53        #     jumps to .Ltmp854
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp853-.Lfunc_begin53        # >> Call Site 3 <<
	.uleb128 .Lfunc_end390-.Ltmp853         #   Call between .Ltmp853 and .Lfunc_end390
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end53:
	.p2align	2
                                        # -- End function
	.section	.text._ZNK4seal4util7PointerImvE3getEv,"axG",@progbits,_ZNK4seal4util7PointerImvE3getEv,comdat
	.weak	_ZNK4seal4util7PointerImvE3getEv # -- Begin function _ZNK4seal4util7PointerImvE3getEv
	.p2align	4, 0x90
	.type	_ZNK4seal4util7PointerImvE3getEv,@function
_ZNK4seal4util7PointerImvE3getEv:       # @_ZNK4seal4util7PointerImvE3getEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end391:
	.size	_ZNK4seal4util7PointerImvE3getEv, .Lfunc_end391-_ZNK4seal4util7PointerImvE3getEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4swapIN4seal4util7PointerImvEEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS7_ESt18is_move_assignableIS7_EEE5valueEvE4typeERS7_SG_,"axG",@progbits,_ZSt4swapIN4seal4util7PointerImvEEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS7_ESt18is_move_assignableIS7_EEE5valueEvE4typeERS7_SG_,comdat
	.weak	_ZSt4swapIN4seal4util7PointerImvEEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS7_ESt18is_move_assignableIS7_EEE5valueEvE4typeERS7_SG_ # -- Begin function _ZSt4swapIN4seal4util7PointerImvEEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS7_ESt18is_move_assignableIS7_EEE5valueEvE4typeERS7_SG_
	.p2align	4, 0x90
	.type	_ZSt4swapIN4seal4util7PointerImvEEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS7_ESt18is_move_assignableIS7_EEE5valueEvE4typeERS7_SG_,@function
_ZSt4swapIN4seal4util7PointerImvEEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS7_ESt18is_move_assignableIS7_EEE5valueEvE4typeERS7_SG_: # @_ZSt4swapIN4seal4util7PointerImvEEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS7_ESt18is_move_assignableIS7_EEE5valueEvE4typeERS7_SG_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt4moveIRN4seal4util7PointerImvEEEONSt16remove_referenceIT_E4typeEOS6_
	movq	%rax, %rsi
	leaq	-48(%rbp), %rdi
	callq	_ZN4seal4util7PointerImvEC2EOS2_
	movq	-16(%rbp), %rdi
	callq	_ZSt4moveIRN4seal4util7PointerImvEEEONSt16remove_referenceIT_E4typeEOS6_
	movq	%rax, %rsi
	movq	-8(%rbp), %rdi
	callq	_ZN4seal4util7PointerImvEaSEOS2_
	leaq	-48(%rbp), %rdi
	callq	_ZSt4moveIRN4seal4util7PointerImvEEEONSt16remove_referenceIT_E4typeEOS6_
	movq	%rax, %rsi
	movq	-16(%rbp), %rdi
	callq	_ZN4seal4util7PointerImvEaSEOS2_
	leaq	-48(%rbp), %rdi
	callq	_ZN4seal4util7PointerImvED2Ev
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end392:
	.size	_ZSt4swapIN4seal4util7PointerImvEEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS7_ESt18is_move_assignableIS7_EEE5valueEvE4typeERS7_SG_, .Lfunc_end392-_ZSt4swapIN4seal4util7PointerImvEEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS7_ESt18is_move_assignableIS7_EEE5valueEvE4typeERS7_SG_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal4util7PointerImvED2Ev,"axG",@progbits,_ZN4seal4util7PointerImvED2Ev,comdat
	.weak	_ZN4seal4util7PointerImvED2Ev   # -- Begin function _ZN4seal4util7PointerImvED2Ev
	.p2align	4, 0x90
	.type	_ZN4seal4util7PointerImvED2Ev,@function
_ZN4seal4util7PointerImvED2Ev:          # @_ZN4seal4util7PointerImvED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN4seal4util7PointerImvE7releaseEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end393:
	.size	_ZN4seal4util7PointerImvED2Ev, .Lfunc_end393-_ZN4seal4util7PointerImvED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt8__fill_aIPmmEvT_S1_RKT0_,"axG",@progbits,_ZSt8__fill_aIPmmEvT_S1_RKT0_,comdat
	.weak	_ZSt8__fill_aIPmmEvT_S1_RKT0_   # -- Begin function _ZSt8__fill_aIPmmEvT_S1_RKT0_
	.p2align	4, 0x90
	.type	_ZSt8__fill_aIPmmEvT_S1_RKT0_,@function
_ZSt8__fill_aIPmmEvT_S1_RKT0_:          # @_ZSt8__fill_aIPmmEvT_S1_RKT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZSt9__fill_a1IPmmEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end394:
	.size	_ZSt8__fill_aIPmmEvT_S1_RKT0_, .Lfunc_end394-_ZSt8__fill_aIPmmEvT_S1_RKT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt9__fill_a1IPmmEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_,"axG",@progbits,_ZSt9__fill_a1IPmmEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_,comdat
	.weak	_ZSt9__fill_a1IPmmEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_ # -- Begin function _ZSt9__fill_a1IPmmEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_
	.p2align	4, 0x90
	.type	_ZSt9__fill_a1IPmmEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_,@function
_ZSt9__fill_a1IPmmEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_: # @_ZSt9__fill_a1IPmmEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, -32(%rbp)
.LBB395_1:                              # =>This Inner Loop Header: Depth=1
	movq	-8(%rbp), %rax
	cmpq	-16(%rbp), %rax
	je	.LBB395_4
# %bb.2:                                #   in Loop: Header=BB395_1 Depth=1
	movq	-32(%rbp), %rcx
	movq	-8(%rbp), %rax
	movq	%rcx, (%rax)
# %bb.3:                                #   in Loop: Header=BB395_1 Depth=1
	movq	-8(%rbp), %rax
	addq	$8, %rax
	movq	%rax, -8(%rbp)
	jmp	.LBB395_1
.LBB395_4:
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end395:
	.size	_ZSt9__fill_a1IPmmEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_, .Lfunc_end395-_ZSt9__fill_a1IPmmEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal4util8mul_safeImvEET_S2_S2_,"axG",@progbits,_ZN4seal4util8mul_safeImvEET_S2_S2_,comdat
	.weak	_ZN4seal4util8mul_safeImvEET_S2_S2_ # -- Begin function _ZN4seal4util8mul_safeImvEET_S2_S2_
	.p2align	4, 0x90
	.type	_ZN4seal4util8mul_safeImvEET_S2_S2_,@function
_ZN4seal4util8mul_safeImvEET_S2_S2_:    # @_ZN4seal4util8mul_safeImvEET_S2_S2_
.Lfunc_begin54:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception54
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	cmpq	$0, -8(%rbp)
	je	.LBB396_5
# %bb.1:
	movq	-16(%rbp), %rax
	movq	%rax, -40(%rbp)                 # 8-byte Spill
	callq	_ZNSt14numeric_limitsImE3maxEv
	xorl	%ecx, %ecx
	movl	%ecx, %edx
	divq	-8(%rbp)
	movq	%rax, %rcx
	movq	-40(%rbp), %rax                 # 8-byte Reload
	cmpq	%rcx, %rax
	jbe	.LBB396_5
# %bb.2:
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rdi
	movq	%rdi, %rax
	movq	%rax, -48(%rbp)                 # 8-byte Spill
.Ltmp855:
	leaq	.L.str.57(%rip), %rsi
	callq	_ZNSt11logic_errorC1EPKc@PLT
.Ltmp856:
	jmp	.LBB396_3
.LBB396_3:
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	movq	_ZTISt11logic_error@GOTPCREL(%rip), %rsi
	movq	_ZNSt11logic_errorD1Ev@GOTPCREL(%rip), %rdx
	callq	__cxa_throw@PLT
.LBB396_4:
.Ltmp857:
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -24(%rbp)
	movl	%eax, -28(%rbp)
	callq	__cxa_free_exception@PLT
	jmp	.LBB396_6
.LBB396_5:
	movq	-8(%rbp), %rax
	imulq	-16(%rbp), %rax
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB396_6:
	.cfi_def_cfa %rbp, 16
	movq	-24(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end396:
	.size	_ZN4seal4util8mul_safeImvEET_S2_S2_, .Lfunc_end396-_ZN4seal4util8mul_safeImvEET_S2_S2_
	.cfi_endproc
	.section	.gcc_except_table._ZN4seal4util8mul_safeImvEET_S2_S2_,"aG",@progbits,_ZN4seal4util8mul_safeImvEET_S2_S2_,comdat
	.p2align	2
GCC_except_table396:
.Lexception54:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end54-.Lcst_begin54
.Lcst_begin54:
	.uleb128 .Lfunc_begin54-.Lfunc_begin54  # >> Call Site 1 <<
	.uleb128 .Ltmp855-.Lfunc_begin54        #   Call between .Lfunc_begin54 and .Ltmp855
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp855-.Lfunc_begin54        # >> Call Site 2 <<
	.uleb128 .Ltmp856-.Ltmp855              #   Call between .Ltmp855 and .Ltmp856
	.uleb128 .Ltmp857-.Lfunc_begin54        #     jumps to .Ltmp857
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp856-.Lfunc_begin54        # >> Call Site 3 <<
	.uleb128 .Lfunc_end396-.Ltmp856         #   Call between .Ltmp856 and .Lfunc_end396
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end54:
	.p2align	2
                                        # -- End function
	.section	.text._ZN4seal4util7PointerImvEC2EONS1_ISt4bytevEE,"axG",@progbits,_ZN4seal4util7PointerImvEC2EONS1_ISt4bytevEE,comdat
	.weak	_ZN4seal4util7PointerImvEC2EONS1_ISt4bytevEE # -- Begin function _ZN4seal4util7PointerImvEC2EONS1_ISt4bytevEE
	.p2align	4, 0x90
	.type	_ZN4seal4util7PointerImvEC2EONS1_ISt4bytevEE,@function
_ZN4seal4util7PointerImvEC2EONS1_ISt4bytevEE: # @_ZN4seal4util7PointerImvEC2EONS1_ISt4bytevEE
.Lfunc_begin55:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception55
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -40(%rbp)                 # 8-byte Spill
	movq	$0, (%rax)
	movq	$0, 8(%rax)
	movq	$0, 16(%rax)
	movb	$0, 24(%rax)
	movq	-16(%rbp), %rax
	cmpq	$0, 8(%rax)
	jne	.LBB397_5
# %bb.1:
	movq	-16(%rbp), %rax
	cmpq	$0, (%rax)
	je	.LBB397_5
# %bb.2:
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rdi
	movq	%rdi, %rax
	movq	%rax, -48(%rbp)                 # 8-byte Spill
.Ltmp858:
	leaq	.L.str.58(%rip), %rsi
	callq	_ZNSt16invalid_argumentC1EPKc@PLT
.Ltmp859:
	jmp	.LBB397_3
.LBB397_3:
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	movq	_ZTISt16invalid_argument@GOTPCREL(%rip), %rsi
	movq	_ZNSt16invalid_argumentD1Ev@GOTPCREL(%rip), %rdx
	callq	__cxa_throw@PLT
.LBB397_4:
.Ltmp860:
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -24(%rbp)
	movl	%eax, -28(%rbp)
	callq	__cxa_free_exception@PLT
	jmp	.LBB397_8
.LBB397_5:
	movq	-40(%rbp), %rax                 # 8-byte Reload
	movq	-16(%rbp), %rcx
	movq	8(%rcx), %rcx
	movq	%rcx, 8(%rax)
	movq	-16(%rbp), %rcx
	movq	16(%rcx), %rcx
	movq	%rcx, 16(%rax)
	cmpq	$0, 8(%rax)
	je	.LBB397_7
# %bb.6:
	movq	-40(%rbp), %rax                 # 8-byte Reload
	movq	16(%rax), %rdi
	callq	_ZN4seal4util14MemoryPoolItem4dataEv
	movq	%rax, %rcx
	movq	-40(%rbp), %rax                 # 8-byte Reload
	movq	%rcx, (%rax)
.LBB397_7:
	movq	-40(%rbp), %rax                 # 8-byte Reload
	movq	-16(%rbp), %rcx
	movb	24(%rcx), %cl
	andb	$1, %cl
	movb	%cl, 24(%rax)
	movq	-16(%rbp), %rax
	movq	$0, (%rax)
	movq	-16(%rbp), %rax
	movq	$0, 8(%rax)
	movq	-16(%rbp), %rax
	movq	$0, 16(%rax)
	movq	-16(%rbp), %rax
	movb	$0, 24(%rax)
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB397_8:
	.cfi_def_cfa %rbp, 16
	movq	-24(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end397:
	.size	_ZN4seal4util7PointerImvEC2EONS1_ISt4bytevEE, .Lfunc_end397-_ZN4seal4util7PointerImvEC2EONS1_ISt4bytevEE
	.cfi_endproc
	.section	.gcc_except_table._ZN4seal4util7PointerImvEC2EONS1_ISt4bytevEE,"aG",@progbits,_ZN4seal4util7PointerImvEC2EONS1_ISt4bytevEE,comdat
	.p2align	2
GCC_except_table397:
.Lexception55:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end55-.Lcst_begin55
.Lcst_begin55:
	.uleb128 .Lfunc_begin55-.Lfunc_begin55  # >> Call Site 1 <<
	.uleb128 .Ltmp858-.Lfunc_begin55        #   Call between .Lfunc_begin55 and .Ltmp858
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp858-.Lfunc_begin55        # >> Call Site 2 <<
	.uleb128 .Ltmp859-.Ltmp858              #   Call between .Ltmp858 and .Ltmp859
	.uleb128 .Ltmp860-.Lfunc_begin55        #     jumps to .Ltmp860
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp859-.Lfunc_begin55        # >> Call Site 3 <<
	.uleb128 .Lfunc_end397-.Ltmp859         #   Call between .Ltmp859 and .Lfunc_end397
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end55:
	.p2align	2
                                        # -- End function
	.section	.text._ZN4seal4util7PointerISt4bytevED2Ev,"axG",@progbits,_ZN4seal4util7PointerISt4bytevED2Ev,comdat
	.weak	_ZN4seal4util7PointerISt4bytevED2Ev # -- Begin function _ZN4seal4util7PointerISt4bytevED2Ev
	.p2align	4, 0x90
	.type	_ZN4seal4util7PointerISt4bytevED2Ev,@function
_ZN4seal4util7PointerISt4bytevED2Ev:    # @_ZN4seal4util7PointerISt4bytevED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN4seal4util7PointerISt4bytevE7releaseEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end398:
	.size	_ZN4seal4util7PointerISt4bytevED2Ev, .Lfunc_end398-_ZN4seal4util7PointerISt4bytevED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt14numeric_limitsImE3maxEv,"axG",@progbits,_ZNSt14numeric_limitsImE3maxEv,comdat
	.weak	_ZNSt14numeric_limitsImE3maxEv  # -- Begin function _ZNSt14numeric_limitsImE3maxEv
	.p2align	4, 0x90
	.type	_ZNSt14numeric_limitsImE3maxEv,@function
_ZNSt14numeric_limitsImE3maxEv:         # @_ZNSt14numeric_limitsImE3maxEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	$-1, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end399:
	.size	_ZNSt14numeric_limitsImE3maxEv, .Lfunc_end399-_ZNSt14numeric_limitsImE3maxEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal4util14MemoryPoolItem4dataEv,"axG",@progbits,_ZN4seal4util14MemoryPoolItem4dataEv,comdat
	.weak	_ZN4seal4util14MemoryPoolItem4dataEv # -- Begin function _ZN4seal4util14MemoryPoolItem4dataEv
	.p2align	4, 0x90
	.type	_ZN4seal4util14MemoryPoolItem4dataEv,@function
_ZN4seal4util14MemoryPoolItem4dataEv:   # @_ZN4seal4util14MemoryPoolItem4dataEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end400:
	.size	_ZN4seal4util14MemoryPoolItem4dataEv, .Lfunc_end400-_ZN4seal4util14MemoryPoolItem4dataEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal4util7PointerISt4bytevE7releaseEv,"axG",@progbits,_ZN4seal4util7PointerISt4bytevE7releaseEv,comdat
	.weak	_ZN4seal4util7PointerISt4bytevE7releaseEv # -- Begin function _ZN4seal4util7PointerISt4bytevE7releaseEv
	.p2align	4, 0x90
	.type	_ZN4seal4util7PointerISt4bytevE7releaseEv,@function
_ZN4seal4util7PointerISt4bytevE7releaseEv: # @_ZN4seal4util7PointerISt4bytevE7releaseEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -16(%rbp)                 # 8-byte Spill
	cmpq	$0, 8(%rax)
	je	.LBB401_2
# %bb.1:
	movq	-16(%rbp), %rax                 # 8-byte Reload
	movq	8(%rax), %rdi
	movq	16(%rax), %rsi
	movq	(%rdi), %rax
	callq	*40(%rax)
	jmp	.LBB401_8
.LBB401_2:
	movq	-16(%rbp), %rax                 # 8-byte Reload
	cmpq	$0, (%rax)
	je	.LBB401_7
# %bb.3:
	movq	-16(%rbp), %rax                 # 8-byte Reload
	testb	$1, 24(%rax)
	jne	.LBB401_7
# %bb.4:
	movq	-16(%rbp), %rax                 # 8-byte Reload
	movq	(%rax), %rax
	movq	%rax, -24(%rbp)                 # 8-byte Spill
	cmpq	$0, %rax
	je	.LBB401_6
# %bb.5:
	movq	-24(%rbp), %rdi                 # 8-byte Reload
	callq	_ZdaPv@PLT
.LBB401_6:
	jmp	.LBB401_7
.LBB401_7:
	jmp	.LBB401_8
.LBB401_8:
	movq	-16(%rbp), %rax                 # 8-byte Reload
	movq	$0, (%rax)
	movq	$0, 8(%rax)
	movq	$0, 16(%rax)
	movb	$0, 24(%rax)
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end401:
	.size	_ZN4seal4util7PointerISt4bytevE7releaseEv, .Lfunc_end401-_ZN4seal4util7PointerISt4bytevE7releaseEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEcvbEv,"axG",@progbits,_ZNKSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEcvbEv,comdat
	.weak	_ZNKSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEcvbEv # -- Begin function _ZNKSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEcvbEv
	.p2align	4, 0x90
	.type	_ZNKSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEcvbEv,@function
_ZNKSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEcvbEv: # @_ZNKSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEcvbEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	cmpq	$0, (%rax)
	setne	%al
	andb	$1, %al
	movzbl	%al, %eax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end402:
	.size	_ZNKSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEcvbEv, .Lfunc_end402-_ZNKSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEcvbEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EE3getEv,"axG",@progbits,_ZNKSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EE3getEv,comdat
	.weak	_ZNKSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EE3getEv # -- Begin function _ZNKSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EE3getEv
	.p2align	4, 0x90
	.type	_ZNKSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EE3getEv,@function
_ZNKSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EE3getEv: # @_ZNKSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EE3getEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end403:
	.size	_ZNKSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EE3getEv, .Lfunc_end403-_ZNKSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EE3getEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4moveIRN4seal4util7PointerImvEEEONSt16remove_referenceIT_E4typeEOS6_,"axG",@progbits,_ZSt4moveIRN4seal4util7PointerImvEEEONSt16remove_referenceIT_E4typeEOS6_,comdat
	.weak	_ZSt4moveIRN4seal4util7PointerImvEEEONSt16remove_referenceIT_E4typeEOS6_ # -- Begin function _ZSt4moveIRN4seal4util7PointerImvEEEONSt16remove_referenceIT_E4typeEOS6_
	.p2align	4, 0x90
	.type	_ZSt4moveIRN4seal4util7PointerImvEEEONSt16remove_referenceIT_E4typeEOS6_,@function
_ZSt4moveIRN4seal4util7PointerImvEEEONSt16remove_referenceIT_E4typeEOS6_: # @_ZSt4moveIRN4seal4util7PointerImvEEEONSt16remove_referenceIT_E4typeEOS6_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end404:
	.size	_ZSt4moveIRN4seal4util7PointerImvEEEONSt16remove_referenceIT_E4typeEOS6_, .Lfunc_end404-_ZSt4moveIRN4seal4util7PointerImvEEEONSt16remove_referenceIT_E4typeEOS6_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal4util7PointerImvEC2EOS2_,"axG",@progbits,_ZN4seal4util7PointerImvEC2EOS2_,comdat
	.weak	_ZN4seal4util7PointerImvEC2EOS2_ # -- Begin function _ZN4seal4util7PointerImvEC2EOS2_
	.p2align	4, 0x90
	.type	_ZN4seal4util7PointerImvEC2EOS2_,@function
_ZN4seal4util7PointerImvEC2EOS2_:       # @_ZN4seal4util7PointerImvEC2EOS2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	(%rcx), %rcx
	movq	%rcx, (%rax)
	movq	-16(%rbp), %rcx
	movq	8(%rcx), %rcx
	movq	%rcx, 8(%rax)
	movq	-16(%rbp), %rcx
	movq	16(%rcx), %rcx
	movq	%rcx, 16(%rax)
	movq	-16(%rbp), %rcx
	movb	24(%rcx), %cl
	andb	$1, %cl
	movb	%cl, 24(%rax)
	movq	-16(%rbp), %rax
	movq	$0, (%rax)
	movq	-16(%rbp), %rax
	movq	$0, 8(%rax)
	movq	-16(%rbp), %rax
	movq	$0, 16(%rax)
	movq	-16(%rbp), %rax
	movb	$0, 24(%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end405:
	.size	_ZN4seal4util7PointerImvEC2EOS2_, .Lfunc_end405-_ZN4seal4util7PointerImvEC2EOS2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal4util7PointerImvEaSEOS2_,"axG",@progbits,_ZN4seal4util7PointerImvEaSEOS2_,comdat
	.weak	_ZN4seal4util7PointerImvEaSEOS2_ # -- Begin function _ZN4seal4util7PointerImvEaSEOS2_
	.p2align	4, 0x90
	.type	_ZN4seal4util7PointerImvEaSEOS2_,@function
_ZN4seal4util7PointerImvEaSEOS2_:       # @_ZN4seal4util7PointerImvEaSEOS2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -24(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	callq	_ZSt4moveIRN4seal4util7PointerImvEEEONSt16remove_referenceIT_E4typeEOS6_
	movq	-24(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZN4seal4util7PointerImvE7acquireEOS2_
	movq	-24(%rbp), %rax                 # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end406:
	.size	_ZN4seal4util7PointerImvEaSEOS2_, .Lfunc_end406-_ZN4seal4util7PointerImvEaSEOS2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal4util7PointerImvE7acquireEOS2_,"axG",@progbits,_ZN4seal4util7PointerImvE7acquireEOS2_,comdat
	.weak	_ZN4seal4util7PointerImvE7acquireEOS2_ # -- Begin function _ZN4seal4util7PointerImvE7acquireEOS2_
	.p2align	4, 0x90
	.type	_ZN4seal4util7PointerImvE7acquireEOS2_,@function
_ZN4seal4util7PointerImvE7acquireEOS2_: # @_ZN4seal4util7PointerImvE7acquireEOS2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZN4seal4util7PointerImvE7acquireERS2_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end407:
	.size	_ZN4seal4util7PointerImvE7acquireEOS2_, .Lfunc_end407-_ZN4seal4util7PointerImvE7acquireEOS2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal4util7PointerImvE7acquireERS2_,"axG",@progbits,_ZN4seal4util7PointerImvE7acquireERS2_,comdat
	.weak	_ZN4seal4util7PointerImvE7acquireERS2_ # -- Begin function _ZN4seal4util7PointerImvE7acquireERS2_
	.p2align	4, 0x90
	.type	_ZN4seal4util7PointerImvE7acquireERS2_,@function
_ZN4seal4util7PointerImvE7acquireERS2_: # @_ZN4seal4util7PointerImvE7acquireERS2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -24(%rbp)                 # 8-byte Spill
	cmpq	-16(%rbp), %rax
	jne	.LBB408_2
# %bb.1:
	jmp	.LBB408_3
.LBB408_2:
	movq	-24(%rbp), %rdi                 # 8-byte Reload
	callq	_ZN4seal4util7PointerImvE7releaseEv
	movq	-24(%rbp), %rax                 # 8-byte Reload
	movq	-16(%rbp), %rcx
	movq	(%rcx), %rcx
	movq	%rcx, (%rax)
	movq	-16(%rbp), %rcx
	movq	8(%rcx), %rcx
	movq	%rcx, 8(%rax)
	movq	-16(%rbp), %rcx
	movq	16(%rcx), %rcx
	movq	%rcx, 16(%rax)
	movq	-16(%rbp), %rcx
	movb	24(%rcx), %cl
	andb	$1, %cl
	movb	%cl, 24(%rax)
	movq	-16(%rbp), %rax
	movq	$0, (%rax)
	movq	-16(%rbp), %rax
	movq	$0, 8(%rax)
	movq	-16(%rbp), %rax
	movq	$0, 16(%rax)
	movq	-16(%rbp), %rax
	movb	$0, 24(%rax)
.LBB408_3:
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end408:
	.size	_ZN4seal4util7PointerImvE7acquireERS2_, .Lfunc_end408-_ZN4seal4util7PointerImvE7acquireERS2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal4util7PointerImvE7releaseEv,"axG",@progbits,_ZN4seal4util7PointerImvE7releaseEv,comdat
	.weak	_ZN4seal4util7PointerImvE7releaseEv # -- Begin function _ZN4seal4util7PointerImvE7releaseEv
	.p2align	4, 0x90
	.type	_ZN4seal4util7PointerImvE7releaseEv,@function
_ZN4seal4util7PointerImvE7releaseEv:    # @_ZN4seal4util7PointerImvE7releaseEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -16(%rbp)                 # 8-byte Spill
	cmpq	$0, 8(%rax)
	je	.LBB409_2
# %bb.1:
	movq	-16(%rbp), %rax                 # 8-byte Reload
	movq	8(%rax), %rdi
	movq	16(%rax), %rsi
	movq	(%rdi), %rax
	callq	*40(%rax)
	jmp	.LBB409_8
.LBB409_2:
	movq	-16(%rbp), %rax                 # 8-byte Reload
	cmpq	$0, (%rax)
	je	.LBB409_7
# %bb.3:
	movq	-16(%rbp), %rax                 # 8-byte Reload
	testb	$1, 24(%rax)
	jne	.LBB409_7
# %bb.4:
	movq	-16(%rbp), %rax                 # 8-byte Reload
	movq	(%rax), %rax
	movq	%rax, -24(%rbp)                 # 8-byte Spill
	cmpq	$0, %rax
	je	.LBB409_6
# %bb.5:
	movq	-24(%rbp), %rdi                 # 8-byte Reload
	callq	_ZdaPv@PLT
.LBB409_6:
	jmp	.LBB409_7
.LBB409_7:
	jmp	.LBB409_8
.LBB409_8:
	movq	-16(%rbp), %rax                 # 8-byte Reload
	movq	$0, (%rax)
	movq	$0, 8(%rax)
	movq	$0, 16(%rax)
	movb	$0, 24(%rax)
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end409:
	.size	_ZN4seal4util7PointerImvE7releaseEv, .Lfunc_end409-_ZN4seal4util7PointerImvE7releaseEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt13__copy_move_aILb0EPKmPmET1_T0_S4_S3_,"axG",@progbits,_ZSt13__copy_move_aILb0EPKmPmET1_T0_S4_S3_,comdat
	.weak	_ZSt13__copy_move_aILb0EPKmPmET1_T0_S4_S3_ # -- Begin function _ZSt13__copy_move_aILb0EPKmPmET1_T0_S4_S3_
	.p2align	4, 0x90
	.type	_ZSt13__copy_move_aILb0EPKmPmET1_T0_S4_S3_,@function
_ZSt13__copy_move_aILb0EPKmPmET1_T0_S4_S3_: # @_ZSt13__copy_move_aILb0EPKmPmET1_T0_S4_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt12__niter_baseIPKmET_S2_
	movq	%rax, -40(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	callq	_ZSt12__niter_baseIPKmET_S2_
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	movq	-24(%rbp), %rdi
	callq	_ZSt12__niter_baseIPmET_S1_
	movq	-40(%rbp), %rdi                 # 8-byte Reload
	movq	-32(%rbp), %rsi                 # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt14__copy_move_a1ILb0EPKmPmET1_T0_S4_S3_
	movq	%rax, %rsi
	leaq	-24(%rbp), %rdi
	callq	_ZSt12__niter_wrapIPmET_RKS1_S1_
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end410:
	.size	_ZSt13__copy_move_aILb0EPKmPmET1_T0_S4_S3_, .Lfunc_end410-_ZSt13__copy_move_aILb0EPKmPmET1_T0_S4_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__miter_baseIPKmET_S2_,"axG",@progbits,_ZSt12__miter_baseIPKmET_S2_,comdat
	.weak	_ZSt12__miter_baseIPKmET_S2_    # -- Begin function _ZSt12__miter_baseIPKmET_S2_
	.p2align	4, 0x90
	.type	_ZSt12__miter_baseIPKmET_S2_,@function
_ZSt12__miter_baseIPKmET_S2_:           # @_ZSt12__miter_baseIPKmET_S2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end411:
	.size	_ZSt12__miter_baseIPKmET_S2_, .Lfunc_end411-_ZSt12__miter_baseIPKmET_S2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__niter_wrapIPmET_RKS1_S1_,"axG",@progbits,_ZSt12__niter_wrapIPmET_RKS1_S1_,comdat
	.weak	_ZSt12__niter_wrapIPmET_RKS1_S1_ # -- Begin function _ZSt12__niter_wrapIPmET_RKS1_S1_
	.p2align	4, 0x90
	.type	_ZSt12__niter_wrapIPmET_RKS1_S1_,@function
_ZSt12__niter_wrapIPmET_RKS1_S1_:       # @_ZSt12__niter_wrapIPmET_RKS1_S1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-16(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end412:
	.size	_ZSt12__niter_wrapIPmET_RKS1_S1_, .Lfunc_end412-_ZSt12__niter_wrapIPmET_RKS1_S1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt14__copy_move_a1ILb0EPKmPmET1_T0_S4_S3_,"axG",@progbits,_ZSt14__copy_move_a1ILb0EPKmPmET1_T0_S4_S3_,comdat
	.weak	_ZSt14__copy_move_a1ILb0EPKmPmET1_T0_S4_S3_ # -- Begin function _ZSt14__copy_move_a1ILb0EPKmPmET1_T0_S4_S3_
	.p2align	4, 0x90
	.type	_ZSt14__copy_move_a1ILb0EPKmPmET1_T0_S4_S3_,@function
_ZSt14__copy_move_a1ILb0EPKmPmET1_T0_S4_S3_: # @_ZSt14__copy_move_a1ILb0EPKmPmET1_T0_S4_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZSt14__copy_move_a2ILb0EPKmPmET1_T0_S4_S3_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end413:
	.size	_ZSt14__copy_move_a1ILb0EPKmPmET1_T0_S4_S3_, .Lfunc_end413-_ZSt14__copy_move_a1ILb0EPKmPmET1_T0_S4_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__niter_baseIPmET_S1_,"axG",@progbits,_ZSt12__niter_baseIPmET_S1_,comdat
	.weak	_ZSt12__niter_baseIPmET_S1_     # -- Begin function _ZSt12__niter_baseIPmET_S1_
	.p2align	4, 0x90
	.type	_ZSt12__niter_baseIPmET_S1_,@function
_ZSt12__niter_baseIPmET_S1_:            # @_ZSt12__niter_baseIPmET_S1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end414:
	.size	_ZSt12__niter_baseIPmET_S1_, .Lfunc_end414-_ZSt12__niter_baseIPmET_S1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt14__copy_move_a2ILb0EPKmPmET1_T0_S4_S3_,"axG",@progbits,_ZSt14__copy_move_a2ILb0EPKmPmET1_T0_S4_S3_,comdat
	.weak	_ZSt14__copy_move_a2ILb0EPKmPmET1_T0_S4_S3_ # -- Begin function _ZSt14__copy_move_a2ILb0EPKmPmET1_T0_S4_S3_
	.p2align	4, 0x90
	.type	_ZSt14__copy_move_a2ILb0EPKmPmET1_T0_S4_S3_,@function
_ZSt14__copy_move_a2ILb0EPKmPmET1_T0_S4_S3_: # @_ZSt14__copy_move_a2ILb0EPKmPmET1_T0_S4_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end415:
	.size	_ZSt14__copy_move_a2ILb0EPKmPmET1_T0_S4_S3_, .Lfunc_end415-_ZSt14__copy_move_a2ILb0EPKmPmET1_T0_S4_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_,"axG",@progbits,_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_,comdat
	.weak	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_ # -- Begin function _ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_
	.p2align	4, 0x90
	.type	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_,@function
_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_: # @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	-8(%rbp), %rcx
	subq	%rcx, %rax
	sarq	$3, %rax
	movq	%rax, -32(%rbp)
	cmpq	$0, -32(%rbp)
	je	.LBB416_2
# %bb.1:
	movq	-24(%rbp), %rdi
	movq	-8(%rbp), %rsi
	movq	-32(%rbp), %rdx
	shlq	$3, %rdx
	callq	memmove@PLT
.LBB416_2:
	movq	-24(%rbp), %rax
	movq	-32(%rbp), %rcx
	shlq	$3, %rcx
	addq	%rcx, %rax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end416:
	.size	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_, .Lfunc_end416-_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal9PublicKeyaSEOS0_,"axG",@progbits,_ZN4seal9PublicKeyaSEOS0_,comdat
	.weak	_ZN4seal9PublicKeyaSEOS0_       # -- Begin function _ZN4seal9PublicKeyaSEOS0_
	.p2align	4, 0x90
	.type	_ZN4seal9PublicKeyaSEOS0_,@function
_ZN4seal9PublicKeyaSEOS0_:              # @_ZN4seal9PublicKeyaSEOS0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -24(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rsi
	callq	_ZN4seal10CiphertextaSEOS0_
                                        # kill: def $rcx killed $rax
	movq	-24(%rbp), %rax                 # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end417:
	.size	_ZN4seal9PublicKeyaSEOS0_, .Lfunc_end417-_ZN4seal9PublicKeyaSEOS0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal10CiphertextaSEOS0_,"axG",@progbits,_ZN4seal10CiphertextaSEOS0_,comdat
	.weak	_ZN4seal10CiphertextaSEOS0_     # -- Begin function _ZN4seal10CiphertextaSEOS0_
	.p2align	4, 0x90
	.type	_ZN4seal10CiphertextaSEOS0_,@function
_ZN4seal10CiphertextaSEOS0_:            # @_ZN4seal10CiphertextaSEOS0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -24(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rsi
	movl	$72, %edx
	callq	memcpy@PLT
	movq	-24(%rbp), %rdi                 # 8-byte Reload
	addq	$72, %rdi
	movq	-16(%rbp), %rsi
	addq	$72, %rsi
	callq	_ZN4seal8DynArrayImEaSEOS1_
                                        # kill: def $rcx killed $rax
	movq	-24(%rbp), %rax                 # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end418:
	.size	_ZN4seal10CiphertextaSEOS0_, .Lfunc_end418-_ZN4seal10CiphertextaSEOS0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal8DynArrayImEaSEOS1_,"axG",@progbits,_ZN4seal8DynArrayImEaSEOS1_,comdat
	.weak	_ZN4seal8DynArrayImEaSEOS1_     # -- Begin function _ZN4seal8DynArrayImEaSEOS1_
	.p2align	4, 0x90
	.type	_ZN4seal8DynArrayImEaSEOS1_,@function
_ZN4seal8DynArrayImEaSEOS1_:            # @_ZN4seal8DynArrayImEaSEOS1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -24(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rcx
	movq	16(%rcx), %rcx
	movq	%rcx, 16(%rax)
	movq	-16(%rbp), %rcx
	movq	24(%rcx), %rcx
	movq	%rcx, 24(%rax)
	movq	-16(%rbp), %rdi
	addq	$32, %rdi
	callq	_ZSt4moveIRN4seal4util7PointerImvEEEONSt16remove_referenceIT_E4typeEOS6_
	movq	-24(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rsi
	addq	$32, %rdi
	callq	_ZN4seal4util7PointerImvEaSEOS2_
	movq	-16(%rbp), %rdi
	callq	_ZSt4moveIRN4seal16MemoryPoolHandleEEONSt16remove_referenceIT_E4typeEOS4_
	movq	-24(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZN4seal16MemoryPoolHandleaSEOS0_
                                        # kill: def $rcx killed $rax
	movq	-24(%rbp), %rax                 # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end419:
	.size	_ZN4seal8DynArrayImEaSEOS1_, .Lfunc_end419-_ZN4seal8DynArrayImEaSEOS1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4moveIRN4seal16MemoryPoolHandleEEONSt16remove_referenceIT_E4typeEOS4_,"axG",@progbits,_ZSt4moveIRN4seal16MemoryPoolHandleEEONSt16remove_referenceIT_E4typeEOS4_,comdat
	.weak	_ZSt4moveIRN4seal16MemoryPoolHandleEEONSt16remove_referenceIT_E4typeEOS4_ # -- Begin function _ZSt4moveIRN4seal16MemoryPoolHandleEEONSt16remove_referenceIT_E4typeEOS4_
	.p2align	4, 0x90
	.type	_ZSt4moveIRN4seal16MemoryPoolHandleEEONSt16remove_referenceIT_E4typeEOS4_,@function
_ZSt4moveIRN4seal16MemoryPoolHandleEEONSt16remove_referenceIT_E4typeEOS4_: # @_ZSt4moveIRN4seal16MemoryPoolHandleEEONSt16remove_referenceIT_E4typeEOS4_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end420:
	.size	_ZSt4moveIRN4seal16MemoryPoolHandleEEONSt16remove_referenceIT_E4typeEOS4_, .Lfunc_end420-_ZSt4moveIRN4seal16MemoryPoolHandleEEONSt16remove_referenceIT_E4typeEOS4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal16MemoryPoolHandleaSEOS0_,"axG",@progbits,_ZN4seal16MemoryPoolHandleaSEOS0_,comdat
	.weak	_ZN4seal16MemoryPoolHandleaSEOS0_ # -- Begin function _ZN4seal16MemoryPoolHandleaSEOS0_
	.p2align	4, 0x90
	.type	_ZN4seal16MemoryPoolHandleaSEOS0_,@function
_ZN4seal16MemoryPoolHandleaSEOS0_:      # @_ZN4seal16MemoryPoolHandleaSEOS0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -24(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	callq	_ZSt4moveIRSt10shared_ptrIN4seal4util10MemoryPoolEEEONSt16remove_referenceIT_E4typeEOS7_
	movq	-24(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEaSEOS3_
                                        # kill: def $rcx killed $rax
	movq	-24(%rbp), %rax                 # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end421:
	.size	_ZN4seal16MemoryPoolHandleaSEOS0_, .Lfunc_end421-_ZN4seal16MemoryPoolHandleaSEOS0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt10shared_ptrIN4seal4util10MemoryPoolEEaSEOS3_,"axG",@progbits,_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEaSEOS3_,comdat
	.weak	_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEaSEOS3_ # -- Begin function _ZNSt10shared_ptrIN4seal4util10MemoryPoolEEaSEOS3_
	.p2align	4, 0x90
	.type	_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEaSEOS3_,@function
_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEaSEOS3_: # @_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEaSEOS3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -24(%rbp)                 # 8-byte Spill
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	callq	_ZSt4moveIRSt10shared_ptrIN4seal4util10MemoryPoolEEEONSt16remove_referenceIT_E4typeEOS7_
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEaSEOS5_
                                        # kill: def $rcx killed $rax
	movq	-24(%rbp), %rax                 # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end422:
	.size	_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEaSEOS3_, .Lfunc_end422-_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEaSEOS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEaSEOS5_,"axG",@progbits,_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEaSEOS5_,comdat
	.weak	_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEaSEOS5_ # -- Begin function _ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEaSEOS5_
	.p2align	4, 0x90
	.type	_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEaSEOS5_,@function
_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEaSEOS5_: # @_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEaSEOS5_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -40(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	callq	_ZSt4moveIRSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEEONSt16remove_referenceIT_E4typeEOS9_
	movq	%rax, %rsi
	leaq	-32(%rbp), %rdi
	callq	_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEC2EOS5_
	movq	-40(%rbp), %rsi                 # 8-byte Reload
	leaq	-32(%rbp), %rdi
	callq	_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EE4swapERS5_
	leaq	-32(%rbp), %rdi
	callq	_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EED2Ev
	movq	-40(%rbp), %rax                 # 8-byte Reload
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end423:
	.size	_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEaSEOS5_, .Lfunc_end423-_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEaSEOS5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4moveIRSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEEONSt16remove_referenceIT_E4typeEOS9_,"axG",@progbits,_ZSt4moveIRSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEEONSt16remove_referenceIT_E4typeEOS9_,comdat
	.weak	_ZSt4moveIRSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEEONSt16remove_referenceIT_E4typeEOS9_ # -- Begin function _ZSt4moveIRSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEEONSt16remove_referenceIT_E4typeEOS9_
	.p2align	4, 0x90
	.type	_ZSt4moveIRSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEEONSt16remove_referenceIT_E4typeEOS9_,@function
_ZSt4moveIRSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEEONSt16remove_referenceIT_E4typeEOS9_: # @_ZSt4moveIRSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEEONSt16remove_referenceIT_E4typeEOS9_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end424:
	.size	_ZSt4moveIRSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEEONSt16remove_referenceIT_E4typeEOS9_, .Lfunc_end424-_ZSt4moveIRSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEEONSt16remove_referenceIT_E4typeEOS9_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEC2EOS5_,"axG",@progbits,_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEC2EOS5_,comdat
	.weak	_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEC2EOS5_ # -- Begin function _ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEC2EOS5_
	.p2align	4, 0x90
	.type	_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEC2EOS5_,@function
_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEC2EOS5_: # @_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEC2EOS5_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -24(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, (%rdi)
	addq	$8, %rdi
	callq	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEC2Ev
	movq	-24(%rbp), %rdi                 # 8-byte Reload
	addq	$8, %rdi
	movq	-16(%rbp), %rsi
	addq	$8, %rsi
	callq	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EE7_M_swapERS2_
	movq	-16(%rbp), %rax
	movq	$0, (%rax)
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end425:
	.size	_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEC2EOS5_, .Lfunc_end425-_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEC2EOS5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EE4swapERS5_,"axG",@progbits,_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EE4swapERS5_,comdat
	.weak	_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EE4swapERS5_ # -- Begin function _ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EE4swapERS5_
	.p2align	4, 0x90
	.type	_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EE4swapERS5_,@function
_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EE4swapERS5_: # @_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EE4swapERS5_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -24(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rsi
	callq	_ZSt4swapIPN4seal4util10MemoryPoolEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS7_ESt18is_move_assignableIS7_EEE5valueEvE4typeERS7_SG_
	movq	-24(%rbp), %rdi                 # 8-byte Reload
	addq	$8, %rdi
	movq	-16(%rbp), %rsi
	addq	$8, %rsi
	callq	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EE7_M_swapERS2_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end426:
	.size	_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EE4swapERS5_, .Lfunc_end426-_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EE4swapERS5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EED2Ev,"axG",@progbits,_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EED2Ev,comdat
	.weak	_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EED2Ev # -- Begin function _ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EED2Ev,@function
_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EED2Ev: # @_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	addq	$8, %rdi
	callq	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end427:
	.size	_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EED2Ev, .Lfunc_end427-_ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4swapIPN4seal4util10MemoryPoolEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS7_ESt18is_move_assignableIS7_EEE5valueEvE4typeERS7_SG_,"axG",@progbits,_ZSt4swapIPN4seal4util10MemoryPoolEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS7_ESt18is_move_assignableIS7_EEE5valueEvE4typeERS7_SG_,comdat
	.weak	_ZSt4swapIPN4seal4util10MemoryPoolEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS7_ESt18is_move_assignableIS7_EEE5valueEvE4typeERS7_SG_ # -- Begin function _ZSt4swapIPN4seal4util10MemoryPoolEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS7_ESt18is_move_assignableIS7_EEE5valueEvE4typeERS7_SG_
	.p2align	4, 0x90
	.type	_ZSt4swapIPN4seal4util10MemoryPoolEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS7_ESt18is_move_assignableIS7_EEE5valueEvE4typeERS7_SG_,@function
_ZSt4swapIPN4seal4util10MemoryPoolEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS7_ESt18is_move_assignableIS7_EEE5valueEvE4typeERS7_SG_: # @_ZSt4swapIPN4seal4util10MemoryPoolEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS7_ESt18is_move_assignableIS7_EEE5valueEvE4typeERS7_SG_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt4moveIRPN4seal4util10MemoryPoolEEONSt16remove_referenceIT_E4typeEOS6_
	movq	(%rax), %rax
	movq	%rax, -24(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZSt4moveIRPN4seal4util10MemoryPoolEEONSt16remove_referenceIT_E4typeEOS6_
	movq	(%rax), %rcx
	movq	-8(%rbp), %rax
	movq	%rcx, (%rax)
	leaq	-24(%rbp), %rdi
	callq	_ZSt4moveIRPN4seal4util10MemoryPoolEEONSt16remove_referenceIT_E4typeEOS6_
	movq	(%rax), %rcx
	movq	-16(%rbp), %rax
	movq	%rcx, (%rax)
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end428:
	.size	_ZSt4swapIPN4seal4util10MemoryPoolEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS7_ESt18is_move_assignableIS7_EEE5valueEvE4typeERS7_SG_, .Lfunc_end428-_ZSt4swapIPN4seal4util10MemoryPoolEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS7_ESt18is_move_assignableIS7_EEE5valueEvE4typeERS7_SG_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4moveIRPN4seal4util10MemoryPoolEEONSt16remove_referenceIT_E4typeEOS6_,"axG",@progbits,_ZSt4moveIRPN4seal4util10MemoryPoolEEONSt16remove_referenceIT_E4typeEOS6_,comdat
	.weak	_ZSt4moveIRPN4seal4util10MemoryPoolEEONSt16remove_referenceIT_E4typeEOS6_ # -- Begin function _ZSt4moveIRPN4seal4util10MemoryPoolEEONSt16remove_referenceIT_E4typeEOS6_
	.p2align	4, 0x90
	.type	_ZSt4moveIRPN4seal4util10MemoryPoolEEONSt16remove_referenceIT_E4typeEOS6_,@function
_ZSt4moveIRPN4seal4util10MemoryPoolEEONSt16remove_referenceIT_E4typeEOS6_: # @_ZSt4moveIRPN4seal4util10MemoryPoolEEONSt16remove_referenceIT_E4typeEOS6_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end429:
	.size	_ZSt4moveIRPN4seal4util10MemoryPoolEEONSt16remove_referenceIT_E4typeEOS6_, .Lfunc_end429-_ZSt4moveIRPN4seal4util10MemoryPoolEEONSt16remove_referenceIT_E4typeEOS6_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal11KSwitchKeysC2Ev,"axG",@progbits,_ZN4seal11KSwitchKeysC2Ev,comdat
	.weak	_ZN4seal11KSwitchKeysC2Ev       # -- Begin function _ZN4seal11KSwitchKeysC2Ev
	.p2align	4, 0x90
	.type	_ZN4seal11KSwitchKeysC2Ev,@function
_ZN4seal11KSwitchKeysC2Ev:              # @_ZN4seal11KSwitchKeysC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -24(%rbp)                 # 8-byte Spill
	callq	_ZN4seal13MemoryManager7GetPoolEv
	movq	-24(%rbp), %rdi                 # 8-byte Reload
	movq	_ZN4seal13parms_id_zeroE@GOTPCREL(%rip), %rax
	movq	(%rax), %rcx
	movq	%rcx, 16(%rdi)
	movq	8(%rax), %rcx
	movq	%rcx, 24(%rdi)
	movq	16(%rax), %rcx
	movq	%rcx, 32(%rdi)
	movq	24(%rax), %rax
	movq	%rax, 40(%rdi)
	addq	$48, %rdi
	movq	%rdi, -16(%rbp)                 # 8-byte Spill
	xorl	%esi, %esi
	movl	$24, %edx
	callq	memset@PLT
	movq	-16(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EEC2Ev
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end430:
	.size	_ZN4seal11KSwitchKeysC2Ev, .Lfunc_end430-_ZN4seal11KSwitchKeysC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EEC2Ev,"axG",@progbits,_ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EEC2Ev,comdat
	.weak	_ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EEC2Ev # -- Begin function _ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EEC2Ev,@function
_ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EEC2Ev: # @_ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EEC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end431:
	.size	_ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EEC2Ev, .Lfunc_end431-_ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EEC2Ev,"axG",@progbits,_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EEC2Ev,comdat
	.weak	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EEC2Ev # -- Begin function _ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EEC2Ev,@function
_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EEC2Ev: # @_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE12_Vector_implC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end432:
	.size	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EEC2Ev, .Lfunc_end432-_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE12_Vector_implC2Ev,"axG",@progbits,_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE12_Vector_implC2Ev,comdat
	.weak	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE12_Vector_implC2Ev # -- Begin function _ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE12_Vector_implC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE12_Vector_implC2Ev,@function
_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE12_Vector_implC2Ev: # @_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE12_Vector_implC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -16(%rbp)                 # 8-byte Spill
	callq	_ZNSaISt6vectorIN4seal9PublicKeyESaIS1_EEEC2Ev
	movq	-16(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE17_Vector_impl_dataC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end433:
	.size	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE12_Vector_implC2Ev, .Lfunc_end433-_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE12_Vector_implC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSaISt6vectorIN4seal9PublicKeyESaIS1_EEEC2Ev,"axG",@progbits,_ZNSaISt6vectorIN4seal9PublicKeyESaIS1_EEEC2Ev,comdat
	.weak	_ZNSaISt6vectorIN4seal9PublicKeyESaIS1_EEEC2Ev # -- Begin function _ZNSaISt6vectorIN4seal9PublicKeyESaIS1_EEEC2Ev
	.p2align	4, 0x90
	.type	_ZNSaISt6vectorIN4seal9PublicKeyESaIS1_EEEC2Ev,@function
_ZNSaISt6vectorIN4seal9PublicKeyESaIS1_EEEC2Ev: # @_ZNSaISt6vectorIN4seal9PublicKeyESaIS1_EEEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN9__gnu_cxx13new_allocatorISt6vectorIN4seal9PublicKeyESaIS3_EEEC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end434:
	.size	_ZNSaISt6vectorIN4seal9PublicKeyESaIS1_EEEC2Ev, .Lfunc_end434-_ZNSaISt6vectorIN4seal9PublicKeyESaIS1_EEEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorISt6vectorIN4seal9PublicKeyESaIS3_EEEC2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorISt6vectorIN4seal9PublicKeyESaIS3_EEEC2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorISt6vectorIN4seal9PublicKeyESaIS3_EEEC2Ev # -- Begin function _ZN9__gnu_cxx13new_allocatorISt6vectorIN4seal9PublicKeyESaIS3_EEEC2Ev
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorISt6vectorIN4seal9PublicKeyESaIS3_EEEC2Ev,@function
_ZN9__gnu_cxx13new_allocatorISt6vectorIN4seal9PublicKeyESaIS3_EEEC2Ev: # @_ZN9__gnu_cxx13new_allocatorISt6vectorIN4seal9PublicKeyESaIS3_EEEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end435:
	.size	_ZN9__gnu_cxx13new_allocatorISt6vectorIN4seal9PublicKeyESaIS3_EEEC2Ev, .Lfunc_end435-_ZN9__gnu_cxx13new_allocatorISt6vectorIN4seal9PublicKeyESaIS3_EEEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal9RelinKeysaSEOS0_,"axG",@progbits,_ZN4seal9RelinKeysaSEOS0_,comdat
	.weak	_ZN4seal9RelinKeysaSEOS0_       # -- Begin function _ZN4seal9RelinKeysaSEOS0_
	.p2align	4, 0x90
	.type	_ZN4seal9RelinKeysaSEOS0_,@function
_ZN4seal9RelinKeysaSEOS0_:              # @_ZN4seal9RelinKeysaSEOS0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -24(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rsi
	callq	_ZN4seal11KSwitchKeysaSEOS0_
                                        # kill: def $rcx killed $rax
	movq	-24(%rbp), %rax                 # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end436:
	.size	_ZN4seal9RelinKeysaSEOS0_, .Lfunc_end436-_ZN4seal9RelinKeysaSEOS0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal11KSwitchKeysaSEOS0_,"axG",@progbits,_ZN4seal11KSwitchKeysaSEOS0_,comdat
	.weak	_ZN4seal11KSwitchKeysaSEOS0_    # -- Begin function _ZN4seal11KSwitchKeysaSEOS0_
	.p2align	4, 0x90
	.type	_ZN4seal11KSwitchKeysaSEOS0_,@function
_ZN4seal11KSwitchKeysaSEOS0_:           # @_ZN4seal11KSwitchKeysaSEOS0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -24(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rsi
	callq	_ZN4seal16MemoryPoolHandleaSEOS0_
	movq	-24(%rbp), %rdi                 # 8-byte Reload
	movq	-16(%rbp), %rax
	movq	16(%rax), %rcx
	movq	%rcx, 16(%rdi)
	movq	24(%rax), %rcx
	movq	%rcx, 24(%rdi)
	movq	32(%rax), %rcx
	movq	%rcx, 32(%rdi)
	movq	40(%rax), %rax
	movq	%rax, 40(%rdi)
	addq	$48, %rdi
	movq	-16(%rbp), %rsi
	addq	$48, %rsi
	callq	_ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EEaSEOS5_
                                        # kill: def $rcx killed $rax
	movq	-24(%rbp), %rax                 # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end437:
	.size	_ZN4seal11KSwitchKeysaSEOS0_, .Lfunc_end437-_ZN4seal11KSwitchKeysaSEOS0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EEaSEOS5_,"axG",@progbits,_ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EEaSEOS5_,comdat
	.weak	_ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EEaSEOS5_ # -- Begin function _ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EEaSEOS5_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EEaSEOS5_,@function
_ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EEaSEOS5_: # @_ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EEaSEOS5_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	movb	$1, -17(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZSt4moveIRSt6vectorIS0_IN4seal9PublicKeyESaIS2_EESaIS4_EEEONSt16remove_referenceIT_E4typeEOS9_
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EE14_M_move_assignEOS5_St17integral_constantIbLb1EE
	movq	-32(%rbp), %rax                 # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end438:
	.size	_ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EEaSEOS5_, .Lfunc_end438-_ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EEaSEOS5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EE14_M_move_assignEOS5_St17integral_constantIbLb1EE,"axG",@progbits,_ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EE14_M_move_assignEOS5_St17integral_constantIbLb1EE,comdat
	.weak	_ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EE14_M_move_assignEOS5_St17integral_constantIbLb1EE # -- Begin function _ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EE14_M_move_assignEOS5_St17integral_constantIbLb1EE
	.p2align	4, 0x90
	.type	_ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EE14_M_move_assignEOS5_St17integral_constantIbLb1EE,@function
_ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EE14_M_move_assignEOS5_St17integral_constantIbLb1EE: # @_ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EE14_M_move_assignEOS5_St17integral_constantIbLb1EE
.Lfunc_begin56:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception56
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$112, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	-16(%rbp), %rsi
	movq	%rsi, -88(%rbp)                 # 8-byte Spill
	leaq	-56(%rbp), %rdi
	movq	%rdi, -104(%rbp)                # 8-byte Spill
	callq	_ZNKSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE13get_allocatorEv
	movq	-104(%rbp), %rsi                # 8-byte Reload
	leaq	-48(%rbp), %rdi
	movq	%rdi, -96(%rbp)                 # 8-byte Spill
	callq	_ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EEC2ERKS4_
	movq	-104(%rbp), %rdi                # 8-byte Reload
	callq	_ZNSaISt6vectorIN4seal9PublicKeyESaIS1_EEED2Ev
	movq	-88(%rbp), %rdi                 # 8-byte Reload
	movq	-24(%rbp), %rsi
	callq	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE17_Vector_impl_data12_M_swap_dataERS7_
	movq	-96(%rbp), %rdi                 # 8-byte Reload
	movq	-24(%rbp), %rsi
	callq	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE17_Vector_impl_data12_M_swap_dataERS7_
	movq	-88(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv
	movq	%rax, -80(%rbp)                 # 8-byte Spill
	movq	-24(%rbp), %rdi
	callq	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv
	movq	-80(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rsi
.Ltmp861:
	callq	_ZSt15__alloc_on_moveISaISt6vectorIN4seal9PublicKeyESaIS2_EEEEvRT_S7_
.Ltmp862:
	jmp	.LBB439_1
.LBB439_1:
	leaq	-48(%rbp), %rdi
	callq	_ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EED2Ev
	addq	$112, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB439_2:
	.cfi_def_cfa %rbp, 16
.Ltmp863:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -64(%rbp)
	movl	%eax, -68(%rbp)
	leaq	-48(%rbp), %rdi
	callq	_ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EED2Ev
# %bb.3:
	movq	-64(%rbp), %rdi
	callq	__clang_call_terminate
.Lfunc_end439:
	.size	_ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EE14_M_move_assignEOS5_St17integral_constantIbLb1EE, .Lfunc_end439-_ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EE14_M_move_assignEOS5_St17integral_constantIbLb1EE
	.cfi_endproc
	.section	.gcc_except_table._ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EE14_M_move_assignEOS5_St17integral_constantIbLb1EE,"aG",@progbits,_ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EE14_M_move_assignEOS5_St17integral_constantIbLb1EE,comdat
	.p2align	2
GCC_except_table439:
.Lexception56:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase17-.Lttbaseref17
.Lttbaseref17:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end56-.Lcst_begin56
.Lcst_begin56:
	.uleb128 .Ltmp861-.Lfunc_begin56        # >> Call Site 1 <<
	.uleb128 .Ltmp862-.Ltmp861              #   Call between .Ltmp861 and .Ltmp862
	.uleb128 .Ltmp863-.Lfunc_begin56        #     jumps to .Ltmp863
	.byte	1                               #   On action: 1
.Lcst_end56:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase17:
	.p2align	2
                                        # -- End function
	.section	.text._ZSt4moveIRSt6vectorIS0_IN4seal9PublicKeyESaIS2_EESaIS4_EEEONSt16remove_referenceIT_E4typeEOS9_,"axG",@progbits,_ZSt4moveIRSt6vectorIS0_IN4seal9PublicKeyESaIS2_EESaIS4_EEEONSt16remove_referenceIT_E4typeEOS9_,comdat
	.weak	_ZSt4moveIRSt6vectorIS0_IN4seal9PublicKeyESaIS2_EESaIS4_EEEONSt16remove_referenceIT_E4typeEOS9_ # -- Begin function _ZSt4moveIRSt6vectorIS0_IN4seal9PublicKeyESaIS2_EESaIS4_EEEONSt16remove_referenceIT_E4typeEOS9_
	.p2align	4, 0x90
	.type	_ZSt4moveIRSt6vectorIS0_IN4seal9PublicKeyESaIS2_EESaIS4_EEEONSt16remove_referenceIT_E4typeEOS9_,@function
_ZSt4moveIRSt6vectorIS0_IN4seal9PublicKeyESaIS2_EESaIS4_EEEONSt16remove_referenceIT_E4typeEOS9_: # @_ZSt4moveIRSt6vectorIS0_IN4seal9PublicKeyESaIS2_EESaIS4_EEEONSt16remove_referenceIT_E4typeEOS9_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end440:
	.size	_ZSt4moveIRSt6vectorIS0_IN4seal9PublicKeyESaIS2_EESaIS4_EEEONSt16remove_referenceIT_E4typeEOS9_, .Lfunc_end440-_ZSt4moveIRSt6vectorIS0_IN4seal9PublicKeyESaIS2_EESaIS4_EEEONSt16remove_referenceIT_E4typeEOS9_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE13get_allocatorEv,"axG",@progbits,_ZNKSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE13get_allocatorEv,comdat
	.weak	_ZNKSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE13get_allocatorEv # -- Begin function _ZNKSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE13get_allocatorEv
	.p2align	4, 0x90
	.type	_ZNKSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE13get_allocatorEv,@function
_ZNKSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE13get_allocatorEv: # @_ZNKSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE13get_allocatorEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -32(%rbp)                 # 8-byte Spill
	movq	%rdi, %rax
	movq	%rax, -24(%rbp)                 # 8-byte Spill
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZNKSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNSaISt6vectorIN4seal9PublicKeyESaIS1_EEEC2ERKS4_
	movq	-24(%rbp), %rax                 # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end441:
	.size	_ZNKSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE13get_allocatorEv, .Lfunc_end441-_ZNKSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE13get_allocatorEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EEC2ERKS4_,"axG",@progbits,_ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EEC2ERKS4_,comdat
	.weak	_ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EEC2ERKS4_ # -- Begin function _ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EEC2ERKS4_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EEC2ERKS4_,@function
_ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EEC2ERKS4_: # @_ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EEC2ERKS4_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EEC2ERKS5_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end442:
	.size	_ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EEC2ERKS4_, .Lfunc_end442-_ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EEC2ERKS4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSaISt6vectorIN4seal9PublicKeyESaIS1_EEED2Ev,"axG",@progbits,_ZNSaISt6vectorIN4seal9PublicKeyESaIS1_EEED2Ev,comdat
	.weak	_ZNSaISt6vectorIN4seal9PublicKeyESaIS1_EEED2Ev # -- Begin function _ZNSaISt6vectorIN4seal9PublicKeyESaIS1_EEED2Ev
	.p2align	4, 0x90
	.type	_ZNSaISt6vectorIN4seal9PublicKeyESaIS1_EEED2Ev,@function
_ZNSaISt6vectorIN4seal9PublicKeyESaIS1_EEED2Ev: # @_ZNSaISt6vectorIN4seal9PublicKeyESaIS1_EEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN9__gnu_cxx13new_allocatorISt6vectorIN4seal9PublicKeyESaIS3_EEED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end443:
	.size	_ZNSaISt6vectorIN4seal9PublicKeyESaIS1_EEED2Ev, .Lfunc_end443-_ZNSaISt6vectorIN4seal9PublicKeyESaIS1_EEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE17_Vector_impl_data12_M_swap_dataERS7_,"axG",@progbits,_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE17_Vector_impl_data12_M_swap_dataERS7_,comdat
	.weak	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE17_Vector_impl_data12_M_swap_dataERS7_ # -- Begin function _ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE17_Vector_impl_data12_M_swap_dataERS7_
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE17_Vector_impl_data12_M_swap_dataERS7_,@function
_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE17_Vector_impl_data12_M_swap_dataERS7_: # @_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE17_Vector_impl_data12_M_swap_dataERS7_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -48(%rbp)                 # 8-byte Spill
	leaq	-40(%rbp), %rdi
	callq	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE17_Vector_impl_dataC2Ev
	movq	-48(%rbp), %rsi                 # 8-byte Reload
	leaq	-40(%rbp), %rdi
	callq	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE17_Vector_impl_data12_M_copy_dataERKS7_
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	movq	-16(%rbp), %rsi
	callq	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE17_Vector_impl_data12_M_copy_dataERKS7_
	movq	-16(%rbp), %rdi
	leaq	-40(%rbp), %rsi
	callq	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE17_Vector_impl_data12_M_copy_dataERKS7_
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end444:
	.size	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE17_Vector_impl_data12_M_swap_dataERS7_, .Lfunc_end444-_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE17_Vector_impl_data12_M_swap_dataERS7_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt15__alloc_on_moveISaISt6vectorIN4seal9PublicKeyESaIS2_EEEEvRT_S7_,"axG",@progbits,_ZSt15__alloc_on_moveISaISt6vectorIN4seal9PublicKeyESaIS2_EEEEvRT_S7_,comdat
	.weak	_ZSt15__alloc_on_moveISaISt6vectorIN4seal9PublicKeyESaIS2_EEEEvRT_S7_ # -- Begin function _ZSt15__alloc_on_moveISaISt6vectorIN4seal9PublicKeyESaIS2_EEEEvRT_S7_
	.p2align	4, 0x90
	.type	_ZSt15__alloc_on_moveISaISt6vectorIN4seal9PublicKeyESaIS2_EEEEvRT_S7_,@function
_ZSt15__alloc_on_moveISaISt6vectorIN4seal9PublicKeyESaIS2_EEEEvRT_S7_: # @_ZSt15__alloc_on_moveISaISt6vectorIN4seal9PublicKeyESaIS2_EEEEvRT_S7_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZSt4moveIRSaISt6vectorIN4seal9PublicKeyESaIS2_EEEEONSt16remove_referenceIT_E4typeEOS8_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end445:
	.size	_ZSt15__alloc_on_moveISaISt6vectorIN4seal9PublicKeyESaIS2_EEEEvRT_S7_, .Lfunc_end445-_ZSt15__alloc_on_moveISaISt6vectorIN4seal9PublicKeyESaIS2_EEEEvRT_S7_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv,comdat
	.weak	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv # -- Begin function _ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv,@function
_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv: # @_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end446:
	.size	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv, .Lfunc_end446-_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EED2Ev,"axG",@progbits,_ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EED2Ev,comdat
	.weak	_ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EED2Ev # -- Begin function _ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EED2Ev,@function
_ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EED2Ev: # @_ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EED2Ev
.Lfunc_begin57:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception57
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -48(%rbp)                 # 8-byte Spill
	movq	(%rdi), %rax
	movq	%rax, -40(%rbp)                 # 8-byte Spill
	movq	8(%rdi), %rax
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	callq	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv
	movq	-40(%rbp), %rdi                 # 8-byte Reload
	movq	-32(%rbp), %rsi                 # 8-byte Reload
	movq	%rax, %rdx
.Ltmp864:
	callq	_ZSt8_DestroyIPSt6vectorIN4seal9PublicKeyESaIS2_EES4_EvT_S6_RSaIT0_E
.Ltmp865:
	jmp	.LBB447_1
.LBB447_1:
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EED2Ev
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB447_2:
	.cfi_def_cfa %rbp, 16
.Ltmp866:
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -16(%rbp)
	movl	%eax, -20(%rbp)
	callq	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EED2Ev
# %bb.3:
	movq	-16(%rbp), %rdi
	callq	__clang_call_terminate
.Lfunc_end447:
	.size	_ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EED2Ev, .Lfunc_end447-_ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EED2Ev,"aG",@progbits,_ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EED2Ev,comdat
	.p2align	2
GCC_except_table447:
.Lexception57:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase18-.Lttbaseref18
.Lttbaseref18:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end57-.Lcst_begin57
.Lcst_begin57:
	.uleb128 .Ltmp864-.Lfunc_begin57        # >> Call Site 1 <<
	.uleb128 .Ltmp865-.Ltmp864              #   Call between .Ltmp864 and .Ltmp865
	.uleb128 .Ltmp866-.Lfunc_begin57        #     jumps to .Ltmp866
	.byte	1                               #   On action: 1
.Lcst_end57:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase18:
	.p2align	2
                                        # -- End function
	.section	.text._ZNKSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNKSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv,comdat
	.weak	_ZNKSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv # -- Begin function _ZNKSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv
	.p2align	4, 0x90
	.type	_ZNKSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv,@function
_ZNKSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv: # @_ZNKSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end448:
	.size	_ZNKSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv, .Lfunc_end448-_ZNKSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSaISt6vectorIN4seal9PublicKeyESaIS1_EEEC2ERKS4_,"axG",@progbits,_ZNSaISt6vectorIN4seal9PublicKeyESaIS1_EEEC2ERKS4_,comdat
	.weak	_ZNSaISt6vectorIN4seal9PublicKeyESaIS1_EEEC2ERKS4_ # -- Begin function _ZNSaISt6vectorIN4seal9PublicKeyESaIS1_EEEC2ERKS4_
	.p2align	4, 0x90
	.type	_ZNSaISt6vectorIN4seal9PublicKeyESaIS1_EEEC2ERKS4_,@function
_ZNSaISt6vectorIN4seal9PublicKeyESaIS1_EEEC2ERKS4_: # @_ZNSaISt6vectorIN4seal9PublicKeyESaIS1_EEEC2ERKS4_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZN9__gnu_cxx13new_allocatorISt6vectorIN4seal9PublicKeyESaIS3_EEEC2ERKS6_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end449:
	.size	_ZNSaISt6vectorIN4seal9PublicKeyESaIS1_EEEC2ERKS4_, .Lfunc_end449-_ZNSaISt6vectorIN4seal9PublicKeyESaIS1_EEEC2ERKS4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorISt6vectorIN4seal9PublicKeyESaIS3_EEEC2ERKS6_,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorISt6vectorIN4seal9PublicKeyESaIS3_EEEC2ERKS6_,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorISt6vectorIN4seal9PublicKeyESaIS3_EEEC2ERKS6_ # -- Begin function _ZN9__gnu_cxx13new_allocatorISt6vectorIN4seal9PublicKeyESaIS3_EEEC2ERKS6_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorISt6vectorIN4seal9PublicKeyESaIS3_EEEC2ERKS6_,@function
_ZN9__gnu_cxx13new_allocatorISt6vectorIN4seal9PublicKeyESaIS3_EEEC2ERKS6_: # @_ZN9__gnu_cxx13new_allocatorISt6vectorIN4seal9PublicKeyESaIS3_EEEC2ERKS6_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end450:
	.size	_ZN9__gnu_cxx13new_allocatorISt6vectorIN4seal9PublicKeyESaIS3_EEEC2ERKS6_, .Lfunc_end450-_ZN9__gnu_cxx13new_allocatorISt6vectorIN4seal9PublicKeyESaIS3_EEEC2ERKS6_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EEC2ERKS5_,"axG",@progbits,_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EEC2ERKS5_,comdat
	.weak	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EEC2ERKS5_ # -- Begin function _ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EEC2ERKS5_
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EEC2ERKS5_,@function
_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EEC2ERKS5_: # @_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EEC2ERKS5_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE12_Vector_implC2ERKS5_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end451:
	.size	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EEC2ERKS5_, .Lfunc_end451-_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EEC2ERKS5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE12_Vector_implC2ERKS5_,"axG",@progbits,_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE12_Vector_implC2ERKS5_,comdat
	.weak	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE12_Vector_implC2ERKS5_ # -- Begin function _ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE12_Vector_implC2ERKS5_
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE12_Vector_implC2ERKS5_,@function
_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE12_Vector_implC2ERKS5_: # @_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE12_Vector_implC2ERKS5_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -24(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rsi
	callq	_ZNSaISt6vectorIN4seal9PublicKeyESaIS1_EEEC2ERKS4_
	movq	-24(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE17_Vector_impl_dataC2Ev
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end452:
	.size	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE12_Vector_implC2ERKS5_, .Lfunc_end452-_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE12_Vector_implC2ERKS5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorISt6vectorIN4seal9PublicKeyESaIS3_EEED2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorISt6vectorIN4seal9PublicKeyESaIS3_EEED2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorISt6vectorIN4seal9PublicKeyESaIS3_EEED2Ev # -- Begin function _ZN9__gnu_cxx13new_allocatorISt6vectorIN4seal9PublicKeyESaIS3_EEED2Ev
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorISt6vectorIN4seal9PublicKeyESaIS3_EEED2Ev,@function
_ZN9__gnu_cxx13new_allocatorISt6vectorIN4seal9PublicKeyESaIS3_EEED2Ev: # @_ZN9__gnu_cxx13new_allocatorISt6vectorIN4seal9PublicKeyESaIS3_EEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end453:
	.size	_ZN9__gnu_cxx13new_allocatorISt6vectorIN4seal9PublicKeyESaIS3_EEED2Ev, .Lfunc_end453-_ZN9__gnu_cxx13new_allocatorISt6vectorIN4seal9PublicKeyESaIS3_EEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE17_Vector_impl_dataC2Ev,"axG",@progbits,_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE17_Vector_impl_dataC2Ev,comdat
	.weak	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE17_Vector_impl_dataC2Ev # -- Begin function _ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE17_Vector_impl_dataC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE17_Vector_impl_dataC2Ev,@function
_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE17_Vector_impl_dataC2Ev: # @_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE17_Vector_impl_dataC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	$0, (%rax)
	movq	$0, 8(%rax)
	movq	$0, 16(%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end454:
	.size	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE17_Vector_impl_dataC2Ev, .Lfunc_end454-_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE17_Vector_impl_dataC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE17_Vector_impl_data12_M_copy_dataERKS7_,"axG",@progbits,_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE17_Vector_impl_data12_M_copy_dataERKS7_,comdat
	.weak	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE17_Vector_impl_data12_M_copy_dataERKS7_ # -- Begin function _ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE17_Vector_impl_data12_M_copy_dataERKS7_
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE17_Vector_impl_data12_M_copy_dataERKS7_,@function
_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE17_Vector_impl_data12_M_copy_dataERKS7_: # @_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE17_Vector_impl_data12_M_copy_dataERKS7_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	(%rcx), %rcx
	movq	%rcx, (%rax)
	movq	-16(%rbp), %rcx
	movq	8(%rcx), %rcx
	movq	%rcx, 8(%rax)
	movq	-16(%rbp), %rcx
	movq	16(%rcx), %rcx
	movq	%rcx, 16(%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end455:
	.size	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE17_Vector_impl_data12_M_copy_dataERKS7_, .Lfunc_end455-_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE17_Vector_impl_data12_M_copy_dataERKS7_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4moveIRSaISt6vectorIN4seal9PublicKeyESaIS2_EEEEONSt16remove_referenceIT_E4typeEOS8_,"axG",@progbits,_ZSt4moveIRSaISt6vectorIN4seal9PublicKeyESaIS2_EEEEONSt16remove_referenceIT_E4typeEOS8_,comdat
	.weak	_ZSt4moveIRSaISt6vectorIN4seal9PublicKeyESaIS2_EEEEONSt16remove_referenceIT_E4typeEOS8_ # -- Begin function _ZSt4moveIRSaISt6vectorIN4seal9PublicKeyESaIS2_EEEEONSt16remove_referenceIT_E4typeEOS8_
	.p2align	4, 0x90
	.type	_ZSt4moveIRSaISt6vectorIN4seal9PublicKeyESaIS2_EEEEONSt16remove_referenceIT_E4typeEOS8_,@function
_ZSt4moveIRSaISt6vectorIN4seal9PublicKeyESaIS2_EEEEONSt16remove_referenceIT_E4typeEOS8_: # @_ZSt4moveIRSaISt6vectorIN4seal9PublicKeyESaIS2_EEEEONSt16remove_referenceIT_E4typeEOS8_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end456:
	.size	_ZSt4moveIRSaISt6vectorIN4seal9PublicKeyESaIS2_EEEEONSt16remove_referenceIT_E4typeEOS8_, .Lfunc_end456-_ZSt4moveIRSaISt6vectorIN4seal9PublicKeyESaIS2_EEEEONSt16remove_referenceIT_E4typeEOS8_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt8_DestroyIPSt6vectorIN4seal9PublicKeyESaIS2_EES4_EvT_S6_RSaIT0_E,"axG",@progbits,_ZSt8_DestroyIPSt6vectorIN4seal9PublicKeyESaIS2_EES4_EvT_S6_RSaIT0_E,comdat
	.weak	_ZSt8_DestroyIPSt6vectorIN4seal9PublicKeyESaIS2_EES4_EvT_S6_RSaIT0_E # -- Begin function _ZSt8_DestroyIPSt6vectorIN4seal9PublicKeyESaIS2_EES4_EvT_S6_RSaIT0_E
	.p2align	4, 0x90
	.type	_ZSt8_DestroyIPSt6vectorIN4seal9PublicKeyESaIS2_EES4_EvT_S6_RSaIT0_E,@function
_ZSt8_DestroyIPSt6vectorIN4seal9PublicKeyESaIS2_EES4_EvT_S6_RSaIT0_E: # @_ZSt8_DestroyIPSt6vectorIN4seal9PublicKeyESaIS2_EES4_EvT_S6_RSaIT0_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZSt8_DestroyIPSt6vectorIN4seal9PublicKeyESaIS2_EEEvT_S6_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end457:
	.size	_ZSt8_DestroyIPSt6vectorIN4seal9PublicKeyESaIS2_EES4_EvT_S6_RSaIT0_E, .Lfunc_end457-_ZSt8_DestroyIPSt6vectorIN4seal9PublicKeyESaIS2_EES4_EvT_S6_RSaIT0_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EED2Ev,"axG",@progbits,_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EED2Ev,comdat
	.weak	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EED2Ev # -- Begin function _ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EED2Ev,@function
_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EED2Ev: # @_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EED2Ev
.Lfunc_begin58:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception58
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -32(%rbp)                 # 8-byte Spill
	movq	(%rdi), %rsi
	movq	16(%rdi), %rdx
	subq	%rsi, %rdx
	sarq	$3, %rdx
	movabsq	$-6148914691236517205, %rax     # imm = 0xAAAAAAAAAAAAAAAB
	imulq	%rax, %rdx
.Ltmp867:
	callq	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE13_M_deallocateEPS4_m
.Ltmp868:
	jmp	.LBB458_1
.LBB458_1:
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE12_Vector_implD2Ev
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB458_2:
	.cfi_def_cfa %rbp, 16
.Ltmp869:
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -16(%rbp)
	movl	%eax, -20(%rbp)
	callq	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE12_Vector_implD2Ev
# %bb.3:
	movq	-16(%rbp), %rdi
	callq	__clang_call_terminate
.Lfunc_end458:
	.size	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EED2Ev, .Lfunc_end458-_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EED2Ev,"aG",@progbits,_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EED2Ev,comdat
	.p2align	2
GCC_except_table458:
.Lexception58:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase19-.Lttbaseref19
.Lttbaseref19:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end58-.Lcst_begin58
.Lcst_begin58:
	.uleb128 .Ltmp867-.Lfunc_begin58        # >> Call Site 1 <<
	.uleb128 .Ltmp868-.Ltmp867              #   Call between .Ltmp867 and .Ltmp868
	.uleb128 .Ltmp869-.Lfunc_begin58        #     jumps to .Ltmp869
	.byte	1                               #   On action: 1
.Lcst_end58:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase19:
	.p2align	2
                                        # -- End function
	.section	.text._ZSt8_DestroyIPSt6vectorIN4seal9PublicKeyESaIS2_EEEvT_S6_,"axG",@progbits,_ZSt8_DestroyIPSt6vectorIN4seal9PublicKeyESaIS2_EEEvT_S6_,comdat
	.weak	_ZSt8_DestroyIPSt6vectorIN4seal9PublicKeyESaIS2_EEEvT_S6_ # -- Begin function _ZSt8_DestroyIPSt6vectorIN4seal9PublicKeyESaIS2_EEEvT_S6_
	.p2align	4, 0x90
	.type	_ZSt8_DestroyIPSt6vectorIN4seal9PublicKeyESaIS2_EEEvT_S6_,@function
_ZSt8_DestroyIPSt6vectorIN4seal9PublicKeyESaIS2_EEEvT_S6_: # @_ZSt8_DestroyIPSt6vectorIN4seal9PublicKeyESaIS2_EEEvT_S6_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN4seal9PublicKeyESaIS4_EEEEvT_S8_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end459:
	.size	_ZSt8_DestroyIPSt6vectorIN4seal9PublicKeyESaIS2_EEEvT_S6_, .Lfunc_end459-_ZSt8_DestroyIPSt6vectorIN4seal9PublicKeyESaIS2_EEEvT_S6_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN4seal9PublicKeyESaIS4_EEEEvT_S8_,"axG",@progbits,_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN4seal9PublicKeyESaIS4_EEEEvT_S8_,comdat
	.weak	_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN4seal9PublicKeyESaIS4_EEEEvT_S8_ # -- Begin function _ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN4seal9PublicKeyESaIS4_EEEEvT_S8_
	.p2align	4, 0x90
	.type	_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN4seal9PublicKeyESaIS4_EEEEvT_S8_,@function
_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN4seal9PublicKeyESaIS4_EEEEvT_S8_: # @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN4seal9PublicKeyESaIS4_EEEEvT_S8_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
.LBB460_1:                              # =>This Inner Loop Header: Depth=1
	movq	-8(%rbp), %rax
	cmpq	-16(%rbp), %rax
	je	.LBB460_4
# %bb.2:                                #   in Loop: Header=BB460_1 Depth=1
	movq	-8(%rbp), %rdi
	callq	_ZSt11__addressofISt6vectorIN4seal9PublicKeyESaIS2_EEEPT_RS5_
	movq	%rax, %rdi
	callq	_ZSt8_DestroyISt6vectorIN4seal9PublicKeyESaIS2_EEEvPT_
# %bb.3:                                #   in Loop: Header=BB460_1 Depth=1
	movq	-8(%rbp), %rax
	addq	$24, %rax
	movq	%rax, -8(%rbp)
	jmp	.LBB460_1
.LBB460_4:
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end460:
	.size	_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN4seal9PublicKeyESaIS4_EEEEvT_S8_, .Lfunc_end460-_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN4seal9PublicKeyESaIS4_EEEEvT_S8_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt8_DestroyISt6vectorIN4seal9PublicKeyESaIS2_EEEvPT_,"axG",@progbits,_ZSt8_DestroyISt6vectorIN4seal9PublicKeyESaIS2_EEEvPT_,comdat
	.weak	_ZSt8_DestroyISt6vectorIN4seal9PublicKeyESaIS2_EEEvPT_ # -- Begin function _ZSt8_DestroyISt6vectorIN4seal9PublicKeyESaIS2_EEEvPT_
	.p2align	4, 0x90
	.type	_ZSt8_DestroyISt6vectorIN4seal9PublicKeyESaIS2_EEEvPT_,@function
_ZSt8_DestroyISt6vectorIN4seal9PublicKeyESaIS2_EEEvPT_: # @_ZSt8_DestroyISt6vectorIN4seal9PublicKeyESaIS2_EEEvPT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt6vectorIN4seal9PublicKeyESaIS1_EED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end461:
	.size	_ZSt8_DestroyISt6vectorIN4seal9PublicKeyESaIS2_EEEvPT_, .Lfunc_end461-_ZSt8_DestroyISt6vectorIN4seal9PublicKeyESaIS2_EEEvPT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt11__addressofISt6vectorIN4seal9PublicKeyESaIS2_EEEPT_RS5_,"axG",@progbits,_ZSt11__addressofISt6vectorIN4seal9PublicKeyESaIS2_EEEPT_RS5_,comdat
	.weak	_ZSt11__addressofISt6vectorIN4seal9PublicKeyESaIS2_EEEPT_RS5_ # -- Begin function _ZSt11__addressofISt6vectorIN4seal9PublicKeyESaIS2_EEEPT_RS5_
	.p2align	4, 0x90
	.type	_ZSt11__addressofISt6vectorIN4seal9PublicKeyESaIS2_EEEPT_RS5_,@function
_ZSt11__addressofISt6vectorIN4seal9PublicKeyESaIS2_EEEPT_RS5_: # @_ZSt11__addressofISt6vectorIN4seal9PublicKeyESaIS2_EEEPT_RS5_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end462:
	.size	_ZSt11__addressofISt6vectorIN4seal9PublicKeyESaIS2_EEEPT_RS5_, .Lfunc_end462-_ZSt11__addressofISt6vectorIN4seal9PublicKeyESaIS2_EEEPT_RS5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN4seal9PublicKeyESaIS1_EED2Ev,"axG",@progbits,_ZNSt6vectorIN4seal9PublicKeyESaIS1_EED2Ev,comdat
	.weak	_ZNSt6vectorIN4seal9PublicKeyESaIS1_EED2Ev # -- Begin function _ZNSt6vectorIN4seal9PublicKeyESaIS1_EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN4seal9PublicKeyESaIS1_EED2Ev,@function
_ZNSt6vectorIN4seal9PublicKeyESaIS1_EED2Ev: # @_ZNSt6vectorIN4seal9PublicKeyESaIS1_EED2Ev
.Lfunc_begin59:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception59
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -48(%rbp)                 # 8-byte Spill
	movq	(%rdi), %rax
	movq	%rax, -40(%rbp)                 # 8-byte Spill
	movq	8(%rdi), %rax
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	callq	_ZNSt12_Vector_baseIN4seal9PublicKeyESaIS1_EE19_M_get_Tp_allocatorEv
	movq	-40(%rbp), %rdi                 # 8-byte Reload
	movq	-32(%rbp), %rsi                 # 8-byte Reload
	movq	%rax, %rdx
.Ltmp870:
	callq	_ZSt8_DestroyIPN4seal9PublicKeyES1_EvT_S3_RSaIT0_E
.Ltmp871:
	jmp	.LBB463_1
.LBB463_1:
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNSt12_Vector_baseIN4seal9PublicKeyESaIS1_EED2Ev
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB463_2:
	.cfi_def_cfa %rbp, 16
.Ltmp872:
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -16(%rbp)
	movl	%eax, -20(%rbp)
	callq	_ZNSt12_Vector_baseIN4seal9PublicKeyESaIS1_EED2Ev
# %bb.3:
	movq	-16(%rbp), %rdi
	callq	__clang_call_terminate
.Lfunc_end463:
	.size	_ZNSt6vectorIN4seal9PublicKeyESaIS1_EED2Ev, .Lfunc_end463-_ZNSt6vectorIN4seal9PublicKeyESaIS1_EED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNSt6vectorIN4seal9PublicKeyESaIS1_EED2Ev,"aG",@progbits,_ZNSt6vectorIN4seal9PublicKeyESaIS1_EED2Ev,comdat
	.p2align	2
GCC_except_table463:
.Lexception59:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase20-.Lttbaseref20
.Lttbaseref20:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end59-.Lcst_begin59
.Lcst_begin59:
	.uleb128 .Ltmp870-.Lfunc_begin59        # >> Call Site 1 <<
	.uleb128 .Ltmp871-.Ltmp870              #   Call between .Ltmp870 and .Ltmp871
	.uleb128 .Ltmp872-.Lfunc_begin59        #     jumps to .Ltmp872
	.byte	1                               #   On action: 1
.Lcst_end59:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase20:
	.p2align	2
                                        # -- End function
	.section	.text._ZSt8_DestroyIPN4seal9PublicKeyES1_EvT_S3_RSaIT0_E,"axG",@progbits,_ZSt8_DestroyIPN4seal9PublicKeyES1_EvT_S3_RSaIT0_E,comdat
	.weak	_ZSt8_DestroyIPN4seal9PublicKeyES1_EvT_S3_RSaIT0_E # -- Begin function _ZSt8_DestroyIPN4seal9PublicKeyES1_EvT_S3_RSaIT0_E
	.p2align	4, 0x90
	.type	_ZSt8_DestroyIPN4seal9PublicKeyES1_EvT_S3_RSaIT0_E,@function
_ZSt8_DestroyIPN4seal9PublicKeyES1_EvT_S3_RSaIT0_E: # @_ZSt8_DestroyIPN4seal9PublicKeyES1_EvT_S3_RSaIT0_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZSt8_DestroyIPN4seal9PublicKeyEEvT_S3_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end464:
	.size	_ZSt8_DestroyIPN4seal9PublicKeyES1_EvT_S3_RSaIT0_E, .Lfunc_end464-_ZSt8_DestroyIPN4seal9PublicKeyES1_EvT_S3_RSaIT0_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN4seal9PublicKeyESaIS1_EE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNSt12_Vector_baseIN4seal9PublicKeyESaIS1_EE19_M_get_Tp_allocatorEv,comdat
	.weak	_ZNSt12_Vector_baseIN4seal9PublicKeyESaIS1_EE19_M_get_Tp_allocatorEv # -- Begin function _ZNSt12_Vector_baseIN4seal9PublicKeyESaIS1_EE19_M_get_Tp_allocatorEv
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN4seal9PublicKeyESaIS1_EE19_M_get_Tp_allocatorEv,@function
_ZNSt12_Vector_baseIN4seal9PublicKeyESaIS1_EE19_M_get_Tp_allocatorEv: # @_ZNSt12_Vector_baseIN4seal9PublicKeyESaIS1_EE19_M_get_Tp_allocatorEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end465:
	.size	_ZNSt12_Vector_baseIN4seal9PublicKeyESaIS1_EE19_M_get_Tp_allocatorEv, .Lfunc_end465-_ZNSt12_Vector_baseIN4seal9PublicKeyESaIS1_EE19_M_get_Tp_allocatorEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN4seal9PublicKeyESaIS1_EED2Ev,"axG",@progbits,_ZNSt12_Vector_baseIN4seal9PublicKeyESaIS1_EED2Ev,comdat
	.weak	_ZNSt12_Vector_baseIN4seal9PublicKeyESaIS1_EED2Ev # -- Begin function _ZNSt12_Vector_baseIN4seal9PublicKeyESaIS1_EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN4seal9PublicKeyESaIS1_EED2Ev,@function
_ZNSt12_Vector_baseIN4seal9PublicKeyESaIS1_EED2Ev: # @_ZNSt12_Vector_baseIN4seal9PublicKeyESaIS1_EED2Ev
.Lfunc_begin60:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception60
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -32(%rbp)                 # 8-byte Spill
	movq	(%rdi), %rsi
	movq	16(%rdi), %rdx
	subq	%rsi, %rdx
	sarq	$3, %rdx
	movabsq	$-1085102592571150095, %rax     # imm = 0xF0F0F0F0F0F0F0F1
	imulq	%rax, %rdx
.Ltmp873:
	callq	_ZNSt12_Vector_baseIN4seal9PublicKeyESaIS1_EE13_M_deallocateEPS1_m
.Ltmp874:
	jmp	.LBB466_1
.LBB466_1:
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNSt12_Vector_baseIN4seal9PublicKeyESaIS1_EE12_Vector_implD2Ev
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB466_2:
	.cfi_def_cfa %rbp, 16
.Ltmp875:
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -16(%rbp)
	movl	%eax, -20(%rbp)
	callq	_ZNSt12_Vector_baseIN4seal9PublicKeyESaIS1_EE12_Vector_implD2Ev
# %bb.3:
	movq	-16(%rbp), %rdi
	callq	__clang_call_terminate
.Lfunc_end466:
	.size	_ZNSt12_Vector_baseIN4seal9PublicKeyESaIS1_EED2Ev, .Lfunc_end466-_ZNSt12_Vector_baseIN4seal9PublicKeyESaIS1_EED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNSt12_Vector_baseIN4seal9PublicKeyESaIS1_EED2Ev,"aG",@progbits,_ZNSt12_Vector_baseIN4seal9PublicKeyESaIS1_EED2Ev,comdat
	.p2align	2
GCC_except_table466:
.Lexception60:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase21-.Lttbaseref21
.Lttbaseref21:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end60-.Lcst_begin60
.Lcst_begin60:
	.uleb128 .Ltmp873-.Lfunc_begin60        # >> Call Site 1 <<
	.uleb128 .Ltmp874-.Ltmp873              #   Call between .Ltmp873 and .Ltmp874
	.uleb128 .Ltmp875-.Lfunc_begin60        #     jumps to .Ltmp875
	.byte	1                               #   On action: 1
.Lcst_end60:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase21:
	.p2align	2
                                        # -- End function
	.section	.text._ZSt8_DestroyIPN4seal9PublicKeyEEvT_S3_,"axG",@progbits,_ZSt8_DestroyIPN4seal9PublicKeyEEvT_S3_,comdat
	.weak	_ZSt8_DestroyIPN4seal9PublicKeyEEvT_S3_ # -- Begin function _ZSt8_DestroyIPN4seal9PublicKeyEEvT_S3_
	.p2align	4, 0x90
	.type	_ZSt8_DestroyIPN4seal9PublicKeyEEvT_S3_,@function
_ZSt8_DestroyIPN4seal9PublicKeyEEvT_S3_: # @_ZSt8_DestroyIPN4seal9PublicKeyEEvT_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZNSt12_Destroy_auxILb0EE9__destroyIPN4seal9PublicKeyEEEvT_S5_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end467:
	.size	_ZSt8_DestroyIPN4seal9PublicKeyEEvT_S3_, .Lfunc_end467-_ZSt8_DestroyIPN4seal9PublicKeyEEvT_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Destroy_auxILb0EE9__destroyIPN4seal9PublicKeyEEEvT_S5_,"axG",@progbits,_ZNSt12_Destroy_auxILb0EE9__destroyIPN4seal9PublicKeyEEEvT_S5_,comdat
	.weak	_ZNSt12_Destroy_auxILb0EE9__destroyIPN4seal9PublicKeyEEEvT_S5_ # -- Begin function _ZNSt12_Destroy_auxILb0EE9__destroyIPN4seal9PublicKeyEEEvT_S5_
	.p2align	4, 0x90
	.type	_ZNSt12_Destroy_auxILb0EE9__destroyIPN4seal9PublicKeyEEEvT_S5_,@function
_ZNSt12_Destroy_auxILb0EE9__destroyIPN4seal9PublicKeyEEEvT_S5_: # @_ZNSt12_Destroy_auxILb0EE9__destroyIPN4seal9PublicKeyEEEvT_S5_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
.LBB468_1:                              # =>This Inner Loop Header: Depth=1
	movq	-8(%rbp), %rax
	cmpq	-16(%rbp), %rax
	je	.LBB468_4
# %bb.2:                                #   in Loop: Header=BB468_1 Depth=1
	movq	-8(%rbp), %rdi
	callq	_ZSt11__addressofIN4seal9PublicKeyEEPT_RS2_
	movq	%rax, %rdi
	callq	_ZSt8_DestroyIN4seal9PublicKeyEEvPT_
# %bb.3:                                #   in Loop: Header=BB468_1 Depth=1
	movq	-8(%rbp), %rax
	addq	$136, %rax
	movq	%rax, -8(%rbp)
	jmp	.LBB468_1
.LBB468_4:
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end468:
	.size	_ZNSt12_Destroy_auxILb0EE9__destroyIPN4seal9PublicKeyEEEvT_S5_, .Lfunc_end468-_ZNSt12_Destroy_auxILb0EE9__destroyIPN4seal9PublicKeyEEEvT_S5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt8_DestroyIN4seal9PublicKeyEEvPT_,"axG",@progbits,_ZSt8_DestroyIN4seal9PublicKeyEEvPT_,comdat
	.weak	_ZSt8_DestroyIN4seal9PublicKeyEEvPT_ # -- Begin function _ZSt8_DestroyIN4seal9PublicKeyEEvPT_
	.p2align	4, 0x90
	.type	_ZSt8_DestroyIN4seal9PublicKeyEEvPT_,@function
_ZSt8_DestroyIN4seal9PublicKeyEEvPT_:   # @_ZSt8_DestroyIN4seal9PublicKeyEEvPT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN4seal9PublicKeyD2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end469:
	.size	_ZSt8_DestroyIN4seal9PublicKeyEEvPT_, .Lfunc_end469-_ZSt8_DestroyIN4seal9PublicKeyEEvPT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt11__addressofIN4seal9PublicKeyEEPT_RS2_,"axG",@progbits,_ZSt11__addressofIN4seal9PublicKeyEEPT_RS2_,comdat
	.weak	_ZSt11__addressofIN4seal9PublicKeyEEPT_RS2_ # -- Begin function _ZSt11__addressofIN4seal9PublicKeyEEPT_RS2_
	.p2align	4, 0x90
	.type	_ZSt11__addressofIN4seal9PublicKeyEEPT_RS2_,@function
_ZSt11__addressofIN4seal9PublicKeyEEPT_RS2_: # @_ZSt11__addressofIN4seal9PublicKeyEEPT_RS2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end470:
	.size	_ZSt11__addressofIN4seal9PublicKeyEEPT_RS2_, .Lfunc_end470-_ZSt11__addressofIN4seal9PublicKeyEEPT_RS2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN4seal9PublicKeyESaIS1_EE13_M_deallocateEPS1_m,"axG",@progbits,_ZNSt12_Vector_baseIN4seal9PublicKeyESaIS1_EE13_M_deallocateEPS1_m,comdat
	.weak	_ZNSt12_Vector_baseIN4seal9PublicKeyESaIS1_EE13_M_deallocateEPS1_m # -- Begin function _ZNSt12_Vector_baseIN4seal9PublicKeyESaIS1_EE13_M_deallocateEPS1_m
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN4seal9PublicKeyESaIS1_EE13_M_deallocateEPS1_m,@function
_ZNSt12_Vector_baseIN4seal9PublicKeyESaIS1_EE13_M_deallocateEPS1_m: # @_ZNSt12_Vector_baseIN4seal9PublicKeyESaIS1_EE13_M_deallocateEPS1_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	cmpq	$0, -16(%rbp)
	je	.LBB471_2
# %bb.1:
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZNSt16allocator_traitsISaIN4seal9PublicKeyEEE10deallocateERS2_PS1_m
.LBB471_2:
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end471:
	.size	_ZNSt12_Vector_baseIN4seal9PublicKeyESaIS1_EE13_M_deallocateEPS1_m, .Lfunc_end471-_ZNSt12_Vector_baseIN4seal9PublicKeyESaIS1_EE13_M_deallocateEPS1_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN4seal9PublicKeyESaIS1_EE12_Vector_implD2Ev,"axG",@progbits,_ZNSt12_Vector_baseIN4seal9PublicKeyESaIS1_EE12_Vector_implD2Ev,comdat
	.weak	_ZNSt12_Vector_baseIN4seal9PublicKeyESaIS1_EE12_Vector_implD2Ev # -- Begin function _ZNSt12_Vector_baseIN4seal9PublicKeyESaIS1_EE12_Vector_implD2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN4seal9PublicKeyESaIS1_EE12_Vector_implD2Ev,@function
_ZNSt12_Vector_baseIN4seal9PublicKeyESaIS1_EE12_Vector_implD2Ev: # @_ZNSt12_Vector_baseIN4seal9PublicKeyESaIS1_EE12_Vector_implD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSaIN4seal9PublicKeyEED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end472:
	.size	_ZNSt12_Vector_baseIN4seal9PublicKeyESaIS1_EE12_Vector_implD2Ev, .Lfunc_end472-_ZNSt12_Vector_baseIN4seal9PublicKeyESaIS1_EE12_Vector_implD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIN4seal9PublicKeyEEE10deallocateERS2_PS1_m,"axG",@progbits,_ZNSt16allocator_traitsISaIN4seal9PublicKeyEEE10deallocateERS2_PS1_m,comdat
	.weak	_ZNSt16allocator_traitsISaIN4seal9PublicKeyEEE10deallocateERS2_PS1_m # -- Begin function _ZNSt16allocator_traitsISaIN4seal9PublicKeyEEE10deallocateERS2_PS1_m
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIN4seal9PublicKeyEEE10deallocateERS2_PS1_m,@function
_ZNSt16allocator_traitsISaIN4seal9PublicKeyEEE10deallocateERS2_PS1_m: # @_ZNSt16allocator_traitsISaIN4seal9PublicKeyEEE10deallocateERS2_PS1_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZN9__gnu_cxx13new_allocatorIN4seal9PublicKeyEE10deallocateEPS2_m
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end473:
	.size	_ZNSt16allocator_traitsISaIN4seal9PublicKeyEEE10deallocateERS2_PS1_m, .Lfunc_end473-_ZNSt16allocator_traitsISaIN4seal9PublicKeyEEE10deallocateERS2_PS1_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIN4seal9PublicKeyEE10deallocateEPS2_m,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIN4seal9PublicKeyEE10deallocateEPS2_m,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIN4seal9PublicKeyEE10deallocateEPS2_m # -- Begin function _ZN9__gnu_cxx13new_allocatorIN4seal9PublicKeyEE10deallocateEPS2_m
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIN4seal9PublicKeyEE10deallocateEPS2_m,@function
_ZN9__gnu_cxx13new_allocatorIN4seal9PublicKeyEE10deallocateEPS2_m: # @_ZN9__gnu_cxx13new_allocatorIN4seal9PublicKeyEE10deallocateEPS2_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZdlPv@PLT
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end474:
	.size	_ZN9__gnu_cxx13new_allocatorIN4seal9PublicKeyEE10deallocateEPS2_m, .Lfunc_end474-_ZN9__gnu_cxx13new_allocatorIN4seal9PublicKeyEE10deallocateEPS2_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSaIN4seal9PublicKeyEED2Ev,"axG",@progbits,_ZNSaIN4seal9PublicKeyEED2Ev,comdat
	.weak	_ZNSaIN4seal9PublicKeyEED2Ev    # -- Begin function _ZNSaIN4seal9PublicKeyEED2Ev
	.p2align	4, 0x90
	.type	_ZNSaIN4seal9PublicKeyEED2Ev,@function
_ZNSaIN4seal9PublicKeyEED2Ev:           # @_ZNSaIN4seal9PublicKeyEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIN4seal9PublicKeyEED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end475:
	.size	_ZNSaIN4seal9PublicKeyEED2Ev, .Lfunc_end475-_ZNSaIN4seal9PublicKeyEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIN4seal9PublicKeyEED2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIN4seal9PublicKeyEED2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIN4seal9PublicKeyEED2Ev # -- Begin function _ZN9__gnu_cxx13new_allocatorIN4seal9PublicKeyEED2Ev
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIN4seal9PublicKeyEED2Ev,@function
_ZN9__gnu_cxx13new_allocatorIN4seal9PublicKeyEED2Ev: # @_ZN9__gnu_cxx13new_allocatorIN4seal9PublicKeyEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end476:
	.size	_ZN9__gnu_cxx13new_allocatorIN4seal9PublicKeyEED2Ev, .Lfunc_end476-_ZN9__gnu_cxx13new_allocatorIN4seal9PublicKeyEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE13_M_deallocateEPS4_m,"axG",@progbits,_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE13_M_deallocateEPS4_m,comdat
	.weak	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE13_M_deallocateEPS4_m # -- Begin function _ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE13_M_deallocateEPS4_m
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE13_M_deallocateEPS4_m,@function
_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE13_M_deallocateEPS4_m: # @_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE13_M_deallocateEPS4_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	cmpq	$0, -16(%rbp)
	je	.LBB477_2
# %bb.1:
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZNSt16allocator_traitsISaISt6vectorIN4seal9PublicKeyESaIS2_EEEE10deallocateERS5_PS4_m
.LBB477_2:
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end477:
	.size	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE13_M_deallocateEPS4_m, .Lfunc_end477-_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE13_M_deallocateEPS4_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE12_Vector_implD2Ev,"axG",@progbits,_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE12_Vector_implD2Ev,comdat
	.weak	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE12_Vector_implD2Ev # -- Begin function _ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE12_Vector_implD2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE12_Vector_implD2Ev,@function
_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE12_Vector_implD2Ev: # @_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE12_Vector_implD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSaISt6vectorIN4seal9PublicKeyESaIS1_EEED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end478:
	.size	_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE12_Vector_implD2Ev, .Lfunc_end478-_ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE12_Vector_implD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaISt6vectorIN4seal9PublicKeyESaIS2_EEEE10deallocateERS5_PS4_m,"axG",@progbits,_ZNSt16allocator_traitsISaISt6vectorIN4seal9PublicKeyESaIS2_EEEE10deallocateERS5_PS4_m,comdat
	.weak	_ZNSt16allocator_traitsISaISt6vectorIN4seal9PublicKeyESaIS2_EEEE10deallocateERS5_PS4_m # -- Begin function _ZNSt16allocator_traitsISaISt6vectorIN4seal9PublicKeyESaIS2_EEEE10deallocateERS5_PS4_m
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaISt6vectorIN4seal9PublicKeyESaIS2_EEEE10deallocateERS5_PS4_m,@function
_ZNSt16allocator_traitsISaISt6vectorIN4seal9PublicKeyESaIS2_EEEE10deallocateERS5_PS4_m: # @_ZNSt16allocator_traitsISaISt6vectorIN4seal9PublicKeyESaIS2_EEEE10deallocateERS5_PS4_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZN9__gnu_cxx13new_allocatorISt6vectorIN4seal9PublicKeyESaIS3_EEE10deallocateEPS5_m
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end479:
	.size	_ZNSt16allocator_traitsISaISt6vectorIN4seal9PublicKeyESaIS2_EEEE10deallocateERS5_PS4_m, .Lfunc_end479-_ZNSt16allocator_traitsISaISt6vectorIN4seal9PublicKeyESaIS2_EEEE10deallocateERS5_PS4_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorISt6vectorIN4seal9PublicKeyESaIS3_EEE10deallocateEPS5_m,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorISt6vectorIN4seal9PublicKeyESaIS3_EEE10deallocateEPS5_m,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorISt6vectorIN4seal9PublicKeyESaIS3_EEE10deallocateEPS5_m # -- Begin function _ZN9__gnu_cxx13new_allocatorISt6vectorIN4seal9PublicKeyESaIS3_EEE10deallocateEPS5_m
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorISt6vectorIN4seal9PublicKeyESaIS3_EEE10deallocateEPS5_m,@function
_ZN9__gnu_cxx13new_allocatorISt6vectorIN4seal9PublicKeyESaIS3_EEE10deallocateEPS5_m: # @_ZN9__gnu_cxx13new_allocatorISt6vectorIN4seal9PublicKeyESaIS3_EEE10deallocateEPS5_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZdlPv@PLT
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end480:
	.size	_ZN9__gnu_cxx13new_allocatorISt6vectorIN4seal9PublicKeyESaIS3_EEE10deallocateEPS5_m, .Lfunc_end480-_ZN9__gnu_cxx13new_allocatorISt6vectorIN4seal9PublicKeyESaIS3_EEE10deallocateEPS5_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal12KeyGenerator18create_galois_keysERKSt6vectorIjSaIjEERNS_10GaloisKeysE,"axG",@progbits,_ZN4seal12KeyGenerator18create_galois_keysERKSt6vectorIjSaIjEERNS_10GaloisKeysE,comdat
	.weak	_ZN4seal12KeyGenerator18create_galois_keysERKSt6vectorIjSaIjEERNS_10GaloisKeysE # -- Begin function _ZN4seal12KeyGenerator18create_galois_keysERKSt6vectorIjSaIjEERNS_10GaloisKeysE
	.p2align	4, 0x90
	.type	_ZN4seal12KeyGenerator18create_galois_keysERKSt6vectorIjSaIjEERNS_10GaloisKeysE,@function
_ZN4seal12KeyGenerator18create_galois_keysERKSt6vectorIjSaIjEERNS_10GaloisKeysE: # @_ZN4seal12KeyGenerator18create_galois_keysERKSt6vectorIjSaIjEERNS_10GaloisKeysE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rdx
	leaq	-96(%rbp), %rdi
	xorl	%ecx, %ecx
	callq	_ZN4seal12KeyGenerator18create_galois_keysERKSt6vectorIjSaIjEEb@PLT
	movq	-24(%rbp), %rdi
	leaq	-96(%rbp), %rsi
	callq	_ZN4seal10GaloisKeysaSEOS0_
	leaq	-96(%rbp), %rdi
	callq	_ZN4seal10GaloisKeysD2Ev
	addq	$96, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end481:
	.size	_ZN4seal12KeyGenerator18create_galois_keysERKSt6vectorIjSaIjEERNS_10GaloisKeysE, .Lfunc_end481-_ZN4seal12KeyGenerator18create_galois_keysERKSt6vectorIjSaIjEERNS_10GaloisKeysE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK4seal11SEALContext11ContextData11galois_toolEv,"axG",@progbits,_ZNK4seal11SEALContext11ContextData11galois_toolEv,comdat
	.weak	_ZNK4seal11SEALContext11ContextData11galois_toolEv # -- Begin function _ZNK4seal11SEALContext11ContextData11galois_toolEv
	.p2align	4, 0x90
	.type	_ZNK4seal11SEALContext11ContextData11galois_toolEv,@function
_ZNK4seal11SEALContext11ContextData11galois_toolEv: # @_ZNK4seal11SEALContext11ContextData11galois_toolEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	addq	$280, %rdi                      # imm = 0x118
	callq	_ZNK4seal4util7PointerINS0_10GaloisToolEvE3getEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end482:
	.size	_ZNK4seal11SEALContext11ContextData11galois_toolEv, .Lfunc_end482-_ZNK4seal11SEALContext11ContextData11galois_toolEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIjSaIjEED2Ev,"axG",@progbits,_ZNSt6vectorIjSaIjEED2Ev,comdat
	.weak	_ZNSt6vectorIjSaIjEED2Ev        # -- Begin function _ZNSt6vectorIjSaIjEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt6vectorIjSaIjEED2Ev,@function
_ZNSt6vectorIjSaIjEED2Ev:               # @_ZNSt6vectorIjSaIjEED2Ev
.Lfunc_begin61:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception61
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -48(%rbp)                 # 8-byte Spill
	movq	(%rdi), %rax
	movq	%rax, -40(%rbp)                 # 8-byte Spill
	movq	8(%rdi), %rax
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	callq	_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv
	movq	-40(%rbp), %rdi                 # 8-byte Reload
	movq	-32(%rbp), %rsi                 # 8-byte Reload
	movq	%rax, %rdx
.Ltmp876:
	callq	_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E
.Ltmp877:
	jmp	.LBB483_1
.LBB483_1:
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNSt12_Vector_baseIjSaIjEED2Ev
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB483_2:
	.cfi_def_cfa %rbp, 16
.Ltmp878:
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -16(%rbp)
	movl	%eax, -20(%rbp)
	callq	_ZNSt12_Vector_baseIjSaIjEED2Ev
# %bb.3:
	movq	-16(%rbp), %rdi
	callq	__clang_call_terminate
.Lfunc_end483:
	.size	_ZNSt6vectorIjSaIjEED2Ev, .Lfunc_end483-_ZNSt6vectorIjSaIjEED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNSt6vectorIjSaIjEED2Ev,"aG",@progbits,_ZNSt6vectorIjSaIjEED2Ev,comdat
	.p2align	2
GCC_except_table483:
.Lexception61:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase22-.Lttbaseref22
.Lttbaseref22:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end61-.Lcst_begin61
.Lcst_begin61:
	.uleb128 .Ltmp876-.Lfunc_begin61        # >> Call Site 1 <<
	.uleb128 .Ltmp877-.Ltmp876              #   Call between .Ltmp876 and .Ltmp877
	.uleb128 .Ltmp878-.Lfunc_begin61        #     jumps to .Ltmp878
	.byte	1                               #   On action: 1
.Lcst_end61:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase22:
	.p2align	2
                                        # -- End function
	.section	.text._ZN4seal10GaloisKeysaSEOS0_,"axG",@progbits,_ZN4seal10GaloisKeysaSEOS0_,comdat
	.weak	_ZN4seal10GaloisKeysaSEOS0_     # -- Begin function _ZN4seal10GaloisKeysaSEOS0_
	.p2align	4, 0x90
	.type	_ZN4seal10GaloisKeysaSEOS0_,@function
_ZN4seal10GaloisKeysaSEOS0_:            # @_ZN4seal10GaloisKeysaSEOS0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -24(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rsi
	callq	_ZN4seal11KSwitchKeysaSEOS0_
                                        # kill: def $rcx killed $rax
	movq	-24(%rbp), %rax                 # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end484:
	.size	_ZN4seal10GaloisKeysaSEOS0_, .Lfunc_end484-_ZN4seal10GaloisKeysaSEOS0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK4seal4util7PointerINS0_10GaloisToolEvE3getEv,"axG",@progbits,_ZNK4seal4util7PointerINS0_10GaloisToolEvE3getEv,comdat
	.weak	_ZNK4seal4util7PointerINS0_10GaloisToolEvE3getEv # -- Begin function _ZNK4seal4util7PointerINS0_10GaloisToolEvE3getEv
	.p2align	4, 0x90
	.type	_ZNK4seal4util7PointerINS0_10GaloisToolEvE3getEv,@function
_ZNK4seal4util7PointerINS0_10GaloisToolEvE3getEv: # @_ZNK4seal4util7PointerINS0_10GaloisToolEvE3getEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end485:
	.size	_ZNK4seal4util7PointerINS0_10GaloisToolEvE3getEv, .Lfunc_end485-_ZNK4seal4util7PointerINS0_10GaloisToolEvE3getEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt8_DestroyIPjjEvT_S1_RSaIT0_E,"axG",@progbits,_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E,comdat
	.weak	_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E # -- Begin function _ZSt8_DestroyIPjjEvT_S1_RSaIT0_E
	.p2align	4, 0x90
	.type	_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E,@function
_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E:       # @_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZSt8_DestroyIPjEvT_S1_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end486:
	.size	_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E, .Lfunc_end486-_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv,comdat
	.weak	_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv # -- Begin function _ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv,@function
_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv: # @_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end487:
	.size	_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv, .Lfunc_end487-_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIjSaIjEED2Ev,"axG",@progbits,_ZNSt12_Vector_baseIjSaIjEED2Ev,comdat
	.weak	_ZNSt12_Vector_baseIjSaIjEED2Ev # -- Begin function _ZNSt12_Vector_baseIjSaIjEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIjSaIjEED2Ev,@function
_ZNSt12_Vector_baseIjSaIjEED2Ev:        # @_ZNSt12_Vector_baseIjSaIjEED2Ev
.Lfunc_begin62:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception62
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -32(%rbp)                 # 8-byte Spill
	movq	(%rdi), %rsi
	movq	16(%rdi), %rdx
	subq	%rsi, %rdx
	sarq	$2, %rdx
.Ltmp879:
	callq	_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm
.Ltmp880:
	jmp	.LBB488_1
.LBB488_1:
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD2Ev
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB488_2:
	.cfi_def_cfa %rbp, 16
.Ltmp881:
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -16(%rbp)
	movl	%eax, -20(%rbp)
	callq	_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD2Ev
# %bb.3:
	movq	-16(%rbp), %rdi
	callq	__clang_call_terminate
.Lfunc_end488:
	.size	_ZNSt12_Vector_baseIjSaIjEED2Ev, .Lfunc_end488-_ZNSt12_Vector_baseIjSaIjEED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNSt12_Vector_baseIjSaIjEED2Ev,"aG",@progbits,_ZNSt12_Vector_baseIjSaIjEED2Ev,comdat
	.p2align	2
GCC_except_table488:
.Lexception62:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase23-.Lttbaseref23
.Lttbaseref23:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end62-.Lcst_begin62
.Lcst_begin62:
	.uleb128 .Ltmp879-.Lfunc_begin62        # >> Call Site 1 <<
	.uleb128 .Ltmp880-.Ltmp879              #   Call between .Ltmp879 and .Ltmp880
	.uleb128 .Ltmp881-.Lfunc_begin62        #     jumps to .Ltmp881
	.byte	1                               #   On action: 1
.Lcst_end62:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase23:
	.p2align	2
                                        # -- End function
	.section	.text._ZSt8_DestroyIPjEvT_S1_,"axG",@progbits,_ZSt8_DestroyIPjEvT_S1_,comdat
	.weak	_ZSt8_DestroyIPjEvT_S1_         # -- Begin function _ZSt8_DestroyIPjEvT_S1_
	.p2align	4, 0x90
	.type	_ZSt8_DestroyIPjEvT_S1_,@function
_ZSt8_DestroyIPjEvT_S1_:                # @_ZSt8_DestroyIPjEvT_S1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZNSt12_Destroy_auxILb1EE9__destroyIPjEEvT_S3_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end489:
	.size	_ZSt8_DestroyIPjEvT_S1_, .Lfunc_end489-_ZSt8_DestroyIPjEvT_S1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Destroy_auxILb1EE9__destroyIPjEEvT_S3_,"axG",@progbits,_ZNSt12_Destroy_auxILb1EE9__destroyIPjEEvT_S3_,comdat
	.weak	_ZNSt12_Destroy_auxILb1EE9__destroyIPjEEvT_S3_ # -- Begin function _ZNSt12_Destroy_auxILb1EE9__destroyIPjEEvT_S3_
	.p2align	4, 0x90
	.type	_ZNSt12_Destroy_auxILb1EE9__destroyIPjEEvT_S3_,@function
_ZNSt12_Destroy_auxILb1EE9__destroyIPjEEvT_S3_: # @_ZNSt12_Destroy_auxILb1EE9__destroyIPjEEvT_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end490:
	.size	_ZNSt12_Destroy_auxILb1EE9__destroyIPjEEvT_S3_, .Lfunc_end490-_ZNSt12_Destroy_auxILb1EE9__destroyIPjEEvT_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm,"axG",@progbits,_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm,comdat
	.weak	_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm # -- Begin function _ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm,@function
_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm: # @_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	cmpq	$0, -16(%rbp)
	je	.LBB491_2
# %bb.1:
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZNSt16allocator_traitsISaIjEE10deallocateERS0_Pjm
.LBB491_2:
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end491:
	.size	_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm, .Lfunc_end491-_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIjSaIjEE12_Vector_implD2Ev,"axG",@progbits,_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD2Ev,comdat
	.weak	_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD2Ev # -- Begin function _ZNSt12_Vector_baseIjSaIjEE12_Vector_implD2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD2Ev,@function
_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD2Ev: # @_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSaIjED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end492:
	.size	_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD2Ev, .Lfunc_end492-_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIjEE10deallocateERS0_Pjm,"axG",@progbits,_ZNSt16allocator_traitsISaIjEE10deallocateERS0_Pjm,comdat
	.weak	_ZNSt16allocator_traitsISaIjEE10deallocateERS0_Pjm # -- Begin function _ZNSt16allocator_traitsISaIjEE10deallocateERS0_Pjm
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIjEE10deallocateERS0_Pjm,@function
_ZNSt16allocator_traitsISaIjEE10deallocateERS0_Pjm: # @_ZNSt16allocator_traitsISaIjEE10deallocateERS0_Pjm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZN9__gnu_cxx13new_allocatorIjE10deallocateEPjm
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end493:
	.size	_ZNSt16allocator_traitsISaIjEE10deallocateERS0_Pjm, .Lfunc_end493-_ZNSt16allocator_traitsISaIjEE10deallocateERS0_Pjm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIjE10deallocateEPjm,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIjE10deallocateEPjm,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIjE10deallocateEPjm # -- Begin function _ZN9__gnu_cxx13new_allocatorIjE10deallocateEPjm
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIjE10deallocateEPjm,@function
_ZN9__gnu_cxx13new_allocatorIjE10deallocateEPjm: # @_ZN9__gnu_cxx13new_allocatorIjE10deallocateEPjm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZdlPv@PLT
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end494:
	.size	_ZN9__gnu_cxx13new_allocatorIjE10deallocateEPjm, .Lfunc_end494-_ZN9__gnu_cxx13new_allocatorIjE10deallocateEPjm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSaIjED2Ev,"axG",@progbits,_ZNSaIjED2Ev,comdat
	.weak	_ZNSaIjED2Ev                    # -- Begin function _ZNSaIjED2Ev
	.p2align	4, 0x90
	.type	_ZNSaIjED2Ev,@function
_ZNSaIjED2Ev:                           # @_ZNSaIjED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIjED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end495:
	.size	_ZNSaIjED2Ev, .Lfunc_end495-_ZNSaIjED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIjED2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIjED2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIjED2Ev # -- Begin function _ZN9__gnu_cxx13new_allocatorIjED2Ev
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIjED2Ev,@function
_ZN9__gnu_cxx13new_allocatorIjED2Ev:    # @_ZN9__gnu_cxx13new_allocatorIjED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end496:
	.size	_ZN9__gnu_cxx13new_allocatorIjED2Ev, .Lfunc_end496-_ZN9__gnu_cxx13new_allocatorIjED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIdSaIdEEC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIdSaIdEEC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIdSaIdEEC2Ev # -- Begin function _ZNSt12_Vector_baseIdSaIdEEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIdSaIdEEC2Ev,@function
_ZNSt12_Vector_baseIdSaIdEEC2Ev:        # @_ZNSt12_Vector_baseIdSaIdEEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end497:
	.size	_ZNSt12_Vector_baseIdSaIdEEC2Ev, .Lfunc_end497-_ZNSt12_Vector_baseIdSaIdEEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2Ev # -- Begin function _ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2Ev,@function
_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2Ev: # @_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -16(%rbp)                 # 8-byte Spill
	callq	_ZNSaIdEC2Ev
	movq	-16(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end498:
	.size	_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2Ev, .Lfunc_end498-_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSaIdEC2Ev,"axG",@progbits,_ZNSaIdEC2Ev,comdat
	.weak	_ZNSaIdEC2Ev                    # -- Begin function _ZNSaIdEC2Ev
	.p2align	4, 0x90
	.type	_ZNSaIdEC2Ev,@function
_ZNSaIdEC2Ev:                           # @_ZNSaIdEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIdEC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end499:
	.size	_ZNSaIdEC2Ev, .Lfunc_end499-_ZNSaIdEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataC2Ev # -- Begin function _ZNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataC2Ev,@function
_ZNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataC2Ev: # @_ZNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	$0, (%rax)
	movq	$0, 8(%rax)
	movq	$0, 16(%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end500:
	.size	_ZNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataC2Ev, .Lfunc_end500-_ZNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIdEC2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIdEC2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIdEC2Ev # -- Begin function _ZN9__gnu_cxx13new_allocatorIdEC2Ev
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIdEC2Ev,@function
_ZN9__gnu_cxx13new_allocatorIdEC2Ev:    # @_ZN9__gnu_cxx13new_allocatorIdEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end501:
	.size	_ZN9__gnu_cxx13new_allocatorIdEC2Ev, .Lfunc_end501-_ZN9__gnu_cxx13new_allocatorIdEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal13MemoryManager7GetPoolIJEEENS_16MemoryPoolHandleEmDpOT_,"axG",@progbits,_ZN4seal13MemoryManager7GetPoolIJEEENS_16MemoryPoolHandleEmDpOT_,comdat
	.weak	_ZN4seal13MemoryManager7GetPoolIJEEENS_16MemoryPoolHandleEmDpOT_ # -- Begin function _ZN4seal13MemoryManager7GetPoolIJEEENS_16MemoryPoolHandleEmDpOT_
	.p2align	4, 0x90
	.type	_ZN4seal13MemoryManager7GetPoolIJEEENS_16MemoryPoolHandleEmDpOT_,@function
_ZN4seal13MemoryManager7GetPoolIJEEENS_16MemoryPoolHandleEmDpOT_: # @_ZN4seal13MemoryManager7GetPoolIJEEENS_16MemoryPoolHandleEmDpOT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -40(%rbp)                 # 8-byte Spill
	movq	%rdi, %rax
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -24(%rbp)                 # 8-byte Spill
	subq	$1, %rax
	je	.LBB502_1
	jmp	.LBB502_6
.LBB502_6:
	movq	-24(%rbp), %rax                 # 8-byte Reload
	subq	$2, %rax
	je	.LBB502_2
	jmp	.LBB502_7
.LBB502_7:
	movq	-24(%rbp), %rax                 # 8-byte Reload
	subq	$4, %rax
	je	.LBB502_3
	jmp	.LBB502_4
.LBB502_1:
	movq	-40(%rbp), %rdi                 # 8-byte Reload
	callq	_ZN4seal16MemoryPoolHandle6GlobalEv
	jmp	.LBB502_5
.LBB502_2:
	movq	-40(%rbp), %rdi                 # 8-byte Reload
	xorl	%esi, %esi
	callq	_ZN4seal16MemoryPoolHandle3NewEb
	jmp	.LBB502_5
.LBB502_3:
	movq	-40(%rbp), %rdi                 # 8-byte Reload
	callq	_ZN4seal16MemoryPoolHandle11ThreadLocalEv
	jmp	.LBB502_5
.LBB502_4:
	callq	_ZN4seal13MemoryManager9GetMMProfEv
	movq	%rax, %rdi
	callq	_ZNKSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EEptEv
	movq	-40(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rsi
	movq	-16(%rbp), %rdx
	movq	(%rsi), %rax
	callq	*16(%rax)
.LBB502_5:
	movq	-32(%rbp), %rax                 # 8-byte Reload
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end502:
	.size	_ZN4seal13MemoryManager7GetPoolIJEEENS_16MemoryPoolHandleEmDpOT_, .Lfunc_end502-_ZN4seal13MemoryManager7GetPoolIJEEENS_16MemoryPoolHandleEmDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal16MemoryPoolHandleC2EOS0_,"axG",@progbits,_ZN4seal16MemoryPoolHandleC2EOS0_,comdat
	.weak	_ZN4seal16MemoryPoolHandleC2EOS0_ # -- Begin function _ZN4seal16MemoryPoolHandleC2EOS0_
	.p2align	4, 0x90
	.type	_ZN4seal16MemoryPoolHandleC2EOS0_,@function
_ZN4seal16MemoryPoolHandleC2EOS0_:      # @_ZN4seal16MemoryPoolHandleC2EOS0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -24(%rbp)                 # 8-byte Spill
	xorl	%eax, %eax
	movl	%eax, %esi
	callq	_ZNSt10shared_ptrIN4seal4util10MemoryPoolEEC2EDn
	movq	-16(%rbp), %rdi
	callq	_ZSt4moveIRN4seal16MemoryPoolHandleEEONSt16remove_referenceIT_E4typeEOS4_
	movq	-24(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZN4seal16MemoryPoolHandleaSEOS0_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end503:
	.size	_ZN4seal16MemoryPoolHandleC2EOS0_, .Lfunc_end503-_ZN4seal16MemoryPoolHandleC2EOS0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal8DynArrayImEC2ENS_16MemoryPoolHandleE,"axG",@progbits,_ZN4seal8DynArrayImEC2ENS_16MemoryPoolHandleE,comdat
	.weak	_ZN4seal8DynArrayImEC2ENS_16MemoryPoolHandleE # -- Begin function _ZN4seal8DynArrayImEC2ENS_16MemoryPoolHandleE
	.p2align	4, 0x90
	.type	_ZN4seal8DynArrayImEC2ENS_16MemoryPoolHandleE,@function
_ZN4seal8DynArrayImEC2ENS_16MemoryPoolHandleE: # @_ZN4seal8DynArrayImEC2ENS_16MemoryPoolHandleE
.Lfunc_begin63:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception63
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rsi, -48(%rbp)                 # 8-byte Spill
	movq	%rdi, %rax
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	callq	_ZSt4moveIRN4seal16MemoryPoolHandleEEONSt16remove_referenceIT_E4typeEOS4_
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZN4seal16MemoryPoolHandleC2EOS0_
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	movq	$0, 16(%rdi)
	movq	$0, 24(%rdi)
	addq	$32, %rdi
	movq	%rdi, -40(%rbp)                 # 8-byte Spill
	callq	_ZN4seal4util7PointerImvEC2Ev
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNK4seal16MemoryPoolHandlecvbEv
	testb	$1, %al
	jne	.LBB504_5
# %bb.1:
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rdi
	movq	%rdi, %rax
	movq	%rax, -56(%rbp)                 # 8-byte Spill
.Ltmp882:
	leaq	.L.str.60(%rip), %rsi
	callq	_ZNSt16invalid_argumentC1EPKc@PLT
.Ltmp883:
	jmp	.LBB504_2
.LBB504_2:
.Ltmp885:
	movq	-56(%rbp), %rdi                 # 8-byte Reload
	movq	_ZTISt16invalid_argument@GOTPCREL(%rip), %rsi
	movq	_ZNSt16invalid_argumentD1Ev@GOTPCREL(%rip), %rdx
	callq	__cxa_throw@PLT
.Ltmp886:
	jmp	.LBB504_8
.LBB504_3:
.Ltmp884:
	movq	-56(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -16(%rbp)
	movl	%eax, -20(%rbp)
	callq	__cxa_free_exception@PLT
	jmp	.LBB504_6
.LBB504_4:
.Ltmp887:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -16(%rbp)
	movl	%eax, -20(%rbp)
	jmp	.LBB504_6
.LBB504_5:
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB504_6:
	.cfi_def_cfa %rbp, 16
	movq	-40(%rbp), %rdi                 # 8-byte Reload
	callq	_ZN4seal4util7PointerImvED2Ev
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	callq	_ZN4seal16MemoryPoolHandleD2Ev
# %bb.7:
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.LBB504_8:
.Lfunc_end504:
	.size	_ZN4seal8DynArrayImEC2ENS_16MemoryPoolHandleE, .Lfunc_end504-_ZN4seal8DynArrayImEC2ENS_16MemoryPoolHandleE
	.cfi_endproc
	.section	.gcc_except_table._ZN4seal8DynArrayImEC2ENS_16MemoryPoolHandleE,"aG",@progbits,_ZN4seal8DynArrayImEC2ENS_16MemoryPoolHandleE,comdat
	.p2align	2
GCC_except_table504:
.Lexception63:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end63-.Lcst_begin63
.Lcst_begin63:
	.uleb128 .Lfunc_begin63-.Lfunc_begin63  # >> Call Site 1 <<
	.uleb128 .Ltmp882-.Lfunc_begin63        #   Call between .Lfunc_begin63 and .Ltmp882
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp882-.Lfunc_begin63        # >> Call Site 2 <<
	.uleb128 .Ltmp883-.Ltmp882              #   Call between .Ltmp882 and .Ltmp883
	.uleb128 .Ltmp884-.Lfunc_begin63        #     jumps to .Ltmp884
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp885-.Lfunc_begin63        # >> Call Site 3 <<
	.uleb128 .Ltmp886-.Ltmp885              #   Call between .Ltmp885 and .Ltmp886
	.uleb128 .Ltmp887-.Lfunc_begin63        #     jumps to .Ltmp887
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp886-.Lfunc_begin63        # >> Call Site 4 <<
	.uleb128 .Lfunc_end504-.Ltmp886         #   Call between .Ltmp886 and .Lfunc_end504
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end63:
	.p2align	2
                                        # -- End function
	.section	.text._ZN4seal4util7PointerImvEC2Ev,"axG",@progbits,_ZN4seal4util7PointerImvEC2Ev,comdat
	.weak	_ZN4seal4util7PointerImvEC2Ev   # -- Begin function _ZN4seal4util7PointerImvEC2Ev
	.p2align	4, 0x90
	.type	_ZN4seal4util7PointerImvEC2Ev,@function
_ZN4seal4util7PointerImvEC2Ev:          # @_ZN4seal4util7PointerImvEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	$0, (%rax)
	movq	$0, 8(%rax)
	movq	$0, 16(%rax)
	movb	$0, 24(%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end505:
	.size	_ZN4seal4util7PointerImvEC2Ev, .Lfunc_end505-_ZN4seal4util7PointerImvEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK4seal16MemoryPoolHandlecvbEv,"axG",@progbits,_ZNK4seal16MemoryPoolHandlecvbEv,comdat
	.weak	_ZNK4seal16MemoryPoolHandlecvbEv # -- Begin function _ZNK4seal16MemoryPoolHandlecvbEv
	.p2align	4, 0x90
	.type	_ZNK4seal16MemoryPoolHandlecvbEv,@function
_ZNK4seal16MemoryPoolHandlecvbEv:       # @_ZNK4seal16MemoryPoolHandlecvbEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNKSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEcvbEv
	andb	$1, %al
	movzbl	%al, %eax
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end506:
	.size	_ZNK4seal16MemoryPoolHandlecvbEv, .Lfunc_end506-_ZNK4seal16MemoryPoolHandlecvbEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal11CKKSEncoder6encodeEdSt5arrayImLm4EEdRNS_9PlaintextENS_16MemoryPoolHandleE,"axG",@progbits,_ZN4seal11CKKSEncoder6encodeEdSt5arrayImLm4EEdRNS_9PlaintextENS_16MemoryPoolHandleE,comdat
	.weak	_ZN4seal11CKKSEncoder6encodeEdSt5arrayImLm4EEdRNS_9PlaintextENS_16MemoryPoolHandleE # -- Begin function _ZN4seal11CKKSEncoder6encodeEdSt5arrayImLm4EEdRNS_9PlaintextENS_16MemoryPoolHandleE
	.p2align	4, 0x90
	.type	_ZN4seal11CKKSEncoder6encodeEdSt5arrayImLm4EEdRNS_9PlaintextENS_16MemoryPoolHandleE,@function
_ZN4seal11CKKSEncoder6encodeEdSt5arrayImLm4EEdRNS_9PlaintextENS_16MemoryPoolHandleE: # @_ZN4seal11CKKSEncoder6encodeEdSt5arrayImLm4EEdRNS_9PlaintextENS_16MemoryPoolHandleE
.Lfunc_begin64:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception64
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$176, %rsp
	movq	%rdx, -144(%rbp)                # 8-byte Spill
	movq	%rdi, %rcx
	movq	-144(%rbp), %rdi                # 8-byte Reload
	leaq	16(%rbp), %rax
	movq	%rcx, -8(%rbp)
	movsd	%xmm0, -16(%rbp)
	movsd	%xmm1, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-8(%rbp), %rcx
	movq	%rcx, -136(%rbp)                # 8-byte Spill
	movsd	-16(%rbp), %xmm0                # xmm0 = mem[0],zero
	movsd	%xmm0, -128(%rbp)               # 8-byte Spill
	movups	(%rax), %xmm0
	movups	16(%rax), %xmm1
	movaps	%xmm1, -48(%rbp)
	movaps	%xmm0, -64(%rbp)
	movsd	-24(%rbp), %xmm0                # xmm0 = mem[0],zero
	movsd	%xmm0, -120(%rbp)               # 8-byte Spill
	movq	-32(%rbp), %rax
	movq	%rax, -112(%rbp)                # 8-byte Spill
	callq	_ZSt4moveIRN4seal16MemoryPoolHandleEEONSt16remove_referenceIT_E4typeEOS4_
	movq	%rax, %rsi
	leaq	-80(%rbp), %rdi
	movq	%rdi, -104(%rbp)                # 8-byte Spill
	callq	_ZN4seal16MemoryPoolHandleC2EOS0_
	movq	-136(%rbp), %rdi                # 8-byte Reload
	movsd	-128(%rbp), %xmm0               # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movsd	-120(%rbp), %xmm1               # 8-byte Reload
                                        # xmm1 = mem[0],zero
	movq	-112(%rbp), %rsi                # 8-byte Reload
	movq	-104(%rbp), %rdx                # 8-byte Reload
.Ltmp888:
	movaps	-64(%rbp), %xmm2
	movaps	-48(%rbp), %xmm3
	movq	%rsp, %rax
	movups	%xmm3, 16(%rax)
	movups	%xmm2, (%rax)
	callq	_ZN4seal11CKKSEncoder15encode_internalEdSt5arrayImLm4EEdRNS_9PlaintextENS_16MemoryPoolHandleE@PLT
.Ltmp889:
	jmp	.LBB507_1
.LBB507_1:
	leaq	-80(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	addq	$176, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB507_2:
	.cfi_def_cfa %rbp, 16
.Ltmp890:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -88(%rbp)
	movl	%eax, -92(%rbp)
	leaq	-80(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
# %bb.3:
	movq	-88(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end507:
	.size	_ZN4seal11CKKSEncoder6encodeEdSt5arrayImLm4EEdRNS_9PlaintextENS_16MemoryPoolHandleE, .Lfunc_end507-_ZN4seal11CKKSEncoder6encodeEdSt5arrayImLm4EEdRNS_9PlaintextENS_16MemoryPoolHandleE
	.cfi_endproc
	.section	.gcc_except_table._ZN4seal11CKKSEncoder6encodeEdSt5arrayImLm4EEdRNS_9PlaintextENS_16MemoryPoolHandleE,"aG",@progbits,_ZN4seal11CKKSEncoder6encodeEdSt5arrayImLm4EEdRNS_9PlaintextENS_16MemoryPoolHandleE,comdat
	.p2align	2
GCC_except_table507:
.Lexception64:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end64-.Lcst_begin64
.Lcst_begin64:
	.uleb128 .Ltmp888-.Lfunc_begin64        # >> Call Site 1 <<
	.uleb128 .Ltmp889-.Ltmp888              #   Call between .Ltmp888 and .Ltmp889
	.uleb128 .Ltmp890-.Lfunc_begin64        #     jumps to .Ltmp890
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp889-.Lfunc_begin64        # >> Call Site 2 <<
	.uleb128 .Lfunc_end507-.Ltmp889         #   Call between .Ltmp889 and .Lfunc_end507
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end64:
	.p2align	2
                                        # -- End function
	.section	.text._ZNK4seal11SEALContext14first_parms_idEv,"axG",@progbits,_ZNK4seal11SEALContext14first_parms_idEv,comdat
	.weak	_ZNK4seal11SEALContext14first_parms_idEv # -- Begin function _ZNK4seal11SEALContext14first_parms_idEv
	.p2align	4, 0x90
	.type	_ZNK4seal11SEALContext14first_parms_idEv,@function
_ZNK4seal11SEALContext14first_parms_idEv: # @_ZNK4seal11SEALContext14first_parms_idEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	addq	$48, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end508:
	.size	_ZNK4seal11SEALContext14first_parms_idEv, .Lfunc_end508-_ZNK4seal11SEALContext14first_parms_idEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4setwi,"axG",@progbits,_ZSt4setwi,comdat
	.weak	_ZSt4setwi                      # -- Begin function _ZSt4setwi
	.p2align	4, 0x90
	.type	_ZSt4setwi,@function
_ZSt4setwi:                             # @_ZSt4setwi
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movl	%edi, -12(%rbp)
	movl	-12(%rbp), %eax
	movl	%eax, -8(%rbp)
	movl	-8(%rbp), %eax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end509:
	.size	_ZSt4setwi, .Lfunc_end509-_ZSt4setwi
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EED2Ev,"axG",@progbits,_ZNSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EED2Ev,comdat
	.weak	_ZNSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EED2Ev # -- Begin function _ZNSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EED2Ev,@function
_ZNSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EED2Ev: # @_ZNSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	addq	$8, %rdi
	callq	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end510:
	.size	_ZNSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EED2Ev, .Lfunc_end510-_ZNSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8ios_base4setfESt13_Ios_FmtflagsS0_,"axG",@progbits,_ZNSt8ios_base4setfESt13_Ios_FmtflagsS0_,comdat
	.weak	_ZNSt8ios_base4setfESt13_Ios_FmtflagsS0_ # -- Begin function _ZNSt8ios_base4setfESt13_Ios_FmtflagsS0_
	.p2align	4, 0x90
	.type	_ZNSt8ios_base4setfESt13_Ios_FmtflagsS0_,@function
_ZNSt8ios_base4setfESt13_Ios_FmtflagsS0_: # @_ZNSt8ios_base4setfESt13_Ios_FmtflagsS0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movl	%esi, -12(%rbp)
	movl	%edx, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	movl	24(%rax), %eax
	movl	%eax, -20(%rbp)
	movl	-16(%rbp), %edi
	callq	_ZStcoSt13_Ios_Fmtflags
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	movl	%eax, %esi
	addq	$24, %rdi
	callq	_ZStaNRSt13_Ios_FmtflagsS_
	movl	-12(%rbp), %edi
	movl	-16(%rbp), %esi
	callq	_ZStanSt13_Ios_FmtflagsS_
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	movl	%eax, %esi
	addq	$24, %rdi
	callq	_ZStoRRSt13_Ios_FmtflagsS_
	movl	-20(%rbp), %eax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end511:
	.size	_ZNSt8ios_base4setfESt13_Ios_FmtflagsS0_, .Lfunc_end511-_ZNSt8ios_base4setfESt13_Ios_FmtflagsS0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZStaNRSt13_Ios_FmtflagsS_,"axG",@progbits,_ZStaNRSt13_Ios_FmtflagsS_,comdat
	.weak	_ZStaNRSt13_Ios_FmtflagsS_      # -- Begin function _ZStaNRSt13_Ios_FmtflagsS_
	.p2align	4, 0x90
	.type	_ZStaNRSt13_Ios_FmtflagsS_,@function
_ZStaNRSt13_Ios_FmtflagsS_:             # @_ZStaNRSt13_Ios_FmtflagsS_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movl	%esi, -12(%rbp)
	movq	-8(%rbp), %rax
	movl	(%rax), %edi
	movl	-12(%rbp), %esi
	callq	_ZStanSt13_Ios_FmtflagsS_
	movl	%eax, %ecx
	movq	-8(%rbp), %rax
	movl	%ecx, (%rax)
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end512:
	.size	_ZStaNRSt13_Ios_FmtflagsS_, .Lfunc_end512-_ZStaNRSt13_Ios_FmtflagsS_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZStcoSt13_Ios_Fmtflags,"axG",@progbits,_ZStcoSt13_Ios_Fmtflags,comdat
	.weak	_ZStcoSt13_Ios_Fmtflags         # -- Begin function _ZStcoSt13_Ios_Fmtflags
	.p2align	4, 0x90
	.type	_ZStcoSt13_Ios_Fmtflags,@function
_ZStcoSt13_Ios_Fmtflags:                # @_ZStcoSt13_Ios_Fmtflags
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movl	%edi, -4(%rbp)
	movl	-4(%rbp), %eax
	xorl	$-1, %eax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end513:
	.size	_ZStcoSt13_Ios_Fmtflags, .Lfunc_end513-_ZStcoSt13_Ios_Fmtflags
	.cfi_endproc
                                        # -- End function
	.section	.text._ZStoRRSt13_Ios_FmtflagsS_,"axG",@progbits,_ZStoRRSt13_Ios_FmtflagsS_,comdat
	.weak	_ZStoRRSt13_Ios_FmtflagsS_      # -- Begin function _ZStoRRSt13_Ios_FmtflagsS_
	.p2align	4, 0x90
	.type	_ZStoRRSt13_Ios_FmtflagsS_,@function
_ZStoRRSt13_Ios_FmtflagsS_:             # @_ZStoRRSt13_Ios_FmtflagsS_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movl	%esi, -12(%rbp)
	movq	-8(%rbp), %rax
	movl	(%rax), %edi
	movl	-12(%rbp), %esi
	callq	_ZStorSt13_Ios_FmtflagsS_
	movl	%eax, %ecx
	movq	-8(%rbp), %rax
	movl	%ecx, (%rax)
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end514:
	.size	_ZStoRRSt13_Ios_FmtflagsS_, .Lfunc_end514-_ZStoRRSt13_Ios_FmtflagsS_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZStanSt13_Ios_FmtflagsS_,"axG",@progbits,_ZStanSt13_Ios_FmtflagsS_,comdat
	.weak	_ZStanSt13_Ios_FmtflagsS_       # -- Begin function _ZStanSt13_Ios_FmtflagsS_
	.p2align	4, 0x90
	.type	_ZStanSt13_Ios_FmtflagsS_,@function
_ZStanSt13_Ios_FmtflagsS_:              # @_ZStanSt13_Ios_FmtflagsS_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movl	%edi, -4(%rbp)
	movl	%esi, -8(%rbp)
	movl	-4(%rbp), %eax
	andl	-8(%rbp), %eax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end515:
	.size	_ZStanSt13_Ios_FmtflagsS_, .Lfunc_end515-_ZStanSt13_Ios_FmtflagsS_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZStorSt13_Ios_FmtflagsS_,"axG",@progbits,_ZStorSt13_Ios_FmtflagsS_,comdat
	.weak	_ZStorSt13_Ios_FmtflagsS_       # -- Begin function _ZStorSt13_Ios_FmtflagsS_
	.p2align	4, 0x90
	.type	_ZStorSt13_Ios_FmtflagsS_,@function
_ZStorSt13_Ios_FmtflagsS_:              # @_ZStorSt13_Ios_FmtflagsS_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movl	%edi, -4(%rbp)
	movl	%esi, -8(%rbp)
	movl	-4(%rbp), %eax
	orl	-8(%rbp), %eax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end516:
	.size	_ZStorSt13_Ios_FmtflagsS_, .Lfunc_end516-_ZStorSt13_Ios_FmtflagsS_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal8DynArrayImED2Ev,"axG",@progbits,_ZN4seal8DynArrayImED2Ev,comdat
	.weak	_ZN4seal8DynArrayImED2Ev        # -- Begin function _ZN4seal8DynArrayImED2Ev
	.p2align	4, 0x90
	.type	_ZN4seal8DynArrayImED2Ev,@function
_ZN4seal8DynArrayImED2Ev:               # @_ZN4seal8DynArrayImED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -16(%rbp)                 # 8-byte Spill
	callq	_ZN4seal8DynArrayImE7releaseEv
	movq	-16(%rbp), %rdi                 # 8-byte Reload
	addq	$32, %rdi
	callq	_ZN4seal4util7PointerImvED2Ev
	movq	-16(%rbp), %rdi                 # 8-byte Reload
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end517:
	.size	_ZN4seal8DynArrayImED2Ev, .Lfunc_end517-_ZN4seal8DynArrayImED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal8DynArrayImE7releaseEv,"axG",@progbits,_ZN4seal8DynArrayImE7releaseEv,comdat
	.weak	_ZN4seal8DynArrayImE7releaseEv  # -- Begin function _ZN4seal8DynArrayImE7releaseEv
	.p2align	4, 0x90
	.type	_ZN4seal8DynArrayImE7releaseEv,@function
_ZN4seal8DynArrayImE7releaseEv:         # @_ZN4seal8DynArrayImE7releaseEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	$0, 16(%rdi)
	movq	$0, 24(%rdi)
	addq	$32, %rdi
	callq	_ZN4seal4util7PointerImvE7releaseEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end518:
	.size	_ZN4seal8DynArrayImE7releaseEv, .Lfunc_end518-_ZN4seal8DynArrayImE7releaseEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal4util7PointerISt7complexIdEvED2Ev,"axG",@progbits,_ZN4seal4util7PointerISt7complexIdEvED2Ev,comdat
	.weak	_ZN4seal4util7PointerISt7complexIdEvED2Ev # -- Begin function _ZN4seal4util7PointerISt7complexIdEvED2Ev
	.p2align	4, 0x90
	.type	_ZN4seal4util7PointerISt7complexIdEvED2Ev,@function
_ZN4seal4util7PointerISt7complexIdEvED2Ev: # @_ZN4seal4util7PointerISt7complexIdEvED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN4seal4util7PointerISt7complexIdEvE7releaseEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end519:
	.size	_ZN4seal4util7PointerISt7complexIdEvED2Ev, .Lfunc_end519-_ZN4seal4util7PointerISt7complexIdEvED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt10shared_ptrIN4seal4util12ComplexRootsEED2Ev,"axG",@progbits,_ZNSt10shared_ptrIN4seal4util12ComplexRootsEED2Ev,comdat
	.weak	_ZNSt10shared_ptrIN4seal4util12ComplexRootsEED2Ev # -- Begin function _ZNSt10shared_ptrIN4seal4util12ComplexRootsEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt10shared_ptrIN4seal4util12ComplexRootsEED2Ev,@function
_ZNSt10shared_ptrIN4seal4util12ComplexRootsEED2Ev: # @_ZNSt10shared_ptrIN4seal4util12ComplexRootsEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt12__shared_ptrIN4seal4util12ComplexRootsELN9__gnu_cxx12_Lock_policyE2EED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end520:
	.size	_ZNSt10shared_ptrIN4seal4util12ComplexRootsEED2Ev, .Lfunc_end520-_ZNSt10shared_ptrIN4seal4util12ComplexRootsEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal4util7PointerISt7complexIdEvE7releaseEv,"axG",@progbits,_ZN4seal4util7PointerISt7complexIdEvE7releaseEv,comdat
	.weak	_ZN4seal4util7PointerISt7complexIdEvE7releaseEv # -- Begin function _ZN4seal4util7PointerISt7complexIdEvE7releaseEv
	.p2align	4, 0x90
	.type	_ZN4seal4util7PointerISt7complexIdEvE7releaseEv,@function
_ZN4seal4util7PointerISt7complexIdEvE7releaseEv: # @_ZN4seal4util7PointerISt7complexIdEvE7releaseEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -16(%rbp)                 # 8-byte Spill
	cmpq	$0, 8(%rax)
	je	.LBB521_2
# %bb.1:
	movq	-16(%rbp), %rax                 # 8-byte Reload
	movq	8(%rax), %rdi
	movq	16(%rax), %rsi
	movq	(%rdi), %rax
	callq	*40(%rax)
	jmp	.LBB521_8
.LBB521_2:
	movq	-16(%rbp), %rax                 # 8-byte Reload
	cmpq	$0, (%rax)
	je	.LBB521_7
# %bb.3:
	movq	-16(%rbp), %rax                 # 8-byte Reload
	testb	$1, 24(%rax)
	jne	.LBB521_7
# %bb.4:
	movq	-16(%rbp), %rax                 # 8-byte Reload
	movq	(%rax), %rax
	movq	%rax, -24(%rbp)                 # 8-byte Spill
	cmpq	$0, %rax
	je	.LBB521_6
# %bb.5:
	movq	-24(%rbp), %rdi                 # 8-byte Reload
	callq	_ZdaPv@PLT
.LBB521_6:
	jmp	.LBB521_7
.LBB521_7:
	jmp	.LBB521_8
.LBB521_8:
	movq	-16(%rbp), %rax                 # 8-byte Reload
	movq	$0, (%rax)
	movq	$0, 8(%rax)
	movq	$0, 16(%rax)
	movb	$0, 24(%rax)
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end521:
	.size	_ZN4seal4util7PointerISt7complexIdEvE7releaseEv, .Lfunc_end521-_ZN4seal4util7PointerISt7complexIdEvE7releaseEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12__shared_ptrIN4seal4util12ComplexRootsELN9__gnu_cxx12_Lock_policyE2EED2Ev,"axG",@progbits,_ZNSt12__shared_ptrIN4seal4util12ComplexRootsELN9__gnu_cxx12_Lock_policyE2EED2Ev,comdat
	.weak	_ZNSt12__shared_ptrIN4seal4util12ComplexRootsELN9__gnu_cxx12_Lock_policyE2EED2Ev # -- Begin function _ZNSt12__shared_ptrIN4seal4util12ComplexRootsELN9__gnu_cxx12_Lock_policyE2EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt12__shared_ptrIN4seal4util12ComplexRootsELN9__gnu_cxx12_Lock_policyE2EED2Ev,@function
_ZNSt12__shared_ptrIN4seal4util12ComplexRootsELN9__gnu_cxx12_Lock_policyE2EED2Ev: # @_ZNSt12__shared_ptrIN4seal4util12ComplexRootsELN9__gnu_cxx12_Lock_policyE2EED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	addq	$8, %rdi
	callq	_ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end522:
	.size	_ZNSt12__shared_ptrIN4seal4util12ComplexRootsELN9__gnu_cxx12_Lock_policyE2EED2Ev, .Lfunc_end522-_ZNSt12__shared_ptrIN4seal4util12ComplexRootsELN9__gnu_cxx12_Lock_policyE2EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt3mapImSt4pairImmESt4lessImESaIS0_IKmS1_EEED2Ev,"axG",@progbits,_ZNSt3mapImSt4pairImmESt4lessImESaIS0_IKmS1_EEED2Ev,comdat
	.weak	_ZNSt3mapImSt4pairImmESt4lessImESaIS0_IKmS1_EEED2Ev # -- Begin function _ZNSt3mapImSt4pairImmESt4lessImESaIS0_IKmS1_EEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt3mapImSt4pairImmESt4lessImESaIS0_IKmS1_EEED2Ev,@function
_ZNSt3mapImSt4pairImmESt4lessImESaIS0_IKmS1_EEED2Ev: # @_ZNSt3mapImSt4pairImmESt4lessImESaIS0_IKmS1_EEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end523:
	.size	_ZNSt3mapImSt4pairImmESt4lessImESaIS0_IKmS1_EEED2Ev, .Lfunc_end523-_ZNSt3mapImSt4pairImmESt4lessImESaIS0_IKmS1_EEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EED2Ev,"axG",@progbits,_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EED2Ev,comdat
	.weak	_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EED2Ev # -- Begin function _ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EED2Ev,@function
_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EED2Ev: # @_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EED2Ev
.Lfunc_begin65:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception65
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -32(%rbp)                 # 8-byte Spill
	callq	_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE8_M_beginEv
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rsi
.Ltmp891:
	callq	_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E
.Ltmp892:
	jmp	.LBB524_1
.LBB524_1:
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE13_Rb_tree_implIS7_Lb1EED2Ev
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB524_2:
	.cfi_def_cfa %rbp, 16
.Ltmp893:
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -16(%rbp)
	movl	%eax, -20(%rbp)
	callq	_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE13_Rb_tree_implIS7_Lb1EED2Ev
# %bb.3:
	movq	-16(%rbp), %rdi
	callq	__clang_call_terminate
.Lfunc_end524:
	.size	_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EED2Ev, .Lfunc_end524-_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EED2Ev,"aG",@progbits,_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EED2Ev,comdat
	.p2align	2
GCC_except_table524:
.Lexception65:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase24-.Lttbaseref24
.Lttbaseref24:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end65-.Lcst_begin65
.Lcst_begin65:
	.uleb128 .Ltmp891-.Lfunc_begin65        # >> Call Site 1 <<
	.uleb128 .Ltmp892-.Ltmp891              #   Call between .Ltmp891 and .Ltmp892
	.uleb128 .Ltmp893-.Lfunc_begin65        #     jumps to .Ltmp893
	.byte	1                               #   On action: 1
.Lcst_end65:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase24:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E,"axG",@progbits,_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E,comdat
	.weak	_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E # -- Begin function _ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E,@function
_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E: # @_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -32(%rbp)                 # 8-byte Spill
.LBB525_1:                              # =>This Inner Loop Header: Depth=1
	cmpq	$0, -16(%rbp)
	je	.LBB525_3
# %bb.2:                                #   in Loop: Header=BB525_1 Depth=1
	movq	-16(%rbp), %rdi
	callq	_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E
	movq	-16(%rbp), %rdi
	callq	_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, -24(%rbp)
	movq	-16(%rbp), %rsi
	callq	_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS3_E
	movq	-24(%rbp), %rax
	movq	%rax, -16(%rbp)
	jmp	.LBB525_1
.LBB525_3:
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end525:
	.size	_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E, .Lfunc_end525-_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE8_M_beginEv,"axG",@progbits,_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE8_M_beginEv,comdat
	.weak	_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE8_M_beginEv # -- Begin function _ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE8_M_beginEv
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE8_M_beginEv,@function
_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE8_M_beginEv: # @_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE8_M_beginEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNKSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE9_M_mbeginEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end526:
	.size	_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE8_M_beginEv, .Lfunc_end526-_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE8_M_beginEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE13_Rb_tree_implIS7_Lb1EED2Ev,"axG",@progbits,_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE13_Rb_tree_implIS7_Lb1EED2Ev,comdat
	.weak	_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE13_Rb_tree_implIS7_Lb1EED2Ev # -- Begin function _ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE13_Rb_tree_implIS7_Lb1EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE13_Rb_tree_implIS7_Lb1EED2Ev,@function
_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE13_Rb_tree_implIS7_Lb1EED2Ev: # @_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE13_Rb_tree_implIS7_Lb1EED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSaISt13_Rb_tree_nodeISt4pairIKmS0_ImmEEEED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end527:
	.size	_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE13_Rb_tree_implIS7_Lb1EED2Ev, .Lfunc_end527-_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE13_Rb_tree_implIS7_Lb1EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base,"axG",@progbits,_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base,comdat
	.weak	_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base # -- Begin function _ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base,@function
_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base: # @_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	24(%rax), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end528:
	.size	_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base, .Lfunc_end528-_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base,"axG",@progbits,_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base,comdat
	.weak	_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base # -- Begin function _ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base,@function
_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base: # @_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	16(%rax), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end529:
	.size	_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base, .Lfunc_end529-_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS3_E,"axG",@progbits,_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS3_E,comdat
	.weak	_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS3_E # -- Begin function _ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS3_E
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS3_E,@function
_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS3_E: # @_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS3_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -24(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rsi
	callq	_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS3_E
	movq	-24(%rbp), %rdi                 # 8-byte Reload
	movq	-16(%rbp), %rsi
	callq	_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS3_E
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end530:
	.size	_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS3_E, .Lfunc_end530-_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS3_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS3_E,"axG",@progbits,_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS3_E,comdat
	.weak	_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS3_E # -- Begin function _ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS3_E
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS3_E,@function
_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS3_E: # @_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS3_E
.Lfunc_begin66:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception66
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE21_M_get_Node_allocatorEv
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
.Ltmp894:
	callq	_ZNSt13_Rb_tree_nodeISt4pairIKmS0_ImmEEE9_M_valptrEv
.Ltmp895:
	movq	%rax, -24(%rbp)                 # 8-byte Spill
	jmp	.LBB531_1
.LBB531_1:
	movq	-24(%rbp), %rsi                 # 8-byte Reload
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKmS1_ImmEEEEE7destroyIS4_EEvRS6_PT_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB531_2:
	.cfi_def_cfa %rbp, 16
.Ltmp896:
	movq	%rax, %rdi
                                        # kill: def $eax killed $edx killed $rdx
	callq	__clang_call_terminate
.Lfunc_end531:
	.size	_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS3_E, .Lfunc_end531-_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS3_E
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS3_E,"aG",@progbits,_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS3_E,comdat
	.p2align	2
GCC_except_table531:
.Lexception66:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase25-.Lttbaseref25
.Lttbaseref25:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end66-.Lcst_begin66
.Lcst_begin66:
	.uleb128 .Ltmp894-.Lfunc_begin66        # >> Call Site 1 <<
	.uleb128 .Ltmp895-.Ltmp894              #   Call between .Ltmp894 and .Ltmp895
	.uleb128 .Ltmp896-.Lfunc_begin66        #     jumps to .Ltmp896
	.byte	1                               #   On action: 1
.Lcst_end66:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase25:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS3_E,"axG",@progbits,_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS3_E,comdat
	.weak	_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS3_E # -- Begin function _ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS3_E
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS3_E,@function
_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS3_E: # @_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS3_E
.Lfunc_begin67:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception67
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE21_M_get_Node_allocatorEv
	movq	%rax, %rdi
	movq	-16(%rbp), %rsi
.Ltmp897:
	movl	$1, %edx
	callq	_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKmS1_ImmEEEEE10deallocateERS6_PS5_m
.Ltmp898:
	jmp	.LBB532_1
.LBB532_1:
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB532_2:
	.cfi_def_cfa %rbp, 16
.Ltmp899:
	movq	%rax, %rdi
                                        # kill: def $eax killed $edx killed $rdx
	callq	__clang_call_terminate
.Lfunc_end532:
	.size	_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS3_E, .Lfunc_end532-_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS3_E
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS3_E,"aG",@progbits,_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS3_E,comdat
	.p2align	2
GCC_except_table532:
.Lexception67:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase26-.Lttbaseref26
.Lttbaseref26:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end67-.Lcst_begin67
.Lcst_begin67:
	.uleb128 .Ltmp897-.Lfunc_begin67        # >> Call Site 1 <<
	.uleb128 .Ltmp898-.Ltmp897              #   Call between .Ltmp897 and .Ltmp898
	.uleb128 .Ltmp899-.Lfunc_begin67        #     jumps to .Ltmp899
	.byte	1                               #   On action: 1
.Lcst_end67:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase26:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKmS1_ImmEEEEE7destroyIS4_EEvRS6_PT_,"axG",@progbits,_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKmS1_ImmEEEEE7destroyIS4_EEvRS6_PT_,comdat
	.weak	_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKmS1_ImmEEEEE7destroyIS4_EEvRS6_PT_ # -- Begin function _ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKmS1_ImmEEEEE7destroyIS4_EEvRS6_PT_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKmS1_ImmEEEEE7destroyIS4_EEvRS6_PT_,@function
_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKmS1_ImmEEEEE7destroyIS4_EEvRS6_PT_: # @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKmS1_ImmEEEEE7destroyIS4_EEvRS6_PT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmS2_ImmEEEE7destroyIS5_EEvPT_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end533:
	.size	_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKmS1_ImmEEEEE7destroyIS4_EEvRS6_PT_, .Lfunc_end533-_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKmS1_ImmEEEEE7destroyIS4_EEvRS6_PT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE21_M_get_Node_allocatorEv,"axG",@progbits,_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE21_M_get_Node_allocatorEv,comdat
	.weak	_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE21_M_get_Node_allocatorEv # -- Begin function _ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE21_M_get_Node_allocatorEv
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE21_M_get_Node_allocatorEv,@function
_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE21_M_get_Node_allocatorEv: # @_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE21_M_get_Node_allocatorEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end534:
	.size	_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE21_M_get_Node_allocatorEv, .Lfunc_end534-_ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE21_M_get_Node_allocatorEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt13_Rb_tree_nodeISt4pairIKmS0_ImmEEE9_M_valptrEv,"axG",@progbits,_ZNSt13_Rb_tree_nodeISt4pairIKmS0_ImmEEE9_M_valptrEv,comdat
	.weak	_ZNSt13_Rb_tree_nodeISt4pairIKmS0_ImmEEE9_M_valptrEv # -- Begin function _ZNSt13_Rb_tree_nodeISt4pairIKmS0_ImmEEE9_M_valptrEv
	.p2align	4, 0x90
	.type	_ZNSt13_Rb_tree_nodeISt4pairIKmS0_ImmEEE9_M_valptrEv,@function
_ZNSt13_Rb_tree_nodeISt4pairIKmS0_ImmEEE9_M_valptrEv: # @_ZNSt13_Rb_tree_nodeISt4pairIKmS0_ImmEEE9_M_valptrEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	addq	$32, %rdi
	callq	_ZN9__gnu_cxx16__aligned_membufISt4pairIKmS1_ImmEEE6_M_ptrEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end535:
	.size	_ZNSt13_Rb_tree_nodeISt4pairIKmS0_ImmEEE9_M_valptrEv, .Lfunc_end535-_ZNSt13_Rb_tree_nodeISt4pairIKmS0_ImmEEE9_M_valptrEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmS2_ImmEEEE7destroyIS5_EEvPT_,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmS2_ImmEEEE7destroyIS5_EEvPT_,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmS2_ImmEEEE7destroyIS5_EEvPT_ # -- Begin function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmS2_ImmEEEE7destroyIS5_EEvPT_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmS2_ImmEEEE7destroyIS5_EEvPT_,@function
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmS2_ImmEEEE7destroyIS5_EEvPT_: # @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmS2_ImmEEEE7destroyIS5_EEvPT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end536:
	.size	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmS2_ImmEEEE7destroyIS5_EEvPT_, .Lfunc_end536-_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmS2_ImmEEEE7destroyIS5_EEvPT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx16__aligned_membufISt4pairIKmS1_ImmEEE6_M_ptrEv,"axG",@progbits,_ZN9__gnu_cxx16__aligned_membufISt4pairIKmS1_ImmEEE6_M_ptrEv,comdat
	.weak	_ZN9__gnu_cxx16__aligned_membufISt4pairIKmS1_ImmEEE6_M_ptrEv # -- Begin function _ZN9__gnu_cxx16__aligned_membufISt4pairIKmS1_ImmEEE6_M_ptrEv
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx16__aligned_membufISt4pairIKmS1_ImmEEE6_M_ptrEv,@function
_ZN9__gnu_cxx16__aligned_membufISt4pairIKmS1_ImmEEE6_M_ptrEv: # @_ZN9__gnu_cxx16__aligned_membufISt4pairIKmS1_ImmEEE6_M_ptrEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN9__gnu_cxx16__aligned_membufISt4pairIKmS1_ImmEEE7_M_addrEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end537:
	.size	_ZN9__gnu_cxx16__aligned_membufISt4pairIKmS1_ImmEEE6_M_ptrEv, .Lfunc_end537-_ZN9__gnu_cxx16__aligned_membufISt4pairIKmS1_ImmEEE6_M_ptrEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx16__aligned_membufISt4pairIKmS1_ImmEEE7_M_addrEv,"axG",@progbits,_ZN9__gnu_cxx16__aligned_membufISt4pairIKmS1_ImmEEE7_M_addrEv,comdat
	.weak	_ZN9__gnu_cxx16__aligned_membufISt4pairIKmS1_ImmEEE7_M_addrEv # -- Begin function _ZN9__gnu_cxx16__aligned_membufISt4pairIKmS1_ImmEEE7_M_addrEv
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx16__aligned_membufISt4pairIKmS1_ImmEEE7_M_addrEv,@function
_ZN9__gnu_cxx16__aligned_membufISt4pairIKmS1_ImmEEE7_M_addrEv: # @_ZN9__gnu_cxx16__aligned_membufISt4pairIKmS1_ImmEEE7_M_addrEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end538:
	.size	_ZN9__gnu_cxx16__aligned_membufISt4pairIKmS1_ImmEEE7_M_addrEv, .Lfunc_end538-_ZN9__gnu_cxx16__aligned_membufISt4pairIKmS1_ImmEEE7_M_addrEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKmS1_ImmEEEEE10deallocateERS6_PS5_m,"axG",@progbits,_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKmS1_ImmEEEEE10deallocateERS6_PS5_m,comdat
	.weak	_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKmS1_ImmEEEEE10deallocateERS6_PS5_m # -- Begin function _ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKmS1_ImmEEEEE10deallocateERS6_PS5_m
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKmS1_ImmEEEEE10deallocateERS6_PS5_m,@function
_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKmS1_ImmEEEEE10deallocateERS6_PS5_m: # @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKmS1_ImmEEEEE10deallocateERS6_PS5_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmS2_ImmEEEE10deallocateEPS6_m
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end539:
	.size	_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKmS1_ImmEEEEE10deallocateERS6_PS5_m, .Lfunc_end539-_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKmS1_ImmEEEEE10deallocateERS6_PS5_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmS2_ImmEEEE10deallocateEPS6_m,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmS2_ImmEEEE10deallocateEPS6_m,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmS2_ImmEEEE10deallocateEPS6_m # -- Begin function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmS2_ImmEEEE10deallocateEPS6_m
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmS2_ImmEEEE10deallocateEPS6_m,@function
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmS2_ImmEEEE10deallocateEPS6_m: # @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmS2_ImmEEEE10deallocateEPS6_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZdlPv@PLT
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end540:
	.size	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmS2_ImmEEEE10deallocateEPS6_m, .Lfunc_end540-_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmS2_ImmEEEE10deallocateEPS6_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE9_M_mbeginEv,"axG",@progbits,_ZNKSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE9_M_mbeginEv,comdat
	.weak	_ZNKSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE9_M_mbeginEv # -- Begin function _ZNKSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE9_M_mbeginEv
	.p2align	4, 0x90
	.type	_ZNKSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE9_M_mbeginEv,@function
_ZNKSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE9_M_mbeginEv: # @_ZNKSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE9_M_mbeginEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	16(%rax), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end541:
	.size	_ZNKSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE9_M_mbeginEv, .Lfunc_end541-_ZNKSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE9_M_mbeginEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSaISt13_Rb_tree_nodeISt4pairIKmS0_ImmEEEED2Ev,"axG",@progbits,_ZNSaISt13_Rb_tree_nodeISt4pairIKmS0_ImmEEEED2Ev,comdat
	.weak	_ZNSaISt13_Rb_tree_nodeISt4pairIKmS0_ImmEEEED2Ev # -- Begin function _ZNSaISt13_Rb_tree_nodeISt4pairIKmS0_ImmEEEED2Ev
	.p2align	4, 0x90
	.type	_ZNSaISt13_Rb_tree_nodeISt4pairIKmS0_ImmEEEED2Ev,@function
_ZNSaISt13_Rb_tree_nodeISt4pairIKmS0_ImmEEEED2Ev: # @_ZNSaISt13_Rb_tree_nodeISt4pairIKmS0_ImmEEEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmS2_ImmEEEED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end542:
	.size	_ZNSaISt13_Rb_tree_nodeISt4pairIKmS0_ImmEEEED2Ev, .Lfunc_end542-_ZNSaISt13_Rb_tree_nodeISt4pairIKmS0_ImmEEEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmS2_ImmEEEED2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmS2_ImmEEEED2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmS2_ImmEEEED2Ev # -- Begin function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmS2_ImmEEEED2Ev
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmS2_ImmEEEED2Ev,@function
_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmS2_ImmEEEED2Ev: # @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmS2_ImmEEEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end543:
	.size	_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmS2_ImmEEEED2Ev, .Lfunc_end543-_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmS2_ImmEEEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal11KSwitchKeysD2Ev,"axG",@progbits,_ZN4seal11KSwitchKeysD2Ev,comdat
	.weak	_ZN4seal11KSwitchKeysD2Ev       # -- Begin function _ZN4seal11KSwitchKeysD2Ev
	.p2align	4, 0x90
	.type	_ZN4seal11KSwitchKeysD2Ev,@function
_ZN4seal11KSwitchKeysD2Ev:              # @_ZN4seal11KSwitchKeysD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -16(%rbp)                 # 8-byte Spill
	addq	$48, %rdi
	callq	_ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EED2Ev
	movq	-16(%rbp), %rdi                 # 8-byte Reload
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end544:
	.size	_ZN4seal11KSwitchKeysD2Ev, .Lfunc_end544-_ZN4seal11KSwitchKeysD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt13unordered_mapISt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S7_EEED2Ev,"axG",@progbits,_ZNSt13unordered_mapISt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S7_EEED2Ev,comdat
	.weak	_ZNSt13unordered_mapISt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S7_EEED2Ev # -- Begin function _ZNSt13unordered_mapISt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S7_EEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt13unordered_mapISt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S7_EEED2Ev,@function
_ZNSt13unordered_mapISt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S7_EEED2Ev: # @_ZNSt13unordered_mapISt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S7_EEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end545:
	.size	_ZNSt13unordered_mapISt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S7_EEED2Ev, .Lfunc_end545-_ZNSt13unordered_mapISt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S7_EEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEED2Ev,"axG",@progbits,_ZNSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEED2Ev,comdat
	.weak	_ZNSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEED2Ev # -- Begin function _ZNSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEED2Ev,@function
_ZNSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEED2Ev: # @_ZNSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEED2Ev
.Lfunc_begin68:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception68
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -32(%rbp)                 # 8-byte Spill
	callq	_ZNSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE5clearEv
	movq	-32(%rbp), %rdi                 # 8-byte Reload
.Ltmp900:
	callq	_ZNSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEv
.Ltmp901:
	jmp	.LBB546_1
.LBB546_1:
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEED2Ev
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB546_2:
	.cfi_def_cfa %rbp, 16
.Ltmp902:
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -16(%rbp)
	movl	%eax, -20(%rbp)
	callq	_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEED2Ev
# %bb.3:
	movq	-16(%rbp), %rdi
	callq	__clang_call_terminate
.Lfunc_end546:
	.size	_ZNSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEED2Ev, .Lfunc_end546-_ZNSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEED2Ev,"aG",@progbits,_ZNSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEED2Ev,comdat
	.p2align	2
GCC_except_table546:
.Lexception68:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase27-.Lttbaseref27
.Lttbaseref27:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end68-.Lcst_begin68
.Lcst_begin68:
	.uleb128 .Ltmp900-.Lfunc_begin68        # >> Call Site 1 <<
	.uleb128 .Ltmp901-.Ltmp900              #   Call between .Ltmp900 and .Ltmp901
	.uleb128 .Ltmp902-.Lfunc_begin68        #     jumps to .Ltmp902
	.byte	1                               #   On action: 1
.Lcst_end68:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase27:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE5clearEv,"axG",@progbits,_ZNSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE5clearEv,comdat
	.weak	_ZNSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE5clearEv # -- Begin function _ZNSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE5clearEv
	.p2align	4, 0x90
	.type	_ZNSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE5clearEv,@function
_ZNSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE5clearEv: # @_ZNSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE5clearEv
.Lfunc_begin69:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception69
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -32(%rbp)                 # 8-byte Spill
	movq	%rdi, %rax
	movq	%rax, -24(%rbp)                 # 8-byte Spill
.Ltmp903:
	callq	_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE8_M_beginEv
.Ltmp904:
	movq	%rax, -16(%rbp)                 # 8-byte Spill
	jmp	.LBB547_1
.LBB547_1:
.Ltmp905:
	movq	-16(%rbp), %rsi                 # 8-byte Reload
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE19_M_deallocate_nodesEPSD_
.Ltmp906:
	jmp	.LBB547_2
.LBB547_2:
	movq	-24(%rbp), %rax                 # 8-byte Reload
	movq	(%rax), %rdi
	movq	8(%rax), %rdx
	shlq	$3, %rdx
	xorl	%esi, %esi
	callq	memset@PLT
	movq	-24(%rbp), %rax                 # 8-byte Reload
	movq	$0, 24(%rax)
	movq	$0, 16(%rax)
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB547_3:
	.cfi_def_cfa %rbp, 16
.Ltmp907:
	movq	%rax, %rdi
                                        # kill: def $eax killed $edx killed $rdx
	callq	__clang_call_terminate
.Lfunc_end547:
	.size	_ZNSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE5clearEv, .Lfunc_end547-_ZNSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE5clearEv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE5clearEv,"aG",@progbits,_ZNSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE5clearEv,comdat
	.p2align	2
GCC_except_table547:
.Lexception69:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase28-.Lttbaseref28
.Lttbaseref28:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end69-.Lcst_begin69
.Lcst_begin69:
	.uleb128 .Ltmp903-.Lfunc_begin69        # >> Call Site 1 <<
	.uleb128 .Ltmp906-.Ltmp903              #   Call between .Ltmp903 and .Ltmp906
	.uleb128 .Ltmp907-.Lfunc_begin69        #     jumps to .Ltmp907
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp906-.Lfunc_begin69        # >> Call Site 2 <<
	.uleb128 .Lfunc_end547-.Ltmp906         #   Call between .Ltmp906 and .Lfunc_end547
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end69:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase28:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEv,"axG",@progbits,_ZNSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEv,comdat
	.weak	_ZNSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEv # -- Begin function _ZNSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEv
	.p2align	4, 0x90
	.type	_ZNSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEv,@function
_ZNSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEv: # @_ZNSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	(%rdi), %rsi
	movq	8(%rdi), %rdx
	callq	_ZNSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEPPNSC_15_Hash_node_baseEm
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end548:
	.size	_ZNSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEv, .Lfunc_end548-_ZNSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEED2Ev,"axG",@progbits,_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEED2Ev,comdat
	.weak	_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEED2Ev # -- Begin function _ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEED2Ev,@function
_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEED2Ev: # @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEELb1EED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end549:
	.size	_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEED2Ev, .Lfunc_end549-_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE19_M_deallocate_nodesEPSD_,"axG",@progbits,_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE19_M_deallocate_nodesEPSD_,comdat
	.weak	_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE19_M_deallocate_nodesEPSD_ # -- Begin function _ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE19_M_deallocate_nodesEPSD_
	.p2align	4, 0x90
	.type	_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE19_M_deallocate_nodesEPSD_,@function
_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE19_M_deallocate_nodesEPSD_: # @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE19_M_deallocate_nodesEPSD_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -32(%rbp)                 # 8-byte Spill
.LBB550_1:                              # =>This Inner Loop Header: Depth=1
	cmpq	$0, -16(%rbp)
	je	.LBB550_3
# %bb.2:                                #   in Loop: Header=BB550_1 Depth=1
	movq	-16(%rbp), %rax
	movq	%rax, -24(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZNKSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EE7_M_nextEv
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, -16(%rbp)
	movq	-24(%rbp), %rsi
	callq	_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE18_M_deallocate_nodeEPSD_
	jmp	.LBB550_1
.LBB550_3:
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end550:
	.size	_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE19_M_deallocate_nodesEPSD_, .Lfunc_end550-_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE19_M_deallocate_nodesEPSD_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE8_M_beginEv,"axG",@progbits,_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE8_M_beginEv,comdat
	.weak	_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE8_M_beginEv # -- Begin function _ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE8_M_beginEv
	.p2align	4, 0x90
	.type	_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE8_M_beginEv,@function
_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE8_M_beginEv: # @_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE8_M_beginEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	16(%rax), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end551:
	.size	_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE8_M_beginEv, .Lfunc_end551-_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE8_M_beginEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE18_M_deallocate_nodeEPSD_,"axG",@progbits,_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE18_M_deallocate_nodeEPSD_,comdat
	.weak	_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE18_M_deallocate_nodeEPSD_ # -- Begin function _ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE18_M_deallocate_nodeEPSD_
	.p2align	4, 0x90
	.type	_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE18_M_deallocate_nodeEPSD_,@function
_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE18_M_deallocate_nodeEPSD_: # @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE18_M_deallocate_nodeEPSD_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -24(%rbp)                 # 8-byte Spill
	callq	_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE17_M_node_allocatorEv
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	addq	$8, %rdi
	callq	_ZNSt8__detail21_Hash_node_value_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE9_M_valptrEv
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE7destroyISC_EEvRSE_PT_
	movq	-24(%rbp), %rdi                 # 8-byte Reload
	movq	-16(%rbp), %rsi
	callq	_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE22_M_deallocate_node_ptrEPSD_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end552:
	.size	_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE18_M_deallocate_nodeEPSD_, .Lfunc_end552-_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE18_M_deallocate_nodeEPSD_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE7destroyISC_EEvRSE_PT_,"axG",@progbits,_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE7destroyISC_EEvRSE_PT_,comdat
	.weak	_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE7destroyISC_EEvRSE_PT_ # -- Begin function _ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE7destroyISC_EEvRSE_PT_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE7destroyISC_EEvRSE_PT_,@function
_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE7destroyISC_EEvRSE_PT_: # @_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE7destroyISC_EEvRSE_PT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEE7destroyISD_EEvPT_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end553:
	.size	_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE7destroyISC_EEvRSE_PT_, .Lfunc_end553-_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE7destroyISC_EEvRSE_PT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE17_M_node_allocatorEv,"axG",@progbits,_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE17_M_node_allocatorEv,comdat
	.weak	_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE17_M_node_allocatorEv # -- Begin function _ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE17_M_node_allocatorEv
	.p2align	4, 0x90
	.type	_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE17_M_node_allocatorEv,@function
_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE17_M_node_allocatorEv: # @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE17_M_node_allocatorEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEELb1EE6_M_getEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end554:
	.size	_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE17_M_node_allocatorEv, .Lfunc_end554-_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE17_M_node_allocatorEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE22_M_deallocate_node_ptrEPSD_,"axG",@progbits,_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE22_M_deallocate_node_ptrEPSD_,comdat
	.weak	_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE22_M_deallocate_node_ptrEPSD_ # -- Begin function _ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE22_M_deallocate_node_ptrEPSD_
	.p2align	4, 0x90
	.type	_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE22_M_deallocate_node_ptrEPSD_,@function
_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE22_M_deallocate_node_ptrEPSD_: # @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE22_M_deallocate_node_ptrEPSD_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	callq	_ZNSt14pointer_traitsIPNSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEE10pointer_toERSD_
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, -24(%rbp)
	callq	_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE17_M_node_allocatorEv
	movq	%rax, %rdi
	movq	-24(%rbp), %rsi
	movl	$1, %edx
	callq	_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE10deallocateERSE_PSD_m
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end555:
	.size	_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE22_M_deallocate_node_ptrEPSD_, .Lfunc_end555-_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE22_M_deallocate_node_ptrEPSD_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEE7destroyISD_EEvPT_,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEE7destroyISD_EEvPT_,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEE7destroyISD_EEvPT_ # -- Begin function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEE7destroyISD_EEvPT_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEE7destroyISD_EEvPT_,@function
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEE7destroyISD_EEvPT_: # @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEE7destroyISD_EEvPT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZNSt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end556:
	.size	_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEE7destroyISD_EEvPT_, .Lfunc_end556-_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEE7destroyISD_EEvPT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEED2Ev,"axG",@progbits,_ZNSt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEED2Ev,comdat
	.weak	_ZNSt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEED2Ev # -- Begin function _ZNSt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEED2Ev,@function
_ZNSt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEED2Ev: # @_ZNSt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	addq	$32, %rdi
	callq	_ZNSt10shared_ptrIKN4seal11SEALContext11ContextDataEED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end557:
	.size	_ZNSt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEED2Ev, .Lfunc_end557-_ZNSt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEELb1EE6_M_getEv,"axG",@progbits,_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEELb1EE6_M_getEv,comdat
	.weak	_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEELb1EE6_M_getEv # -- Begin function _ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEELb1EE6_M_getEv
	.p2align	4, 0x90
	.type	_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEELb1EE6_M_getEv,@function
_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEELb1EE6_M_getEv: # @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEELb1EE6_M_getEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end558:
	.size	_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEELb1EE6_M_getEv, .Lfunc_end558-_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEELb1EE6_M_getEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt14pointer_traitsIPNSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEE10pointer_toERSD_,"axG",@progbits,_ZNSt14pointer_traitsIPNSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEE10pointer_toERSD_,comdat
	.weak	_ZNSt14pointer_traitsIPNSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEE10pointer_toERSD_ # -- Begin function _ZNSt14pointer_traitsIPNSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEE10pointer_toERSD_
	.p2align	4, 0x90
	.type	_ZNSt14pointer_traitsIPNSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEE10pointer_toERSD_,@function
_ZNSt14pointer_traitsIPNSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEE10pointer_toERSD_: # @_ZNSt14pointer_traitsIPNSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEE10pointer_toERSD_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt9addressofINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEPT_RSE_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end559:
	.size	_ZNSt14pointer_traitsIPNSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEE10pointer_toERSD_, .Lfunc_end559-_ZNSt14pointer_traitsIPNSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEE10pointer_toERSD_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE10deallocateERSE_PSD_m,"axG",@progbits,_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE10deallocateERSE_PSD_m,comdat
	.weak	_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE10deallocateERSE_PSD_m # -- Begin function _ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE10deallocateERSE_PSD_m
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE10deallocateERSE_PSD_m,@function
_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE10deallocateERSE_PSD_m: # @_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE10deallocateERSE_PSD_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEE10deallocateEPSE_m
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end560:
	.size	_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE10deallocateERSE_PSD_m, .Lfunc_end560-_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE10deallocateERSE_PSD_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt9addressofINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEPT_RSE_,"axG",@progbits,_ZSt9addressofINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEPT_RSE_,comdat
	.weak	_ZSt9addressofINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEPT_RSE_ # -- Begin function _ZSt9addressofINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEPT_RSE_
	.p2align	4, 0x90
	.type	_ZSt9addressofINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEPT_RSE_,@function
_ZSt9addressofINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEPT_RSE_: # @_ZSt9addressofINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEPT_RSE_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt11__addressofINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEPT_RSE_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end561:
	.size	_ZSt9addressofINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEPT_RSE_, .Lfunc_end561-_ZSt9addressofINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEPT_RSE_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt11__addressofINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEPT_RSE_,"axG",@progbits,_ZSt11__addressofINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEPT_RSE_,comdat
	.weak	_ZSt11__addressofINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEPT_RSE_ # -- Begin function _ZSt11__addressofINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEPT_RSE_
	.p2align	4, 0x90
	.type	_ZSt11__addressofINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEPT_RSE_,@function
_ZSt11__addressofINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEPT_RSE_: # @_ZSt11__addressofINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEPT_RSE_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end562:
	.size	_ZSt11__addressofINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEPT_RSE_, .Lfunc_end562-_ZSt11__addressofINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEPT_RSE_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEE10deallocateEPSE_m,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEE10deallocateEPSE_m,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEE10deallocateEPSE_m # -- Begin function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEE10deallocateEPSE_m
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEE10deallocateEPSE_m,@function
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEE10deallocateEPSE_m: # @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEE10deallocateEPSE_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZdlPv@PLT
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end563:
	.size	_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEE10deallocateEPSE_m, .Lfunc_end563-_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEE10deallocateEPSE_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEPPNSC_15_Hash_node_baseEm,"axG",@progbits,_ZNSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEPPNSC_15_Hash_node_baseEm,comdat
	.weak	_ZNSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEPPNSC_15_Hash_node_baseEm # -- Begin function _ZNSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEPPNSC_15_Hash_node_baseEm
	.p2align	4, 0x90
	.type	_ZNSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEPPNSC_15_Hash_node_baseEm,@function
_ZNSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEPPNSC_15_Hash_node_baseEm: # @_ZNSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEPPNSC_15_Hash_node_baseEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -32(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rsi
	callq	_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_uses_single_bucketEPPNSC_15_Hash_node_baseE
	testb	$1, %al
	jne	.LBB564_1
	jmp	.LBB564_2
.LBB564_1:
	jmp	.LBB564_3
.LBB564_2:
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE21_M_deallocate_bucketsEPPNS_15_Hash_node_baseEm
.LBB564_3:
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end564:
	.size	_ZNSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEPPNSC_15_Hash_node_baseEm, .Lfunc_end564-_ZNSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEPPNSC_15_Hash_node_baseEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_uses_single_bucketEPPNSC_15_Hash_node_baseE,"axG",@progbits,_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_uses_single_bucketEPPNSC_15_Hash_node_baseE,comdat
	.weak	_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_uses_single_bucketEPPNSC_15_Hash_node_baseE # -- Begin function _ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_uses_single_bucketEPPNSC_15_Hash_node_baseE
	.p2align	4, 0x90
	.type	_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_uses_single_bucketEPPNSC_15_Hash_node_baseE,@function
_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_uses_single_bucketEPPNSC_15_Hash_node_baseE: # @_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_uses_single_bucketEPPNSC_15_Hash_node_baseE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rcx
	movq	-16(%rbp), %rax
	addq	$48, %rcx
	cmpq	%rcx, %rax
	sete	%al
	andb	$1, %al
	movzbl	%al, %eax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end565:
	.size	_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_uses_single_bucketEPPNSC_15_Hash_node_baseE, .Lfunc_end565-_ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_uses_single_bucketEPPNSC_15_Hash_node_baseE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE21_M_deallocate_bucketsEPPNS_15_Hash_node_baseEm,"axG",@progbits,_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE21_M_deallocate_bucketsEPPNS_15_Hash_node_baseEm,comdat
	.weak	_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE21_M_deallocate_bucketsEPPNS_15_Hash_node_baseEm # -- Begin function _ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE21_M_deallocate_bucketsEPPNS_15_Hash_node_baseEm
	.p2align	4, 0x90
	.type	_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE21_M_deallocate_bucketsEPPNS_15_Hash_node_baseEm,@function
_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE21_M_deallocate_bucketsEPPNS_15_Hash_node_baseEm: # @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE21_M_deallocate_bucketsEPPNS_15_Hash_node_baseEm
.Lfunc_begin70:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception70
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -72(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	callq	_ZNSt14pointer_traitsIPPNSt8__detail15_Hash_node_baseEE10pointer_toERS2_
	movq	-72(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, -32(%rbp)
	callq	_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE17_M_node_allocatorEv
	movq	%rax, %rsi
	leaq	-40(%rbp), %rdi
	movq	%rdi, -64(%rbp)                 # 8-byte Spill
	callq	_ZNSaIPNSt8__detail15_Hash_node_baseEEC2INS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEERKSaIT_E
	movq	-64(%rbp), %rdi                 # 8-byte Reload
	movq	-32(%rbp), %rsi
	movq	-24(%rbp), %rdx
.Ltmp908:
	callq	_ZNSt16allocator_traitsISaIPNSt8__detail15_Hash_node_baseEEE10deallocateERS3_PS2_m
.Ltmp909:
	jmp	.LBB566_1
.LBB566_1:
	leaq	-40(%rbp), %rdi
	callq	_ZNSaIPNSt8__detail15_Hash_node_baseEED2Ev
	addq	$80, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB566_2:
	.cfi_def_cfa %rbp, 16
.Ltmp910:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
	leaq	-40(%rbp), %rdi
	callq	_ZNSaIPNSt8__detail15_Hash_node_baseEED2Ev
# %bb.3:
	movq	-48(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end566:
	.size	_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE21_M_deallocate_bucketsEPPNS_15_Hash_node_baseEm, .Lfunc_end566-_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE21_M_deallocate_bucketsEPPNS_15_Hash_node_baseEm
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE21_M_deallocate_bucketsEPPNS_15_Hash_node_baseEm,"aG",@progbits,_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE21_M_deallocate_bucketsEPPNS_15_Hash_node_baseEm,comdat
	.p2align	2
GCC_except_table566:
.Lexception70:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end70-.Lcst_begin70
.Lcst_begin70:
	.uleb128 .Lfunc_begin70-.Lfunc_begin70  # >> Call Site 1 <<
	.uleb128 .Ltmp908-.Lfunc_begin70        #   Call between .Lfunc_begin70 and .Ltmp908
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp908-.Lfunc_begin70        # >> Call Site 2 <<
	.uleb128 .Ltmp909-.Ltmp908              #   Call between .Ltmp908 and .Ltmp909
	.uleb128 .Ltmp910-.Lfunc_begin70        #     jumps to .Ltmp910
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp909-.Lfunc_begin70        # >> Call Site 3 <<
	.uleb128 .Lfunc_end566-.Ltmp909         #   Call between .Ltmp909 and .Lfunc_end566
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end70:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt14pointer_traitsIPPNSt8__detail15_Hash_node_baseEE10pointer_toERS2_,"axG",@progbits,_ZNSt14pointer_traitsIPPNSt8__detail15_Hash_node_baseEE10pointer_toERS2_,comdat
	.weak	_ZNSt14pointer_traitsIPPNSt8__detail15_Hash_node_baseEE10pointer_toERS2_ # -- Begin function _ZNSt14pointer_traitsIPPNSt8__detail15_Hash_node_baseEE10pointer_toERS2_
	.p2align	4, 0x90
	.type	_ZNSt14pointer_traitsIPPNSt8__detail15_Hash_node_baseEE10pointer_toERS2_,@function
_ZNSt14pointer_traitsIPPNSt8__detail15_Hash_node_baseEE10pointer_toERS2_: # @_ZNSt14pointer_traitsIPPNSt8__detail15_Hash_node_baseEE10pointer_toERS2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt9addressofIPNSt8__detail15_Hash_node_baseEEPT_RS3_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end567:
	.size	_ZNSt14pointer_traitsIPPNSt8__detail15_Hash_node_baseEE10pointer_toERS2_, .Lfunc_end567-_ZNSt14pointer_traitsIPPNSt8__detail15_Hash_node_baseEE10pointer_toERS2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSaIPNSt8__detail15_Hash_node_baseEEC2INS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEERKSaIT_E,"axG",@progbits,_ZNSaIPNSt8__detail15_Hash_node_baseEEC2INS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEERKSaIT_E,comdat
	.weak	_ZNSaIPNSt8__detail15_Hash_node_baseEEC2INS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEERKSaIT_E # -- Begin function _ZNSaIPNSt8__detail15_Hash_node_baseEEC2INS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEERKSaIT_E
	.p2align	4, 0x90
	.type	_ZNSaIPNSt8__detail15_Hash_node_baseEEC2INS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEERKSaIT_E,@function
_ZNSaIPNSt8__detail15_Hash_node_baseEEC2INS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEERKSaIT_E: # @_ZNSaIPNSt8__detail15_Hash_node_baseEEC2INS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEERKSaIT_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEEC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end568:
	.size	_ZNSaIPNSt8__detail15_Hash_node_baseEEC2INS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEERKSaIT_E, .Lfunc_end568-_ZNSaIPNSt8__detail15_Hash_node_baseEEC2INS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEERKSaIT_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIPNSt8__detail15_Hash_node_baseEEE10deallocateERS3_PS2_m,"axG",@progbits,_ZNSt16allocator_traitsISaIPNSt8__detail15_Hash_node_baseEEE10deallocateERS3_PS2_m,comdat
	.weak	_ZNSt16allocator_traitsISaIPNSt8__detail15_Hash_node_baseEEE10deallocateERS3_PS2_m # -- Begin function _ZNSt16allocator_traitsISaIPNSt8__detail15_Hash_node_baseEEE10deallocateERS3_PS2_m
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIPNSt8__detail15_Hash_node_baseEEE10deallocateERS3_PS2_m,@function
_ZNSt16allocator_traitsISaIPNSt8__detail15_Hash_node_baseEEE10deallocateERS3_PS2_m: # @_ZNSt16allocator_traitsISaIPNSt8__detail15_Hash_node_baseEEE10deallocateERS3_PS2_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE10deallocateEPS3_m
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end569:
	.size	_ZNSt16allocator_traitsISaIPNSt8__detail15_Hash_node_baseEEE10deallocateERS3_PS2_m, .Lfunc_end569-_ZNSt16allocator_traitsISaIPNSt8__detail15_Hash_node_baseEEE10deallocateERS3_PS2_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSaIPNSt8__detail15_Hash_node_baseEED2Ev,"axG",@progbits,_ZNSaIPNSt8__detail15_Hash_node_baseEED2Ev,comdat
	.weak	_ZNSaIPNSt8__detail15_Hash_node_baseEED2Ev # -- Begin function _ZNSaIPNSt8__detail15_Hash_node_baseEED2Ev
	.p2align	4, 0x90
	.type	_ZNSaIPNSt8__detail15_Hash_node_baseEED2Ev,@function
_ZNSaIPNSt8__detail15_Hash_node_baseEED2Ev: # @_ZNSaIPNSt8__detail15_Hash_node_baseEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end570:
	.size	_ZNSaIPNSt8__detail15_Hash_node_baseEED2Ev, .Lfunc_end570-_ZNSaIPNSt8__detail15_Hash_node_baseEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt9addressofIPNSt8__detail15_Hash_node_baseEEPT_RS3_,"axG",@progbits,_ZSt9addressofIPNSt8__detail15_Hash_node_baseEEPT_RS3_,comdat
	.weak	_ZSt9addressofIPNSt8__detail15_Hash_node_baseEEPT_RS3_ # -- Begin function _ZSt9addressofIPNSt8__detail15_Hash_node_baseEEPT_RS3_
	.p2align	4, 0x90
	.type	_ZSt9addressofIPNSt8__detail15_Hash_node_baseEEPT_RS3_,@function
_ZSt9addressofIPNSt8__detail15_Hash_node_baseEEPT_RS3_: # @_ZSt9addressofIPNSt8__detail15_Hash_node_baseEEPT_RS3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt11__addressofIPNSt8__detail15_Hash_node_baseEEPT_RS3_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end571:
	.size	_ZSt9addressofIPNSt8__detail15_Hash_node_baseEEPT_RS3_, .Lfunc_end571-_ZSt9addressofIPNSt8__detail15_Hash_node_baseEEPT_RS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt11__addressofIPNSt8__detail15_Hash_node_baseEEPT_RS3_,"axG",@progbits,_ZSt11__addressofIPNSt8__detail15_Hash_node_baseEEPT_RS3_,comdat
	.weak	_ZSt11__addressofIPNSt8__detail15_Hash_node_baseEEPT_RS3_ # -- Begin function _ZSt11__addressofIPNSt8__detail15_Hash_node_baseEEPT_RS3_
	.p2align	4, 0x90
	.type	_ZSt11__addressofIPNSt8__detail15_Hash_node_baseEEPT_RS3_,@function
_ZSt11__addressofIPNSt8__detail15_Hash_node_baseEEPT_RS3_: # @_ZSt11__addressofIPNSt8__detail15_Hash_node_baseEEPT_RS3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end572:
	.size	_ZSt11__addressofIPNSt8__detail15_Hash_node_baseEEPT_RS3_, .Lfunc_end572-_ZSt11__addressofIPNSt8__detail15_Hash_node_baseEEPT_RS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEEC2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEEC2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEEC2Ev # -- Begin function _ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEEC2Ev
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEEC2Ev,@function
_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEEC2Ev: # @_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end573:
	.size	_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEEC2Ev, .Lfunc_end573-_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE10deallocateEPS3_m,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE10deallocateEPS3_m,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE10deallocateEPS3_m # -- Begin function _ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE10deallocateEPS3_m
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE10deallocateEPS3_m,@function
_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE10deallocateEPS3_m: # @_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE10deallocateEPS3_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZdlPv@PLT
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end574:
	.size	_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE10deallocateEPS3_m, .Lfunc_end574-_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE10deallocateEPS3_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEED2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEED2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEED2Ev # -- Begin function _ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEED2Ev
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEED2Ev,@function
_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEED2Ev: # @_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end575:
	.size	_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEED2Ev, .Lfunc_end575-_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEELb1EED2Ev,"axG",@progbits,_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEELb1EED2Ev,comdat
	.weak	_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEELb1EED2Ev # -- Begin function _ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEELb1EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEELb1EED2Ev,@function
_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEELb1EED2Ev: # @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEELb1EED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSaINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end576:
	.size	_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEELb1EED2Ev, .Lfunc_end576-_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEELb1EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSaINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEED2Ev,"axG",@progbits,_ZNSaINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEED2Ev,comdat
	.weak	_ZNSaINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEED2Ev # -- Begin function _ZNSaINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEED2Ev
	.p2align	4, 0x90
	.type	_ZNSaINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEED2Ev,@function
_ZNSaINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEED2Ev: # @_ZNSaINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end577:
	.size	_ZNSaINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEED2Ev, .Lfunc_end577-_ZNSaINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEED2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEED2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEED2Ev # -- Begin function _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEED2Ev
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEED2Ev,@function
_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEED2Ev: # @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end578:
	.size	_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEED2Ev, .Lfunc_end578-_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIiEC2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIiEC2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIiEC2Ev # -- Begin function _ZN9__gnu_cxx13new_allocatorIiEC2Ev
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIiEC2Ev,@function
_ZN9__gnu_cxx13new_allocatorIiEC2Ev:    # @_ZN9__gnu_cxx13new_allocatorIiEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end579:
	.size	_ZN9__gnu_cxx13new_allocatorIiEC2Ev, .Lfunc_end579-_ZN9__gnu_cxx13new_allocatorIiEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIiED2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIiED2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIiED2Ev # -- Begin function _ZN9__gnu_cxx13new_allocatorIiED2Ev
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIiED2Ev,@function
_ZN9__gnu_cxx13new_allocatorIiED2Ev:    # @_ZN9__gnu_cxx13new_allocatorIiED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end580:
	.size	_ZN9__gnu_cxx13new_allocatorIiED2Ev, .Lfunc_end580-_ZN9__gnu_cxx13new_allocatorIiED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIiSaIiEEC2ERKS0_,"axG",@progbits,_ZNSt12_Vector_baseIiSaIiEEC2ERKS0_,comdat
	.weak	_ZNSt12_Vector_baseIiSaIiEEC2ERKS0_ # -- Begin function _ZNSt12_Vector_baseIiSaIiEEC2ERKS0_
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIiSaIiEEC2ERKS0_,@function
_ZNSt12_Vector_baseIiSaIiEEC2ERKS0_:    # @_ZNSt12_Vector_baseIiSaIiEEC2ERKS0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end581:
	.size	_ZNSt12_Vector_baseIiSaIiEEC2ERKS0_, .Lfunc_end581-_ZNSt12_Vector_baseIiSaIiEEC2ERKS0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIiSaIiEE19_M_range_initializeIPKiEEvT_S5_St20forward_iterator_tag,"axG",@progbits,_ZNSt6vectorIiSaIiEE19_M_range_initializeIPKiEEvT_S5_St20forward_iterator_tag,comdat
	.weak	_ZNSt6vectorIiSaIiEE19_M_range_initializeIPKiEEvT_S5_St20forward_iterator_tag # -- Begin function _ZNSt6vectorIiSaIiEE19_M_range_initializeIPKiEEvT_S5_St20forward_iterator_tag
	.p2align	4, 0x90
	.type	_ZNSt6vectorIiSaIiEE19_M_range_initializeIPKiEEvT_S5_St20forward_iterator_tag,@function
_ZNSt6vectorIiSaIiEE19_M_range_initializeIPKiEEvT_S5_St20forward_iterator_tag: # @_ZNSt6vectorIiSaIiEE19_M_range_initializeIPKiEEvT_S5_St20forward_iterator_tag
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rdx, -32(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -48(%rbp)                 # 8-byte Spill
	movq	-24(%rbp), %rdi
	movq	-32(%rbp), %rsi
	callq	_ZSt8distanceIPKiENSt15iterator_traitsIT_E15difference_typeES3_S3_
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, -40(%rbp)
	movq	%rdi, %rax
	movq	%rax, -80(%rbp)                 # 8-byte Spill
	movq	-40(%rbp), %rax
	movq	%rax, -88(%rbp)                 # 8-byte Spill
	callq	_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv
	movq	-88(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNSt6vectorIiSaIiEE17_S_check_init_lenEmRKS0_
	movq	-80(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, (%rdi)
	movq	(%rdi), %rax
	movq	-40(%rbp), %rcx
	shlq	$2, %rcx
	addq	%rcx, %rax
	movq	%rax, 16(%rdi)
	movq	-24(%rbp), %rax
	movq	%rax, -72(%rbp)                 # 8-byte Spill
	movq	-32(%rbp), %rax
	movq	%rax, -64(%rbp)                 # 8-byte Spill
	movq	(%rdi), %rax
	movq	%rax, -56(%rbp)                 # 8-byte Spill
	callq	_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv
	movq	-72(%rbp), %rdi                 # 8-byte Reload
	movq	-64(%rbp), %rsi                 # 8-byte Reload
	movq	-56(%rbp), %rdx                 # 8-byte Reload
	movq	%rax, %rcx
	callq	_ZSt22__uninitialized_copy_aIPKiPiiET0_T_S4_S3_RSaIT1_E
	movq	%rax, %rcx
	movq	-48(%rbp), %rax                 # 8-byte Reload
	movq	%rcx, 8(%rax)
	addq	$96, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end582:
	.size	_ZNSt6vectorIiSaIiEE19_M_range_initializeIPKiEEvT_S5_St20forward_iterator_tag, .Lfunc_end582-_ZNSt6vectorIiSaIiEE19_M_range_initializeIPKiEEvT_S5_St20forward_iterator_tag
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt16initializer_listIiE5beginEv,"axG",@progbits,_ZNKSt16initializer_listIiE5beginEv,comdat
	.weak	_ZNKSt16initializer_listIiE5beginEv # -- Begin function _ZNKSt16initializer_listIiE5beginEv
	.p2align	4, 0x90
	.type	_ZNKSt16initializer_listIiE5beginEv,@function
_ZNKSt16initializer_listIiE5beginEv:    # @_ZNKSt16initializer_listIiE5beginEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end583:
	.size	_ZNKSt16initializer_listIiE5beginEv, .Lfunc_end583-_ZNKSt16initializer_listIiE5beginEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt16initializer_listIiE3endEv,"axG",@progbits,_ZNKSt16initializer_listIiE3endEv,comdat
	.weak	_ZNKSt16initializer_listIiE3endEv # -- Begin function _ZNKSt16initializer_listIiE3endEv
	.p2align	4, 0x90
	.type	_ZNKSt16initializer_listIiE3endEv,@function
_ZNKSt16initializer_listIiE3endEv:      # @_ZNKSt16initializer_listIiE3endEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -24(%rbp)                 # 8-byte Spill
	callq	_ZNKSt16initializer_listIiE5beginEv
	movq	-24(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, -16(%rbp)                 # 8-byte Spill
	callq	_ZNKSt16initializer_listIiE4sizeEv
	movq	%rax, %rcx
	movq	-16(%rbp), %rax                 # 8-byte Reload
	shlq	$2, %rcx
	addq	%rcx, %rax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end584:
	.size	_ZNKSt16initializer_listIiE3endEv, .Lfunc_end584-_ZNKSt16initializer_listIiE3endEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIiSaIiEED2Ev,"axG",@progbits,_ZNSt12_Vector_baseIiSaIiEED2Ev,comdat
	.weak	_ZNSt12_Vector_baseIiSaIiEED2Ev # -- Begin function _ZNSt12_Vector_baseIiSaIiEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIiSaIiEED2Ev,@function
_ZNSt12_Vector_baseIiSaIiEED2Ev:        # @_ZNSt12_Vector_baseIiSaIiEED2Ev
.Lfunc_begin71:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception71
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -32(%rbp)                 # 8-byte Spill
	movq	(%rdi), %rsi
	movq	16(%rdi), %rdx
	subq	%rsi, %rdx
	sarq	$2, %rdx
.Ltmp911:
	callq	_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim
.Ltmp912:
	jmp	.LBB585_1
.LBB585_1:
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB585_2:
	.cfi_def_cfa %rbp, 16
.Ltmp913:
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -16(%rbp)
	movl	%eax, -20(%rbp)
	callq	_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev
# %bb.3:
	movq	-16(%rbp), %rdi
	callq	__clang_call_terminate
.Lfunc_end585:
	.size	_ZNSt12_Vector_baseIiSaIiEED2Ev, .Lfunc_end585-_ZNSt12_Vector_baseIiSaIiEED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNSt12_Vector_baseIiSaIiEED2Ev,"aG",@progbits,_ZNSt12_Vector_baseIiSaIiEED2Ev,comdat
	.p2align	2
GCC_except_table585:
.Lexception71:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase29-.Lttbaseref29
.Lttbaseref29:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end71-.Lcst_begin71
.Lcst_begin71:
	.uleb128 .Ltmp911-.Lfunc_begin71        # >> Call Site 1 <<
	.uleb128 .Ltmp912-.Ltmp911              #   Call between .Ltmp911 and .Ltmp912
	.uleb128 .Ltmp913-.Lfunc_begin71        #     jumps to .Ltmp913
	.byte	1                               #   On action: 1
.Lcst_end71:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase29:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_,"axG",@progbits,_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_,comdat
	.weak	_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_ # -- Begin function _ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_,@function
_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_: # @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -24(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rsi
	callq	_ZNSaIiEC2ERKS_
	movq	-24(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataC2Ev
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end586:
	.size	_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_, .Lfunc_end586-_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataC2Ev # -- Begin function _ZNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataC2Ev,@function
_ZNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataC2Ev: # @_ZNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	$0, (%rax)
	movq	$0, 8(%rax)
	movq	$0, 16(%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end587:
	.size	_ZNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataC2Ev, .Lfunc_end587-_ZNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_ # -- Begin function _ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_,@function
_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_: # @_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end588:
	.size	_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_, .Lfunc_end588-_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt8distanceIPKiENSt15iterator_traitsIT_E15difference_typeES3_S3_,"axG",@progbits,_ZSt8distanceIPKiENSt15iterator_traitsIT_E15difference_typeES3_S3_,comdat
	.weak	_ZSt8distanceIPKiENSt15iterator_traitsIT_E15difference_typeES3_S3_ # -- Begin function _ZSt8distanceIPKiENSt15iterator_traitsIT_E15difference_typeES3_S3_
	.p2align	4, 0x90
	.type	_ZSt8distanceIPKiENSt15iterator_traitsIT_E15difference_typeES3_S3_,@function
_ZSt8distanceIPKiENSt15iterator_traitsIT_E15difference_typeES3_S3_: # @_ZSt8distanceIPKiENSt15iterator_traitsIT_E15difference_typeES3_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -48(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rax
	movq	%rax, -40(%rbp)                 # 8-byte Spill
	leaq	-8(%rbp), %rdi
	callq	_ZSt19__iterator_categoryIPKiENSt15iterator_traitsIT_E17iterator_categoryERKS3_
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	movq	-40(%rbp), %rsi                 # 8-byte Reload
	callq	_ZSt10__distanceIPKiENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end589:
	.size	_ZSt8distanceIPKiENSt15iterator_traitsIT_E15difference_typeES3_S3_, .Lfunc_end589-_ZSt8distanceIPKiENSt15iterator_traitsIT_E15difference_typeES3_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm,"axG",@progbits,_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm,comdat
	.weak	_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm # -- Begin function _ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm,@function
_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm: # @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -24(%rbp)                 # 8-byte Spill
	cmpq	$0, -16(%rbp)
	je	.LBB590_2
# %bb.1:
	movq	-24(%rbp), %rdi                 # 8-byte Reload
	movq	-16(%rbp), %rsi
	callq	_ZNSt16allocator_traitsISaIiEE8allocateERS0_m
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	jmp	.LBB590_3
.LBB590_2:
	xorl	%eax, %eax
                                        # kill: def $rax killed $eax
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	jmp	.LBB590_3
.LBB590_3:
	movq	-32(%rbp), %rax                 # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end590:
	.size	_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm, .Lfunc_end590-_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIiSaIiEE17_S_check_init_lenEmRKS0_,"axG",@progbits,_ZNSt6vectorIiSaIiEE17_S_check_init_lenEmRKS0_,comdat
	.weak	_ZNSt6vectorIiSaIiEE17_S_check_init_lenEmRKS0_ # -- Begin function _ZNSt6vectorIiSaIiEE17_S_check_init_lenEmRKS0_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIiSaIiEE17_S_check_init_lenEmRKS0_,@function
_ZNSt6vectorIiSaIiEE17_S_check_init_lenEmRKS0_: # @_ZNSt6vectorIiSaIiEE17_S_check_init_lenEmRKS0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rsi
	leaq	-24(%rbp), %rdi
	callq	_ZNSaIiEC2ERKS_
	leaq	-24(%rbp), %rdi
	callq	_ZNSt6vectorIiSaIiEE11_S_max_sizeERKS0_
	movq	%rax, -40(%rbp)                 # 8-byte Spill
	leaq	-24(%rbp), %rdi
	callq	_ZNSaIiED2Ev
	movq	-40(%rbp), %rcx                 # 8-byte Reload
	movq	-32(%rbp), %rax                 # 8-byte Reload
	cmpq	%rcx, %rax
	jbe	.LBB591_2
# %bb.1:
	leaq	.L.str.64(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.LBB591_2:
	movq	-8(%rbp), %rax
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end591:
	.size	_ZNSt6vectorIiSaIiEE17_S_check_init_lenEmRKS0_, .Lfunc_end591-_ZNSt6vectorIiSaIiEE17_S_check_init_lenEmRKS0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv,comdat
	.weak	_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv # -- Begin function _ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv,@function
_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv: # @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end592:
	.size	_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv, .Lfunc_end592-_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt22__uninitialized_copy_aIPKiPiiET0_T_S4_S3_RSaIT1_E,"axG",@progbits,_ZSt22__uninitialized_copy_aIPKiPiiET0_T_S4_S3_RSaIT1_E,comdat
	.weak	_ZSt22__uninitialized_copy_aIPKiPiiET0_T_S4_S3_RSaIT1_E # -- Begin function _ZSt22__uninitialized_copy_aIPKiPiiET0_T_S4_S3_RSaIT1_E
	.p2align	4, 0x90
	.type	_ZSt22__uninitialized_copy_aIPKiPiiET0_T_S4_S3_RSaIT1_E,@function
_ZSt22__uninitialized_copy_aIPKiPiiET0_T_S4_S3_RSaIT1_E: # @_ZSt22__uninitialized_copy_aIPKiPiiET0_T_S4_S3_RSaIT1_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZSt18uninitialized_copyIPKiPiET0_T_S4_S3_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end593:
	.size	_ZSt22__uninitialized_copy_aIPKiPiiET0_T_S4_S3_RSaIT1_E, .Lfunc_end593-_ZSt22__uninitialized_copy_aIPKiPiiET0_T_S4_S3_RSaIT1_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt10__distanceIPKiENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag,"axG",@progbits,_ZSt10__distanceIPKiENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag,comdat
	.weak	_ZSt10__distanceIPKiENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag # -- Begin function _ZSt10__distanceIPKiENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag
	.p2align	4, 0x90
	.type	_ZSt10__distanceIPKiENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag,@function
_ZSt10__distanceIPKiENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag: # @_ZSt10__distanceIPKiENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	-16(%rbp), %rcx
	subq	%rcx, %rax
	sarq	$2, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end594:
	.size	_ZSt10__distanceIPKiENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag, .Lfunc_end594-_ZSt10__distanceIPKiENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt19__iterator_categoryIPKiENSt15iterator_traitsIT_E17iterator_categoryERKS3_,"axG",@progbits,_ZSt19__iterator_categoryIPKiENSt15iterator_traitsIT_E17iterator_categoryERKS3_,comdat
	.weak	_ZSt19__iterator_categoryIPKiENSt15iterator_traitsIT_E17iterator_categoryERKS3_ # -- Begin function _ZSt19__iterator_categoryIPKiENSt15iterator_traitsIT_E17iterator_categoryERKS3_
	.p2align	4, 0x90
	.type	_ZSt19__iterator_categoryIPKiENSt15iterator_traitsIT_E17iterator_categoryERKS3_,@function
_ZSt19__iterator_categoryIPKiENSt15iterator_traitsIT_E17iterator_categoryERKS3_: # @_ZSt19__iterator_categoryIPKiENSt15iterator_traitsIT_E17iterator_categoryERKS3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end595:
	.size	_ZSt19__iterator_categoryIPKiENSt15iterator_traitsIT_E17iterator_categoryERKS3_, .Lfunc_end595-_ZSt19__iterator_categoryIPKiENSt15iterator_traitsIT_E17iterator_categoryERKS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIiEE8allocateERS0_m,"axG",@progbits,_ZNSt16allocator_traitsISaIiEE8allocateERS0_m,comdat
	.weak	_ZNSt16allocator_traitsISaIiEE8allocateERS0_m # -- Begin function _ZNSt16allocator_traitsISaIiEE8allocateERS0_m
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIiEE8allocateERS0_m,@function
_ZNSt16allocator_traitsISaIiEE8allocateERS0_m: # @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	xorl	%eax, %eax
	movl	%eax, %edx
	callq	_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end596:
	.size	_ZNSt16allocator_traitsISaIiEE8allocateERS0_m, .Lfunc_end596-_ZNSt16allocator_traitsISaIiEE8allocateERS0_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv # -- Begin function _ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv,@function
_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv: # @_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rax
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	callq	_ZNK9__gnu_cxx13new_allocatorIiE11_M_max_sizeEv
	movq	%rax, %rcx
	movq	-32(%rbp), %rax                 # 8-byte Reload
	cmpq	%rcx, %rax
	jbe	.LBB597_4
# %bb.1:
	movabsq	$4611686018427387903, %rax      # imm = 0x3FFFFFFFFFFFFFFF
	cmpq	%rax, -16(%rbp)
	jbe	.LBB597_3
# %bb.2:
	callq	_ZSt28__throw_bad_array_new_lengthv@PLT
.LBB597_3:
	callq	_ZSt17__throw_bad_allocv@PLT
.LBB597_4:
	movq	-16(%rbp), %rdi
	shlq	$2, %rdi
	callq	_Znwm@PLT
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end597:
	.size	_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv, .Lfunc_end597-_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx13new_allocatorIiE11_M_max_sizeEv,"axG",@progbits,_ZNK9__gnu_cxx13new_allocatorIiE11_M_max_sizeEv,comdat
	.weak	_ZNK9__gnu_cxx13new_allocatorIiE11_M_max_sizeEv # -- Begin function _ZNK9__gnu_cxx13new_allocatorIiE11_M_max_sizeEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx13new_allocatorIiE11_M_max_sizeEv,@function
_ZNK9__gnu_cxx13new_allocatorIiE11_M_max_sizeEv: # @_ZNK9__gnu_cxx13new_allocatorIiE11_M_max_sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movabsq	$2305843009213693951, %rax      # imm = 0x1FFFFFFFFFFFFFFF
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end598:
	.size	_ZNK9__gnu_cxx13new_allocatorIiE11_M_max_sizeEv, .Lfunc_end598-_ZNK9__gnu_cxx13new_allocatorIiE11_M_max_sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIiSaIiEE11_S_max_sizeERKS0_,"axG",@progbits,_ZNSt6vectorIiSaIiEE11_S_max_sizeERKS0_,comdat
	.weak	_ZNSt6vectorIiSaIiEE11_S_max_sizeERKS0_ # -- Begin function _ZNSt6vectorIiSaIiEE11_S_max_sizeERKS0_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIiSaIiEE11_S_max_sizeERKS0_,@function
_ZNSt6vectorIiSaIiEE11_S_max_sizeERKS0_: # @_ZNSt6vectorIiSaIiEE11_S_max_sizeERKS0_
.Lfunc_begin72:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception72
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movabsq	$2305843009213693951, %rax      # imm = 0x1FFFFFFFFFFFFFFF
	movq	%rax, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_
	movq	%rax, -24(%rbp)
.Ltmp914:
	leaq	-16(%rbp), %rdi
	leaq	-24(%rbp), %rsi
	callq	_ZSt3minImERKT_S2_S2_
.Ltmp915:
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	jmp	.LBB599_1
.LBB599_1:
	movq	-32(%rbp), %rax                 # 8-byte Reload
	movq	(%rax), %rax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB599_2:
	.cfi_def_cfa %rbp, 16
.Ltmp916:
	movq	%rax, %rdi
                                        # kill: def $eax killed $edx killed $rdx
	callq	__clang_call_terminate
.Lfunc_end599:
	.size	_ZNSt6vectorIiSaIiEE11_S_max_sizeERKS0_, .Lfunc_end599-_ZNSt6vectorIiSaIiEE11_S_max_sizeERKS0_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt6vectorIiSaIiEE11_S_max_sizeERKS0_,"aG",@progbits,_ZNSt6vectorIiSaIiEE11_S_max_sizeERKS0_,comdat
	.p2align	2
GCC_except_table599:
.Lexception72:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase30-.Lttbaseref30
.Lttbaseref30:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end72-.Lcst_begin72
.Lcst_begin72:
	.uleb128 .Ltmp914-.Lfunc_begin72        # >> Call Site 1 <<
	.uleb128 .Ltmp915-.Ltmp914              #   Call between .Ltmp914 and .Ltmp915
	.uleb128 .Ltmp916-.Lfunc_begin72        #     jumps to .Ltmp916
	.byte	1                               #   On action: 1
.Lcst_end72:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase30:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSaIiEC2ERKS_,"axG",@progbits,_ZNSaIiEC2ERKS_,comdat
	.weak	_ZNSaIiEC2ERKS_                 # -- Begin function _ZNSaIiEC2ERKS_
	.p2align	4, 0x90
	.type	_ZNSaIiEC2ERKS_,@function
_ZNSaIiEC2ERKS_:                        # @_ZNSaIiEC2ERKS_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end600:
	.size	_ZNSaIiEC2ERKS_, .Lfunc_end600-_ZNSaIiEC2ERKS_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_,"axG",@progbits,_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_,comdat
	.weak	_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_ # -- Begin function _ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_,@function
_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_: # @_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end601:
	.size	_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_, .Lfunc_end601-_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt3minImERKT_S2_S2_,"axG",@progbits,_ZSt3minImERKT_S2_S2_,comdat
	.weak	_ZSt3minImERKT_S2_S2_           # -- Begin function _ZSt3minImERKT_S2_S2_
	.p2align	4, 0x90
	.type	_ZSt3minImERKT_S2_S2_,@function
_ZSt3minImERKT_S2_S2_:                  # @_ZSt3minImERKT_S2_S2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	movq	-16(%rbp), %rcx
	cmpq	(%rcx), %rax
	jae	.LBB602_2
# %bb.1:
	movq	-24(%rbp), %rax
	movq	%rax, -8(%rbp)
	jmp	.LBB602_3
.LBB602_2:
	movq	-16(%rbp), %rax
	movq	%rax, -8(%rbp)
.LBB602_3:
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end602:
	.size	_ZSt3minImERKT_S2_S2_, .Lfunc_end602-_ZSt3minImERKT_S2_S2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv,"axG",@progbits,_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv,comdat
	.weak	_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv # -- Begin function _ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv,@function
_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv: # @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx13new_allocatorIiE11_M_max_sizeEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end603:
	.size	_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv, .Lfunc_end603-_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt18uninitialized_copyIPKiPiET0_T_S4_S3_,"axG",@progbits,_ZSt18uninitialized_copyIPKiPiET0_T_S4_S3_,comdat
	.weak	_ZSt18uninitialized_copyIPKiPiET0_T_S4_S3_ # -- Begin function _ZSt18uninitialized_copyIPKiPiET0_T_S4_S3_
	.p2align	4, 0x90
	.type	_ZSt18uninitialized_copyIPKiPiET0_T_S4_S3_,@function
_ZSt18uninitialized_copyIPKiPiET0_T_S4_S3_: # @_ZSt18uninitialized_copyIPKiPiET0_T_S4_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movb	$1, -25(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKiPiEET0_T_S6_S5_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end604:
	.size	_ZSt18uninitialized_copyIPKiPiET0_T_S4_S3_, .Lfunc_end604-_ZSt18uninitialized_copyIPKiPiET0_T_S4_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKiPiEET0_T_S6_S5_,"axG",@progbits,_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKiPiEET0_T_S6_S5_,comdat
	.weak	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKiPiEET0_T_S6_S5_ # -- Begin function _ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKiPiEET0_T_S6_S5_
	.p2align	4, 0x90
	.type	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKiPiEET0_T_S6_S5_,@function
_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKiPiEET0_T_S6_S5_: # @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKiPiEET0_T_S6_S5_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZSt4copyIPKiPiET0_T_S4_S3_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end605:
	.size	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKiPiEET0_T_S6_S5_, .Lfunc_end605-_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKiPiEET0_T_S6_S5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4copyIPKiPiET0_T_S4_S3_,"axG",@progbits,_ZSt4copyIPKiPiET0_T_S4_S3_,comdat
	.weak	_ZSt4copyIPKiPiET0_T_S4_S3_     # -- Begin function _ZSt4copyIPKiPiET0_T_S4_S3_
	.p2align	4, 0x90
	.type	_ZSt4copyIPKiPiET0_T_S4_S3_,@function
_ZSt4copyIPKiPiET0_T_S4_S3_:            # @_ZSt4copyIPKiPiET0_T_S4_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt12__miter_baseIPKiET_S2_
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	callq	_ZSt12__miter_baseIPKiET_S2_
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rsi
	movq	-24(%rbp), %rdx
	callq	_ZSt13__copy_move_aILb0EPKiPiET1_T0_S4_S3_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end606:
	.size	_ZSt4copyIPKiPiET0_T_S4_S3_, .Lfunc_end606-_ZSt4copyIPKiPiET0_T_S4_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt13__copy_move_aILb0EPKiPiET1_T0_S4_S3_,"axG",@progbits,_ZSt13__copy_move_aILb0EPKiPiET1_T0_S4_S3_,comdat
	.weak	_ZSt13__copy_move_aILb0EPKiPiET1_T0_S4_S3_ # -- Begin function _ZSt13__copy_move_aILb0EPKiPiET1_T0_S4_S3_
	.p2align	4, 0x90
	.type	_ZSt13__copy_move_aILb0EPKiPiET1_T0_S4_S3_,@function
_ZSt13__copy_move_aILb0EPKiPiET1_T0_S4_S3_: # @_ZSt13__copy_move_aILb0EPKiPiET1_T0_S4_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt12__niter_baseIPKiET_S2_
	movq	%rax, -40(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	callq	_ZSt12__niter_baseIPKiET_S2_
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	movq	-24(%rbp), %rdi
	callq	_ZSt12__niter_baseIPiET_S1_
	movq	-40(%rbp), %rdi                 # 8-byte Reload
	movq	-32(%rbp), %rsi                 # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt14__copy_move_a1ILb0EPKiPiET1_T0_S4_S3_
	movq	%rax, %rsi
	leaq	-24(%rbp), %rdi
	callq	_ZSt12__niter_wrapIPiET_RKS1_S1_
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end607:
	.size	_ZSt13__copy_move_aILb0EPKiPiET1_T0_S4_S3_, .Lfunc_end607-_ZSt13__copy_move_aILb0EPKiPiET1_T0_S4_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__miter_baseIPKiET_S2_,"axG",@progbits,_ZSt12__miter_baseIPKiET_S2_,comdat
	.weak	_ZSt12__miter_baseIPKiET_S2_    # -- Begin function _ZSt12__miter_baseIPKiET_S2_
	.p2align	4, 0x90
	.type	_ZSt12__miter_baseIPKiET_S2_,@function
_ZSt12__miter_baseIPKiET_S2_:           # @_ZSt12__miter_baseIPKiET_S2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end608:
	.size	_ZSt12__miter_baseIPKiET_S2_, .Lfunc_end608-_ZSt12__miter_baseIPKiET_S2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__niter_wrapIPiET_RKS1_S1_,"axG",@progbits,_ZSt12__niter_wrapIPiET_RKS1_S1_,comdat
	.weak	_ZSt12__niter_wrapIPiET_RKS1_S1_ # -- Begin function _ZSt12__niter_wrapIPiET_RKS1_S1_
	.p2align	4, 0x90
	.type	_ZSt12__niter_wrapIPiET_RKS1_S1_,@function
_ZSt12__niter_wrapIPiET_RKS1_S1_:       # @_ZSt12__niter_wrapIPiET_RKS1_S1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-16(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end609:
	.size	_ZSt12__niter_wrapIPiET_RKS1_S1_, .Lfunc_end609-_ZSt12__niter_wrapIPiET_RKS1_S1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt14__copy_move_a1ILb0EPKiPiET1_T0_S4_S3_,"axG",@progbits,_ZSt14__copy_move_a1ILb0EPKiPiET1_T0_S4_S3_,comdat
	.weak	_ZSt14__copy_move_a1ILb0EPKiPiET1_T0_S4_S3_ # -- Begin function _ZSt14__copy_move_a1ILb0EPKiPiET1_T0_S4_S3_
	.p2align	4, 0x90
	.type	_ZSt14__copy_move_a1ILb0EPKiPiET1_T0_S4_S3_,@function
_ZSt14__copy_move_a1ILb0EPKiPiET1_T0_S4_S3_: # @_ZSt14__copy_move_a1ILb0EPKiPiET1_T0_S4_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZSt14__copy_move_a2ILb0EPKiPiET1_T0_S4_S3_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end610:
	.size	_ZSt14__copy_move_a1ILb0EPKiPiET1_T0_S4_S3_, .Lfunc_end610-_ZSt14__copy_move_a1ILb0EPKiPiET1_T0_S4_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__niter_baseIPKiET_S2_,"axG",@progbits,_ZSt12__niter_baseIPKiET_S2_,comdat
	.weak	_ZSt12__niter_baseIPKiET_S2_    # -- Begin function _ZSt12__niter_baseIPKiET_S2_
	.p2align	4, 0x90
	.type	_ZSt12__niter_baseIPKiET_S2_,@function
_ZSt12__niter_baseIPKiET_S2_:           # @_ZSt12__niter_baseIPKiET_S2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end611:
	.size	_ZSt12__niter_baseIPKiET_S2_, .Lfunc_end611-_ZSt12__niter_baseIPKiET_S2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__niter_baseIPiET_S1_,"axG",@progbits,_ZSt12__niter_baseIPiET_S1_,comdat
	.weak	_ZSt12__niter_baseIPiET_S1_     # -- Begin function _ZSt12__niter_baseIPiET_S1_
	.p2align	4, 0x90
	.type	_ZSt12__niter_baseIPiET_S1_,@function
_ZSt12__niter_baseIPiET_S1_:            # @_ZSt12__niter_baseIPiET_S1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end612:
	.size	_ZSt12__niter_baseIPiET_S1_, .Lfunc_end612-_ZSt12__niter_baseIPiET_S1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt14__copy_move_a2ILb0EPKiPiET1_T0_S4_S3_,"axG",@progbits,_ZSt14__copy_move_a2ILb0EPKiPiET1_T0_S4_S3_,comdat
	.weak	_ZSt14__copy_move_a2ILb0EPKiPiET1_T0_S4_S3_ # -- Begin function _ZSt14__copy_move_a2ILb0EPKiPiET1_T0_S4_S3_
	.p2align	4, 0x90
	.type	_ZSt14__copy_move_a2ILb0EPKiPiET1_T0_S4_S3_,@function
_ZSt14__copy_move_a2ILb0EPKiPiET1_T0_S4_S3_: # @_ZSt14__copy_move_a2ILb0EPKiPiET1_T0_S4_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end613:
	.size	_ZSt14__copy_move_a2ILb0EPKiPiET1_T0_S4_S3_, .Lfunc_end613-_ZSt14__copy_move_a2ILb0EPKiPiET1_T0_S4_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_,"axG",@progbits,_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_,comdat
	.weak	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_ # -- Begin function _ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_
	.p2align	4, 0x90
	.type	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_,@function
_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_: # @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	-8(%rbp), %rcx
	subq	%rcx, %rax
	sarq	$2, %rax
	movq	%rax, -32(%rbp)
	cmpq	$0, -32(%rbp)
	je	.LBB614_2
# %bb.1:
	movq	-24(%rbp), %rdi
	movq	-8(%rbp), %rsi
	movq	-32(%rbp), %rdx
	shlq	$2, %rdx
	callq	memmove@PLT
.LBB614_2:
	movq	-24(%rbp), %rax
	movq	-32(%rbp), %rcx
	shlq	$2, %rcx
	addq	%rcx, %rax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end614:
	.size	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_, .Lfunc_end614-_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt16initializer_listIiE4sizeEv,"axG",@progbits,_ZNKSt16initializer_listIiE4sizeEv,comdat
	.weak	_ZNKSt16initializer_listIiE4sizeEv # -- Begin function _ZNKSt16initializer_listIiE4sizeEv
	.p2align	4, 0x90
	.type	_ZNKSt16initializer_listIiE4sizeEv,@function
_ZNKSt16initializer_listIiE4sizeEv:     # @_ZNKSt16initializer_listIiE4sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end615:
	.size	_ZNKSt16initializer_listIiE4sizeEv, .Lfunc_end615-_ZNKSt16initializer_listIiE4sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim,"axG",@progbits,_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim,comdat
	.weak	_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim # -- Begin function _ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim,@function
_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim: # @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	cmpq	$0, -16(%rbp)
	je	.LBB616_2
# %bb.1:
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim
.LBB616_2:
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end616:
	.size	_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim, .Lfunc_end616-_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev,"axG",@progbits,_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev,comdat
	.weak	_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev # -- Begin function _ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev,@function
_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev: # @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSaIiED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end617:
	.size	_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev, .Lfunc_end617-_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim,"axG",@progbits,_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim,comdat
	.weak	_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim # -- Begin function _ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim,@function
_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim: # @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end618:
	.size	_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim, .Lfunc_end618-_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim # -- Begin function _ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim,@function
_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim: # @_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZdlPv@PLT
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end619:
	.size	_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim, .Lfunc_end619-_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt8_DestroyIPiiEvT_S1_RSaIT0_E,"axG",@progbits,_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E,comdat
	.weak	_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E # -- Begin function _ZSt8_DestroyIPiiEvT_S1_RSaIT0_E
	.p2align	4, 0x90
	.type	_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E,@function
_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E:       # @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZSt8_DestroyIPiEvT_S1_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end620:
	.size	_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E, .Lfunc_end620-_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt8_DestroyIPiEvT_S1_,"axG",@progbits,_ZSt8_DestroyIPiEvT_S1_,comdat
	.weak	_ZSt8_DestroyIPiEvT_S1_         # -- Begin function _ZSt8_DestroyIPiEvT_S1_
	.p2align	4, 0x90
	.type	_ZSt8_DestroyIPiEvT_S1_,@function
_ZSt8_DestroyIPiEvT_S1_:                # @_ZSt8_DestroyIPiEvT_S1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end621:
	.size	_ZSt8_DestroyIPiEvT_S1_, .Lfunc_end621-_ZSt8_DestroyIPiEvT_S1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_,"axG",@progbits,_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_,comdat
	.weak	_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_ # -- Begin function _ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_
	.p2align	4, 0x90
	.type	_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_,@function
_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_: # @_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end622:
	.size	_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_, .Lfunc_end622-_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt11char_traitsIcE6lengthEPKc,"axG",@progbits,_ZNSt11char_traitsIcE6lengthEPKc,comdat
	.weak	_ZNSt11char_traitsIcE6lengthEPKc # -- Begin function _ZNSt11char_traitsIcE6lengthEPKc
	.p2align	4, 0x90
	.type	_ZNSt11char_traitsIcE6lengthEPKc,@function
_ZNSt11char_traitsIcE6lengthEPKc:       # @_ZNSt11char_traitsIcE6lengthEPKc
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	testb	$1, %al
	jne	.LBB623_1
	jmp	.LBB623_2
.LBB623_1:
	movq	-24(%rbp), %rdi
	callq	_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc
	movq	%rax, -16(%rbp)
	jmp	.LBB623_3
.LBB623_2:
	movq	-24(%rbp), %rdi
	callq	strlen@PLT
	movq	%rax, -16(%rbp)
.LBB623_3:
	movq	-16(%rbp), %rax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end623:
	.size	_ZNSt11char_traitsIcE6lengthEPKc, .Lfunc_end623-_ZNSt11char_traitsIcE6lengthEPKc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag,"axG",@progbits,_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag,comdat
	.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag # -- Begin function _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag
	.p2align	4, 0x90
	.type	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag,@function
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag: # @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag
.Lfunc_begin73:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception73
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rdx, -32(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -64(%rbp)                 # 8-byte Spill
	movq	-24(%rbp), %rdi
	callq	_ZN9__gnu_cxx17__is_null_pointerIKcEEbPT_
	testb	$1, %al
	jne	.LBB624_1
	jmp	.LBB624_3
.LBB624_1:
	movq	-24(%rbp), %rax
	cmpq	-32(%rbp), %rax
	je	.LBB624_3
# %bb.2:
	leaq	.L.str.65(%rip), %rdi
	callq	_ZSt19__throw_logic_errorPKc@PLT
.LBB624_3:
	movq	-24(%rbp), %rdi
	movq	-32(%rbp), %rsi
	callq	_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_
	movq	%rax, -40(%rbp)
	cmpq	$15, -40(%rbp)
	jbe	.LBB624_5
# %bb.4:
	movq	-64(%rbp), %rdi                 # 8-byte Reload
	leaq	-40(%rbp), %rsi
	xorl	%eax, %eax
	movl	%eax, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT
	movq	-64(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@PLT
	movq	-64(%rbp), %rdi                 # 8-byte Reload
	movq	-40(%rbp), %rsi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@PLT
.LBB624_5:
.Ltmp917:
	movq	-64(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@PLT
.Ltmp918:
	movq	%rax, -72(%rbp)                 # 8-byte Spill
	jmp	.LBB624_6
.LBB624_6:
	movq	-72(%rbp), %rdi                 # 8-byte Reload
	movq	-24(%rbp), %rsi
	movq	-32(%rbp), %rdx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@PLT
	jmp	.LBB624_12
.LBB624_7:
.Ltmp919:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
# %bb.8:
	movq	-48(%rbp), %rdi
	callq	__cxa_begin_catch@PLT
	movq	-64(%rbp), %rdi                 # 8-byte Reload
.Ltmp920:
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@PLT
.Ltmp921:
	jmp	.LBB624_9
.LBB624_9:
.Ltmp922:
	callq	__cxa_rethrow@PLT
.Ltmp923:
	jmp	.LBB624_15
.LBB624_10:
.Ltmp924:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -48(%rbp)
	movl	%eax, -52(%rbp)
.Ltmp925:
	callq	__cxa_end_catch@PLT
.Ltmp926:
	jmp	.LBB624_11
.LBB624_11:
	jmp	.LBB624_13
.LBB624_12:
	movq	-64(%rbp), %rdi                 # 8-byte Reload
	movq	-40(%rbp), %rsi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@PLT
	addq	$80, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB624_13:
	.cfi_def_cfa %rbp, 16
	movq	-48(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.LBB624_14:
.Ltmp927:
	movq	%rax, %rdi
                                        # kill: def $eax killed $edx killed $rdx
	callq	__clang_call_terminate
.LBB624_15:
.Lfunc_end624:
	.size	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag, .Lfunc_end624-_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag
	.cfi_endproc
	.section	.gcc_except_table._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag,"aG",@progbits,_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag,comdat
	.p2align	2
GCC_except_table624:
.Lexception73:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase31-.Lttbaseref31
.Lttbaseref31:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end73-.Lcst_begin73
.Lcst_begin73:
	.uleb128 .Lfunc_begin73-.Lfunc_begin73  # >> Call Site 1 <<
	.uleb128 .Ltmp917-.Lfunc_begin73        #   Call between .Lfunc_begin73 and .Ltmp917
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp917-.Lfunc_begin73        # >> Call Site 2 <<
	.uleb128 .Ltmp918-.Ltmp917              #   Call between .Ltmp917 and .Ltmp918
	.uleb128 .Ltmp919-.Lfunc_begin73        #     jumps to .Ltmp919
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp918-.Lfunc_begin73        # >> Call Site 3 <<
	.uleb128 .Ltmp920-.Ltmp918              #   Call between .Ltmp918 and .Ltmp920
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp920-.Lfunc_begin73        # >> Call Site 4 <<
	.uleb128 .Ltmp923-.Ltmp920              #   Call between .Ltmp920 and .Ltmp923
	.uleb128 .Ltmp924-.Lfunc_begin73        #     jumps to .Ltmp924
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp925-.Lfunc_begin73        # >> Call Site 5 <<
	.uleb128 .Ltmp926-.Ltmp925              #   Call between .Ltmp925 and .Ltmp926
	.uleb128 .Ltmp927-.Lfunc_begin73        #     jumps to .Ltmp927
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp926-.Lfunc_begin73        # >> Call Site 6 <<
	.uleb128 .Lfunc_end624-.Ltmp926         #   Call between .Ltmp926 and .Lfunc_end624
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end73:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase31:
	.p2align	2
                                        # -- End function
	.section	.text._ZN9__gnu_cxx11char_traitsIcE6lengthEPKc,"axG",@progbits,_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc,comdat
	.weak	_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc # -- Begin function _ZN9__gnu_cxx11char_traitsIcE6lengthEPKc
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc,@function
_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc: # @_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	$0, -16(%rbp)
.LBB625_1:                              # =>This Inner Loop Header: Depth=1
	movq	-8(%rbp), %rdi
	addq	-16(%rbp), %rdi
	movb	$0, -17(%rbp)
	leaq	-17(%rbp), %rsi
	callq	_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_
	xorb	$-1, %al
	testb	$1, %al
	jne	.LBB625_2
	jmp	.LBB625_3
.LBB625_2:                              #   in Loop: Header=BB625_1 Depth=1
	movq	-16(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -16(%rbp)
	jmp	.LBB625_1
.LBB625_3:
	movq	-16(%rbp), %rax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end625:
	.size	_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc, .Lfunc_end625-_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_,"axG",@progbits,_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_,comdat
	.weak	_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_ # -- Begin function _ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_,@function
_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_: # @_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movsbl	(%rax), %eax
	movq	-16(%rbp), %rcx
	movsbl	(%rcx), %ecx
	cmpl	%ecx, %eax
	sete	%al
	andb	$1, %al
	movzbl	%al, %eax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end626:
	.size	_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_, .Lfunc_end626-_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx17__is_null_pointerIKcEEbPT_,"axG",@progbits,_ZN9__gnu_cxx17__is_null_pointerIKcEEbPT_,comdat
	.weak	_ZN9__gnu_cxx17__is_null_pointerIKcEEbPT_ # -- Begin function _ZN9__gnu_cxx17__is_null_pointerIKcEEbPT_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx17__is_null_pointerIKcEEbPT_,@function
_ZN9__gnu_cxx17__is_null_pointerIKcEEbPT_: # @_ZN9__gnu_cxx17__is_null_pointerIKcEEbPT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	cmpq	$0, -8(%rbp)
	sete	%al
	andb	$1, %al
	movzbl	%al, %eax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end627:
	.size	_ZN9__gnu_cxx17__is_null_pointerIKcEEbPT_, .Lfunc_end627-_ZN9__gnu_cxx17__is_null_pointerIKcEEbPT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_,"axG",@progbits,_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_,comdat
	.weak	_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_ # -- Begin function _ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_
	.p2align	4, 0x90
	.type	_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_,@function
_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_: # @_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -48(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rax
	movq	%rax, -40(%rbp)                 # 8-byte Spill
	leaq	-8(%rbp), %rdi
	callq	_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	movq	-40(%rbp), %rsi                 # 8-byte Reload
	callq	_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end628:
	.size	_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_, .Lfunc_end628-_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag,"axG",@progbits,_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag,comdat
	.weak	_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag # -- Begin function _ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag
	.p2align	4, 0x90
	.type	_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag,@function
_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag: # @_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	-16(%rbp), %rcx
	subq	%rcx, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end629:
	.size	_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag, .Lfunc_end629-_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_,"axG",@progbits,_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_,comdat
	.weak	_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_ # -- Begin function _ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_
	.p2align	4, 0x90
	.type	_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_,@function
_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_: # @_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end630:
	.size	_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_, .Lfunc_end630-_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_,"axG",@progbits,_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_,comdat
	.weak	_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_ # -- Begin function _ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_,@function
_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_: # @_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, %rax
	movq	%rax, -24(%rbp)                 # 8-byte Spill
	movq	%rdi, %rax
	movq	%rax, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-16(%rbp), %rsi
	callq	_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_
	movq	-24(%rbp), %rax                 # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end631:
	.size	_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_, .Lfunc_end631-_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_,"axG",@progbits,_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_,comdat
	.weak	_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_ # -- Begin function _ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_,@function
_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_: # @_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, %rax
	movq	%rax, -24(%rbp)                 # 8-byte Spill
	movq	%rdi, %rax
	movq	%rax, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-16(%rbp), %rsi
	callq	_ZNSaIcEC1ERKS_@PLT
	movq	-24(%rbp), %rax                 # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end632:
	.size	_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_, .Lfunc_end632-_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEC2ERKS4_,"axG",@progbits,_ZN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEC2ERKS4_,comdat
	.weak	_ZN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEC2ERKS4_ # -- Begin function _ZN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEC2ERKS4_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEC2ERKS4_,@function
_ZN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEC2ERKS4_: # @_ZN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEC2ERKS4_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	(%rcx), %rcx
	movq	%rcx, (%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end633:
	.size	_ZN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEC2ERKS4_, .Lfunc_end633-_ZN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEC2ERKS4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt8_DestroyIPddEvT_S1_RSaIT0_E,"axG",@progbits,_ZSt8_DestroyIPddEvT_S1_RSaIT0_E,comdat
	.weak	_ZSt8_DestroyIPddEvT_S1_RSaIT0_E # -- Begin function _ZSt8_DestroyIPddEvT_S1_RSaIT0_E
	.p2align	4, 0x90
	.type	_ZSt8_DestroyIPddEvT_S1_RSaIT0_E,@function
_ZSt8_DestroyIPddEvT_S1_RSaIT0_E:       # @_ZSt8_DestroyIPddEvT_S1_RSaIT0_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZSt8_DestroyIPdEvT_S1_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end634:
	.size	_ZSt8_DestroyIPddEvT_S1_RSaIT0_E, .Lfunc_end634-_ZSt8_DestroyIPddEvT_S1_RSaIT0_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv,comdat
	.weak	_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv # -- Begin function _ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv,@function
_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv: # @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end635:
	.size	_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv, .Lfunc_end635-_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIdSaIdEED2Ev,"axG",@progbits,_ZNSt12_Vector_baseIdSaIdEED2Ev,comdat
	.weak	_ZNSt12_Vector_baseIdSaIdEED2Ev # -- Begin function _ZNSt12_Vector_baseIdSaIdEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIdSaIdEED2Ev,@function
_ZNSt12_Vector_baseIdSaIdEED2Ev:        # @_ZNSt12_Vector_baseIdSaIdEED2Ev
.Lfunc_begin74:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception74
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -32(%rbp)                 # 8-byte Spill
	movq	(%rdi), %rsi
	movq	16(%rdi), %rdx
	subq	%rsi, %rdx
	sarq	$3, %rdx
.Ltmp928:
	callq	_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm
.Ltmp929:
	jmp	.LBB636_1
.LBB636_1:
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB636_2:
	.cfi_def_cfa %rbp, 16
.Ltmp930:
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -16(%rbp)
	movl	%eax, -20(%rbp)
	callq	_ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev
# %bb.3:
	movq	-16(%rbp), %rdi
	callq	__clang_call_terminate
.Lfunc_end636:
	.size	_ZNSt12_Vector_baseIdSaIdEED2Ev, .Lfunc_end636-_ZNSt12_Vector_baseIdSaIdEED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNSt12_Vector_baseIdSaIdEED2Ev,"aG",@progbits,_ZNSt12_Vector_baseIdSaIdEED2Ev,comdat
	.p2align	2
GCC_except_table636:
.Lexception74:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase32-.Lttbaseref32
.Lttbaseref32:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end74-.Lcst_begin74
.Lcst_begin74:
	.uleb128 .Ltmp928-.Lfunc_begin74        # >> Call Site 1 <<
	.uleb128 .Ltmp929-.Ltmp928              #   Call between .Ltmp928 and .Ltmp929
	.uleb128 .Ltmp930-.Lfunc_begin74        #     jumps to .Ltmp930
	.byte	1                               #   On action: 1
.Lcst_end74:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase32:
	.p2align	2
                                        # -- End function
	.section	.text._ZSt8_DestroyIPdEvT_S1_,"axG",@progbits,_ZSt8_DestroyIPdEvT_S1_,comdat
	.weak	_ZSt8_DestroyIPdEvT_S1_         # -- Begin function _ZSt8_DestroyIPdEvT_S1_
	.p2align	4, 0x90
	.type	_ZSt8_DestroyIPdEvT_S1_,@function
_ZSt8_DestroyIPdEvT_S1_:                # @_ZSt8_DestroyIPdEvT_S1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end637:
	.size	_ZSt8_DestroyIPdEvT_S1_, .Lfunc_end637-_ZSt8_DestroyIPdEvT_S1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_,"axG",@progbits,_ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_,comdat
	.weak	_ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_ # -- Begin function _ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_
	.p2align	4, 0x90
	.type	_ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_,@function
_ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_: # @_ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end638:
	.size	_ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_, .Lfunc_end638-_ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm,"axG",@progbits,_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm,comdat
	.weak	_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm # -- Begin function _ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm,@function
_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm: # @_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	cmpq	$0, -16(%rbp)
	je	.LBB639_2
# %bb.1:
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZNSt16allocator_traitsISaIdEE10deallocateERS0_Pdm
.LBB639_2:
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end639:
	.size	_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm, .Lfunc_end639-_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev,"axG",@progbits,_ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev,comdat
	.weak	_ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev # -- Begin function _ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev,@function
_ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev: # @_ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSaIdED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end640:
	.size	_ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev, .Lfunc_end640-_ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIdEE10deallocateERS0_Pdm,"axG",@progbits,_ZNSt16allocator_traitsISaIdEE10deallocateERS0_Pdm,comdat
	.weak	_ZNSt16allocator_traitsISaIdEE10deallocateERS0_Pdm # -- Begin function _ZNSt16allocator_traitsISaIdEE10deallocateERS0_Pdm
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIdEE10deallocateERS0_Pdm,@function
_ZNSt16allocator_traitsISaIdEE10deallocateERS0_Pdm: # @_ZNSt16allocator_traitsISaIdEE10deallocateERS0_Pdm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end641:
	.size	_ZNSt16allocator_traitsISaIdEE10deallocateERS0_Pdm, .Lfunc_end641-_ZNSt16allocator_traitsISaIdEE10deallocateERS0_Pdm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm # -- Begin function _ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm,@function
_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm: # @_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZdlPv@PLT
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end642:
	.size	_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm, .Lfunc_end642-_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIdED2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIdED2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIdED2Ev # -- Begin function _ZN9__gnu_cxx13new_allocatorIdED2Ev
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIdED2Ev,@function
_ZN9__gnu_cxx13new_allocatorIdED2Ev:    # @_ZN9__gnu_cxx13new_allocatorIdED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end643:
	.size	_ZN9__gnu_cxx13new_allocatorIdED2Ev, .Lfunc_end643-_ZN9__gnu_cxx13new_allocatorIdED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIdSaIdEE8max_sizeEv,"axG",@progbits,_ZNKSt6vectorIdSaIdEE8max_sizeEv,comdat
	.weak	_ZNKSt6vectorIdSaIdEE8max_sizeEv # -- Begin function _ZNKSt6vectorIdSaIdEE8max_sizeEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIdSaIdEE8max_sizeEv,@function
_ZNKSt6vectorIdSaIdEE8max_sizeEv:       # @_ZNKSt6vectorIdSaIdEE8max_sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv
	movq	%rax, %rdi
	callq	_ZNSt6vectorIdSaIdEE11_S_max_sizeERKS0_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end644:
	.size	_ZNKSt6vectorIdSaIdEE8max_sizeEv, .Lfunc_end644-_ZNKSt6vectorIdSaIdEE8max_sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIdSaIdEE8capacityEv,"axG",@progbits,_ZNKSt6vectorIdSaIdEE8capacityEv,comdat
	.weak	_ZNKSt6vectorIdSaIdEE8capacityEv # -- Begin function _ZNKSt6vectorIdSaIdEE8capacityEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIdSaIdEE8capacityEv,@function
_ZNKSt6vectorIdSaIdEE8capacityEv:       # @_ZNKSt6vectorIdSaIdEE8capacityEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rcx
	movq	16(%rcx), %rax
	movq	(%rcx), %rcx
	subq	%rcx, %rax
	sarq	$3, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end645:
	.size	_ZNKSt6vectorIdSaIdEE8capacityEv, .Lfunc_end645-_ZNKSt6vectorIdSaIdEE8capacityEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm,"axG",@progbits,_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm,comdat
	.weak	_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm # -- Begin function _ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm,@function
_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm: # @_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -24(%rbp)                 # 8-byte Spill
	cmpq	$0, -16(%rbp)
	je	.LBB646_2
# %bb.1:
	movq	-24(%rbp), %rdi                 # 8-byte Reload
	movq	-16(%rbp), %rsi
	callq	_ZNSt16allocator_traitsISaIdEE8allocateERS0_m
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	jmp	.LBB646_3
.LBB646_2:
	xorl	%eax, %eax
                                        # kill: def $rax killed $eax
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	jmp	.LBB646_3
.LBB646_3:
	movq	-32(%rbp), %rax                 # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end646:
	.size	_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm, .Lfunc_end646-_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIdSaIdEE11_S_relocateEPdS2_S2_RS0_,"axG",@progbits,_ZNSt6vectorIdSaIdEE11_S_relocateEPdS2_S2_RS0_,comdat
	.weak	_ZNSt6vectorIdSaIdEE11_S_relocateEPdS2_S2_RS0_ # -- Begin function _ZNSt6vectorIdSaIdEE11_S_relocateEPdS2_S2_RS0_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIdSaIdEE11_S_relocateEPdS2_S2_RS0_,@function
_ZNSt6vectorIdSaIdEE11_S_relocateEPdS2_S2_RS0_: # @_ZNSt6vectorIdSaIdEE11_S_relocateEPdS2_S2_RS0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rcx
	callq	_ZNSt6vectorIdSaIdEE14_S_do_relocateEPdS2_S2_RS0_St17integral_constantIbLb1EE
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end647:
	.size	_ZNSt6vectorIdSaIdEE11_S_relocateEPdS2_S2_RS0_, .Lfunc_end647-_ZNSt6vectorIdSaIdEE11_S_relocateEPdS2_S2_RS0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIdSaIdEE11_S_max_sizeERKS0_,"axG",@progbits,_ZNSt6vectorIdSaIdEE11_S_max_sizeERKS0_,comdat
	.weak	_ZNSt6vectorIdSaIdEE11_S_max_sizeERKS0_ # -- Begin function _ZNSt6vectorIdSaIdEE11_S_max_sizeERKS0_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIdSaIdEE11_S_max_sizeERKS0_,@function
_ZNSt6vectorIdSaIdEE11_S_max_sizeERKS0_: # @_ZNSt6vectorIdSaIdEE11_S_max_sizeERKS0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movabsq	$1152921504606846975, %rax      # imm = 0xFFFFFFFFFFFFFFF
	movq	%rax, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt16allocator_traitsISaIdEE8max_sizeERKS0_
	movq	%rax, -24(%rbp)
	leaq	-16(%rbp), %rdi
	leaq	-24(%rbp), %rsi
	callq	_ZSt3minImERKT_S2_S2_
	movq	(%rax), %rax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end648:
	.size	_ZNSt6vectorIdSaIdEE11_S_max_sizeERKS0_, .Lfunc_end648-_ZNSt6vectorIdSaIdEE11_S_max_sizeERKS0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv,comdat
	.weak	_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv # -- Begin function _ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv
	.p2align	4, 0x90
	.type	_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv,@function
_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv: # @_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end649:
	.size	_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv, .Lfunc_end649-_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIdEE8max_sizeERKS0_,"axG",@progbits,_ZNSt16allocator_traitsISaIdEE8max_sizeERKS0_,comdat
	.weak	_ZNSt16allocator_traitsISaIdEE8max_sizeERKS0_ # -- Begin function _ZNSt16allocator_traitsISaIdEE8max_sizeERKS0_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIdEE8max_sizeERKS0_,@function
_ZNSt16allocator_traitsISaIdEE8max_sizeERKS0_: # @_ZNSt16allocator_traitsISaIdEE8max_sizeERKS0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end650:
	.size	_ZNSt16allocator_traitsISaIdEE8max_sizeERKS0_, .Lfunc_end650-_ZNSt16allocator_traitsISaIdEE8max_sizeERKS0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv,"axG",@progbits,_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv,comdat
	.weak	_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv # -- Begin function _ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv,@function
_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv: # @_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx13new_allocatorIdE11_M_max_sizeEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end651:
	.size	_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv, .Lfunc_end651-_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx13new_allocatorIdE11_M_max_sizeEv,"axG",@progbits,_ZNK9__gnu_cxx13new_allocatorIdE11_M_max_sizeEv,comdat
	.weak	_ZNK9__gnu_cxx13new_allocatorIdE11_M_max_sizeEv # -- Begin function _ZNK9__gnu_cxx13new_allocatorIdE11_M_max_sizeEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx13new_allocatorIdE11_M_max_sizeEv,@function
_ZNK9__gnu_cxx13new_allocatorIdE11_M_max_sizeEv: # @_ZNK9__gnu_cxx13new_allocatorIdE11_M_max_sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movabsq	$1152921504606846975, %rax      # imm = 0xFFFFFFFFFFFFFFF
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end652:
	.size	_ZNK9__gnu_cxx13new_allocatorIdE11_M_max_sizeEv, .Lfunc_end652-_ZNK9__gnu_cxx13new_allocatorIdE11_M_max_sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIdEE8allocateERS0_m,"axG",@progbits,_ZNSt16allocator_traitsISaIdEE8allocateERS0_m,comdat
	.weak	_ZNSt16allocator_traitsISaIdEE8allocateERS0_m # -- Begin function _ZNSt16allocator_traitsISaIdEE8allocateERS0_m
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIdEE8allocateERS0_m,@function
_ZNSt16allocator_traitsISaIdEE8allocateERS0_m: # @_ZNSt16allocator_traitsISaIdEE8allocateERS0_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	xorl	%eax, %eax
	movl	%eax, %edx
	callq	_ZN9__gnu_cxx13new_allocatorIdE8allocateEmPKv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end653:
	.size	_ZNSt16allocator_traitsISaIdEE8allocateERS0_m, .Lfunc_end653-_ZNSt16allocator_traitsISaIdEE8allocateERS0_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIdE8allocateEmPKv,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIdE8allocateEmPKv,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIdE8allocateEmPKv # -- Begin function _ZN9__gnu_cxx13new_allocatorIdE8allocateEmPKv
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIdE8allocateEmPKv,@function
_ZN9__gnu_cxx13new_allocatorIdE8allocateEmPKv: # @_ZN9__gnu_cxx13new_allocatorIdE8allocateEmPKv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rax
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	callq	_ZNK9__gnu_cxx13new_allocatorIdE11_M_max_sizeEv
	movq	%rax, %rcx
	movq	-32(%rbp), %rax                 # 8-byte Reload
	cmpq	%rcx, %rax
	jbe	.LBB654_4
# %bb.1:
	movabsq	$2305843009213693951, %rax      # imm = 0x1FFFFFFFFFFFFFFF
	cmpq	%rax, -16(%rbp)
	jbe	.LBB654_3
# %bb.2:
	callq	_ZSt28__throw_bad_array_new_lengthv@PLT
.LBB654_3:
	callq	_ZSt17__throw_bad_allocv@PLT
.LBB654_4:
	movq	-16(%rbp), %rdi
	shlq	$3, %rdi
	callq	_Znwm@PLT
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end654:
	.size	_ZN9__gnu_cxx13new_allocatorIdE8allocateEmPKv, .Lfunc_end654-_ZN9__gnu_cxx13new_allocatorIdE8allocateEmPKv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIdSaIdEE14_S_do_relocateEPdS2_S2_RS0_St17integral_constantIbLb1EE,"axG",@progbits,_ZNSt6vectorIdSaIdEE14_S_do_relocateEPdS2_S2_RS0_St17integral_constantIbLb1EE,comdat
	.weak	_ZNSt6vectorIdSaIdEE14_S_do_relocateEPdS2_S2_RS0_St17integral_constantIbLb1EE # -- Begin function _ZNSt6vectorIdSaIdEE14_S_do_relocateEPdS2_S2_RS0_St17integral_constantIbLb1EE
	.p2align	4, 0x90
	.type	_ZNSt6vectorIdSaIdEE14_S_do_relocateEPdS2_S2_RS0_St17integral_constantIbLb1EE,@function
_ZNSt6vectorIdSaIdEE14_S_do_relocateEPdS2_S2_RS0_St17integral_constantIbLb1EE: # @_ZNSt6vectorIdSaIdEE14_S_do_relocateEPdS2_S2_RS0_St17integral_constantIbLb1EE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rdx, -32(%rbp)
	movq	%rcx, -40(%rbp)
	movq	-16(%rbp), %rdi
	movq	-24(%rbp), %rsi
	movq	-32(%rbp), %rdx
	movq	-40(%rbp), %rcx
	callq	_ZSt12__relocate_aIPdS0_SaIdEET0_T_S3_S2_RT1_
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end655:
	.size	_ZNSt6vectorIdSaIdEE14_S_do_relocateEPdS2_S2_RS0_St17integral_constantIbLb1EE, .Lfunc_end655-_ZNSt6vectorIdSaIdEE14_S_do_relocateEPdS2_S2_RS0_St17integral_constantIbLb1EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__relocate_aIPdS0_SaIdEET0_T_S3_S2_RT1_,"axG",@progbits,_ZSt12__relocate_aIPdS0_SaIdEET0_T_S3_S2_RT1_,comdat
	.weak	_ZSt12__relocate_aIPdS0_SaIdEET0_T_S3_S2_RT1_ # -- Begin function _ZSt12__relocate_aIPdS0_SaIdEET0_T_S3_S2_RT1_
	.p2align	4, 0x90
	.type	_ZSt12__relocate_aIPdS0_SaIdEET0_T_S3_S2_RT1_,@function
_ZSt12__relocate_aIPdS0_SaIdEET0_T_S3_S2_RT1_: # @_ZSt12__relocate_aIPdS0_SaIdEET0_T_S3_S2_RT1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt12__niter_baseIPdET_S1_
	movq	%rax, -48(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	callq	_ZSt12__niter_baseIPdET_S1_
	movq	%rax, -40(%rbp)                 # 8-byte Spill
	movq	-24(%rbp), %rdi
	callq	_ZSt12__niter_baseIPdET_S1_
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	movq	-40(%rbp), %rsi                 # 8-byte Reload
	movq	%rax, %rdx
	movq	-32(%rbp), %rcx
	callq	_ZSt14__relocate_a_1IddENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS1_E4typeES2_S2_S2_RSaIT0_E
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end656:
	.size	_ZSt12__relocate_aIPdS0_SaIdEET0_T_S3_S2_RT1_, .Lfunc_end656-_ZSt12__relocate_aIPdS0_SaIdEET0_T_S3_S2_RT1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt14__relocate_a_1IddENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS1_E4typeES2_S2_S2_RSaIT0_E,"axG",@progbits,_ZSt14__relocate_a_1IddENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS1_E4typeES2_S2_S2_RSaIT0_E,comdat
	.weak	_ZSt14__relocate_a_1IddENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS1_E4typeES2_S2_S2_RSaIT0_E # -- Begin function _ZSt14__relocate_a_1IddENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS1_E4typeES2_S2_S2_RSaIT0_E
	.p2align	4, 0x90
	.type	_ZSt14__relocate_a_1IddENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS1_E4typeES2_S2_S2_RSaIT0_E,@function
_ZSt14__relocate_a_1IddENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS1_E4typeES2_S2_S2_RSaIT0_E: # @_ZSt14__relocate_a_1IddENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS1_E4typeES2_S2_S2_RSaIT0_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-16(%rbp), %rax
	movq	-8(%rbp), %rcx
	subq	%rcx, %rax
	sarq	$3, %rax
	movq	%rax, -40(%rbp)
	cmpq	$0, -40(%rbp)
	jle	.LBB657_2
# %bb.1:
	movq	-24(%rbp), %rdi
	movq	-8(%rbp), %rsi
	movq	-40(%rbp), %rdx
	shlq	$3, %rdx
	callq	memmove@PLT
.LBB657_2:
	movq	-24(%rbp), %rax
	movq	-40(%rbp), %rcx
	shlq	$3, %rcx
	addq	%rcx, %rax
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end657:
	.size	_ZSt14__relocate_a_1IddENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS1_E4typeES2_S2_S2_RSaIT0_E, .Lfunc_end657-_ZSt14__relocate_a_1IddENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS1_E4typeES2_S2_S2_RSaIT0_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__niter_baseIPdET_S1_,"axG",@progbits,_ZSt12__niter_baseIPdET_S1_,comdat
	.weak	_ZSt12__niter_baseIPdET_S1_     # -- Begin function _ZSt12__niter_baseIPdET_S1_
	.p2align	4, 0x90
	.type	_ZSt12__niter_baseIPdET_S1_,@function
_ZSt12__niter_baseIPdET_S1_:            # @_ZSt12__niter_baseIPdET_S1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end658:
	.size	_ZSt12__niter_baseIPdET_S1_, .Lfunc_end658-_ZSt12__niter_baseIPdET_S1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIdEE9constructIdJRKdEEEvRS0_PT_DpOT0_,"axG",@progbits,_ZNSt16allocator_traitsISaIdEE9constructIdJRKdEEEvRS0_PT_DpOT0_,comdat
	.weak	_ZNSt16allocator_traitsISaIdEE9constructIdJRKdEEEvRS0_PT_DpOT0_ # -- Begin function _ZNSt16allocator_traitsISaIdEE9constructIdJRKdEEEvRS0_PT_DpOT0_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIdEE9constructIdJRKdEEEvRS0_PT_DpOT0_,@function
_ZNSt16allocator_traitsISaIdEE9constructIdJRKdEEEvRS0_PT_DpOT0_: # @_ZNSt16allocator_traitsISaIdEE9constructIdJRKdEEEvRS0_PT_DpOT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -40(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rax
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	movq	-24(%rbp), %rdi
	callq	_ZSt7forwardIRKdEOT_RNSt16remove_referenceIS2_E4typeE
	movq	-40(%rbp), %rdi                 # 8-byte Reload
	movq	-32(%rbp), %rsi                 # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZN9__gnu_cxx13new_allocatorIdE9constructIdJRKdEEEvPT_DpOT0_
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end659:
	.size	_ZNSt16allocator_traitsISaIdEE9constructIdJRKdEEEvRS0_PT_DpOT0_, .Lfunc_end659-_ZNSt16allocator_traitsISaIdEE9constructIdJRKdEEEvRS0_PT_DpOT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIdSaIdEE17_M_realloc_insertIJRKdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_,"axG",@progbits,_ZNSt6vectorIdSaIdEE17_M_realloc_insertIJRKdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_,comdat
	.weak	_ZNSt6vectorIdSaIdEE17_M_realloc_insertIJRKdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_ # -- Begin function _ZNSt6vectorIdSaIdEE17_M_realloc_insertIJRKdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIdSaIdEE17_M_realloc_insertIJRKdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_,@function
_ZNSt6vectorIdSaIdEE17_M_realloc_insertIJRKdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_: # @_ZNSt6vectorIdSaIdEE17_M_realloc_insertIJRKdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$160, %rsp
	movq	%rsi, -8(%rbp)
	movq	%rdi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rdi
	movq	%rdi, -88(%rbp)                 # 8-byte Spill
	movl	$1, %esi
	leaq	.L.str.67(%rip), %rdx
	callq	_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc
	movq	-88(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, -32(%rbp)
	movq	(%rdi), %rax
	movq	%rax, -40(%rbp)
	movq	8(%rdi), %rax
	movq	%rax, -48(%rbp)
	callq	_ZNSt6vectorIdSaIdEE5beginEv
	movq	%rax, -64(%rbp)
	leaq	-8(%rbp), %rdi
	leaq	-64(%rbp), %rsi
	callq	_ZN9__gnu_cxxmiIPdSt6vectorIdSaIdEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_
	movq	-88(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, -56(%rbp)
	movq	-32(%rbp), %rsi
	callq	_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm
	movq	%rax, %rcx
	movq	-88(%rbp), %rax                 # 8-byte Reload
	movq	%rcx, -72(%rbp)
	movq	-72(%rbp), %rcx
	movq	%rcx, -80(%rbp)
	movq	%rax, -152(%rbp)                # 8-byte Spill
	movq	-72(%rbp), %rax
	movq	-56(%rbp), %rcx
	shlq	$3, %rcx
	addq	%rcx, %rax
	movq	%rax, -144(%rbp)                # 8-byte Spill
	movq	-24(%rbp), %rdi
	callq	_ZSt7forwardIRKdEOT_RNSt16remove_referenceIS2_E4typeE
	movq	-152(%rbp), %rdi                # 8-byte Reload
	movq	-144(%rbp), %rsi                # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNSt16allocator_traitsISaIdEE9constructIdJRKdEEEvRS0_PT_DpOT0_
	movq	$0, -80(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -136(%rbp)                # 8-byte Spill
	leaq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv
	movq	-88(%rbp), %rdi                 # 8-byte Reload
	movq	(%rax), %rax
	movq	%rax, -128(%rbp)                # 8-byte Spill
	movq	-72(%rbp), %rax
	movq	%rax, -120(%rbp)                # 8-byte Spill
	callq	_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv
	movq	-136(%rbp), %rdi                # 8-byte Reload
	movq	-128(%rbp), %rsi                # 8-byte Reload
	movq	-120(%rbp), %rdx                # 8-byte Reload
	movq	%rax, %rcx
	callq	_ZNSt6vectorIdSaIdEE11_S_relocateEPdS2_S2_RS0_
	movq	%rax, -80(%rbp)
	movq	-80(%rbp), %rax
	addq	$8, %rax
	movq	%rax, -80(%rbp)
	leaq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv
	movq	-88(%rbp), %rdi                 # 8-byte Reload
	movq	(%rax), %rax
	movq	%rax, -112(%rbp)                # 8-byte Spill
	movq	-48(%rbp), %rax
	movq	%rax, -104(%rbp)                # 8-byte Spill
	movq	-80(%rbp), %rax
	movq	%rax, -96(%rbp)                 # 8-byte Spill
	callq	_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv
	movq	-112(%rbp), %rdi                # 8-byte Reload
	movq	-104(%rbp), %rsi                # 8-byte Reload
	movq	-96(%rbp), %rdx                 # 8-byte Reload
	movq	%rax, %rcx
	callq	_ZNSt6vectorIdSaIdEE11_S_relocateEPdS2_S2_RS0_
	movq	%rax, %rcx
	movq	-88(%rbp), %rax                 # 8-byte Reload
	movq	%rcx, -80(%rbp)
	movq	%rax, %rdi
	movq	-40(%rbp), %rsi
	movq	16(%rax), %rdx
	movq	-40(%rbp), %rax
	subq	%rax, %rdx
	sarq	$3, %rdx
	callq	_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm
	movq	-88(%rbp), %rax                 # 8-byte Reload
	movq	-72(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-80(%rbp), %rcx
	movq	%rcx, 8(%rax)
	movq	-72(%rbp), %rcx
	movq	-32(%rbp), %rdx
	shlq	$3, %rdx
	addq	%rdx, %rcx
	movq	%rcx, 16(%rax)
	addq	$160, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end660:
	.size	_ZNSt6vectorIdSaIdEE17_M_realloc_insertIJRKdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_, .Lfunc_end660-_ZNSt6vectorIdSaIdEE17_M_realloc_insertIJRKdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIdSaIdEE3endEv,"axG",@progbits,_ZNSt6vectorIdSaIdEE3endEv,comdat
	.weak	_ZNSt6vectorIdSaIdEE3endEv      # -- Begin function _ZNSt6vectorIdSaIdEE3endEv
	.p2align	4, 0x90
	.type	_ZNSt6vectorIdSaIdEE3endEv,@function
_ZNSt6vectorIdSaIdEE3endEv:             # @_ZNSt6vectorIdSaIdEE3endEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -16(%rbp)
	movq	-16(%rbp), %rsi
	addq	$8, %rsi
	leaq	-8(%rbp), %rdi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_
	movq	-8(%rbp), %rax
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end661:
	.size	_ZNSt6vectorIdSaIdEE3endEv, .Lfunc_end661-_ZNSt6vectorIdSaIdEE3endEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIdE9constructIdJRKdEEEvPT_DpOT0_,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIdE9constructIdJRKdEEEvPT_DpOT0_,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIdE9constructIdJRKdEEEvPT_DpOT0_ # -- Begin function _ZN9__gnu_cxx13new_allocatorIdE9constructIdJRKdEEEvPT_DpOT0_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIdE9constructIdJRKdEEEvPT_DpOT0_,@function
_ZN9__gnu_cxx13new_allocatorIdE9constructIdJRKdEEEvPT_DpOT0_: # @_ZN9__gnu_cxx13new_allocatorIdE9constructIdJRKdEEEvPT_DpOT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	movq	-24(%rbp), %rdi
	callq	_ZSt7forwardIRKdEOT_RNSt16remove_referenceIS2_E4typeE
	movq	%rax, %rcx
	movq	-32(%rbp), %rax                 # 8-byte Reload
	movsd	(%rcx), %xmm0                   # xmm0 = mem[0],zero
	movsd	%xmm0, (%rax)
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end662:
	.size	_ZN9__gnu_cxx13new_allocatorIdE9constructIdJRKdEEEvPT_DpOT0_, .Lfunc_end662-_ZN9__gnu_cxx13new_allocatorIdE9constructIdJRKdEEEvPT_DpOT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt7forwardIRKdEOT_RNSt16remove_referenceIS2_E4typeE,"axG",@progbits,_ZSt7forwardIRKdEOT_RNSt16remove_referenceIS2_E4typeE,comdat
	.weak	_ZSt7forwardIRKdEOT_RNSt16remove_referenceIS2_E4typeE # -- Begin function _ZSt7forwardIRKdEOT_RNSt16remove_referenceIS2_E4typeE
	.p2align	4, 0x90
	.type	_ZSt7forwardIRKdEOT_RNSt16remove_referenceIS2_E4typeE,@function
_ZSt7forwardIRKdEOT_RNSt16remove_referenceIS2_E4typeE: # @_ZSt7forwardIRKdEOT_RNSt16remove_referenceIS2_E4typeE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end663:
	.size	_ZSt7forwardIRKdEOT_RNSt16remove_referenceIS2_E4typeE, .Lfunc_end663-_ZSt7forwardIRKdEOT_RNSt16remove_referenceIS2_E4typeE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc,"axG",@progbits,_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc,comdat
	.weak	_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc # -- Begin function _ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc,@function
_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc: # @_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -56(%rbp)                 # 8-byte Spill
	callq	_ZNKSt6vectorIdSaIdEE8max_sizeEv
	movq	-56(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, -48(%rbp)                 # 8-byte Spill
	callq	_ZNKSt6vectorIdSaIdEE4sizeEv
	movq	%rax, %rcx
	movq	-48(%rbp), %rax                 # 8-byte Reload
	subq	%rcx, %rax
	cmpq	-16(%rbp), %rax
	jae	.LBB664_2
# %bb.1:
	movq	-24(%rbp), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.LBB664_2:
	movq	-56(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNKSt6vectorIdSaIdEE4sizeEv
	movq	-56(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, -72(%rbp)                 # 8-byte Spill
	callq	_ZNKSt6vectorIdSaIdEE4sizeEv
	movq	%rax, -40(%rbp)
	leaq	-40(%rbp), %rdi
	leaq	-16(%rbp), %rsi
	callq	_ZSt3maxImERKT_S2_S2_
	movq	-56(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rcx
	movq	-72(%rbp), %rax                 # 8-byte Reload
	addq	(%rcx), %rax
	movq	%rax, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -64(%rbp)                 # 8-byte Spill
	callq	_ZNKSt6vectorIdSaIdEE4sizeEv
	movq	%rax, %rcx
	movq	-64(%rbp), %rax                 # 8-byte Reload
	cmpq	%rcx, %rax
	jb	.LBB664_4
# %bb.3:
	movq	-56(%rbp), %rdi                 # 8-byte Reload
	movq	-32(%rbp), %rax
	movq	%rax, -80(%rbp)                 # 8-byte Spill
	callq	_ZNKSt6vectorIdSaIdEE8max_sizeEv
	movq	%rax, %rcx
	movq	-80(%rbp), %rax                 # 8-byte Reload
	cmpq	%rcx, %rax
	jbe	.LBB664_5
.LBB664_4:
	movq	-56(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNKSt6vectorIdSaIdEE8max_sizeEv
	movq	%rax, -88(%rbp)                 # 8-byte Spill
	jmp	.LBB664_6
.LBB664_5:
	movq	-32(%rbp), %rax
	movq	%rax, -88(%rbp)                 # 8-byte Spill
.LBB664_6:
	movq	-88(%rbp), %rax                 # 8-byte Reload
	addq	$96, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end664:
	.size	_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc, .Lfunc_end664-_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxxmiIPdSt6vectorIdSaIdEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_,"axG",@progbits,_ZN9__gnu_cxxmiIPdSt6vectorIdSaIdEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_,comdat
	.weak	_ZN9__gnu_cxxmiIPdSt6vectorIdSaIdEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_ # -- Begin function _ZN9__gnu_cxxmiIPdSt6vectorIdSaIdEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxxmiIPdSt6vectorIdSaIdEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_,@function
_ZN9__gnu_cxxmiIPdSt6vectorIdSaIdEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_: # @_ZN9__gnu_cxxmiIPdSt6vectorIdSaIdEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv
	movq	(%rax), %rax
	movq	%rax, -24(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv
	movq	%rax, %rcx
	movq	-24(%rbp), %rax                 # 8-byte Reload
	movq	(%rcx), %rcx
	subq	%rcx, %rax
	sarq	$3, %rax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end665:
	.size	_ZN9__gnu_cxxmiIPdSt6vectorIdSaIdEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_, .Lfunc_end665-_ZN9__gnu_cxxmiIPdSt6vectorIdSaIdEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIdSaIdEE5beginEv,"axG",@progbits,_ZNSt6vectorIdSaIdEE5beginEv,comdat
	.weak	_ZNSt6vectorIdSaIdEE5beginEv    # -- Begin function _ZNSt6vectorIdSaIdEE5beginEv
	.p2align	4, 0x90
	.type	_ZNSt6vectorIdSaIdEE5beginEv,@function
_ZNSt6vectorIdSaIdEE5beginEv:           # @_ZNSt6vectorIdSaIdEE5beginEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -16(%rbp)
	movq	-16(%rbp), %rsi
	leaq	-8(%rbp), %rdi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_
	movq	-8(%rbp), %rax
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end666:
	.size	_ZNSt6vectorIdSaIdEE5beginEv, .Lfunc_end666-_ZNSt6vectorIdSaIdEE5beginEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv # -- Begin function _ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv,@function
_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv: # @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end667:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv, .Lfunc_end667-_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt3maxImERKT_S2_S2_,"axG",@progbits,_ZSt3maxImERKT_S2_S2_,comdat
	.weak	_ZSt3maxImERKT_S2_S2_           # -- Begin function _ZSt3maxImERKT_S2_S2_
	.p2align	4, 0x90
	.type	_ZSt3maxImERKT_S2_S2_,@function
_ZSt3maxImERKT_S2_S2_:                  # @_ZSt3maxImERKT_S2_S2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	movq	-24(%rbp), %rcx
	cmpq	(%rcx), %rax
	jae	.LBB668_2
# %bb.1:
	movq	-24(%rbp), %rax
	movq	%rax, -8(%rbp)
	jmp	.LBB668_3
.LBB668_2:
	movq	-16(%rbp), %rax
	movq	%rax, -8(%rbp)
.LBB668_3:
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end668:
	.size	_ZSt3maxImERKT_S2_S2_, .Lfunc_end668-_ZSt3maxImERKT_S2_S2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_,"axG",@progbits,_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_,comdat
	.weak	_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_ # -- Begin function _ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_,@function
_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_: # @_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	(%rcx), %rcx
	movq	%rcx, (%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end669:
	.size	_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_, .Lfunc_end669-_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIdSaIdEE6resizeEm,"axG",@progbits,_ZNSt6vectorIdSaIdEE6resizeEm,comdat
	.weak	_ZNSt6vectorIdSaIdEE6resizeEm   # -- Begin function _ZNSt6vectorIdSaIdEE6resizeEm
	.p2align	4, 0x90
	.type	_ZNSt6vectorIdSaIdEE6resizeEm,@function
_ZNSt6vectorIdSaIdEE6resizeEm:          # @_ZNSt6vectorIdSaIdEE6resizeEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -32(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rax
	movq	%rax, -24(%rbp)                 # 8-byte Spill
	callq	_ZNKSt6vectorIdSaIdEE4sizeEv
	movq	%rax, %rcx
	movq	-24(%rbp), %rax                 # 8-byte Reload
	cmpq	%rcx, %rax
	jbe	.LBB670_2
# %bb.1:
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	movq	-16(%rbp), %rax
	movq	%rax, -40(%rbp)                 # 8-byte Spill
	callq	_ZNKSt6vectorIdSaIdEE4sizeEv
	movq	-40(%rbp), %rsi                 # 8-byte Reload
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	subq	%rax, %rsi
	callq	_ZNSt6vectorIdSaIdEE17_M_default_appendEm
	jmp	.LBB670_5
.LBB670_2:
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	movq	-16(%rbp), %rax
	movq	%rax, -48(%rbp)                 # 8-byte Spill
	callq	_ZNKSt6vectorIdSaIdEE4sizeEv
	movq	%rax, %rcx
	movq	-48(%rbp), %rax                 # 8-byte Reload
	cmpq	%rcx, %rax
	jae	.LBB670_4
# %bb.3:
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	movq	(%rdi), %rsi
	movq	-16(%rbp), %rax
	shlq	$3, %rax
	addq	%rax, %rsi
	callq	_ZNSt6vectorIdSaIdEE15_M_erase_at_endEPd
.LBB670_4:
	jmp	.LBB670_5
.LBB670_5:
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end670:
	.size	_ZNSt6vectorIdSaIdEE6resizeEm, .Lfunc_end670-_ZNSt6vectorIdSaIdEE6resizeEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIdSaIdEE17_M_default_appendEm,"axG",@progbits,_ZNSt6vectorIdSaIdEE17_M_default_appendEm,comdat
	.weak	_ZNSt6vectorIdSaIdEE17_M_default_appendEm # -- Begin function _ZNSt6vectorIdSaIdEE17_M_default_appendEm
	.p2align	4, 0x90
	.type	_ZNSt6vectorIdSaIdEE17_M_default_appendEm,@function
_ZNSt6vectorIdSaIdEE17_M_default_appendEm: # @_ZNSt6vectorIdSaIdEE17_M_default_appendEm
.Lfunc_begin75:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception75
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$144, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -72(%rbp)                 # 8-byte Spill
	cmpq	$0, -16(%rbp)
	je	.LBB671_15
# %bb.1:
	movq	-72(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNKSt6vectorIdSaIdEE4sizeEv
	movq	-72(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, -24(%rbp)
	movq	16(%rdi), %rax
	movq	8(%rdi), %rcx
	subq	%rcx, %rax
	sarq	$3, %rax
	movq	%rax, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -80(%rbp)                 # 8-byte Spill
	callq	_ZNKSt6vectorIdSaIdEE8max_sizeEv
	movq	%rax, %rcx
	movq	-80(%rbp), %rax                 # 8-byte Reload
	cmpq	%rcx, %rax
	ja	.LBB671_3
# %bb.2:
	movq	-72(%rbp), %rdi                 # 8-byte Reload
	movq	-32(%rbp), %rax
	movq	%rax, -88(%rbp)                 # 8-byte Spill
	callq	_ZNKSt6vectorIdSaIdEE8max_sizeEv
	movq	%rax, %rcx
	movq	-88(%rbp), %rax                 # 8-byte Reload
	subq	-24(%rbp), %rcx
	cmpq	%rcx, %rax
	jbe	.LBB671_4
.LBB671_3:
.LBB671_4:
	movq	-32(%rbp), %rax
	cmpq	-16(%rbp), %rax
	jb	.LBB671_6
# %bb.5:
	movq	-72(%rbp), %rdi                 # 8-byte Reload
	movq	8(%rdi), %rax
	movq	%rax, -104(%rbp)                # 8-byte Spill
	movq	-16(%rbp), %rax
	movq	%rax, -96(%rbp)                 # 8-byte Spill
	callq	_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv
	movq	-104(%rbp), %rdi                # 8-byte Reload
	movq	-96(%rbp), %rsi                 # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt27__uninitialized_default_n_aIPdmdET_S1_T0_RSaIT1_E
	movq	%rax, %rcx
	movq	-72(%rbp), %rax                 # 8-byte Reload
	movq	%rcx, 8(%rax)
	jmp	.LBB671_14
.LBB671_6:
	movq	-72(%rbp), %rdi                 # 8-byte Reload
	movq	-16(%rbp), %rsi
	leaq	.L.str.72(%rip), %rdx
	callq	_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc
	movq	-72(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rsi
	callq	_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm
	movq	-72(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	-24(%rbp), %rcx
	leaq	(%rax,%rcx,8), %rax
	movq	%rax, -120(%rbp)                # 8-byte Spill
	movq	-16(%rbp), %rax
	movq	%rax, -112(%rbp)                # 8-byte Spill
	callq	_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv
	movq	-120(%rbp), %rdi                # 8-byte Reload
	movq	-112(%rbp), %rsi                # 8-byte Reload
	movq	%rax, %rdx
.Ltmp931:
	callq	_ZSt27__uninitialized_default_n_aIPdmdET_S1_T0_RSaIT1_E
.Ltmp932:
	jmp	.LBB671_7
.LBB671_7:
	jmp	.LBB671_13
.LBB671_8:
.Ltmp933:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -56(%rbp)
	movl	%eax, -60(%rbp)
# %bb.9:
	movq	-56(%rbp), %rdi
	callq	__cxa_begin_catch@PLT
	movq	-72(%rbp), %rdi                 # 8-byte Reload
	movq	-48(%rbp), %rsi
	movq	-40(%rbp), %rdx
.Ltmp934:
	callq	_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm
.Ltmp935:
	jmp	.LBB671_10
.LBB671_10:
.Ltmp936:
	callq	__cxa_rethrow@PLT
.Ltmp937:
	jmp	.LBB671_18
.LBB671_11:
.Ltmp938:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -56(%rbp)
	movl	%eax, -60(%rbp)
.Ltmp939:
	callq	__cxa_end_catch@PLT
.Ltmp940:
	jmp	.LBB671_12
.LBB671_12:
	jmp	.LBB671_16
.LBB671_13:
	movq	-72(%rbp), %rdi                 # 8-byte Reload
	movq	(%rdi), %rax
	movq	%rax, -144(%rbp)                # 8-byte Spill
	movq	8(%rdi), %rax
	movq	%rax, -136(%rbp)                # 8-byte Spill
	movq	-48(%rbp), %rax
	movq	%rax, -128(%rbp)                # 8-byte Spill
	callq	_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv
	movq	-144(%rbp), %rdi                # 8-byte Reload
	movq	-136(%rbp), %rsi                # 8-byte Reload
	movq	-128(%rbp), %rdx                # 8-byte Reload
	movq	%rax, %rcx
	callq	_ZNSt6vectorIdSaIdEE11_S_relocateEPdS2_S2_RS0_
                                        # kill: def $rcx killed $rax
	movq	-72(%rbp), %rax                 # 8-byte Reload
	movq	%rax, %rdi
	movq	(%rax), %rsi
	movq	16(%rax), %rdx
	movq	(%rax), %rax
	subq	%rax, %rdx
	sarq	$3, %rdx
	callq	_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm
	movq	-72(%rbp), %rax                 # 8-byte Reload
	movq	-48(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-48(%rbp), %rcx
	movq	-24(%rbp), %rdx
	shlq	$3, %rdx
	addq	%rdx, %rcx
	movq	-16(%rbp), %rdx
	shlq	$3, %rdx
	addq	%rdx, %rcx
	movq	%rcx, 8(%rax)
	movq	-48(%rbp), %rcx
	movq	-40(%rbp), %rdx
	shlq	$3, %rdx
	addq	%rdx, %rcx
	movq	%rcx, 16(%rax)
.LBB671_14:
	jmp	.LBB671_15
.LBB671_15:
	addq	$144, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB671_16:
	.cfi_def_cfa %rbp, 16
	movq	-56(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.LBB671_17:
.Ltmp941:
	movq	%rax, %rdi
                                        # kill: def $eax killed $edx killed $rdx
	callq	__clang_call_terminate
.LBB671_18:
.Lfunc_end671:
	.size	_ZNSt6vectorIdSaIdEE17_M_default_appendEm, .Lfunc_end671-_ZNSt6vectorIdSaIdEE17_M_default_appendEm
	.cfi_endproc
	.section	.gcc_except_table._ZNSt6vectorIdSaIdEE17_M_default_appendEm,"aG",@progbits,_ZNSt6vectorIdSaIdEE17_M_default_appendEm,comdat
	.p2align	2
GCC_except_table671:
.Lexception75:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase33-.Lttbaseref33
.Lttbaseref33:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end75-.Lcst_begin75
.Lcst_begin75:
	.uleb128 .Lfunc_begin75-.Lfunc_begin75  # >> Call Site 1 <<
	.uleb128 .Ltmp931-.Lfunc_begin75        #   Call between .Lfunc_begin75 and .Ltmp931
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp931-.Lfunc_begin75        # >> Call Site 2 <<
	.uleb128 .Ltmp932-.Ltmp931              #   Call between .Ltmp931 and .Ltmp932
	.uleb128 .Ltmp933-.Lfunc_begin75        #     jumps to .Ltmp933
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp932-.Lfunc_begin75        # >> Call Site 3 <<
	.uleb128 .Ltmp934-.Ltmp932              #   Call between .Ltmp932 and .Ltmp934
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp934-.Lfunc_begin75        # >> Call Site 4 <<
	.uleb128 .Ltmp937-.Ltmp934              #   Call between .Ltmp934 and .Ltmp937
	.uleb128 .Ltmp938-.Lfunc_begin75        #     jumps to .Ltmp938
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp939-.Lfunc_begin75        # >> Call Site 5 <<
	.uleb128 .Ltmp940-.Ltmp939              #   Call between .Ltmp939 and .Ltmp940
	.uleb128 .Ltmp941-.Lfunc_begin75        #     jumps to .Ltmp941
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp940-.Lfunc_begin75        # >> Call Site 6 <<
	.uleb128 .Lfunc_end671-.Ltmp940         #   Call between .Ltmp940 and .Lfunc_end671
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end75:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase33:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt6vectorIdSaIdEE15_M_erase_at_endEPd,"axG",@progbits,_ZNSt6vectorIdSaIdEE15_M_erase_at_endEPd,comdat
	.weak	_ZNSt6vectorIdSaIdEE15_M_erase_at_endEPd # -- Begin function _ZNSt6vectorIdSaIdEE15_M_erase_at_endEPd
	.p2align	4, 0x90
	.type	_ZNSt6vectorIdSaIdEE15_M_erase_at_endEPd,@function
_ZNSt6vectorIdSaIdEE15_M_erase_at_endEPd: # @_ZNSt6vectorIdSaIdEE15_M_erase_at_endEPd
.Lfunc_begin76:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception76
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	movq	8(%rax), %rax
	movq	-16(%rbp), %rcx
	subq	%rcx, %rax
	sarq	$3, %rax
	movq	%rax, -24(%rbp)
	cmpq	$0, -24(%rbp)
	je	.LBB672_3
# %bb.1:
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	movq	-16(%rbp), %rax
	movq	%rax, -48(%rbp)                 # 8-byte Spill
	movq	8(%rdi), %rax
	movq	%rax, -40(%rbp)                 # 8-byte Spill
	callq	_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	movq	-40(%rbp), %rsi                 # 8-byte Reload
	movq	%rax, %rdx
.Ltmp942:
	callq	_ZSt8_DestroyIPddEvT_S1_RSaIT0_E
.Ltmp943:
	jmp	.LBB672_2
.LBB672_2:
	movq	-32(%rbp), %rax                 # 8-byte Reload
	movq	-16(%rbp), %rcx
	movq	%rcx, 8(%rax)
.LBB672_3:
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB672_4:
	.cfi_def_cfa %rbp, 16
.Ltmp944:
	movq	%rax, %rdi
                                        # kill: def $eax killed $edx killed $rdx
	callq	__clang_call_terminate
.Lfunc_end672:
	.size	_ZNSt6vectorIdSaIdEE15_M_erase_at_endEPd, .Lfunc_end672-_ZNSt6vectorIdSaIdEE15_M_erase_at_endEPd
	.cfi_endproc
	.section	.gcc_except_table._ZNSt6vectorIdSaIdEE15_M_erase_at_endEPd,"aG",@progbits,_ZNSt6vectorIdSaIdEE15_M_erase_at_endEPd,comdat
	.p2align	2
GCC_except_table672:
.Lexception76:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase34-.Lttbaseref34
.Lttbaseref34:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end76-.Lcst_begin76
.Lcst_begin76:
	.uleb128 .Ltmp942-.Lfunc_begin76        # >> Call Site 1 <<
	.uleb128 .Ltmp943-.Ltmp942              #   Call between .Ltmp942 and .Ltmp943
	.uleb128 .Ltmp944-.Lfunc_begin76        #     jumps to .Ltmp944
	.byte	1                               #   On action: 1
.Lcst_end76:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase34:
	.p2align	2
                                        # -- End function
	.section	.text._ZSt27__uninitialized_default_n_aIPdmdET_S1_T0_RSaIT1_E,"axG",@progbits,_ZSt27__uninitialized_default_n_aIPdmdET_S1_T0_RSaIT1_E,comdat
	.weak	_ZSt27__uninitialized_default_n_aIPdmdET_S1_T0_RSaIT1_E # -- Begin function _ZSt27__uninitialized_default_n_aIPdmdET_S1_T0_RSaIT1_E
	.p2align	4, 0x90
	.type	_ZSt27__uninitialized_default_n_aIPdmdET_S1_T0_RSaIT1_E,@function
_ZSt27__uninitialized_default_n_aIPdmdET_S1_T0_RSaIT1_E: # @_ZSt27__uninitialized_default_n_aIPdmdET_S1_T0_RSaIT1_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZSt25__uninitialized_default_nIPdmET_S1_T0_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end673:
	.size	_ZSt27__uninitialized_default_n_aIPdmdET_S1_T0_RSaIT1_E, .Lfunc_end673-_ZSt27__uninitialized_default_n_aIPdmdET_S1_T0_RSaIT1_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt25__uninitialized_default_nIPdmET_S1_T0_,"axG",@progbits,_ZSt25__uninitialized_default_nIPdmET_S1_T0_,comdat
	.weak	_ZSt25__uninitialized_default_nIPdmET_S1_T0_ # -- Begin function _ZSt25__uninitialized_default_nIPdmET_S1_T0_
	.p2align	4, 0x90
	.type	_ZSt25__uninitialized_default_nIPdmET_S1_T0_,@function
_ZSt25__uninitialized_default_nIPdmET_S1_T0_: # @_ZSt25__uninitialized_default_nIPdmET_S1_T0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movb	$1, -17(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPdmEET_S3_T0_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end674:
	.size	_ZSt25__uninitialized_default_nIPdmET_S1_T0_, .Lfunc_end674-_ZSt25__uninitialized_default_nIPdmET_S1_T0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPdmEET_S3_T0_,"axG",@progbits,_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPdmEET_S3_T0_,comdat
	.weak	_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPdmEET_S3_T0_ # -- Begin function _ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPdmEET_S3_T0_
	.p2align	4, 0x90
	.type	_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPdmEET_S3_T0_,@function
_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPdmEET_S3_T0_: # @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPdmEET_S3_T0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	cmpq	$0, -16(%rbp)
	jbe	.LBB675_2
# %bb.1:
	movq	-8(%rbp), %rdi
	callq	_ZSt11__addressofIdEPT_RS0_
	movq	%rax, -24(%rbp)
	movq	-24(%rbp), %rdi
	callq	_ZSt10_ConstructIdJEEvPT_DpOT0_
	movq	-8(%rbp), %rax
	addq	$8, %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	subq	$1, %rsi
	movq	-24(%rbp), %rdx
	callq	_ZSt6fill_nIPdmdET_S1_T0_RKT1_
	movq	%rax, -8(%rbp)
.LBB675_2:
	movq	-8(%rbp), %rax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end675:
	.size	_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPdmEET_S3_T0_, .Lfunc_end675-_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPdmEET_S3_T0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt11__addressofIdEPT_RS0_,"axG",@progbits,_ZSt11__addressofIdEPT_RS0_,comdat
	.weak	_ZSt11__addressofIdEPT_RS0_     # -- Begin function _ZSt11__addressofIdEPT_RS0_
	.p2align	4, 0x90
	.type	_ZSt11__addressofIdEPT_RS0_,@function
_ZSt11__addressofIdEPT_RS0_:            # @_ZSt11__addressofIdEPT_RS0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end676:
	.size	_ZSt11__addressofIdEPT_RS0_, .Lfunc_end676-_ZSt11__addressofIdEPT_RS0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt10_ConstructIdJEEvPT_DpOT0_,"axG",@progbits,_ZSt10_ConstructIdJEEvPT_DpOT0_,comdat
	.weak	_ZSt10_ConstructIdJEEvPT_DpOT0_ # -- Begin function _ZSt10_ConstructIdJEEvPT_DpOT0_
	.p2align	4, 0x90
	.type	_ZSt10_ConstructIdJEEvPT_DpOT0_,@function
_ZSt10_ConstructIdJEEvPT_DpOT0_:        # @_ZSt10_ConstructIdJEEvPT_DpOT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	xorps	%xmm0, %xmm0
	movsd	%xmm0, (%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end677:
	.size	_ZSt10_ConstructIdJEEvPT_DpOT0_, .Lfunc_end677-_ZSt10_ConstructIdJEEvPT_DpOT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt6fill_nIPdmdET_S1_T0_RKT1_,"axG",@progbits,_ZSt6fill_nIPdmdET_S1_T0_RKT1_,comdat
	.weak	_ZSt6fill_nIPdmdET_S1_T0_RKT1_  # -- Begin function _ZSt6fill_nIPdmdET_S1_T0_RKT1_
	.p2align	4, 0x90
	.type	_ZSt6fill_nIPdmdET_S1_T0_RKT1_,@function
_ZSt6fill_nIPdmdET_S1_T0_RKT1_:         # @_ZSt6fill_nIPdmdET_S1_T0_RKT1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -64(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	callq	_ZSt17__size_to_integerm
	movq	%rax, -56(%rbp)                 # 8-byte Spill
	movq	-24(%rbp), %rax
	movq	%rax, -48(%rbp)                 # 8-byte Spill
	leaq	-8(%rbp), %rdi
	callq	_ZSt19__iterator_categoryIPdENSt15iterator_traitsIT_E17iterator_categoryERKS2_
	movq	-64(%rbp), %rdi                 # 8-byte Reload
	movq	-56(%rbp), %rsi                 # 8-byte Reload
	movq	-48(%rbp), %rdx                 # 8-byte Reload
	callq	_ZSt10__fill_n_aIPdmdET_S1_T0_RKT1_St26random_access_iterator_tag
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end678:
	.size	_ZSt6fill_nIPdmdET_S1_T0_RKT1_, .Lfunc_end678-_ZSt6fill_nIPdmdET_S1_T0_RKT1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt10__fill_n_aIPdmdET_S1_T0_RKT1_St26random_access_iterator_tag,"axG",@progbits,_ZSt10__fill_n_aIPdmdET_S1_T0_RKT1_St26random_access_iterator_tag,comdat
	.weak	_ZSt10__fill_n_aIPdmdET_S1_T0_RKT1_St26random_access_iterator_tag # -- Begin function _ZSt10__fill_n_aIPdmdET_S1_T0_RKT1_St26random_access_iterator_tag
	.p2align	4, 0x90
	.type	_ZSt10__fill_n_aIPdmdET_S1_T0_RKT1_St26random_access_iterator_tag,@function
_ZSt10__fill_n_aIPdmdET_S1_T0_RKT1_St26random_access_iterator_tag: # @_ZSt10__fill_n_aIPdmdET_S1_T0_RKT1_St26random_access_iterator_tag
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -32(%rbp)
	ja	.LBB679_2
# %bb.1:
	movq	-24(%rbp), %rax
	movq	%rax, -8(%rbp)
	jmp	.LBB679_3
.LBB679_2:
	movq	-24(%rbp), %rdi
	movq	-24(%rbp), %rsi
	movq	-32(%rbp), %rax
	shlq	$3, %rax
	addq	%rax, %rsi
	movq	-40(%rbp), %rdx
	callq	_ZSt8__fill_aIPddEvT_S1_RKT0_
	movq	-24(%rbp), %rax
	movq	-32(%rbp), %rcx
	shlq	$3, %rcx
	addq	%rcx, %rax
	movq	%rax, -8(%rbp)
.LBB679_3:
	movq	-8(%rbp), %rax
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end679:
	.size	_ZSt10__fill_n_aIPdmdET_S1_T0_RKT1_St26random_access_iterator_tag, .Lfunc_end679-_ZSt10__fill_n_aIPdmdET_S1_T0_RKT1_St26random_access_iterator_tag
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt17__size_to_integerm,"axG",@progbits,_ZSt17__size_to_integerm,comdat
	.weak	_ZSt17__size_to_integerm        # -- Begin function _ZSt17__size_to_integerm
	.p2align	4, 0x90
	.type	_ZSt17__size_to_integerm,@function
_ZSt17__size_to_integerm:               # @_ZSt17__size_to_integerm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end680:
	.size	_ZSt17__size_to_integerm, .Lfunc_end680-_ZSt17__size_to_integerm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt19__iterator_categoryIPdENSt15iterator_traitsIT_E17iterator_categoryERKS2_,"axG",@progbits,_ZSt19__iterator_categoryIPdENSt15iterator_traitsIT_E17iterator_categoryERKS2_,comdat
	.weak	_ZSt19__iterator_categoryIPdENSt15iterator_traitsIT_E17iterator_categoryERKS2_ # -- Begin function _ZSt19__iterator_categoryIPdENSt15iterator_traitsIT_E17iterator_categoryERKS2_
	.p2align	4, 0x90
	.type	_ZSt19__iterator_categoryIPdENSt15iterator_traitsIT_E17iterator_categoryERKS2_,@function
_ZSt19__iterator_categoryIPdENSt15iterator_traitsIT_E17iterator_categoryERKS2_: # @_ZSt19__iterator_categoryIPdENSt15iterator_traitsIT_E17iterator_categoryERKS2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end681:
	.size	_ZSt19__iterator_categoryIPdENSt15iterator_traitsIT_E17iterator_categoryERKS2_, .Lfunc_end681-_ZSt19__iterator_categoryIPdENSt15iterator_traitsIT_E17iterator_categoryERKS2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt8__fill_aIPddEvT_S1_RKT0_,"axG",@progbits,_ZSt8__fill_aIPddEvT_S1_RKT0_,comdat
	.weak	_ZSt8__fill_aIPddEvT_S1_RKT0_   # -- Begin function _ZSt8__fill_aIPddEvT_S1_RKT0_
	.p2align	4, 0x90
	.type	_ZSt8__fill_aIPddEvT_S1_RKT0_,@function
_ZSt8__fill_aIPddEvT_S1_RKT0_:          # @_ZSt8__fill_aIPddEvT_S1_RKT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZSt9__fill_a1IPddEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end682:
	.size	_ZSt8__fill_aIPddEvT_S1_RKT0_, .Lfunc_end682-_ZSt8__fill_aIPddEvT_S1_RKT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt9__fill_a1IPddEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_,"axG",@progbits,_ZSt9__fill_a1IPddEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_,comdat
	.weak	_ZSt9__fill_a1IPddEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_ # -- Begin function _ZSt9__fill_a1IPddEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_
	.p2align	4, 0x90
	.type	_ZSt9__fill_a1IPddEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_,@function
_ZSt9__fill_a1IPddEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_: # @_ZSt9__fill_a1IPddEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-24(%rbp), %rax
	movsd	(%rax), %xmm0                   # xmm0 = mem[0],zero
	movsd	%xmm0, -32(%rbp)
.LBB683_1:                              # =>This Inner Loop Header: Depth=1
	movq	-8(%rbp), %rax
	cmpq	-16(%rbp), %rax
	je	.LBB683_4
# %bb.2:                                #   in Loop: Header=BB683_1 Depth=1
	movsd	-32(%rbp), %xmm0                # xmm0 = mem[0],zero
	movq	-8(%rbp), %rax
	movsd	%xmm0, (%rax)
# %bb.3:                                #   in Loop: Header=BB683_1 Depth=1
	movq	-8(%rbp), %rax
	addq	$8, %rax
	movq	%rax, -8(%rbp)
	jmp	.LBB683_1
.LBB683_4:
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end683:
	.size	_ZSt9__fill_a1IPddEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_, .Lfunc_end683-_ZSt9__fill_a1IPddEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx14__alloc_traitsISaIdEdE17_S_select_on_copyERKS1_,"axG",@progbits,_ZN9__gnu_cxx14__alloc_traitsISaIdEdE17_S_select_on_copyERKS1_,comdat
	.weak	_ZN9__gnu_cxx14__alloc_traitsISaIdEdE17_S_select_on_copyERKS1_ # -- Begin function _ZN9__gnu_cxx14__alloc_traitsISaIdEdE17_S_select_on_copyERKS1_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx14__alloc_traitsISaIdEdE17_S_select_on_copyERKS1_,@function
_ZN9__gnu_cxx14__alloc_traitsISaIdEdE17_S_select_on_copyERKS1_: # @_ZN9__gnu_cxx14__alloc_traitsISaIdEdE17_S_select_on_copyERKS1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, %rax
	movq	%rax, -24(%rbp)                 # 8-byte Spill
	movq	%rdi, %rax
	movq	%rax, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-16(%rbp), %rsi
	callq	_ZNSt16allocator_traitsISaIdEE37select_on_container_copy_constructionERKS0_
	movq	-24(%rbp), %rax                 # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end684:
	.size	_ZN9__gnu_cxx14__alloc_traitsISaIdEdE17_S_select_on_copyERKS1_, .Lfunc_end684-_ZN9__gnu_cxx14__alloc_traitsISaIdEdE17_S_select_on_copyERKS1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_,"axG",@progbits,_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_,comdat
	.weak	_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_ # -- Begin function _ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_,@function
_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_:   # @_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_
.Lfunc_begin77:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception77
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -48(%rbp)                 # 8-byte Spill
	movq	-24(%rbp), %rsi
	callq	_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2ERKS0_
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	movq	-16(%rbp), %rsi
.Ltmp945:
	callq	_ZNSt12_Vector_baseIdSaIdEE17_M_create_storageEm
.Ltmp946:
	jmp	.LBB685_1
.LBB685_1:
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB685_2:
	.cfi_def_cfa %rbp, 16
.Ltmp947:
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -32(%rbp)
	movl	%eax, -36(%rbp)
	callq	_ZNSt12_Vector_baseIdSaIdEE12_Vector_implD2Ev
# %bb.3:
	movq	-32(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end685:
	.size	_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_, .Lfunc_end685-_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_,"aG",@progbits,_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_,comdat
	.p2align	2
GCC_except_table685:
.Lexception77:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end77-.Lcst_begin77
.Lcst_begin77:
	.uleb128 .Ltmp945-.Lfunc_begin77        # >> Call Site 1 <<
	.uleb128 .Ltmp946-.Ltmp945              #   Call between .Ltmp945 and .Ltmp946
	.uleb128 .Ltmp947-.Lfunc_begin77        #     jumps to .Ltmp947
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp946-.Lfunc_begin77        # >> Call Site 2 <<
	.uleb128 .Lfunc_end685-.Ltmp946         #   Call between .Ltmp946 and .Lfunc_end685
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end77:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSaIdED2Ev,"axG",@progbits,_ZNSaIdED2Ev,comdat
	.weak	_ZNSaIdED2Ev                    # -- Begin function _ZNSaIdED2Ev
	.p2align	4, 0x90
	.type	_ZNSaIdED2Ev,@function
_ZNSaIdED2Ev:                           # @_ZNSaIdED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIdED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end686:
	.size	_ZNSaIdED2Ev, .Lfunc_end686-_ZNSaIdED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPddET0_T_SA_S9_RSaIT1_E,"axG",@progbits,_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPddET0_T_SA_S9_RSaIT1_E,comdat
	.weak	_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPddET0_T_SA_S9_RSaIT1_E # -- Begin function _ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPddET0_T_SA_S9_RSaIT1_E
	.p2align	4, 0x90
	.type	_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPddET0_T_SA_S9_RSaIT1_E,@function
_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPddET0_T_SA_S9_RSaIT1_E: # @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPddET0_T_SA_S9_RSaIT1_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-24(%rbp), %rdx
	movq	-40(%rbp), %rdi
	movq	-48(%rbp), %rsi
	callq	_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET0_T_SA_S9_
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end687:
	.size	_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPddET0_T_SA_S9_RSaIT1_E, .Lfunc_end687-_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPddET0_T_SA_S9_RSaIT1_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIdSaIdEE5beginEv,"axG",@progbits,_ZNKSt6vectorIdSaIdEE5beginEv,comdat
	.weak	_ZNKSt6vectorIdSaIdEE5beginEv   # -- Begin function _ZNKSt6vectorIdSaIdEE5beginEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIdSaIdEE5beginEv,@function
_ZNKSt6vectorIdSaIdEE5beginEv:          # @_ZNKSt6vectorIdSaIdEE5beginEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -16(%rbp)
	movq	-16(%rbp), %rsi
	leaq	-8(%rbp), %rdi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEC2ERKS2_
	movq	-8(%rbp), %rax
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end688:
	.size	_ZNKSt6vectorIdSaIdEE5beginEv, .Lfunc_end688-_ZNKSt6vectorIdSaIdEE5beginEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIdSaIdEE3endEv,"axG",@progbits,_ZNKSt6vectorIdSaIdEE3endEv,comdat
	.weak	_ZNKSt6vectorIdSaIdEE3endEv     # -- Begin function _ZNKSt6vectorIdSaIdEE3endEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIdSaIdEE3endEv,@function
_ZNKSt6vectorIdSaIdEE3endEv:            # @_ZNKSt6vectorIdSaIdEE3endEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -16(%rbp)
	movq	-16(%rbp), %rsi
	addq	$8, %rsi
	leaq	-8(%rbp), %rdi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEC2ERKS2_
	movq	-8(%rbp), %rax
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end689:
	.size	_ZNKSt6vectorIdSaIdEE3endEv, .Lfunc_end689-_ZNKSt6vectorIdSaIdEE3endEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIdEE37select_on_container_copy_constructionERKS0_,"axG",@progbits,_ZNSt16allocator_traitsISaIdEE37select_on_container_copy_constructionERKS0_,comdat
	.weak	_ZNSt16allocator_traitsISaIdEE37select_on_container_copy_constructionERKS0_ # -- Begin function _ZNSt16allocator_traitsISaIdEE37select_on_container_copy_constructionERKS0_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIdEE37select_on_container_copy_constructionERKS0_,@function
_ZNSt16allocator_traitsISaIdEE37select_on_container_copy_constructionERKS0_: # @_ZNSt16allocator_traitsISaIdEE37select_on_container_copy_constructionERKS0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, %rax
	movq	%rax, -24(%rbp)                 # 8-byte Spill
	movq	%rdi, %rax
	movq	%rax, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-16(%rbp), %rsi
	callq	_ZNSaIdEC2ERKS_
	movq	-24(%rbp), %rax                 # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end690:
	.size	_ZNSt16allocator_traitsISaIdEE37select_on_container_copy_constructionERKS0_, .Lfunc_end690-_ZNSt16allocator_traitsISaIdEE37select_on_container_copy_constructionERKS0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSaIdEC2ERKS_,"axG",@progbits,_ZNSaIdEC2ERKS_,comdat
	.weak	_ZNSaIdEC2ERKS_                 # -- Begin function _ZNSaIdEC2ERKS_
	.p2align	4, 0x90
	.type	_ZNSaIdEC2ERKS_,@function
_ZNSaIdEC2ERKS_:                        # @_ZNSaIdEC2ERKS_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZN9__gnu_cxx13new_allocatorIdEC2ERKS1_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end691:
	.size	_ZNSaIdEC2ERKS_, .Lfunc_end691-_ZNSaIdEC2ERKS_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIdEC2ERKS1_,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIdEC2ERKS1_,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIdEC2ERKS1_ # -- Begin function _ZN9__gnu_cxx13new_allocatorIdEC2ERKS1_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIdEC2ERKS1_,@function
_ZN9__gnu_cxx13new_allocatorIdEC2ERKS1_: # @_ZN9__gnu_cxx13new_allocatorIdEC2ERKS1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end692:
	.size	_ZN9__gnu_cxx13new_allocatorIdEC2ERKS1_, .Lfunc_end692-_ZN9__gnu_cxx13new_allocatorIdEC2ERKS1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2ERKS0_,"axG",@progbits,_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2ERKS0_,comdat
	.weak	_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2ERKS0_ # -- Begin function _ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2ERKS0_
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2ERKS0_,@function
_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2ERKS0_: # @_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2ERKS0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -24(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rsi
	callq	_ZNSaIdEC2ERKS_
	movq	-24(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataC2Ev
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end693:
	.size	_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2ERKS0_, .Lfunc_end693-_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2ERKS0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIdSaIdEE17_M_create_storageEm,"axG",@progbits,_ZNSt12_Vector_baseIdSaIdEE17_M_create_storageEm,comdat
	.weak	_ZNSt12_Vector_baseIdSaIdEE17_M_create_storageEm # -- Begin function _ZNSt12_Vector_baseIdSaIdEE17_M_create_storageEm
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIdSaIdEE17_M_create_storageEm,@function
_ZNSt12_Vector_baseIdSaIdEE17_M_create_storageEm: # @_ZNSt12_Vector_baseIdSaIdEE17_M_create_storageEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -24(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rsi
	callq	_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm
	movq	%rax, %rcx
	movq	-24(%rbp), %rax                 # 8-byte Reload
	movq	%rcx, (%rax)
	movq	(%rax), %rcx
	movq	%rcx, 8(%rax)
	movq	(%rax), %rcx
	movq	-16(%rbp), %rdx
	shlq	$3, %rdx
	addq	%rdx, %rcx
	movq	%rcx, 16(%rax)
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end694:
	.size	_ZNSt12_Vector_baseIdSaIdEE17_M_create_storageEm, .Lfunc_end694-_ZNSt12_Vector_baseIdSaIdEE17_M_create_storageEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET0_T_SA_S9_,"axG",@progbits,_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET0_T_SA_S9_,comdat
	.weak	_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET0_T_SA_S9_ # -- Begin function _ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET0_T_SA_S9_
	.p2align	4, 0x90
	.type	_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET0_T_SA_S9_,@function
_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET0_T_SA_S9_: # @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET0_T_SA_S9_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movb	$1, -25(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-24(%rbp), %rdx
	movq	-40(%rbp), %rdi
	movq	-48(%rbp), %rsi
	callq	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdEET0_T_SC_SB_
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end695:
	.size	_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET0_T_SA_S9_, .Lfunc_end695-_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET0_T_SA_S9_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdEET0_T_SC_SB_,"axG",@progbits,_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdEET0_T_SC_SB_,comdat
	.weak	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdEET0_T_SC_SB_ # -- Begin function _ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdEET0_T_SC_SB_
	.p2align	4, 0x90
	.type	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdEET0_T_SC_SB_,@function
_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdEET0_T_SC_SB_: # @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdEET0_T_SC_SB_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -32(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rdi
	movq	-40(%rbp), %rsi
	callq	_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET0_T_SA_S9_
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end696:
	.size	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdEET0_T_SC_SB_, .Lfunc_end696-_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdEET0_T_SC_SB_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET0_T_SA_S9_,"axG",@progbits,_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET0_T_SA_S9_,comdat
	.weak	_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET0_T_SA_S9_ # -- Begin function _ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET0_T_SA_S9_
	.p2align	4, 0x90
	.type	_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET0_T_SA_S9_,@function
_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET0_T_SA_S9_: # @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET0_T_SA_S9_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdi
	callq	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEET_S8_
	movq	%rax, -32(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rdi
	callq	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEET_S8_
	movq	%rax, -48(%rbp)
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rdi
	movq	-48(%rbp), %rsi
	callq	_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET1_T0_SA_S9_
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end697:
	.size	_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET0_T_SA_S9_, .Lfunc_end697-_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET0_T_SA_S9_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET1_T0_SA_S9_,"axG",@progbits,_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET1_T0_SA_S9_,comdat
	.weak	_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET1_T0_SA_S9_ # -- Begin function _ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET1_T0_SA_S9_
	.p2align	4, 0x90
	.type	_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET1_T0_SA_S9_,@function
_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET1_T0_SA_S9_: # @_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET1_T0_SA_S9_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -32(%rbp)
	movq	-32(%rbp), %rdi
	callq	_ZSt12__niter_baseIPKdSt6vectorIdSaIdEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE
	movq	%rax, -56(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdi
	callq	_ZSt12__niter_baseIPKdSt6vectorIdSaIdEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE
	movq	%rax, -48(%rbp)                 # 8-byte Spill
	movq	-24(%rbp), %rdi
	callq	_ZSt12__niter_baseIPdET_S1_
	movq	-56(%rbp), %rdi                 # 8-byte Reload
	movq	-48(%rbp), %rsi                 # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt14__copy_move_a1ILb0EPKdPdET1_T0_S4_S3_
	movq	%rax, %rsi
	leaq	-24(%rbp), %rdi
	callq	_ZSt12__niter_wrapIPdET_RKS1_S1_
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end698:
	.size	_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET1_T0_SA_S9_, .Lfunc_end698-_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET1_T0_SA_S9_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEET_S8_,"axG",@progbits,_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEET_S8_,comdat
	.weak	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEET_S8_ # -- Begin function _ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEET_S8_
	.p2align	4, 0x90
	.type	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEET_S8_,@function
_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEET_S8_: # @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEET_S8_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end699:
	.size	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEET_S8_, .Lfunc_end699-_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEET_S8_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__niter_wrapIPdET_RKS1_S1_,"axG",@progbits,_ZSt12__niter_wrapIPdET_RKS1_S1_,comdat
	.weak	_ZSt12__niter_wrapIPdET_RKS1_S1_ # -- Begin function _ZSt12__niter_wrapIPdET_RKS1_S1_
	.p2align	4, 0x90
	.type	_ZSt12__niter_wrapIPdET_RKS1_S1_,@function
_ZSt12__niter_wrapIPdET_RKS1_S1_:       # @_ZSt12__niter_wrapIPdET_RKS1_S1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-16(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end700:
	.size	_ZSt12__niter_wrapIPdET_RKS1_S1_, .Lfunc_end700-_ZSt12__niter_wrapIPdET_RKS1_S1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt14__copy_move_a1ILb0EPKdPdET1_T0_S4_S3_,"axG",@progbits,_ZSt14__copy_move_a1ILb0EPKdPdET1_T0_S4_S3_,comdat
	.weak	_ZSt14__copy_move_a1ILb0EPKdPdET1_T0_S4_S3_ # -- Begin function _ZSt14__copy_move_a1ILb0EPKdPdET1_T0_S4_S3_
	.p2align	4, 0x90
	.type	_ZSt14__copy_move_a1ILb0EPKdPdET1_T0_S4_S3_,@function
_ZSt14__copy_move_a1ILb0EPKdPdET1_T0_S4_S3_: # @_ZSt14__copy_move_a1ILb0EPKdPdET1_T0_S4_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZSt14__copy_move_a2ILb0EPKdPdET1_T0_S4_S3_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end701:
	.size	_ZSt14__copy_move_a1ILb0EPKdPdET1_T0_S4_S3_, .Lfunc_end701-_ZSt14__copy_move_a1ILb0EPKdPdET1_T0_S4_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__niter_baseIPKdSt6vectorIdSaIdEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE,"axG",@progbits,_ZSt12__niter_baseIPKdSt6vectorIdSaIdEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE,comdat
	.weak	_ZSt12__niter_baseIPKdSt6vectorIdSaIdEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE # -- Begin function _ZSt12__niter_baseIPKdSt6vectorIdSaIdEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE
	.p2align	4, 0x90
	.type	_ZSt12__niter_baseIPKdSt6vectorIdSaIdEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE,@function
_ZSt12__niter_baseIPKdSt6vectorIdSaIdEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE: # @_ZSt12__niter_baseIPKdSt6vectorIdSaIdEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	leaq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEE4baseEv
	movq	(%rax), %rax
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end702:
	.size	_ZSt12__niter_baseIPKdSt6vectorIdSaIdEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, .Lfunc_end702-_ZSt12__niter_baseIPKdSt6vectorIdSaIdEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt14__copy_move_a2ILb0EPKdPdET1_T0_S4_S3_,"axG",@progbits,_ZSt14__copy_move_a2ILb0EPKdPdET1_T0_S4_S3_,comdat
	.weak	_ZSt14__copy_move_a2ILb0EPKdPdET1_T0_S4_S3_ # -- Begin function _ZSt14__copy_move_a2ILb0EPKdPdET1_T0_S4_S3_
	.p2align	4, 0x90
	.type	_ZSt14__copy_move_a2ILb0EPKdPdET1_T0_S4_S3_,@function
_ZSt14__copy_move_a2ILb0EPKdPdET1_T0_S4_S3_: # @_ZSt14__copy_move_a2ILb0EPKdPdET1_T0_S4_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end703:
	.size	_ZSt14__copy_move_a2ILb0EPKdPdET1_T0_S4_S3_, .Lfunc_end703-_ZSt14__copy_move_a2ILb0EPKdPdET1_T0_S4_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_,"axG",@progbits,_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_,comdat
	.weak	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_ # -- Begin function _ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_
	.p2align	4, 0x90
	.type	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_,@function
_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_: # @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	-8(%rbp), %rcx
	subq	%rcx, %rax
	sarq	$3, %rax
	movq	%rax, -32(%rbp)
	cmpq	$0, -32(%rbp)
	je	.LBB704_2
# %bb.1:
	movq	-24(%rbp), %rdi
	movq	-8(%rbp), %rsi
	movq	-32(%rbp), %rdx
	shlq	$3, %rdx
	callq	memmove@PLT
.LBB704_2:
	movq	-24(%rbp), %rax
	movq	-32(%rbp), %rcx
	shlq	$3, %rcx
	addq	%rcx, %rax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end704:
	.size	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_, .Lfunc_end704-_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEE4baseEv,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEE4baseEv,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEE4baseEv # -- Begin function _ZNK9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEE4baseEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEE4baseEv,@function
_ZNK9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEE4baseEv: # @_ZNK9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEE4baseEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end705:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEE4baseEv, .Lfunc_end705-_ZNK9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEE4baseEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEC2ERKS2_,"axG",@progbits,_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEC2ERKS2_,comdat
	.weak	_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEC2ERKS2_ # -- Begin function _ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEC2ERKS2_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEC2ERKS2_,@function
_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEC2ERKS2_: # @_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEC2ERKS2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	(%rcx), %rcx
	movq	%rcx, (%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end706:
	.size	_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEC2ERKS2_, .Lfunc_end706-_ZN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEC2ERKS2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal11CKKSEncoder6encodeIdvEEvRKSt6vectorIT_SaIS3_EESt5arrayImLm4EEdRNS_9PlaintextENS_16MemoryPoolHandleE,"axG",@progbits,_ZN4seal11CKKSEncoder6encodeIdvEEvRKSt6vectorIT_SaIS3_EESt5arrayImLm4EEdRNS_9PlaintextENS_16MemoryPoolHandleE,comdat
	.weak	_ZN4seal11CKKSEncoder6encodeIdvEEvRKSt6vectorIT_SaIS3_EESt5arrayImLm4EEdRNS_9PlaintextENS_16MemoryPoolHandleE # -- Begin function _ZN4seal11CKKSEncoder6encodeIdvEEvRKSt6vectorIT_SaIS3_EESt5arrayImLm4EEdRNS_9PlaintextENS_16MemoryPoolHandleE
	.p2align	4, 0x90
	.type	_ZN4seal11CKKSEncoder6encodeIdvEEvRKSt6vectorIT_SaIS3_EESt5arrayImLm4EEdRNS_9PlaintextENS_16MemoryPoolHandleE,@function
_ZN4seal11CKKSEncoder6encodeIdvEEvRKSt6vectorIT_SaIS3_EESt5arrayImLm4EEdRNS_9PlaintextENS_16MemoryPoolHandleE: # @_ZN4seal11CKKSEncoder6encodeIdvEEvRKSt6vectorIT_SaIS3_EESt5arrayImLm4EEdRNS_9PlaintextENS_16MemoryPoolHandleE
.Lfunc_begin78:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception78
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$192, %rsp
	movq	%rcx, -160(%rbp)                # 8-byte Spill
	leaq	16(%rbp), %rax
	movq	%rax, -152(%rbp)                # 8-byte Spill
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movsd	%xmm0, -24(%rbp)
	movq	%rdx, -32(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -144(%rbp)                # 8-byte Spill
	movq	-16(%rbp), %rdi
	callq	_ZNKSt6vectorIdSaIdEE4dataEv
	movq	%rax, -136(%rbp)                # 8-byte Spill
	movq	-16(%rbp), %rdi
	callq	_ZNKSt6vectorIdSaIdEE4sizeEv
	movq	-160(%rbp), %rdi                # 8-byte Reload
	movq	%rax, %rcx
	movq	-152(%rbp), %rax                # 8-byte Reload
	movq	%rcx, -128(%rbp)                # 8-byte Spill
	movups	(%rax), %xmm0
	movups	16(%rax), %xmm1
	movaps	%xmm1, -48(%rbp)
	movaps	%xmm0, -64(%rbp)
	movsd	-24(%rbp), %xmm0                # xmm0 = mem[0],zero
	movsd	%xmm0, -120(%rbp)               # 8-byte Spill
	movq	-32(%rbp), %rax
	movq	%rax, -112(%rbp)                # 8-byte Spill
	callq	_ZSt4moveIRN4seal16MemoryPoolHandleEEONSt16remove_referenceIT_E4typeEOS4_
	movq	%rax, %rsi
	leaq	-80(%rbp), %rdi
	movq	%rdi, -104(%rbp)                # 8-byte Spill
	callq	_ZN4seal16MemoryPoolHandleC2EOS0_
	movq	-144(%rbp), %rdi                # 8-byte Reload
	movq	-136(%rbp), %rsi                # 8-byte Reload
	movq	-128(%rbp), %rdx                # 8-byte Reload
	movsd	-120(%rbp), %xmm0               # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movq	-112(%rbp), %rcx                # 8-byte Reload
	movq	-104(%rbp), %r8                 # 8-byte Reload
.Ltmp948:
	movaps	-64(%rbp), %xmm1
	movaps	-48(%rbp), %xmm2
	movq	%rsp, %rax
	movups	%xmm2, 16(%rax)
	movups	%xmm1, (%rax)
	callq	_ZN4seal11CKKSEncoder15encode_internalIdvEEvPKT_mSt5arrayImLm4EEdRNS_9PlaintextENS_16MemoryPoolHandleE
.Ltmp949:
	jmp	.LBB707_1
.LBB707_1:
	leaq	-80(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	addq	$192, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB707_2:
	.cfi_def_cfa %rbp, 16
.Ltmp950:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -88(%rbp)
	movl	%eax, -92(%rbp)
	leaq	-80(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
# %bb.3:
	movq	-88(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end707:
	.size	_ZN4seal11CKKSEncoder6encodeIdvEEvRKSt6vectorIT_SaIS3_EESt5arrayImLm4EEdRNS_9PlaintextENS_16MemoryPoolHandleE, .Lfunc_end707-_ZN4seal11CKKSEncoder6encodeIdvEEvRKSt6vectorIT_SaIS3_EESt5arrayImLm4EEdRNS_9PlaintextENS_16MemoryPoolHandleE
	.cfi_endproc
	.section	.gcc_except_table._ZN4seal11CKKSEncoder6encodeIdvEEvRKSt6vectorIT_SaIS3_EESt5arrayImLm4EEdRNS_9PlaintextENS_16MemoryPoolHandleE,"aG",@progbits,_ZN4seal11CKKSEncoder6encodeIdvEEvRKSt6vectorIT_SaIS3_EESt5arrayImLm4EEdRNS_9PlaintextENS_16MemoryPoolHandleE,comdat
	.p2align	2
GCC_except_table707:
.Lexception78:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end78-.Lcst_begin78
.Lcst_begin78:
	.uleb128 .Ltmp948-.Lfunc_begin78        # >> Call Site 1 <<
	.uleb128 .Ltmp949-.Ltmp948              #   Call between .Ltmp948 and .Ltmp949
	.uleb128 .Ltmp950-.Lfunc_begin78        #     jumps to .Ltmp950
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp949-.Lfunc_begin78        # >> Call Site 2 <<
	.uleb128 .Lfunc_end707-.Ltmp949         #   Call between .Ltmp949 and .Lfunc_end707
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end78:
	.p2align	2
                                        # -- End function
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4                               # -- Begin function _ZN4seal11CKKSEncoder15encode_internalIdvEEvPKT_mSt5arrayImLm4EEdRNS_9PlaintextENS_16MemoryPoolHandleE
.LCPI708_0:
	.long	1127219200                      # 0x43300000
	.long	1160773632                      # 0x45300000
	.long	0                               # 0x0
	.long	0                               # 0x0
.LCPI708_1:
	.quad	0x4330000000000000              # double 4503599627370496
	.quad	0x4530000000000000              # double 1.9342813113834067E+25
.LCPI708_3:
	.quad	0x7fffffffffffffff              # double NaN
	.quad	0x7fffffffffffffff              # double NaN
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3
.LCPI708_2:
	.quad	0x4000000000000000              # double 2
.LCPI708_4:
	.quad	0x3ff0000000000000              # double 1
.LCPI708_5:
	.quad	0x43e0000000000000              # double 9.2233720368547758E+18
	.section	.text._ZN4seal11CKKSEncoder15encode_internalIdvEEvPKT_mSt5arrayImLm4EEdRNS_9PlaintextENS_16MemoryPoolHandleE,"axG",@progbits,_ZN4seal11CKKSEncoder15encode_internalIdvEEvPKT_mSt5arrayImLm4EEdRNS_9PlaintextENS_16MemoryPoolHandleE,comdat
	.weak	_ZN4seal11CKKSEncoder15encode_internalIdvEEvPKT_mSt5arrayImLm4EEdRNS_9PlaintextENS_16MemoryPoolHandleE
	.p2align	4, 0x90
	.type	_ZN4seal11CKKSEncoder15encode_internalIdvEEvPKT_mSt5arrayImLm4EEdRNS_9PlaintextENS_16MemoryPoolHandleE,@function
_ZN4seal11CKKSEncoder15encode_internalIdvEEvPKT_mSt5arrayImLm4EEdRNS_9PlaintextENS_16MemoryPoolHandleE: # @_ZN4seal11CKKSEncoder15encode_internalIdvEEvPKT_mSt5arrayImLm4EEdRNS_9PlaintextENS_16MemoryPoolHandleE
.Lfunc_begin79:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception79
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$1088, %rsp                     # imm = 0x440
	movq	%r8, -520(%rbp)                 # 8-byte Spill
	leaq	16(%rbp), %rax
	movq	%rax, -512(%rbp)                # 8-byte Spill
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movsd	%xmm0, -32(%rbp)
	movq	%rcx, -40(%rbp)
	movq	-8(%rbp), %rsi
	movq	%rsi, -504(%rbp)                # 8-byte Spill
	addq	$16, %rsi
	movq	(%rax), %rcx
	movq	%rcx, -88(%rbp)
	movq	8(%rax), %rcx
	movq	%rcx, -80(%rbp)
	movq	16(%rax), %rcx
	movq	%rcx, -72(%rbp)
	movq	24(%rax), %rax
	movq	%rax, -64(%rbp)
	leaq	-56(%rbp), %rdi
	leaq	-88(%rbp), %rax
	movq	(%rax), %rcx
	movq	%rcx, (%rsp)
	movq	8(%rax), %rcx
	movq	%rcx, 8(%rsp)
	movq	16(%rax), %rcx
	movq	%rcx, 16(%rsp)
	movq	24(%rax), %rax
	movq	%rax, 24(%rsp)
	callq	_ZNK4seal11SEALContext16get_context_dataESt5arrayImLm4EE
	leaq	-56(%rbp), %rdi
	callq	_ZNKSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EEcvbEv
	testb	$1, %al
	jne	.LBB708_5
# %bb.1:
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rdi
	movq	%rdi, %rax
	movq	%rax, -528(%rbp)                # 8-byte Spill
.Ltmp951:
	leaq	.L.str.73(%rip), %rsi
	callq	_ZNSt16invalid_argumentC1EPKc@PLT
.Ltmp952:
	jmp	.LBB708_2
.LBB708_2:
.Ltmp954:
	movq	-528(%rbp), %rdi                # 8-byte Reload
	movq	_ZTISt16invalid_argument@GOTPCREL(%rip), %rsi
	movq	_ZNSt16invalid_argumentD1Ev@GOTPCREL(%rip), %rdx
	callq	__cxa_throw@PLT
.Ltmp955:
	jmp	.LBB708_155
.LBB708_3:
.Ltmp953:
	movq	-528(%rbp), %rdi                # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -96(%rbp)
	movl	%eax, -100(%rbp)
	callq	__cxa_free_exception@PLT
	jmp	.LBB708_153
.LBB708_4:
.Ltmp1089:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -96(%rbp)
	movl	%eax, -100(%rbp)
	jmp	.LBB708_153
.LBB708_5:
	cmpq	$0, -16(%rbp)
	jne	.LBB708_10
# %bb.6:
	cmpq	$0, -24(%rbp)
	jbe	.LBB708_10
# %bb.7:
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rdi
	movq	%rdi, %rax
	movq	%rax, -536(%rbp)                # 8-byte Spill
.Ltmp956:
	leaq	.L.str.74(%rip), %rsi
	callq	_ZNSt16invalid_argumentC1EPKc@PLT
.Ltmp957:
	jmp	.LBB708_8
.LBB708_8:
.Ltmp959:
	movq	-536(%rbp), %rdi                # 8-byte Reload
	movq	_ZTISt16invalid_argument@GOTPCREL(%rip), %rsi
	movq	_ZNSt16invalid_argumentD1Ev@GOTPCREL(%rip), %rdx
	callq	__cxa_throw@PLT
.Ltmp960:
	jmp	.LBB708_155
.LBB708_9:
.Ltmp958:
	movq	-536(%rbp), %rdi                # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -96(%rbp)
	movl	%eax, -100(%rbp)
	callq	__cxa_free_exception@PLT
	jmp	.LBB708_153
.LBB708_10:
	movq	-504(%rbp), %rcx                # 8-byte Reload
	movq	-24(%rbp), %rax
	cmpq	192(%rcx), %rax
	jbe	.LBB708_14
# %bb.11:
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rdi
	movq	%rdi, %rax
	movq	%rax, -544(%rbp)                # 8-byte Spill
.Ltmp1084:
	leaq	.L.str.75(%rip), %rsi
	callq	_ZNSt16invalid_argumentC1EPKc@PLT
.Ltmp1085:
	jmp	.LBB708_12
.LBB708_12:
.Ltmp1087:
	movq	-544(%rbp), %rdi                # 8-byte Reload
	movq	_ZTISt16invalid_argument@GOTPCREL(%rip), %rsi
	movq	_ZNSt16invalid_argumentD1Ev@GOTPCREL(%rip), %rdx
	callq	__cxa_throw@PLT
.Ltmp1088:
	jmp	.LBB708_155
.LBB708_13:
.Ltmp1086:
	movq	-544(%rbp), %rdi                # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -96(%rbp)
	movl	%eax, -100(%rbp)
	callq	__cxa_free_exception@PLT
	jmp	.LBB708_153
.LBB708_14:
	movq	-520(%rbp), %rdi                # 8-byte Reload
	callq	_ZNK4seal16MemoryPoolHandlecvbEv
	testb	$1, %al
	jne	.LBB708_18
# %bb.15:
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rdi
	movq	%rdi, %rax
	movq	%rax, -552(%rbp)                # 8-byte Spill
.Ltmp961:
	leaq	.L.str.60(%rip), %rsi
	callq	_ZNSt16invalid_argumentC1EPKc@PLT
.Ltmp962:
	jmp	.LBB708_16
.LBB708_16:
.Ltmp964:
	movq	-552(%rbp), %rdi                # 8-byte Reload
	movq	_ZTISt16invalid_argument@GOTPCREL(%rip), %rsi
	movq	_ZNSt16invalid_argumentD1Ev@GOTPCREL(%rip), %rdx
	callq	__cxa_throw@PLT
.Ltmp965:
	jmp	.LBB708_155
.LBB708_17:
.Ltmp963:
	movq	-552(%rbp), %rdi                # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -96(%rbp)
	movl	%eax, -100(%rbp)
	callq	__cxa_free_exception@PLT
	jmp	.LBB708_153
.LBB708_18:
	leaq	-56(%rbp), %rdi
	callq	_ZNKSt19__shared_ptr_accessIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2ELb0ELb0EEdeEv
	movq	%rax, -112(%rbp)
	movq	-112(%rbp), %rdi
	callq	_ZNK4seal11SEALContext11ContextData5parmsEv
	movq	%rax, -120(%rbp)
	movq	-120(%rbp), %rdi
	callq	_ZNK4seal20EncryptionParameters13coeff_modulusEv
	movq	%rax, -128(%rbp)
	movq	-128(%rbp), %rdi
	callq	_ZNKSt6vectorIN4seal7ModulusESaIS1_EE4sizeEv
	movq	%rax, -136(%rbp)
	movq	-120(%rbp), %rdi
	callq	_ZNK4seal20EncryptionParameters19poly_modulus_degreeEv
	movq	%rax, -144(%rbp)
.Ltmp966:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.76(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp967:
	movq	%rax, -560(%rbp)                # 8-byte Spill
	jmp	.LBB708_19
.LBB708_19:
.Ltmp968:
	movq	-560(%rbp), %rdi                # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp969:
	jmp	.LBB708_20
.LBB708_20:
	movq	-136(%rbp), %rdi
.Ltmp970:
	leaq	-144(%rbp), %rsi
	callq	_ZN4seal4util15product_fits_inImJRmEvEEbT_DpOT0_
.Ltmp971:
	movb	%al, -561(%rbp)                 # 1-byte Spill
	jmp	.LBB708_21
.LBB708_21:
	movb	-561(%rbp), %al                 # 1-byte Reload
	testb	$1, %al
	jne	.LBB708_25
	jmp	.LBB708_22
.LBB708_22:
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rdi
	movq	%rdi, %rax
	movq	%rax, -576(%rbp)                # 8-byte Spill
.Ltmp972:
	leaq	.L.str.77(%rip), %rsi
	callq	_ZNSt11logic_errorC1EPKc@PLT
.Ltmp973:
	jmp	.LBB708_23
.LBB708_23:
.Ltmp975:
	movq	-576(%rbp), %rdi                # 8-byte Reload
	movq	_ZTISt11logic_error@GOTPCREL(%rip), %rsi
	movq	_ZNSt11logic_errorD1Ev@GOTPCREL(%rip), %rdx
	callq	__cxa_throw@PLT
.Ltmp976:
	jmp	.LBB708_155
.LBB708_24:
.Ltmp974:
	movq	-576(%rbp), %rdi                # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -96(%rbp)
	movl	%eax, -100(%rbp)
	callq	__cxa_free_exception@PLT
	jmp	.LBB708_153
.LBB708_25:
	xorps	%xmm0, %xmm0
	ucomisd	-32(%rbp), %xmm0
	jae	.LBB708_27
# %bb.26:
	movsd	-32(%rbp), %xmm0                # xmm0 = mem[0],zero
	callq	log2@PLT
	cvttsd2si	%xmm0, %eax
	addl	$1, %eax
	movl	%eax, -580(%rbp)                # 4-byte Spill
	movq	-112(%rbp), %rdi
	callq	_ZNK4seal11SEALContext11ContextData29total_coeff_modulus_bit_countEv
	movl	%eax, %ecx
	movl	-580(%rbp), %eax                # 4-byte Reload
	cmpl	%ecx, %eax
	jl	.LBB708_30
.LBB708_27:
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rdi
	movq	%rdi, %rax
	movq	%rax, -592(%rbp)                # 8-byte Spill
.Ltmp1079:
	leaq	.L.str.78(%rip), %rsi
	callq	_ZNSt16invalid_argumentC1EPKc@PLT
.Ltmp1080:
	jmp	.LBB708_28
.LBB708_28:
.Ltmp1082:
	movq	-592(%rbp), %rdi                # 8-byte Reload
	movq	_ZTISt16invalid_argument@GOTPCREL(%rip), %rsi
	movq	_ZNSt16invalid_argumentD1Ev@GOTPCREL(%rip), %rdx
	callq	__cxa_throw@PLT
.Ltmp1083:
	jmp	.LBB708_155
.LBB708_29:
.Ltmp1081:
	movq	-592(%rbp), %rdi                # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -96(%rbp)
	movl	%eax, -100(%rbp)
	callq	__cxa_free_exception@PLT
	jmp	.LBB708_153
.LBB708_30:
	movq	-112(%rbp), %rdi
	callq	_ZNK4seal11SEALContext11ContextData16small_ntt_tablesEv
	movq	%rax, %rcx
	movq	-504(%rbp), %rax                # 8-byte Reload
	movq	%rcx, -152(%rbp)
	movq	192(%rax), %rdi
.Ltmp977:
	movl	$2, %esi
	callq	_ZN4seal4util8mul_safeImvEET_S2_S2_
.Ltmp978:
	movq	%rax, -600(%rbp)                # 8-byte Spill
	jmp	.LBB708_31
.LBB708_31:
	movq	-520(%rbp), %rdi                # 8-byte Reload
	movq	-600(%rbp), %rax                # 8-byte Reload
	movq	%rax, -160(%rbp)
	movq	-160(%rbp), %rax
	movq	%rax, -616(%rbp)                # 8-byte Spill
.Ltmp979:
	callq	_ZNK4seal16MemoryPoolHandlecvRNS_4util10MemoryPoolEEv
.Ltmp980:
	movq	%rax, -608(%rbp)                # 8-byte Spill
	jmp	.LBB708_32
.LBB708_32:
	movq	-608(%rbp), %rdx                # 8-byte Reload
	movq	-616(%rbp), %rsi                # 8-byte Reload
	movl	$0, -196(%rbp)
.Ltmp981:
	leaq	-192(%rbp), %rdi
	leaq	-196(%rbp), %rcx
	callq	_ZN4seal4util8allocateISt7complexIdEJiEvEEDamRNS0_10MemoryPoolEDpOT0_
.Ltmp982:
	jmp	.LBB708_33
.LBB708_33:
	movq	$0, -208(%rbp)
.LBB708_34:                             # =>This Inner Loop Header: Depth=1
	movq	-208(%rbp), %rax
	cmpq	-24(%rbp), %rax
	jae	.LBB708_44
# %bb.35:                               #   in Loop: Header=BB708_34 Depth=1
	movq	-504(%rbp), %rdi                # 8-byte Reload
	movq	-16(%rbp), %rax
	movq	-208(%rbp), %rsi
	movsd	(%rax,%rsi,8), %xmm0            # xmm0 = mem[0],zero
	movsd	%xmm0, -632(%rbp)               # 8-byte Spill
	addq	$280, %rdi                      # imm = 0x118
.Ltmp1066:
	callq	_ZN4seal4util7PointerImvEixEm
.Ltmp1067:
	movq	%rax, -624(%rbp)                # 8-byte Spill
	jmp	.LBB708_36
.LBB708_36:                             #   in Loop: Header=BB708_34 Depth=1
	movq	-624(%rbp), %rax                # 8-byte Reload
	movq	(%rax), %rsi
.Ltmp1068:
	leaq	-192(%rbp), %rdi
	callq	_ZN4seal4util7PointerISt7complexIdEvEixEm
.Ltmp1069:
	movq	%rax, -640(%rbp)                # 8-byte Spill
	jmp	.LBB708_37
.LBB708_37:                             #   in Loop: Header=BB708_34 Depth=1
.Ltmp1070:
	movsd	-632(%rbp), %xmm0               # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movq	-640(%rbp), %rdi                # 8-byte Reload
	callq	_ZNSt7complexIdEaSEd
.Ltmp1071:
	jmp	.LBB708_38
.LBB708_38:                             #   in Loop: Header=BB708_34 Depth=1
	movq	-16(%rbp), %rax
	movq	-208(%rbp), %rcx
	movsd	(%rax,%rcx,8), %xmm0            # xmm0 = mem[0],zero
.Ltmp1072:
	callq	_ZSt4conjIdESt7complexIN9__gnu_cxx9__promoteIT_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEES3_
.Ltmp1073:
	movsd	%xmm1, -656(%rbp)               # 8-byte Spill
	movsd	%xmm0, -648(%rbp)               # 8-byte Spill
	jmp	.LBB708_39
.LBB708_39:                             #   in Loop: Header=BB708_34 Depth=1
	movq	-504(%rbp), %rax                # 8-byte Reload
	movsd	-656(%rbp), %xmm0               # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movsd	-648(%rbp), %xmm1               # 8-byte Reload
                                        # xmm1 = mem[0],zero
	movsd	%xmm1, -224(%rbp)
	movsd	%xmm0, -216(%rbp)
	movq	%rax, %rdi
	addq	$280, %rdi                      # imm = 0x118
	movq	-208(%rbp), %rsi
	movq	192(%rax), %rax
	addq	%rax, %rsi
.Ltmp1074:
	callq	_ZN4seal4util7PointerImvEixEm
.Ltmp1075:
	movq	%rax, -664(%rbp)                # 8-byte Spill
	jmp	.LBB708_40
.LBB708_40:                             #   in Loop: Header=BB708_34 Depth=1
	movq	-664(%rbp), %rax                # 8-byte Reload
	movq	(%rax), %rsi
.Ltmp1076:
	leaq	-192(%rbp), %rdi
	callq	_ZN4seal4util7PointerISt7complexIdEvEixEm
.Ltmp1077:
	movq	%rax, -672(%rbp)                # 8-byte Spill
	jmp	.LBB708_41
.LBB708_41:                             #   in Loop: Header=BB708_34 Depth=1
	movq	-672(%rbp), %rax                # 8-byte Reload
	movq	-224(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-216(%rbp), %rcx
	movq	%rcx, 8(%rax)
# %bb.42:                               #   in Loop: Header=BB708_34 Depth=1
	movq	-208(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -208(%rbp)
	jmp	.LBB708_34
.LBB708_43:
.Ltmp1078:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -96(%rbp)
	movl	%eax, -100(%rbp)
	jmp	.LBB708_152
.LBB708_44:
	movq	-504(%rbp), %rax                # 8-byte Reload
	movsd	-32(%rbp), %xmm0                # xmm0 = mem[0],zero
	movaps	.LCPI708_0(%rip), %xmm2         # xmm2 = [1127219200,1160773632,0,0]
	movq	-160(%rbp), %xmm1               # xmm1 = mem[0],zero
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	movapd	.LCPI708_1(%rip), %xmm2         # xmm2 = [4.503599627370496E+15,1.9342813113834067E+25]
	subpd	%xmm2, %xmm1
	movaps	%xmm1, %xmm2
	unpckhpd	%xmm1, %xmm1                    # xmm1 = xmm1[1,1]
	addsd	%xmm2, %xmm1
	divsd	%xmm1, %xmm0
	movsd	%xmm0, -232(%rbp)
	addq	$313, %rax                      # imm = 0x139
	movq	%rax, -696(%rbp)                # 8-byte Spill
	leaq	-192(%rbp), %rdi
	callq	_ZNK4seal4util7PointerISt7complexIdEvE3getEv
	movq	%rax, -688(%rbp)                # 8-byte Spill
	movq	-160(%rbp), %rdi
.Ltmp983:
	callq	_ZN4seal4util16get_power_of_twoEm
.Ltmp984:
	movl	%eax, -676(%rbp)                # 4-byte Spill
	jmp	.LBB708_45
.LBB708_45:
	movq	-504(%rbp), %rdi                # 8-byte Reload
	addq	$248, %rdi
	callq	_ZNK4seal4util7PointerISt7complexIdEvE3getEv
	movq	-696(%rbp), %rdi                # 8-byte Reload
	movq	-688(%rbp), %rsi                # 8-byte Reload
	movl	-676(%rbp), %edx                # 4-byte Reload
	movq	%rax, %rcx
.Ltmp985:
	leaq	-232(%rbp), %r8
	xorl	%r9d, %r9d
	callq	_ZNK4seal4util10DWTHandlerISt7complexIdES3_dE18transform_from_revEPS3_iPKS3_PKdi
.Ltmp986:
	jmp	.LBB708_46
.LBB708_46:
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -240(%rbp)
	movq	$0, -248(%rbp)
.LBB708_47:                             # =>This Inner Loop Header: Depth=1
	movq	-248(%rbp), %rax
	cmpq	-160(%rbp), %rax
	jae	.LBB708_53
# %bb.48:                               #   in Loop: Header=BB708_47 Depth=1
	movq	-248(%rbp), %rsi
.Ltmp1060:
	leaq	-192(%rbp), %rdi
	callq	_ZN4seal4util7PointerISt7complexIdEvEixEm
.Ltmp1061:
	movq	%rax, -704(%rbp)                # 8-byte Spill
	jmp	.LBB708_49
.LBB708_49:                             #   in Loop: Header=BB708_47 Depth=1
.Ltmp1062:
	movq	-704(%rbp), %rdi                # 8-byte Reload
	callq	_ZNKSt7complexIdE4realB5cxx11Ev
.Ltmp1063:
	movsd	%xmm0, -712(%rbp)               # 8-byte Spill
	jmp	.LBB708_50
.LBB708_50:                             #   in Loop: Header=BB708_47 Depth=1
	movsd	-712(%rbp), %xmm0               # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movaps	.LCPI708_3(%rip), %xmm1         # xmm1 = [NaN,NaN]
	pand	%xmm1, %xmm0
	movlpd	%xmm0, -256(%rbp)
.Ltmp1064:
	leaq	-240(%rbp), %rdi
	leaq	-256(%rbp), %rsi
	callq	_ZSt3maxIdERKT_S2_S2_
.Ltmp1065:
	movq	%rax, -720(%rbp)                # 8-byte Spill
	jmp	.LBB708_51
.LBB708_51:                             #   in Loop: Header=BB708_47 Depth=1
	movq	-720(%rbp), %rax                # 8-byte Reload
	movsd	(%rax), %xmm0                   # xmm0 = mem[0],zero
	movsd	%xmm0, -240(%rbp)
# %bb.52:                               #   in Loop: Header=BB708_47 Depth=1
	movq	-248(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -248(%rbp)
	jmp	.LBB708_47
.LBB708_53:
	movabsq	$4607182418800017408, %rax      # imm = 0x3FF0000000000000
	movq	%rax, -272(%rbp)
.Ltmp987:
	leaq	-240(%rbp), %rdi
	leaq	-272(%rbp), %rsi
	callq	_ZSt3maxIdERKT_S2_S2_
.Ltmp988:
	movq	%rax, -728(%rbp)                # 8-byte Spill
	jmp	.LBB708_54
.LBB708_54:
	movq	-728(%rbp), %rax                # 8-byte Reload
	movsd	(%rax), %xmm0                   # xmm0 = mem[0],zero
	callq	log2@PLT
	callq	ceil@PLT
	cvttsd2si	%xmm0, %eax
	addl	$1, %eax
	movl	%eax, -260(%rbp)
	movl	-260(%rbp), %eax
	movl	%eax, -732(%rbp)                # 4-byte Spill
	movq	-112(%rbp), %rdi
	callq	_ZNK4seal11SEALContext11ContextData29total_coeff_modulus_bit_countEv
	movl	%eax, %ecx
	movl	-732(%rbp), %eax                # 4-byte Reload
	cmpl	%ecx, %eax
	jl	.LBB708_58
# %bb.55:
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rdi
	movq	%rdi, %rax
	movq	%rax, -744(%rbp)                # 8-byte Spill
.Ltmp1055:
	leaq	.L.str.79(%rip), %rsi
	callq	_ZNSt16invalid_argumentC1EPKc@PLT
.Ltmp1056:
	jmp	.LBB708_56
.LBB708_56:
.Ltmp1058:
	movq	-744(%rbp), %rdi                # 8-byte Reload
	movq	_ZTISt16invalid_argument@GOTPCREL(%rip), %rsi
	movq	_ZNSt16invalid_argumentD1Ev@GOTPCREL(%rip), %rdx
	callq	__cxa_throw@PLT
.Ltmp1059:
	jmp	.LBB708_155
.LBB708_57:
.Ltmp1057:
	movq	-744(%rbp), %rdi                # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -96(%rbp)
	movl	%eax, -100(%rbp)
	callq	__cxa_free_exception@PLT
	jmp	.LBB708_152
.LBB708_58:
	movsd	.LCPI708_2(%rip), %xmm0         # xmm0 = mem[0],zero
	movl	$64, %edi
	callq	_ZSt3powIdiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_Xsr3std12__is_integerIS2_EE7__valueEE6__typeENS4_IS3_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEE6__typeES2_S3_
	movsd	%xmm0, -280(%rbp)
	movq	-40(%rbp), %rdi
	callq	_ZN4seal9Plaintext8parms_idEv
	movq	_ZN4seal13parms_id_zeroE@GOTPCREL(%rip), %rcx
	movups	(%rcx), %xmm0
	movups	16(%rcx), %xmm1
	movups	%xmm1, 16(%rax)
	movups	%xmm0, (%rax)
	movq	-40(%rbp), %rax
	movq	%rax, -760(%rbp)                # 8-byte Spill
	movq	-144(%rbp), %rdi
	movq	-136(%rbp), %rsi
.Ltmp989:
	callq	_ZN4seal4util8mul_safeImvEET_S2_S2_
.Ltmp990:
	movq	%rax, -752(%rbp)                # 8-byte Spill
	jmp	.LBB708_59
.LBB708_59:
.Ltmp991:
	movq	-752(%rbp), %rsi                # 8-byte Reload
	movq	-760(%rbp), %rdi                # 8-byte Reload
	callq	_ZN4seal9Plaintext6resizeEm
.Ltmp992:
	jmp	.LBB708_60
.LBB708_60:
	cmpl	$64, -260(%rbp)
	jg	.LBB708_85
# %bb.61:
	movq	$0, -288(%rbp)
.LBB708_62:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB708_68 Depth 2
                                        #     Child Loop BB708_76 Depth 2
	movq	-288(%rbp), %rax
	cmpq	-160(%rbp), %rax
	jae	.LBB708_84
# %bb.63:                               #   in Loop: Header=BB708_62 Depth=1
	movq	-288(%rbp), %rsi
.Ltmp1039:
	leaq	-192(%rbp), %rdi
	callq	_ZN4seal4util7PointerISt7complexIdEvEixEm
.Ltmp1040:
	movq	%rax, -768(%rbp)                # 8-byte Spill
	jmp	.LBB708_64
.LBB708_64:                             #   in Loop: Header=BB708_62 Depth=1
.Ltmp1041:
	movq	-768(%rbp), %rdi                # 8-byte Reload
	callq	_ZNKSt7complexIdE4realB5cxx11Ev
.Ltmp1042:
	movsd	%xmm0, -776(%rbp)               # 8-byte Spill
	jmp	.LBB708_65
.LBB708_65:                             #   in Loop: Header=BB708_62 Depth=1
	movsd	-776(%rbp), %xmm0               # 8-byte Reload
                                        # xmm0 = mem[0],zero
	callq	round@PLT
	movsd	%xmm0, -296(%rbp)
	movsd	-296(%rbp), %xmm0               # xmm0 = mem[0],zero
.Ltmp1043:
	callq	_ZSt7signbitd
.Ltmp1044:
	movb	%al, -777(%rbp)                 # 1-byte Spill
	jmp	.LBB708_66
.LBB708_66:                             #   in Loop: Header=BB708_62 Depth=1
	movb	-777(%rbp), %al                 # 1-byte Reload
	andb	$1, %al
	movb	%al, -297(%rbp)
	movaps	.LCPI708_3(%rip), %xmm0         # xmm0 = [NaN,NaN]
	movsd	-296(%rbp), %xmm1               # xmm1 = mem[0],zero
	pand	%xmm0, %xmm1
	movaps	%xmm1, %xmm0
	cvttsd2si	%xmm1, %rax
	movq	%rax, %rdx
	sarq	$63, %rdx
	movsd	.LCPI708_5(%rip), %xmm1         # xmm1 = mem[0],zero
	subsd	%xmm1, %xmm0
	cvttsd2si	%xmm0, %rcx
	andq	%rdx, %rcx
	orq	%rcx, %rax
	movq	%rax, -312(%rbp)
	testb	$1, -297(%rbp)
	je	.LBB708_75
# %bb.67:                               #   in Loop: Header=BB708_62 Depth=1
	movq	$0, -320(%rbp)
.LBB708_68:                             #   Parent Loop BB708_62 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	-320(%rbp), %rax
	cmpq	-136(%rbp), %rax
	jae	.LBB708_74
# %bb.69:                               #   in Loop: Header=BB708_68 Depth=2
	movq	-312(%rbp), %rax
	movq	%rax, -800(%rbp)                # 8-byte Spill
	movq	-128(%rbp), %rdi
	movq	-320(%rbp), %rsi
	callq	_ZNKSt6vectorIN4seal7ModulusESaIS1_EEixEm
	movq	-800(%rbp), %rdi                # 8-byte Reload
	movq	%rax, %rsi
.Ltmp1049:
	callq	_ZN4seal4util17barrett_reduce_64ImvEEmT_RKNS_7ModulusE
.Ltmp1050:
	movq	%rax, -792(%rbp)                # 8-byte Spill
	jmp	.LBB708_70
.LBB708_70:                             #   in Loop: Header=BB708_68 Depth=2
	movq	-128(%rbp), %rdi
	movq	-320(%rbp), %rsi
	callq	_ZNKSt6vectorIN4seal7ModulusESaIS1_EEixEm
	movq	-792(%rbp), %rdi                # 8-byte Reload
	movq	%rax, %rsi
.Ltmp1051:
	callq	_ZN4seal4util15negate_uint_modEmRKNS_7ModulusE
.Ltmp1052:
	movq	%rax, -808(%rbp)                # 8-byte Spill
	jmp	.LBB708_71
.LBB708_71:                             #   in Loop: Header=BB708_68 Depth=2
	movq	-40(%rbp), %rdi
	movq	-288(%rbp), %rsi
	movq	-320(%rbp), %rax
	movq	-144(%rbp), %rcx
	imulq	%rcx, %rax
	addq	%rax, %rsi
.Ltmp1053:
	callq	_ZN4seal9PlaintextixEm
.Ltmp1054:
	movq	%rax, -816(%rbp)                # 8-byte Spill
	jmp	.LBB708_72
.LBB708_72:                             #   in Loop: Header=BB708_68 Depth=2
	movq	-816(%rbp), %rax                # 8-byte Reload
	movq	-808(%rbp), %rcx                # 8-byte Reload
	movq	%rcx, (%rax)
# %bb.73:                               #   in Loop: Header=BB708_68 Depth=2
	movq	-320(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -320(%rbp)
	jmp	.LBB708_68
.LBB708_74:                             #   in Loop: Header=BB708_62 Depth=1
	jmp	.LBB708_82
.LBB708_75:                             #   in Loop: Header=BB708_62 Depth=1
	movq	$0, -328(%rbp)
.LBB708_76:                             #   Parent Loop BB708_62 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	-328(%rbp), %rax
	cmpq	-136(%rbp), %rax
	jae	.LBB708_81
# %bb.77:                               #   in Loop: Header=BB708_76 Depth=2
	movq	-312(%rbp), %rax
	movq	%rax, -832(%rbp)                # 8-byte Spill
	movq	-128(%rbp), %rdi
	movq	-328(%rbp), %rsi
	callq	_ZNKSt6vectorIN4seal7ModulusESaIS1_EEixEm
	movq	-832(%rbp), %rdi                # 8-byte Reload
	movq	%rax, %rsi
.Ltmp1045:
	callq	_ZN4seal4util17barrett_reduce_64ImvEEmT_RKNS_7ModulusE
.Ltmp1046:
	movq	%rax, -824(%rbp)                # 8-byte Spill
	jmp	.LBB708_78
.LBB708_78:                             #   in Loop: Header=BB708_76 Depth=2
	movq	-40(%rbp), %rdi
	movq	-288(%rbp), %rsi
	movq	-328(%rbp), %rax
	movq	-144(%rbp), %rcx
	imulq	%rcx, %rax
	addq	%rax, %rsi
.Ltmp1047:
	callq	_ZN4seal9PlaintextixEm
.Ltmp1048:
	movq	%rax, -840(%rbp)                # 8-byte Spill
	jmp	.LBB708_79
.LBB708_79:                             #   in Loop: Header=BB708_76 Depth=2
	movq	-840(%rbp), %rax                # 8-byte Reload
	movq	-824(%rbp), %rcx                # 8-byte Reload
	movq	%rcx, (%rax)
# %bb.80:                               #   in Loop: Header=BB708_76 Depth=2
	movq	-328(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -328(%rbp)
	jmp	.LBB708_76
.LBB708_81:                             #   in Loop: Header=BB708_62 Depth=1
	jmp	.LBB708_82
.LBB708_82:                             #   in Loop: Header=BB708_62 Depth=1
	jmp	.LBB708_83
.LBB708_83:                             #   in Loop: Header=BB708_62 Depth=1
	movq	-288(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -288(%rbp)
	jmp	.LBB708_62
.LBB708_84:
	jmp	.LBB708_145
.LBB708_85:
	cmpl	$128, -260(%rbp)
	jg	.LBB708_110
# %bb.86:
	movq	$0, -336(%rbp)
.LBB708_87:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB708_93 Depth 2
                                        #     Child Loop BB708_101 Depth 2
	movq	-336(%rbp), %rax
	cmpq	-160(%rbp), %rax
	jae	.LBB708_109
# %bb.88:                               #   in Loop: Header=BB708_87 Depth=1
	movq	-336(%rbp), %rsi
.Ltmp1019:
	leaq	-192(%rbp), %rdi
	callq	_ZN4seal4util7PointerISt7complexIdEvEixEm
.Ltmp1020:
	movq	%rax, -848(%rbp)                # 8-byte Spill
	jmp	.LBB708_89
.LBB708_89:                             #   in Loop: Header=BB708_87 Depth=1
.Ltmp1021:
	movq	-848(%rbp), %rdi                # 8-byte Reload
	callq	_ZNKSt7complexIdE4realB5cxx11Ev
.Ltmp1022:
	movsd	%xmm0, -856(%rbp)               # 8-byte Spill
	jmp	.LBB708_90
.LBB708_90:                             #   in Loop: Header=BB708_87 Depth=1
	movsd	-856(%rbp), %xmm0               # 8-byte Reload
                                        # xmm0 = mem[0],zero
	callq	round@PLT
	movsd	%xmm0, -344(%rbp)
	movsd	-344(%rbp), %xmm0               # xmm0 = mem[0],zero
.Ltmp1023:
	callq	_ZSt7signbitd
.Ltmp1024:
	movb	%al, -857(%rbp)                 # 1-byte Spill
	jmp	.LBB708_91
.LBB708_91:                             #   in Loop: Header=BB708_87 Depth=1
	movb	-857(%rbp), %al                 # 1-byte Reload
	andb	$1, %al
	movb	%al, -345(%rbp)
	movaps	.LCPI708_3(%rip), %xmm1         # xmm1 = [NaN,NaN]
	movsd	-344(%rbp), %xmm0               # xmm0 = mem[0],zero
	pand	%xmm1, %xmm0
	movlpd	%xmm0, -344(%rbp)
	movsd	-344(%rbp), %xmm0               # xmm0 = mem[0],zero
	movsd	-280(%rbp), %xmm1               # xmm1 = mem[0],zero
	callq	fmod@PLT
	movaps	%xmm0, %xmm1
	cvttsd2si	%xmm1, %rax
	movq	%rax, %rdx
	sarq	$63, %rdx
	movsd	.LCPI708_5(%rip), %xmm1         # xmm1 = mem[0],zero
	subsd	%xmm1, %xmm0
	cvttsd2si	%xmm0, %rcx
	andq	%rdx, %rcx
	orq	%rcx, %rax
	movq	%rax, -368(%rbp)
	movsd	-344(%rbp), %xmm0               # xmm0 = mem[0],zero
	movsd	-280(%rbp), %xmm2               # xmm2 = mem[0],zero
	divsd	%xmm2, %xmm0
	movaps	%xmm0, %xmm2
	cvttsd2si	%xmm2, %rax
	movq	%rax, %rdx
	sarq	$63, %rdx
	subsd	%xmm1, %xmm0
	cvttsd2si	%xmm0, %rcx
	andq	%rdx, %rcx
	orq	%rcx, %rax
	movq	%rax, -360(%rbp)
	testb	$1, -345(%rbp)
	je	.LBB708_100
# %bb.92:                               #   in Loop: Header=BB708_87 Depth=1
	movq	$0, -376(%rbp)
.LBB708_93:                             #   Parent Loop BB708_87 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	-376(%rbp), %rax
	cmpq	-136(%rbp), %rax
	jae	.LBB708_99
# %bb.94:                               #   in Loop: Header=BB708_93 Depth=2
	movq	-128(%rbp), %rdi
	movq	-376(%rbp), %rsi
	callq	_ZNKSt6vectorIN4seal7ModulusESaIS1_EEixEm
	movq	%rax, %rsi
.Ltmp1029:
	leaq	-368(%rbp), %rdi
	callq	_ZN4seal4util18barrett_reduce_128ImvEEmPKT_RKNS_7ModulusE
.Ltmp1030:
	movq	%rax, -872(%rbp)                # 8-byte Spill
	jmp	.LBB708_95
.LBB708_95:                             #   in Loop: Header=BB708_93 Depth=2
	movq	-128(%rbp), %rdi
	movq	-376(%rbp), %rsi
	callq	_ZNKSt6vectorIN4seal7ModulusESaIS1_EEixEm
	movq	-872(%rbp), %rdi                # 8-byte Reload
	movq	%rax, %rsi
.Ltmp1031:
	callq	_ZN4seal4util15negate_uint_modEmRKNS_7ModulusE
.Ltmp1032:
	movq	%rax, -880(%rbp)                # 8-byte Spill
	jmp	.LBB708_96
.LBB708_96:                             #   in Loop: Header=BB708_93 Depth=2
	movq	-40(%rbp), %rdi
	movq	-336(%rbp), %rsi
	movq	-376(%rbp), %rax
	movq	-144(%rbp), %rcx
	imulq	%rcx, %rax
	addq	%rax, %rsi
.Ltmp1033:
	callq	_ZN4seal9PlaintextixEm
.Ltmp1034:
	movq	%rax, -888(%rbp)                # 8-byte Spill
	jmp	.LBB708_97
.LBB708_97:                             #   in Loop: Header=BB708_93 Depth=2
	movq	-888(%rbp), %rax                # 8-byte Reload
	movq	-880(%rbp), %rcx                # 8-byte Reload
	movq	%rcx, (%rax)
# %bb.98:                               #   in Loop: Header=BB708_93 Depth=2
	movq	-376(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -376(%rbp)
	jmp	.LBB708_93
.LBB708_99:                             #   in Loop: Header=BB708_87 Depth=1
	jmp	.LBB708_107
.LBB708_100:                            #   in Loop: Header=BB708_87 Depth=1
	movq	$0, -384(%rbp)
.LBB708_101:                            #   Parent Loop BB708_87 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	-384(%rbp), %rax
	cmpq	-136(%rbp), %rax
	jae	.LBB708_106
# %bb.102:                              #   in Loop: Header=BB708_101 Depth=2
	movq	-128(%rbp), %rdi
	movq	-384(%rbp), %rsi
	callq	_ZNKSt6vectorIN4seal7ModulusESaIS1_EEixEm
	movq	%rax, %rsi
.Ltmp1025:
	leaq	-368(%rbp), %rdi
	callq	_ZN4seal4util18barrett_reduce_128ImvEEmPKT_RKNS_7ModulusE
.Ltmp1026:
	movq	%rax, -896(%rbp)                # 8-byte Spill
	jmp	.LBB708_103
.LBB708_103:                            #   in Loop: Header=BB708_101 Depth=2
	movq	-40(%rbp), %rdi
	movq	-336(%rbp), %rsi
	movq	-384(%rbp), %rax
	movq	-144(%rbp), %rcx
	imulq	%rcx, %rax
	addq	%rax, %rsi
.Ltmp1027:
	callq	_ZN4seal9PlaintextixEm
.Ltmp1028:
	movq	%rax, -904(%rbp)                # 8-byte Spill
	jmp	.LBB708_104
.LBB708_104:                            #   in Loop: Header=BB708_101 Depth=2
	movq	-904(%rbp), %rax                # 8-byte Reload
	movq	-896(%rbp), %rcx                # 8-byte Reload
	movq	%rcx, (%rax)
# %bb.105:                              #   in Loop: Header=BB708_101 Depth=2
	movq	-384(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -384(%rbp)
	jmp	.LBB708_101
.LBB708_106:                            #   in Loop: Header=BB708_87 Depth=1
	jmp	.LBB708_107
.LBB708_107:                            #   in Loop: Header=BB708_87 Depth=1
	jmp	.LBB708_108
.LBB708_108:                            #   in Loop: Header=BB708_87 Depth=1
	movq	-336(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -336(%rbp)
	jmp	.LBB708_87
.LBB708_109:
	jmp	.LBB708_144
.LBB708_110:
	movq	-520(%rbp), %rdi                # 8-byte Reload
	movq	-136(%rbp), %rax
	movq	%rax, -920(%rbp)                # 8-byte Spill
.Ltmp993:
	callq	_ZNK4seal16MemoryPoolHandlecvRNS_4util10MemoryPoolEEv
.Ltmp994:
	movq	%rax, -912(%rbp)                # 8-byte Spill
	jmp	.LBB708_111
.LBB708_111:
.Ltmp995:
	movq	-912(%rbp), %rdx                # 8-byte Reload
	movq	-920(%rbp), %rsi                # 8-byte Reload
	leaq	-416(%rbp), %rdi
	callq	_ZN4seal4util13allocate_uintEmRNS0_10MemoryPoolE
.Ltmp996:
	jmp	.LBB708_112
.LBB708_112:
	movq	$0, -424(%rbp)
.LBB708_113:                            # =>This Loop Header: Depth=1
                                        #     Child Loop BB708_119 Depth 2
                                        #     Child Loop BB708_125 Depth 2
                                        #     Child Loop BB708_134 Depth 2
	movq	-424(%rbp), %rax
	cmpq	-160(%rbp), %rax
	jae	.LBB708_142
# %bb.114:                              #   in Loop: Header=BB708_113 Depth=1
	movq	-424(%rbp), %rsi
.Ltmp997:
	leaq	-192(%rbp), %rdi
	callq	_ZN4seal4util7PointerISt7complexIdEvEixEm
.Ltmp998:
	movq	%rax, -928(%rbp)                # 8-byte Spill
	jmp	.LBB708_115
.LBB708_115:                            #   in Loop: Header=BB708_113 Depth=1
.Ltmp999:
	movq	-928(%rbp), %rdi                # 8-byte Reload
	callq	_ZNKSt7complexIdE4realB5cxx11Ev
.Ltmp1000:
	movsd	%xmm0, -936(%rbp)               # 8-byte Spill
	jmp	.LBB708_116
.LBB708_116:                            #   in Loop: Header=BB708_113 Depth=1
	movsd	-936(%rbp), %xmm0               # 8-byte Reload
                                        # xmm0 = mem[0],zero
	callq	round@PLT
	movsd	%xmm0, -432(%rbp)
	movsd	-432(%rbp), %xmm0               # xmm0 = mem[0],zero
.Ltmp1001:
	callq	_ZSt7signbitd
.Ltmp1002:
	movb	%al, -937(%rbp)                 # 1-byte Spill
	jmp	.LBB708_117
.LBB708_117:                            #   in Loop: Header=BB708_113 Depth=1
	movb	-937(%rbp), %al                 # 1-byte Reload
	andb	$1, %al
	movb	%al, -433(%rbp)
	movaps	.LCPI708_3(%rip), %xmm1         # xmm1 = [NaN,NaN]
	movsd	-432(%rbp), %xmm0               # xmm0 = mem[0],zero
	pand	%xmm1, %xmm0
	movlpd	%xmm0, -432(%rbp)
	movq	-136(%rbp), %rax
	movq	%rax, -952(%rbp)                # 8-byte Spill
	leaq	-416(%rbp), %rdi
	callq	_ZNK4seal4util7PointerImvE3getEv
	movq	-952(%rbp), %rdi                # 8-byte Reload
	movq	%rax, %rsi
.Ltmp1003:
	callq	_ZN4seal4util13set_zero_uintEmPm
.Ltmp1004:
	jmp	.LBB708_118
.LBB708_118:                            #   in Loop: Header=BB708_113 Depth=1
	leaq	-416(%rbp), %rdi
	callq	_ZNK4seal4util7PointerImvE3getEv
	movq	%rax, -448(%rbp)
.LBB708_119:                            #   Parent Loop BB708_113 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movsd	-432(%rbp), %xmm0               # xmm0 = mem[0],zero
	movsd	.LCPI708_4(%rip), %xmm1         # xmm1 = mem[0],zero
	ucomisd	%xmm1, %xmm0
	jb	.LBB708_122
# %bb.120:                              #   in Loop: Header=BB708_119 Depth=2
	movsd	-432(%rbp), %xmm0               # xmm0 = mem[0],zero
	movsd	-280(%rbp), %xmm1               # xmm1 = mem[0],zero
	callq	fmod@PLT
	movaps	%xmm0, %xmm1
	cvttsd2si	%xmm1, %rcx
	movq	%rcx, %rdx
	sarq	$63, %rdx
	movsd	.LCPI708_5(%rip), %xmm1         # xmm1 = mem[0],zero
	subsd	%xmm1, %xmm0
	cvttsd2si	%xmm0, %rax
	andq	%rdx, %rax
	orq	%rax, %rcx
	movq	-448(%rbp), %rax
	movq	%rax, %rdx
	addq	$8, %rdx
	movq	%rdx, -448(%rbp)
	movq	%rcx, (%rax)
	movsd	-280(%rbp), %xmm1               # xmm1 = mem[0],zero
	movsd	-432(%rbp), %xmm0               # xmm0 = mem[0],zero
	divsd	%xmm1, %xmm0
	movsd	%xmm0, -432(%rbp)
	jmp	.LBB708_119
.LBB708_121:
.Ltmp1018:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -96(%rbp)
	movl	%eax, -100(%rbp)
	jmp	.LBB708_143
.LBB708_122:                            #   in Loop: Header=BB708_113 Depth=1
	movq	-112(%rbp), %rdi
	callq	_ZNK4seal11SEALContext11ContextData8rns_toolEv
	movq	%rax, %rdi
	callq	_ZNK4seal4util7RNSTool6base_qEv
	movq	%rax, -976(%rbp)                # 8-byte Spill
	leaq	-416(%rbp), %rdi
	callq	_ZNK4seal4util7PointerImvE3getEv
	movq	-520(%rbp), %rsi                # 8-byte Reload
	movq	%rax, -968(%rbp)                # 8-byte Spill
	leaq	-464(%rbp), %rdi
	movq	%rdi, -960(%rbp)                # 8-byte Spill
	callq	_ZN4seal16MemoryPoolHandleC2ERKS0_
	movq	-976(%rbp), %rdi                # 8-byte Reload
	movq	-968(%rbp), %rsi                # 8-byte Reload
	movq	-960(%rbp), %rdx                # 8-byte Reload
.Ltmp1005:
	callq	_ZNK4seal4util7RNSBase9decomposeEPmNS_16MemoryPoolHandleE@PLT
.Ltmp1006:
	jmp	.LBB708_123
.LBB708_123:                            #   in Loop: Header=BB708_113 Depth=1
	leaq	-464(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	testb	$1, -433(%rbp)
	je	.LBB708_133
# %bb.124:                              #   in Loop: Header=BB708_113 Depth=1
	movq	$0, -472(%rbp)
.LBB708_125:                            #   Parent Loop BB708_113 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	-472(%rbp), %rax
	cmpq	-136(%rbp), %rax
	jae	.LBB708_132
# %bb.126:                              #   in Loop: Header=BB708_125 Depth=2
	movq	-472(%rbp), %rsi
.Ltmp1012:
	leaq	-416(%rbp), %rdi
	callq	_ZN4seal4util7PointerImvEixEm
.Ltmp1013:
	movq	%rax, -984(%rbp)                # 8-byte Spill
	jmp	.LBB708_127
.LBB708_127:                            #   in Loop: Header=BB708_125 Depth=2
	movq	-984(%rbp), %rax                # 8-byte Reload
	movq	(%rax), %rax
	movq	%rax, -1000(%rbp)               # 8-byte Spill
	movq	-128(%rbp), %rdi
	movq	-472(%rbp), %rsi
	callq	_ZNKSt6vectorIN4seal7ModulusESaIS1_EEixEm
	movq	-1000(%rbp), %rdi               # 8-byte Reload
	movq	%rax, %rsi
.Ltmp1014:
	callq	_ZN4seal4util15negate_uint_modEmRKNS_7ModulusE
.Ltmp1015:
	movq	%rax, -992(%rbp)                # 8-byte Spill
	jmp	.LBB708_128
.LBB708_128:                            #   in Loop: Header=BB708_125 Depth=2
	movq	-40(%rbp), %rdi
	movq	-424(%rbp), %rsi
	movq	-472(%rbp), %rax
	movq	-144(%rbp), %rcx
	imulq	%rcx, %rax
	addq	%rax, %rsi
.Ltmp1016:
	callq	_ZN4seal9PlaintextixEm
.Ltmp1017:
	movq	%rax, -1008(%rbp)               # 8-byte Spill
	jmp	.LBB708_129
.LBB708_129:                            #   in Loop: Header=BB708_125 Depth=2
	movq	-1008(%rbp), %rax               # 8-byte Reload
	movq	-992(%rbp), %rcx                # 8-byte Reload
	movq	%rcx, (%rax)
# %bb.130:                              #   in Loop: Header=BB708_125 Depth=2
	movq	-472(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -472(%rbp)
	jmp	.LBB708_125
.LBB708_131:
.Ltmp1007:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -96(%rbp)
	movl	%eax, -100(%rbp)
	leaq	-464(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	jmp	.LBB708_143
.LBB708_132:                            #   in Loop: Header=BB708_113 Depth=1
	jmp	.LBB708_140
.LBB708_133:                            #   in Loop: Header=BB708_113 Depth=1
	movq	$0, -480(%rbp)
.LBB708_134:                            #   Parent Loop BB708_113 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	-480(%rbp), %rax
	cmpq	-136(%rbp), %rax
	jae	.LBB708_139
# %bb.135:                              #   in Loop: Header=BB708_134 Depth=2
	movq	-480(%rbp), %rsi
.Ltmp1008:
	leaq	-416(%rbp), %rdi
	callq	_ZN4seal4util7PointerImvEixEm
.Ltmp1009:
	movq	%rax, -1016(%rbp)               # 8-byte Spill
	jmp	.LBB708_136
.LBB708_136:                            #   in Loop: Header=BB708_134 Depth=2
	movq	-1016(%rbp), %rax               # 8-byte Reload
	movq	(%rax), %rax
	movq	%rax, -1032(%rbp)               # 8-byte Spill
	movq	-40(%rbp), %rdi
	movq	-424(%rbp), %rsi
	movq	-480(%rbp), %rax
	movq	-144(%rbp), %rcx
	imulq	%rcx, %rax
	addq	%rax, %rsi
.Ltmp1010:
	callq	_ZN4seal9PlaintextixEm
.Ltmp1011:
	movq	%rax, -1024(%rbp)               # 8-byte Spill
	jmp	.LBB708_137
.LBB708_137:                            #   in Loop: Header=BB708_134 Depth=2
	movq	-1024(%rbp), %rax               # 8-byte Reload
	movq	-1032(%rbp), %rcx               # 8-byte Reload
	movq	%rcx, (%rax)
# %bb.138:                              #   in Loop: Header=BB708_134 Depth=2
	movq	-480(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -480(%rbp)
	jmp	.LBB708_134
.LBB708_139:                            #   in Loop: Header=BB708_113 Depth=1
	jmp	.LBB708_140
.LBB708_140:                            #   in Loop: Header=BB708_113 Depth=1
	jmp	.LBB708_141
.LBB708_141:                            #   in Loop: Header=BB708_113 Depth=1
	movq	-424(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -424(%rbp)
	jmp	.LBB708_113
.LBB708_142:
	leaq	-416(%rbp), %rdi
	callq	_ZN4seal4util7PointerImvED2Ev
	jmp	.LBB708_144
.LBB708_143:
	leaq	-416(%rbp), %rdi
	callq	_ZN4seal4util7PointerImvED2Ev
	jmp	.LBB708_152
.LBB708_144:
	jmp	.LBB708_145
.LBB708_145:
	movq	$0, -488(%rbp)
.LBB708_146:                            # =>This Inner Loop Header: Depth=1
	movq	-488(%rbp), %rax
	cmpq	-136(%rbp), %rax
	jae	.LBB708_151
# %bb.147:                              #   in Loop: Header=BB708_146 Depth=1
	movq	-40(%rbp), %rdi
	movq	-488(%rbp), %rsi
	movq	-144(%rbp), %rax
	imulq	%rax, %rsi
.Ltmp1035:
	callq	_ZN4seal9Plaintext4dataEm
.Ltmp1036:
	movq	%rax, -1040(%rbp)               # 8-byte Spill
	jmp	.LBB708_148
.LBB708_148:                            #   in Loop: Header=BB708_146 Depth=1
	movq	-1040(%rbp), %rsi               # 8-byte Reload
	leaq	-496(%rbp), %rdi
	callq	_ZN4seal4util7PtrIterIPmEC2ImEEPT_
	movq	-152(%rbp), %rsi
	movq	-488(%rbp), %rax
	leaq	(%rax,%rax,8), %rax
	shlq	$5, %rax
	addq	%rax, %rsi
	movq	-496(%rbp), %rdi
.Ltmp1037:
	callq	_ZN4seal4util21ntt_negacyclic_harveyENS0_7PtrIterIPmEERKNS0_9NTTTablesE
.Ltmp1038:
	jmp	.LBB708_149
.LBB708_149:                            #   in Loop: Header=BB708_146 Depth=1
	jmp	.LBB708_150
.LBB708_150:                            #   in Loop: Header=BB708_146 Depth=1
	movq	-488(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -488(%rbp)
	jmp	.LBB708_146
.LBB708_151:
	movq	-40(%rbp), %rdi
	callq	_ZN4seal9Plaintext8parms_idEv
	movq	-512(%rbp), %rcx                # 8-byte Reload
	movq	(%rcx), %rdx
	movq	%rdx, (%rax)
	movq	8(%rcx), %rdx
	movq	%rdx, 8(%rax)
	movq	16(%rcx), %rdx
	movq	%rdx, 16(%rax)
	movq	24(%rcx), %rcx
	movq	%rcx, 24(%rax)
	movsd	-32(%rbp), %xmm0                # xmm0 = mem[0],zero
	movsd	%xmm0, -1048(%rbp)              # 8-byte Spill
	movq	-40(%rbp), %rdi
	callq	_ZN4seal9Plaintext5scaleEv
	movsd	-1048(%rbp), %xmm0              # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movsd	%xmm0, (%rax)
	leaq	-192(%rbp), %rdi
	callq	_ZN4seal4util7PointerISt7complexIdEvED2Ev
	leaq	-56(%rbp), %rdi
	callq	_ZNSt10shared_ptrIKN4seal11SEALContext11ContextDataEED2Ev
	addq	$1088, %rsp                     # imm = 0x440
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB708_152:
	.cfi_def_cfa %rbp, 16
	leaq	-192(%rbp), %rdi
	callq	_ZN4seal4util7PointerISt7complexIdEvED2Ev
.LBB708_153:
	leaq	-56(%rbp), %rdi
	callq	_ZNSt10shared_ptrIKN4seal11SEALContext11ContextDataEED2Ev
# %bb.154:
	movq	-96(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.LBB708_155:
.Lfunc_end708:
	.size	_ZN4seal11CKKSEncoder15encode_internalIdvEEvPKT_mSt5arrayImLm4EEdRNS_9PlaintextENS_16MemoryPoolHandleE, .Lfunc_end708-_ZN4seal11CKKSEncoder15encode_internalIdvEEvPKT_mSt5arrayImLm4EEdRNS_9PlaintextENS_16MemoryPoolHandleE
	.cfi_endproc
	.section	.gcc_except_table._ZN4seal11CKKSEncoder15encode_internalIdvEEvPKT_mSt5arrayImLm4EEdRNS_9PlaintextENS_16MemoryPoolHandleE,"aG",@progbits,_ZN4seal11CKKSEncoder15encode_internalIdvEEvPKT_mSt5arrayImLm4EEdRNS_9PlaintextENS_16MemoryPoolHandleE,comdat
	.p2align	2
GCC_except_table708:
.Lexception79:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end79-.Lcst_begin79
.Lcst_begin79:
	.uleb128 .Lfunc_begin79-.Lfunc_begin79  # >> Call Site 1 <<
	.uleb128 .Ltmp951-.Lfunc_begin79        #   Call between .Lfunc_begin79 and .Ltmp951
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp951-.Lfunc_begin79        # >> Call Site 2 <<
	.uleb128 .Ltmp952-.Ltmp951              #   Call between .Ltmp951 and .Ltmp952
	.uleb128 .Ltmp953-.Lfunc_begin79        #     jumps to .Ltmp953
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp954-.Lfunc_begin79        # >> Call Site 3 <<
	.uleb128 .Ltmp955-.Ltmp954              #   Call between .Ltmp954 and .Ltmp955
	.uleb128 .Ltmp1089-.Lfunc_begin79       #     jumps to .Ltmp1089
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp955-.Lfunc_begin79        # >> Call Site 4 <<
	.uleb128 .Ltmp956-.Ltmp955              #   Call between .Ltmp955 and .Ltmp956
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp956-.Lfunc_begin79        # >> Call Site 5 <<
	.uleb128 .Ltmp957-.Ltmp956              #   Call between .Ltmp956 and .Ltmp957
	.uleb128 .Ltmp958-.Lfunc_begin79        #     jumps to .Ltmp958
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp959-.Lfunc_begin79        # >> Call Site 6 <<
	.uleb128 .Ltmp960-.Ltmp959              #   Call between .Ltmp959 and .Ltmp960
	.uleb128 .Ltmp1089-.Lfunc_begin79       #     jumps to .Ltmp1089
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp960-.Lfunc_begin79        # >> Call Site 7 <<
	.uleb128 .Ltmp1084-.Ltmp960             #   Call between .Ltmp960 and .Ltmp1084
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1084-.Lfunc_begin79       # >> Call Site 8 <<
	.uleb128 .Ltmp1085-.Ltmp1084            #   Call between .Ltmp1084 and .Ltmp1085
	.uleb128 .Ltmp1086-.Lfunc_begin79       #     jumps to .Ltmp1086
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1087-.Lfunc_begin79       # >> Call Site 9 <<
	.uleb128 .Ltmp1088-.Ltmp1087            #   Call between .Ltmp1087 and .Ltmp1088
	.uleb128 .Ltmp1089-.Lfunc_begin79       #     jumps to .Ltmp1089
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1088-.Lfunc_begin79       # >> Call Site 10 <<
	.uleb128 .Ltmp961-.Ltmp1088             #   Call between .Ltmp1088 and .Ltmp961
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp961-.Lfunc_begin79        # >> Call Site 11 <<
	.uleb128 .Ltmp962-.Ltmp961              #   Call between .Ltmp961 and .Ltmp962
	.uleb128 .Ltmp963-.Lfunc_begin79        #     jumps to .Ltmp963
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp964-.Lfunc_begin79        # >> Call Site 12 <<
	.uleb128 .Ltmp965-.Ltmp964              #   Call between .Ltmp964 and .Ltmp965
	.uleb128 .Ltmp1089-.Lfunc_begin79       #     jumps to .Ltmp1089
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp965-.Lfunc_begin79        # >> Call Site 13 <<
	.uleb128 .Ltmp966-.Ltmp965              #   Call between .Ltmp965 and .Ltmp966
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp966-.Lfunc_begin79        # >> Call Site 14 <<
	.uleb128 .Ltmp971-.Ltmp966              #   Call between .Ltmp966 and .Ltmp971
	.uleb128 .Ltmp1089-.Lfunc_begin79       #     jumps to .Ltmp1089
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp971-.Lfunc_begin79        # >> Call Site 15 <<
	.uleb128 .Ltmp972-.Ltmp971              #   Call between .Ltmp971 and .Ltmp972
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp972-.Lfunc_begin79        # >> Call Site 16 <<
	.uleb128 .Ltmp973-.Ltmp972              #   Call between .Ltmp972 and .Ltmp973
	.uleb128 .Ltmp974-.Lfunc_begin79        #     jumps to .Ltmp974
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp975-.Lfunc_begin79        # >> Call Site 17 <<
	.uleb128 .Ltmp976-.Ltmp975              #   Call between .Ltmp975 and .Ltmp976
	.uleb128 .Ltmp1089-.Lfunc_begin79       #     jumps to .Ltmp1089
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp976-.Lfunc_begin79        # >> Call Site 18 <<
	.uleb128 .Ltmp1079-.Ltmp976             #   Call between .Ltmp976 and .Ltmp1079
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1079-.Lfunc_begin79       # >> Call Site 19 <<
	.uleb128 .Ltmp1080-.Ltmp1079            #   Call between .Ltmp1079 and .Ltmp1080
	.uleb128 .Ltmp1081-.Lfunc_begin79       #     jumps to .Ltmp1081
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1082-.Lfunc_begin79       # >> Call Site 20 <<
	.uleb128 .Ltmp1083-.Ltmp1082            #   Call between .Ltmp1082 and .Ltmp1083
	.uleb128 .Ltmp1089-.Lfunc_begin79       #     jumps to .Ltmp1089
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1083-.Lfunc_begin79       # >> Call Site 21 <<
	.uleb128 .Ltmp977-.Ltmp1083             #   Call between .Ltmp1083 and .Ltmp977
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp977-.Lfunc_begin79        # >> Call Site 22 <<
	.uleb128 .Ltmp982-.Ltmp977              #   Call between .Ltmp977 and .Ltmp982
	.uleb128 .Ltmp1089-.Lfunc_begin79       #     jumps to .Ltmp1089
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1066-.Lfunc_begin79       # >> Call Site 23 <<
	.uleb128 .Ltmp988-.Ltmp1066             #   Call between .Ltmp1066 and .Ltmp988
	.uleb128 .Ltmp1078-.Lfunc_begin79       #     jumps to .Ltmp1078
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp988-.Lfunc_begin79        # >> Call Site 24 <<
	.uleb128 .Ltmp1055-.Ltmp988             #   Call between .Ltmp988 and .Ltmp1055
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1055-.Lfunc_begin79       # >> Call Site 25 <<
	.uleb128 .Ltmp1056-.Ltmp1055            #   Call between .Ltmp1055 and .Ltmp1056
	.uleb128 .Ltmp1057-.Lfunc_begin79       #     jumps to .Ltmp1057
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1058-.Lfunc_begin79       # >> Call Site 26 <<
	.uleb128 .Ltmp1059-.Ltmp1058            #   Call between .Ltmp1058 and .Ltmp1059
	.uleb128 .Ltmp1078-.Lfunc_begin79       #     jumps to .Ltmp1078
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1059-.Lfunc_begin79       # >> Call Site 27 <<
	.uleb128 .Ltmp989-.Ltmp1059             #   Call between .Ltmp1059 and .Ltmp989
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp989-.Lfunc_begin79        # >> Call Site 28 <<
	.uleb128 .Ltmp1042-.Ltmp989             #   Call between .Ltmp989 and .Ltmp1042
	.uleb128 .Ltmp1078-.Lfunc_begin79       #     jumps to .Ltmp1078
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1042-.Lfunc_begin79       # >> Call Site 29 <<
	.uleb128 .Ltmp1043-.Ltmp1042            #   Call between .Ltmp1042 and .Ltmp1043
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1043-.Lfunc_begin79       # >> Call Site 30 <<
	.uleb128 .Ltmp1022-.Ltmp1043            #   Call between .Ltmp1043 and .Ltmp1022
	.uleb128 .Ltmp1078-.Lfunc_begin79       #     jumps to .Ltmp1078
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1022-.Lfunc_begin79       # >> Call Site 31 <<
	.uleb128 .Ltmp1023-.Ltmp1022            #   Call between .Ltmp1022 and .Ltmp1023
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1023-.Lfunc_begin79       # >> Call Site 32 <<
	.uleb128 .Ltmp996-.Ltmp1023             #   Call between .Ltmp1023 and .Ltmp996
	.uleb128 .Ltmp1078-.Lfunc_begin79       #     jumps to .Ltmp1078
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp997-.Lfunc_begin79        # >> Call Site 33 <<
	.uleb128 .Ltmp1000-.Ltmp997             #   Call between .Ltmp997 and .Ltmp1000
	.uleb128 .Ltmp1018-.Lfunc_begin79       #     jumps to .Ltmp1018
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1000-.Lfunc_begin79       # >> Call Site 34 <<
	.uleb128 .Ltmp1001-.Ltmp1000            #   Call between .Ltmp1000 and .Ltmp1001
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1001-.Lfunc_begin79       # >> Call Site 35 <<
	.uleb128 .Ltmp1004-.Ltmp1001            #   Call between .Ltmp1001 and .Ltmp1004
	.uleb128 .Ltmp1018-.Lfunc_begin79       #     jumps to .Ltmp1018
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1005-.Lfunc_begin79       # >> Call Site 36 <<
	.uleb128 .Ltmp1006-.Ltmp1005            #   Call between .Ltmp1005 and .Ltmp1006
	.uleb128 .Ltmp1007-.Lfunc_begin79       #     jumps to .Ltmp1007
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1012-.Lfunc_begin79       # >> Call Site 37 <<
	.uleb128 .Ltmp1011-.Ltmp1012            #   Call between .Ltmp1012 and .Ltmp1011
	.uleb128 .Ltmp1018-.Lfunc_begin79       #     jumps to .Ltmp1018
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1035-.Lfunc_begin79       # >> Call Site 38 <<
	.uleb128 .Ltmp1038-.Ltmp1035            #   Call between .Ltmp1035 and .Ltmp1038
	.uleb128 .Ltmp1078-.Lfunc_begin79       #     jumps to .Ltmp1078
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1038-.Lfunc_begin79       # >> Call Site 39 <<
	.uleb128 .Lfunc_end708-.Ltmp1038        #   Call between .Ltmp1038 and .Lfunc_end708
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end79:
	.p2align	2
                                        # -- End function
	.section	.text._ZNKSt6vectorIdSaIdEE4dataEv,"axG",@progbits,_ZNKSt6vectorIdSaIdEE4dataEv,comdat
	.weak	_ZNKSt6vectorIdSaIdEE4dataEv    # -- Begin function _ZNKSt6vectorIdSaIdEE4dataEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIdSaIdEE4dataEv,@function
_ZNKSt6vectorIdSaIdEE4dataEv:           # @_ZNKSt6vectorIdSaIdEE4dataEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	(%rdi), %rsi
	callq	_ZNKSt6vectorIdSaIdEE11_M_data_ptrIdEEPT_S4_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end709:
	.size	_ZNKSt6vectorIdSaIdEE4dataEv, .Lfunc_end709-_ZNKSt6vectorIdSaIdEE4dataEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EEcvbEv,"axG",@progbits,_ZNKSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EEcvbEv,comdat
	.weak	_ZNKSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EEcvbEv # -- Begin function _ZNKSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EEcvbEv
	.p2align	4, 0x90
	.type	_ZNKSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EEcvbEv,@function
_ZNKSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EEcvbEv: # @_ZNKSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EEcvbEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	cmpq	$0, (%rax)
	setne	%al
	andb	$1, %al
	movzbl	%al, %eax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end710:
	.size	_ZNKSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EEcvbEv, .Lfunc_end710-_ZNKSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EEcvbEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal4util15product_fits_inImJRmEvEEbT_DpOT0_,"axG",@progbits,_ZN4seal4util15product_fits_inImJRmEvEEbT_DpOT0_,comdat
	.weak	_ZN4seal4util15product_fits_inImJRmEvEEbT_DpOT0_ # -- Begin function _ZN4seal4util15product_fits_inImJRmEvEEbT_DpOT0_
	.p2align	4, 0x90
	.type	_ZN4seal4util15product_fits_inImJRmEvEEbT_DpOT0_,@function
_ZN4seal4util15product_fits_inImJRmEvEEbT_DpOT0_: # @_ZN4seal4util15product_fits_inImJRmEvEEbT_DpOT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -24(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	callq	_ZSt7forwardIRmEOT_RNSt16remove_referenceIS1_E4typeE
	movq	-24(%rbp), %rdi                 # 8-byte Reload
	movq	(%rax), %rsi
	callq	_ZN4seal4util8mul_safeImvEET_S2_S2_
	movq	%rax, %rdi
	callq	_ZN4seal4util7fits_inImmvvEEbT0_
	andb	$1, %al
	movzbl	%al, %eax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end711:
	.size	_ZN4seal4util15product_fits_inImJRmEvEEbT_DpOT0_, .Lfunc_end711-_ZN4seal4util15product_fits_inImJRmEvEEbT_DpOT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK4seal11SEALContext11ContextData16small_ntt_tablesEv,"axG",@progbits,_ZNK4seal11SEALContext11ContextData16small_ntt_tablesEv,comdat
	.weak	_ZNK4seal11SEALContext11ContextData16small_ntt_tablesEv # -- Begin function _ZNK4seal11SEALContext11ContextData16small_ntt_tablesEv
	.p2align	4, 0x90
	.type	_ZNK4seal11SEALContext11ContextData16small_ntt_tablesEv,@function
_ZNK4seal11SEALContext11ContextData16small_ntt_tablesEv: # @_ZNK4seal11SEALContext11ContextData16small_ntt_tablesEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	addq	$216, %rdi
	callq	_ZNK4seal4util7PointerINS0_9NTTTablesEvE3getEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end712:
	.size	_ZNK4seal11SEALContext11ContextData16small_ntt_tablesEv, .Lfunc_end712-_ZNK4seal11SEALContext11ContextData16small_ntt_tablesEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal4util8allocateISt7complexIdEJiEvEEDamRNS0_10MemoryPoolEDpOT0_,"axG",@progbits,_ZN4seal4util8allocateISt7complexIdEJiEvEEDamRNS0_10MemoryPoolEDpOT0_,comdat
	.weak	_ZN4seal4util8allocateISt7complexIdEJiEvEEDamRNS0_10MemoryPoolEDpOT0_ # -- Begin function _ZN4seal4util8allocateISt7complexIdEJiEvEEDamRNS0_10MemoryPoolEDpOT0_
	.p2align	4, 0x90
	.type	_ZN4seal4util8allocateISt7complexIdEJiEvEEDamRNS0_10MemoryPoolEDpOT0_,@function
_ZN4seal4util8allocateISt7complexIdEJiEvEEDamRNS0_10MemoryPoolEDpOT0_: # @_ZN4seal4util8allocateISt7complexIdEJiEvEEDamRNS0_10MemoryPoolEDpOT0_
.Lfunc_begin80:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception80
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$112, %rsp
	movq	%rdi, -96(%rbp)                 # 8-byte Spill
	movq	%rdi, %rax
	movq	%rax, -112(%rbp)                # 8-byte Spill
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -104(%rbp)                # 8-byte Spill
	movq	-16(%rbp), %rdi
	movl	$16, %esi
	callq	_ZN4seal4util8mul_safeImvEET_S2_S2_
	movq	-104(%rbp), %rsi                # 8-byte Reload
	movq	%rax, %rdx
	movq	(%rsi), %rax
	movq	16(%rax), %rax
	leaq	-64(%rbp), %rdi
	movq	%rdi, -88(%rbp)                 # 8-byte Spill
	callq	*%rax
	movq	-32(%rbp), %rdi
	callq	_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE
	movq	-96(%rbp), %rdi                 # 8-byte Reload
	movq	-88(%rbp), %rsi                 # 8-byte Reload
	movq	%rax, %rdx
.Ltmp1090:
	callq	_ZN4seal4util7PointerISt7complexIdEvEC2IJiEEEONS1_ISt4bytevEEDpOT_
.Ltmp1091:
	jmp	.LBB713_1
.LBB713_1:
	leaq	-64(%rbp), %rdi
	callq	_ZN4seal4util7PointerISt4bytevED2Ev
	movq	-112(%rbp), %rax                # 8-byte Reload
	addq	$112, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB713_2:
	.cfi_def_cfa %rbp, 16
.Ltmp1092:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -72(%rbp)
	movl	%eax, -76(%rbp)
	leaq	-64(%rbp), %rdi
	callq	_ZN4seal4util7PointerISt4bytevED2Ev
# %bb.3:
	movq	-72(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end713:
	.size	_ZN4seal4util8allocateISt7complexIdEJiEvEEDamRNS0_10MemoryPoolEDpOT0_, .Lfunc_end713-_ZN4seal4util8allocateISt7complexIdEJiEvEEDamRNS0_10MemoryPoolEDpOT0_
	.cfi_endproc
	.section	.gcc_except_table._ZN4seal4util8allocateISt7complexIdEJiEvEEDamRNS0_10MemoryPoolEDpOT0_,"aG",@progbits,_ZN4seal4util8allocateISt7complexIdEJiEvEEDamRNS0_10MemoryPoolEDpOT0_,comdat
	.p2align	2
GCC_except_table713:
.Lexception80:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end80-.Lcst_begin80
.Lcst_begin80:
	.uleb128 .Lfunc_begin80-.Lfunc_begin80  # >> Call Site 1 <<
	.uleb128 .Ltmp1090-.Lfunc_begin80       #   Call between .Lfunc_begin80 and .Ltmp1090
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1090-.Lfunc_begin80       # >> Call Site 2 <<
	.uleb128 .Ltmp1091-.Ltmp1090            #   Call between .Ltmp1090 and .Ltmp1091
	.uleb128 .Ltmp1092-.Lfunc_begin80       #     jumps to .Ltmp1092
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1091-.Lfunc_begin80       # >> Call Site 3 <<
	.uleb128 .Lfunc_end713-.Ltmp1091        #   Call between .Ltmp1091 and .Lfunc_end713
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end80:
	.p2align	2
                                        # -- End function
	.section	.text._ZN4seal4util7PointerISt7complexIdEvEixEm,"axG",@progbits,_ZN4seal4util7PointerISt7complexIdEvEixEm,comdat
	.weak	_ZN4seal4util7PointerISt7complexIdEvEixEm # -- Begin function _ZN4seal4util7PointerISt7complexIdEvEixEm
	.p2align	4, 0x90
	.type	_ZN4seal4util7PointerISt7complexIdEvEixEm,@function
_ZN4seal4util7PointerISt7complexIdEvEixEm: # @_ZN4seal4util7PointerISt7complexIdEvEixEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	movq	-16(%rbp), %rcx
	shlq	$4, %rcx
	addq	%rcx, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end714:
	.size	_ZN4seal4util7PointerISt7complexIdEvEixEm, .Lfunc_end714-_ZN4seal4util7PointerISt7complexIdEvEixEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal4util7PointerImvEixEm,"axG",@progbits,_ZN4seal4util7PointerImvEixEm,comdat
	.weak	_ZN4seal4util7PointerImvEixEm   # -- Begin function _ZN4seal4util7PointerImvEixEm
	.p2align	4, 0x90
	.type	_ZN4seal4util7PointerImvEixEm,@function
_ZN4seal4util7PointerImvEixEm:          # @_ZN4seal4util7PointerImvEixEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	movq	-16(%rbp), %rcx
	shlq	$3, %rcx
	addq	%rcx, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end715:
	.size	_ZN4seal4util7PointerImvEixEm, .Lfunc_end715-_ZN4seal4util7PointerImvEixEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt7complexIdEaSEd,"axG",@progbits,_ZNSt7complexIdEaSEd,comdat
	.weak	_ZNSt7complexIdEaSEd            # -- Begin function _ZNSt7complexIdEaSEd
	.p2align	4, 0x90
	.type	_ZNSt7complexIdEaSEd,@function
_ZNSt7complexIdEaSEd:                   # @_ZNSt7complexIdEaSEd
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movsd	%xmm0, -16(%rbp)
	movq	-8(%rbp), %rax
	movsd	-16(%rbp), %xmm0                # xmm0 = mem[0],zero
	movsd	%xmm0, (%rax)
	xorps	%xmm0, %xmm0
	movsd	%xmm0, 8(%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end716:
	.size	_ZNSt7complexIdEaSEd, .Lfunc_end716-_ZNSt7complexIdEaSEd
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3                               # -- Begin function _ZSt4conjIdESt7complexIN9__gnu_cxx9__promoteIT_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEES3_
.LCPI717_0:
	.quad	0x8000000000000000              # double -0
	.section	.text._ZSt4conjIdESt7complexIN9__gnu_cxx9__promoteIT_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEES3_,"axG",@progbits,_ZSt4conjIdESt7complexIN9__gnu_cxx9__promoteIT_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEES3_,comdat
	.weak	_ZSt4conjIdESt7complexIN9__gnu_cxx9__promoteIT_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEES3_
	.p2align	4, 0x90
	.type	_ZSt4conjIdESt7complexIN9__gnu_cxx9__promoteIT_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEES3_,@function
_ZSt4conjIdESt7complexIN9__gnu_cxx9__promoteIT_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEES3_: # @_ZSt4conjIdESt7complexIN9__gnu_cxx9__promoteIT_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEES3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movsd	%xmm0, -24(%rbp)
	movsd	-24(%rbp), %xmm0                # xmm0 = mem[0],zero
	leaq	-16(%rbp), %rdi
	movsd	.LCPI717_0(%rip), %xmm1         # xmm1 = mem[0],zero
	callq	_ZNSt7complexIdEC2Edd
	movsd	-16(%rbp), %xmm0                # xmm0 = mem[0],zero
	movsd	-8(%rbp), %xmm1                 # xmm1 = mem[0],zero
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end717:
	.size	_ZSt4conjIdESt7complexIN9__gnu_cxx9__promoteIT_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEES3_, .Lfunc_end717-_ZSt4conjIdESt7complexIN9__gnu_cxx9__promoteIT_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEES3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK4seal4util10DWTHandlerISt7complexIdES3_dE18transform_from_revEPS3_iPKS3_PKdi,"axG",@progbits,_ZNK4seal4util10DWTHandlerISt7complexIdES3_dE18transform_from_revEPS3_iPKS3_PKdi,comdat
	.weak	_ZNK4seal4util10DWTHandlerISt7complexIdES3_dE18transform_from_revEPS3_iPKS3_PKdi # -- Begin function _ZNK4seal4util10DWTHandlerISt7complexIdES3_dE18transform_from_revEPS3_iPKS3_PKdi
	.p2align	4, 0x90
	.type	_ZNK4seal4util10DWTHandlerISt7complexIdES3_dE18transform_from_revEPS3_iPKS3_PKdi,@function
_ZNK4seal4util10DWTHandlerISt7complexIdES3_dE18transform_from_revEPS3_iPKS3_PKdi: # @_ZNK4seal4util10DWTHandlerISt7complexIdES3_dE18transform_from_revEPS3_iPKS3_PKdi
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$1360, %rsp                     # imm = 0x550
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movl	%edx, -20(%rbp)
	movq	%rcx, -32(%rbp)
	movq	%r8, -40(%rbp)
	movl	%r9d, -44(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -1352(%rbp)               # 8-byte Spill
	movl	-20(%rbp), %eax
	movl	%eax, %ecx
	movl	$1, %eax
                                        # kill: def $cl killed $rcx
	shlq	%cl, %rax
	movq	%rax, -56(%rbp)
	leaq	-72(%rbp), %rdi
	xorps	%xmm1, %xmm1
	movaps	%xmm1, %xmm0
	callq	_ZNSt7complexIdEC2Edd
	leaq	-88(%rbp), %rdi
	xorps	%xmm1, %xmm1
	movaps	%xmm1, %xmm0
	callq	_ZNSt7complexIdEC2Edd
	leaq	-104(%rbp), %rdi
	xorps	%xmm1, %xmm1
	movaps	%xmm1, %xmm0
	callq	_ZNSt7complexIdEC2Edd
	movq	$0, -112(%rbp)
	movq	$0, -120(%rbp)
	movq	$1, -128(%rbp)
	movq	-56(%rbp), %rax
	shrq	$1, %rax
	movq	%rax, -136(%rbp)
.LBB718_1:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB718_4 Depth 2
                                        #       Child Loop BB718_6 Depth 3
                                        #     Child Loop BB718_13 Depth 2
                                        #       Child Loop BB718_15 Depth 3
	cmpq	$1, -136(%rbp)
	jbe	.LBB718_23
# %bb.2:                                #   in Loop: Header=BB718_1 Depth=1
	movq	$0, -144(%rbp)
	cmpq	$4, -128(%rbp)
	jae	.LBB718_12
# %bb.3:                                #   in Loop: Header=BB718_1 Depth=1
	movq	$0, -152(%rbp)
.LBB718_4:                              #   Parent Loop BB718_1 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB718_6 Depth 3
	movq	-152(%rbp), %rax
	cmpq	-136(%rbp), %rax
	jae	.LBB718_11
# %bb.5:                                #   in Loop: Header=BB718_4 Depth=2
	movq	-32(%rbp), %rax
	movq	%rax, %rcx
	addq	$16, %rcx
	movq	%rcx, -32(%rbp)
	movq	16(%rax), %rcx
	movq	%rcx, -72(%rbp)
	movq	24(%rax), %rax
	movq	%rax, -64(%rbp)
	movq	-16(%rbp), %rax
	movq	-144(%rbp), %rcx
	shlq	$4, %rcx
	addq	%rcx, %rax
	movq	%rax, -112(%rbp)
	movq	-112(%rbp), %rax
	movq	-128(%rbp), %rcx
	shlq	$4, %rcx
	addq	%rcx, %rax
	movq	%rax, -120(%rbp)
	movq	$0, -160(%rbp)
.LBB718_6:                              #   Parent Loop BB718_1 Depth=1
                                        #     Parent Loop BB718_4 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movq	-160(%rbp), %rax
	cmpq	-128(%rbp), %rax
	jae	.LBB718_9
# %bb.7:                                #   in Loop: Header=BB718_6 Depth=3
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movq	-112(%rbp), %rax
	movq	(%rax), %rcx
	movq	%rcx, -88(%rbp)
	movq	8(%rax), %rax
	movq	%rax, -80(%rbp)
	movq	-120(%rbp), %rax
	movq	(%rax), %rcx
	movq	%rcx, -104(%rbp)
	movq	8(%rax), %rax
	movq	%rax, -96(%rbp)
	leaq	-88(%rbp), %rsi
	leaq	-104(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3addERKS3_S6_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -192(%rbp)
	movsd	%xmm1, -184(%rbp)
	leaq	-192(%rbp), %rsi
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE5guardERKS3_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -176(%rbp)
	movsd	%xmm1, -168(%rbp)
	movq	-112(%rbp), %rax
	movq	%rax, %rcx
	addq	$16, %rcx
	movq	%rcx, -112(%rbp)
	movq	-176(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-168(%rbp), %rcx
	movq	%rcx, 8(%rax)
	leaq	-88(%rbp), %rsi
	leaq	-104(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3subERKS3_S6_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -224(%rbp)
	movsd	%xmm1, -216(%rbp)
	leaq	-224(%rbp), %rsi
	leaq	-72(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE8mul_rootERKS3_S6_
	movsd	%xmm0, -208(%rbp)
	movsd	%xmm1, -200(%rbp)
	movq	-120(%rbp), %rax
	movq	%rax, %rcx
	addq	$16, %rcx
	movq	%rcx, -120(%rbp)
	movq	-208(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-200(%rbp), %rcx
	movq	%rcx, 8(%rax)
# %bb.8:                                #   in Loop: Header=BB718_6 Depth=3
	movq	-160(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -160(%rbp)
	jmp	.LBB718_6
.LBB718_9:                              #   in Loop: Header=BB718_4 Depth=2
	movq	-128(%rbp), %rax
	shlq	$1, %rax
	addq	-144(%rbp), %rax
	movq	%rax, -144(%rbp)
# %bb.10:                               #   in Loop: Header=BB718_4 Depth=2
	movq	-152(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -152(%rbp)
	jmp	.LBB718_4
.LBB718_11:                             #   in Loop: Header=BB718_1 Depth=1
	jmp	.LBB718_21
.LBB718_12:                             #   in Loop: Header=BB718_1 Depth=1
	movq	$0, -232(%rbp)
.LBB718_13:                             #   Parent Loop BB718_1 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB718_15 Depth 3
	movq	-232(%rbp), %rax
	cmpq	-136(%rbp), %rax
	jae	.LBB718_20
# %bb.14:                               #   in Loop: Header=BB718_13 Depth=2
	movq	-32(%rbp), %rax
	movq	%rax, %rcx
	addq	$16, %rcx
	movq	%rcx, -32(%rbp)
	movq	16(%rax), %rcx
	movq	%rcx, -72(%rbp)
	movq	24(%rax), %rax
	movq	%rax, -64(%rbp)
	movq	-16(%rbp), %rax
	movq	-144(%rbp), %rcx
	shlq	$4, %rcx
	addq	%rcx, %rax
	movq	%rax, -112(%rbp)
	movq	-112(%rbp), %rax
	movq	-128(%rbp), %rcx
	shlq	$4, %rcx
	addq	%rcx, %rax
	movq	%rax, -120(%rbp)
	movq	$0, -240(%rbp)
.LBB718_15:                             #   Parent Loop BB718_1 Depth=1
                                        #     Parent Loop BB718_13 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movq	-240(%rbp), %rax
	cmpq	-128(%rbp), %rax
	jae	.LBB718_18
# %bb.16:                               #   in Loop: Header=BB718_15 Depth=3
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movq	-112(%rbp), %rax
	movq	(%rax), %rcx
	movq	%rcx, -88(%rbp)
	movq	8(%rax), %rax
	movq	%rax, -80(%rbp)
	movq	-120(%rbp), %rax
	movq	(%rax), %rcx
	movq	%rcx, -104(%rbp)
	movq	8(%rax), %rax
	movq	%rax, -96(%rbp)
	leaq	-88(%rbp), %rsi
	leaq	-104(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3addERKS3_S6_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -272(%rbp)
	movsd	%xmm1, -264(%rbp)
	leaq	-272(%rbp), %rsi
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE5guardERKS3_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -256(%rbp)
	movsd	%xmm1, -248(%rbp)
	movq	-112(%rbp), %rax
	movq	%rax, %rcx
	addq	$16, %rcx
	movq	%rcx, -112(%rbp)
	movq	-256(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-248(%rbp), %rcx
	movq	%rcx, 8(%rax)
	leaq	-88(%rbp), %rsi
	leaq	-104(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3subERKS3_S6_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -304(%rbp)
	movsd	%xmm1, -296(%rbp)
	leaq	-304(%rbp), %rsi
	leaq	-72(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE8mul_rootERKS3_S6_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -288(%rbp)
	movsd	%xmm1, -280(%rbp)
	movq	-120(%rbp), %rax
	movq	%rax, %rcx
	addq	$16, %rcx
	movq	%rcx, -120(%rbp)
	movq	-288(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-280(%rbp), %rcx
	movq	%rcx, 8(%rax)
	movq	-112(%rbp), %rax
	movq	(%rax), %rcx
	movq	%rcx, -88(%rbp)
	movq	8(%rax), %rax
	movq	%rax, -80(%rbp)
	movq	-120(%rbp), %rax
	movq	(%rax), %rcx
	movq	%rcx, -104(%rbp)
	movq	8(%rax), %rax
	movq	%rax, -96(%rbp)
	leaq	-88(%rbp), %rsi
	leaq	-104(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3addERKS3_S6_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -336(%rbp)
	movsd	%xmm1, -328(%rbp)
	leaq	-336(%rbp), %rsi
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE5guardERKS3_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -320(%rbp)
	movsd	%xmm1, -312(%rbp)
	movq	-112(%rbp), %rax
	movq	%rax, %rcx
	addq	$16, %rcx
	movq	%rcx, -112(%rbp)
	movq	-320(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-312(%rbp), %rcx
	movq	%rcx, 8(%rax)
	leaq	-88(%rbp), %rsi
	leaq	-104(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3subERKS3_S6_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -368(%rbp)
	movsd	%xmm1, -360(%rbp)
	leaq	-368(%rbp), %rsi
	leaq	-72(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE8mul_rootERKS3_S6_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -352(%rbp)
	movsd	%xmm1, -344(%rbp)
	movq	-120(%rbp), %rax
	movq	%rax, %rcx
	addq	$16, %rcx
	movq	%rcx, -120(%rbp)
	movq	-352(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-344(%rbp), %rcx
	movq	%rcx, 8(%rax)
	movq	-112(%rbp), %rax
	movq	(%rax), %rcx
	movq	%rcx, -88(%rbp)
	movq	8(%rax), %rax
	movq	%rax, -80(%rbp)
	movq	-120(%rbp), %rax
	movq	(%rax), %rcx
	movq	%rcx, -104(%rbp)
	movq	8(%rax), %rax
	movq	%rax, -96(%rbp)
	leaq	-88(%rbp), %rsi
	leaq	-104(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3addERKS3_S6_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -400(%rbp)
	movsd	%xmm1, -392(%rbp)
	leaq	-400(%rbp), %rsi
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE5guardERKS3_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -384(%rbp)
	movsd	%xmm1, -376(%rbp)
	movq	-112(%rbp), %rax
	movq	%rax, %rcx
	addq	$16, %rcx
	movq	%rcx, -112(%rbp)
	movq	-384(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-376(%rbp), %rcx
	movq	%rcx, 8(%rax)
	leaq	-88(%rbp), %rsi
	leaq	-104(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3subERKS3_S6_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -432(%rbp)
	movsd	%xmm1, -424(%rbp)
	leaq	-432(%rbp), %rsi
	leaq	-72(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE8mul_rootERKS3_S6_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -416(%rbp)
	movsd	%xmm1, -408(%rbp)
	movq	-120(%rbp), %rax
	movq	%rax, %rcx
	addq	$16, %rcx
	movq	%rcx, -120(%rbp)
	movq	-416(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-408(%rbp), %rcx
	movq	%rcx, 8(%rax)
	movq	-112(%rbp), %rax
	movq	(%rax), %rcx
	movq	%rcx, -88(%rbp)
	movq	8(%rax), %rax
	movq	%rax, -80(%rbp)
	movq	-120(%rbp), %rax
	movq	(%rax), %rcx
	movq	%rcx, -104(%rbp)
	movq	8(%rax), %rax
	movq	%rax, -96(%rbp)
	leaq	-88(%rbp), %rsi
	leaq	-104(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3addERKS3_S6_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -464(%rbp)
	movsd	%xmm1, -456(%rbp)
	leaq	-464(%rbp), %rsi
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE5guardERKS3_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -448(%rbp)
	movsd	%xmm1, -440(%rbp)
	movq	-112(%rbp), %rax
	movq	%rax, %rcx
	addq	$16, %rcx
	movq	%rcx, -112(%rbp)
	movq	-448(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-440(%rbp), %rcx
	movq	%rcx, 8(%rax)
	leaq	-88(%rbp), %rsi
	leaq	-104(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3subERKS3_S6_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -496(%rbp)
	movsd	%xmm1, -488(%rbp)
	leaq	-496(%rbp), %rsi
	leaq	-72(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE8mul_rootERKS3_S6_
	movsd	%xmm0, -480(%rbp)
	movsd	%xmm1, -472(%rbp)
	movq	-120(%rbp), %rax
	movq	%rax, %rcx
	addq	$16, %rcx
	movq	%rcx, -120(%rbp)
	movq	-480(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-472(%rbp), %rcx
	movq	%rcx, 8(%rax)
# %bb.17:                               #   in Loop: Header=BB718_15 Depth=3
	movq	-240(%rbp), %rax
	addq	$4, %rax
	movq	%rax, -240(%rbp)
	jmp	.LBB718_15
.LBB718_18:                             #   in Loop: Header=BB718_13 Depth=2
	movq	-128(%rbp), %rax
	shlq	$1, %rax
	addq	-144(%rbp), %rax
	movq	%rax, -144(%rbp)
# %bb.19:                               #   in Loop: Header=BB718_13 Depth=2
	movq	-232(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -232(%rbp)
	jmp	.LBB718_13
.LBB718_20:                             #   in Loop: Header=BB718_1 Depth=1
	jmp	.LBB718_21
.LBB718_21:                             #   in Loop: Header=BB718_1 Depth=1
	movq	-128(%rbp), %rax
	shlq	$1, %rax
	movq	%rax, -128(%rbp)
# %bb.22:                               #   in Loop: Header=BB718_1 Depth=1
	movq	-136(%rbp), %rax
	shrq	$1, %rax
	movq	%rax, -136(%rbp)
	jmp	.LBB718_1
.LBB718_23:
	cmpq	$0, -40(%rbp)
	je	.LBB718_38
# %bb.24:
	movq	-32(%rbp), %rax
	movq	%rax, %rcx
	addq	$16, %rcx
	movq	%rcx, -32(%rbp)
	movq	16(%rax), %rcx
	movq	%rcx, -72(%rbp)
	movq	24(%rax), %rax
	movq	%rax, -64(%rbp)
	cmpl	$1, -44(%rbp)
	jne	.LBB718_26
# %bb.25:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.80(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
	movq	%rax, %rdi
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.LBB718_26:
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movq	-40(%rbp), %rdx
	movl	-44(%rbp), %ecx
	leaq	-72(%rbp), %rsi
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE15mul_root_scalarERKS3_RKdi
	movsd	%xmm0, -512(%rbp)
	movsd	%xmm1, -504(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -112(%rbp)
	movq	-112(%rbp), %rax
	movq	-128(%rbp), %rcx
	shlq	$4, %rcx
	addq	%rcx, %rax
	movq	%rax, -120(%rbp)
	cmpq	$4, -128(%rbp)
	jae	.LBB718_32
# %bb.27:
	movq	$0, -520(%rbp)
.LBB718_28:                             # =>This Inner Loop Header: Depth=1
	movq	-520(%rbp), %rax
	cmpq	-128(%rbp), %rax
	jae	.LBB718_31
# %bb.29:                               #   in Loop: Header=BB718_28 Depth=1
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movq	-112(%rbp), %rsi
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE5guardERKS3_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -536(%rbp)
	movsd	%xmm1, -528(%rbp)
	movq	-536(%rbp), %rax
	movq	%rax, -88(%rbp)
	movq	-528(%rbp), %rax
	movq	%rax, -80(%rbp)
	movq	-120(%rbp), %rax
	movq	(%rax), %rcx
	movq	%rcx, -104(%rbp)
	movq	8(%rax), %rax
	movq	%rax, -96(%rbp)
	leaq	-88(%rbp), %rsi
	leaq	-104(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3addERKS3_S6_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -584(%rbp)
	movsd	%xmm1, -576(%rbp)
	leaq	-584(%rbp), %rsi
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE5guardERKS3_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -568(%rbp)
	movsd	%xmm1, -560(%rbp)
	movq	-40(%rbp), %rdx
	leaq	-568(%rbp), %rsi
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE10mul_scalarERKS3_RKd
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -552(%rbp)
	movsd	%xmm1, -544(%rbp)
	movq	-112(%rbp), %rax
	movq	%rax, %rcx
	addq	$16, %rcx
	movq	%rcx, -112(%rbp)
	movq	-552(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-544(%rbp), %rcx
	movq	%rcx, 8(%rax)
	leaq	-88(%rbp), %rsi
	leaq	-104(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3subERKS3_S6_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -616(%rbp)
	movsd	%xmm1, -608(%rbp)
	leaq	-616(%rbp), %rsi
	leaq	-512(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE8mul_rootERKS3_S6_
	movsd	%xmm0, -600(%rbp)
	movsd	%xmm1, -592(%rbp)
	movq	-120(%rbp), %rax
	movq	%rax, %rcx
	addq	$16, %rcx
	movq	%rcx, -120(%rbp)
	movq	-600(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-592(%rbp), %rcx
	movq	%rcx, 8(%rax)
# %bb.30:                               #   in Loop: Header=BB718_28 Depth=1
	movq	-520(%rbp), %rax
	addq	$4, %rax
	movq	%rax, -520(%rbp)
	jmp	.LBB718_28
.LBB718_31:
	jmp	.LBB718_37
.LBB718_32:
	movq	$0, -624(%rbp)
.LBB718_33:                             # =>This Inner Loop Header: Depth=1
	movq	-624(%rbp), %rax
	cmpq	-128(%rbp), %rax
	jae	.LBB718_36
# %bb.34:                               #   in Loop: Header=BB718_33 Depth=1
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movq	-112(%rbp), %rsi
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE5guardERKS3_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -640(%rbp)
	movsd	%xmm1, -632(%rbp)
	movq	-640(%rbp), %rax
	movq	%rax, -88(%rbp)
	movq	-632(%rbp), %rax
	movq	%rax, -80(%rbp)
	movq	-120(%rbp), %rax
	movq	(%rax), %rcx
	movq	%rcx, -104(%rbp)
	movq	8(%rax), %rax
	movq	%rax, -96(%rbp)
	leaq	-88(%rbp), %rsi
	leaq	-104(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3addERKS3_S6_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -688(%rbp)
	movsd	%xmm1, -680(%rbp)
	leaq	-688(%rbp), %rsi
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE5guardERKS3_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -672(%rbp)
	movsd	%xmm1, -664(%rbp)
	movq	-40(%rbp), %rdx
	leaq	-672(%rbp), %rsi
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE10mul_scalarERKS3_RKd
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -656(%rbp)
	movsd	%xmm1, -648(%rbp)
	movq	-112(%rbp), %rax
	movq	%rax, %rcx
	addq	$16, %rcx
	movq	%rcx, -112(%rbp)
	movq	-656(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-648(%rbp), %rcx
	movq	%rcx, 8(%rax)
	leaq	-88(%rbp), %rsi
	leaq	-104(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3subERKS3_S6_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -720(%rbp)
	movsd	%xmm1, -712(%rbp)
	leaq	-720(%rbp), %rsi
	leaq	-512(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE8mul_rootERKS3_S6_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -704(%rbp)
	movsd	%xmm1, -696(%rbp)
	movq	-120(%rbp), %rax
	movq	%rax, %rcx
	addq	$16, %rcx
	movq	%rcx, -120(%rbp)
	movq	-704(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-696(%rbp), %rcx
	movq	%rcx, 8(%rax)
	movq	-112(%rbp), %rsi
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE5guardERKS3_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -736(%rbp)
	movsd	%xmm1, -728(%rbp)
	movq	-736(%rbp), %rax
	movq	%rax, -88(%rbp)
	movq	-728(%rbp), %rax
	movq	%rax, -80(%rbp)
	movq	-120(%rbp), %rax
	movq	(%rax), %rcx
	movq	%rcx, -104(%rbp)
	movq	8(%rax), %rax
	movq	%rax, -96(%rbp)
	leaq	-88(%rbp), %rsi
	leaq	-104(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3addERKS3_S6_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -784(%rbp)
	movsd	%xmm1, -776(%rbp)
	leaq	-784(%rbp), %rsi
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE5guardERKS3_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -768(%rbp)
	movsd	%xmm1, -760(%rbp)
	movq	-40(%rbp), %rdx
	leaq	-768(%rbp), %rsi
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE10mul_scalarERKS3_RKd
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -752(%rbp)
	movsd	%xmm1, -744(%rbp)
	movq	-112(%rbp), %rax
	movq	%rax, %rcx
	addq	$16, %rcx
	movq	%rcx, -112(%rbp)
	movq	-752(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-744(%rbp), %rcx
	movq	%rcx, 8(%rax)
	leaq	-88(%rbp), %rsi
	leaq	-104(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3subERKS3_S6_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -816(%rbp)
	movsd	%xmm1, -808(%rbp)
	leaq	-816(%rbp), %rsi
	leaq	-512(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE8mul_rootERKS3_S6_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -800(%rbp)
	movsd	%xmm1, -792(%rbp)
	movq	-120(%rbp), %rax
	movq	%rax, %rcx
	addq	$16, %rcx
	movq	%rcx, -120(%rbp)
	movq	-800(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-792(%rbp), %rcx
	movq	%rcx, 8(%rax)
	movq	-112(%rbp), %rsi
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE5guardERKS3_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -832(%rbp)
	movsd	%xmm1, -824(%rbp)
	movq	-832(%rbp), %rax
	movq	%rax, -88(%rbp)
	movq	-824(%rbp), %rax
	movq	%rax, -80(%rbp)
	movq	-120(%rbp), %rax
	movq	(%rax), %rcx
	movq	%rcx, -104(%rbp)
	movq	8(%rax), %rax
	movq	%rax, -96(%rbp)
	leaq	-88(%rbp), %rsi
	leaq	-104(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3addERKS3_S6_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -880(%rbp)
	movsd	%xmm1, -872(%rbp)
	leaq	-880(%rbp), %rsi
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE5guardERKS3_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -864(%rbp)
	movsd	%xmm1, -856(%rbp)
	movq	-40(%rbp), %rdx
	leaq	-864(%rbp), %rsi
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE10mul_scalarERKS3_RKd
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -848(%rbp)
	movsd	%xmm1, -840(%rbp)
	movq	-112(%rbp), %rax
	movq	%rax, %rcx
	addq	$16, %rcx
	movq	%rcx, -112(%rbp)
	movq	-848(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-840(%rbp), %rcx
	movq	%rcx, 8(%rax)
	leaq	-88(%rbp), %rsi
	leaq	-104(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3subERKS3_S6_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -912(%rbp)
	movsd	%xmm1, -904(%rbp)
	leaq	-912(%rbp), %rsi
	leaq	-512(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE8mul_rootERKS3_S6_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -896(%rbp)
	movsd	%xmm1, -888(%rbp)
	movq	-120(%rbp), %rax
	movq	%rax, %rcx
	addq	$16, %rcx
	movq	%rcx, -120(%rbp)
	movq	-896(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-888(%rbp), %rcx
	movq	%rcx, 8(%rax)
	movq	-112(%rbp), %rsi
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE5guardERKS3_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -928(%rbp)
	movsd	%xmm1, -920(%rbp)
	movq	-928(%rbp), %rax
	movq	%rax, -88(%rbp)
	movq	-920(%rbp), %rax
	movq	%rax, -80(%rbp)
	movq	-120(%rbp), %rax
	movq	(%rax), %rcx
	movq	%rcx, -104(%rbp)
	movq	8(%rax), %rax
	movq	%rax, -96(%rbp)
	leaq	-88(%rbp), %rsi
	leaq	-104(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3addERKS3_S6_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -976(%rbp)
	movsd	%xmm1, -968(%rbp)
	leaq	-976(%rbp), %rsi
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE5guardERKS3_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -960(%rbp)
	movsd	%xmm1, -952(%rbp)
	movq	-40(%rbp), %rdx
	leaq	-960(%rbp), %rsi
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE10mul_scalarERKS3_RKd
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -944(%rbp)
	movsd	%xmm1, -936(%rbp)
	movq	-112(%rbp), %rax
	movq	%rax, %rcx
	addq	$16, %rcx
	movq	%rcx, -112(%rbp)
	movq	-944(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-936(%rbp), %rcx
	movq	%rcx, 8(%rax)
	leaq	-88(%rbp), %rsi
	leaq	-104(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3subERKS3_S6_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -1008(%rbp)
	movsd	%xmm1, -1000(%rbp)
	leaq	-1008(%rbp), %rsi
	leaq	-512(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE8mul_rootERKS3_S6_
	movsd	%xmm0, -992(%rbp)
	movsd	%xmm1, -984(%rbp)
	movq	-120(%rbp), %rax
	movq	%rax, %rcx
	addq	$16, %rcx
	movq	%rcx, -120(%rbp)
	movq	-992(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-984(%rbp), %rcx
	movq	%rcx, 8(%rax)
# %bb.35:                               #   in Loop: Header=BB718_33 Depth=1
	movq	-624(%rbp), %rax
	addq	$4, %rax
	movq	%rax, -624(%rbp)
	jmp	.LBB718_33
.LBB718_36:
	jmp	.LBB718_37
.LBB718_37:
	jmp	.LBB718_50
.LBB718_38:
	movq	-32(%rbp), %rax
	movq	%rax, %rcx
	addq	$16, %rcx
	movq	%rcx, -32(%rbp)
	movq	16(%rax), %rcx
	movq	%rcx, -72(%rbp)
	movq	24(%rax), %rax
	movq	%rax, -64(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -112(%rbp)
	movq	-112(%rbp), %rax
	movq	-128(%rbp), %rcx
	shlq	$4, %rcx
	addq	%rcx, %rax
	movq	%rax, -120(%rbp)
	cmpq	$4, -128(%rbp)
	jae	.LBB718_44
# %bb.39:
	movq	$0, -1016(%rbp)
.LBB718_40:                             # =>This Inner Loop Header: Depth=1
	movq	-1016(%rbp), %rax
	cmpq	-128(%rbp), %rax
	jae	.LBB718_43
# %bb.41:                               #   in Loop: Header=BB718_40 Depth=1
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movq	-112(%rbp), %rax
	movq	(%rax), %rcx
	movq	%rcx, -88(%rbp)
	movq	8(%rax), %rax
	movq	%rax, -80(%rbp)
	movq	-120(%rbp), %rax
	movq	(%rax), %rcx
	movq	%rcx, -104(%rbp)
	movq	8(%rax), %rax
	movq	%rax, -96(%rbp)
	leaq	-88(%rbp), %rsi
	leaq	-104(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3addERKS3_S6_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -1048(%rbp)
	movsd	%xmm1, -1040(%rbp)
	leaq	-1048(%rbp), %rsi
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE5guardERKS3_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -1032(%rbp)
	movsd	%xmm1, -1024(%rbp)
	movq	-112(%rbp), %rax
	movq	%rax, %rcx
	addq	$16, %rcx
	movq	%rcx, -112(%rbp)
	movq	-1032(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-1024(%rbp), %rcx
	movq	%rcx, 8(%rax)
	leaq	-88(%rbp), %rsi
	leaq	-104(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3subERKS3_S6_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -1080(%rbp)
	movsd	%xmm1, -1072(%rbp)
	leaq	-1080(%rbp), %rsi
	leaq	-72(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE8mul_rootERKS3_S6_
	movsd	%xmm0, -1064(%rbp)
	movsd	%xmm1, -1056(%rbp)
	movq	-120(%rbp), %rax
	movq	%rax, %rcx
	addq	$16, %rcx
	movq	%rcx, -120(%rbp)
	movq	-1064(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-1056(%rbp), %rcx
	movq	%rcx, 8(%rax)
# %bb.42:                               #   in Loop: Header=BB718_40 Depth=1
	movq	-1016(%rbp), %rax
	addq	$4, %rax
	movq	%rax, -1016(%rbp)
	jmp	.LBB718_40
.LBB718_43:
	jmp	.LBB718_49
.LBB718_44:
	movq	$0, -1088(%rbp)
.LBB718_45:                             # =>This Inner Loop Header: Depth=1
	movq	-1088(%rbp), %rax
	cmpq	-128(%rbp), %rax
	jae	.LBB718_48
# %bb.46:                               #   in Loop: Header=BB718_45 Depth=1
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movq	-112(%rbp), %rax
	movq	(%rax), %rcx
	movq	%rcx, -88(%rbp)
	movq	8(%rax), %rax
	movq	%rax, -80(%rbp)
	movq	-120(%rbp), %rax
	movq	(%rax), %rcx
	movq	%rcx, -104(%rbp)
	movq	8(%rax), %rax
	movq	%rax, -96(%rbp)
	leaq	-88(%rbp), %rsi
	leaq	-104(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3addERKS3_S6_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -1120(%rbp)
	movsd	%xmm1, -1112(%rbp)
	leaq	-1120(%rbp), %rsi
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE5guardERKS3_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -1104(%rbp)
	movsd	%xmm1, -1096(%rbp)
	movq	-112(%rbp), %rax
	movq	%rax, %rcx
	addq	$16, %rcx
	movq	%rcx, -112(%rbp)
	movq	-1104(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-1096(%rbp), %rcx
	movq	%rcx, 8(%rax)
	leaq	-88(%rbp), %rsi
	leaq	-104(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3subERKS3_S6_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -1152(%rbp)
	movsd	%xmm1, -1144(%rbp)
	leaq	-1152(%rbp), %rsi
	leaq	-72(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE8mul_rootERKS3_S6_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -1136(%rbp)
	movsd	%xmm1, -1128(%rbp)
	movq	-120(%rbp), %rax
	movq	%rax, %rcx
	addq	$16, %rcx
	movq	%rcx, -120(%rbp)
	movq	-1136(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-1128(%rbp), %rcx
	movq	%rcx, 8(%rax)
	movq	-112(%rbp), %rax
	movq	(%rax), %rcx
	movq	%rcx, -88(%rbp)
	movq	8(%rax), %rax
	movq	%rax, -80(%rbp)
	movq	-120(%rbp), %rax
	movq	(%rax), %rcx
	movq	%rcx, -104(%rbp)
	movq	8(%rax), %rax
	movq	%rax, -96(%rbp)
	leaq	-88(%rbp), %rsi
	leaq	-104(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3addERKS3_S6_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -1184(%rbp)
	movsd	%xmm1, -1176(%rbp)
	leaq	-1184(%rbp), %rsi
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE5guardERKS3_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -1168(%rbp)
	movsd	%xmm1, -1160(%rbp)
	movq	-112(%rbp), %rax
	movq	%rax, %rcx
	addq	$16, %rcx
	movq	%rcx, -112(%rbp)
	movq	-1168(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-1160(%rbp), %rcx
	movq	%rcx, 8(%rax)
	leaq	-88(%rbp), %rsi
	leaq	-104(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3subERKS3_S6_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -1216(%rbp)
	movsd	%xmm1, -1208(%rbp)
	leaq	-1216(%rbp), %rsi
	leaq	-72(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE8mul_rootERKS3_S6_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -1200(%rbp)
	movsd	%xmm1, -1192(%rbp)
	movq	-120(%rbp), %rax
	movq	%rax, %rcx
	addq	$16, %rcx
	movq	%rcx, -120(%rbp)
	movq	-1200(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-1192(%rbp), %rcx
	movq	%rcx, 8(%rax)
	movq	-112(%rbp), %rax
	movq	(%rax), %rcx
	movq	%rcx, -88(%rbp)
	movq	8(%rax), %rax
	movq	%rax, -80(%rbp)
	movq	-120(%rbp), %rax
	movq	(%rax), %rcx
	movq	%rcx, -104(%rbp)
	movq	8(%rax), %rax
	movq	%rax, -96(%rbp)
	leaq	-88(%rbp), %rsi
	leaq	-104(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3addERKS3_S6_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -1248(%rbp)
	movsd	%xmm1, -1240(%rbp)
	leaq	-1248(%rbp), %rsi
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE5guardERKS3_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -1232(%rbp)
	movsd	%xmm1, -1224(%rbp)
	movq	-112(%rbp), %rax
	movq	%rax, %rcx
	addq	$16, %rcx
	movq	%rcx, -112(%rbp)
	movq	-1232(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-1224(%rbp), %rcx
	movq	%rcx, 8(%rax)
	leaq	-88(%rbp), %rsi
	leaq	-104(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3subERKS3_S6_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -1280(%rbp)
	movsd	%xmm1, -1272(%rbp)
	leaq	-1280(%rbp), %rsi
	leaq	-72(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE8mul_rootERKS3_S6_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -1264(%rbp)
	movsd	%xmm1, -1256(%rbp)
	movq	-120(%rbp), %rax
	movq	%rax, %rcx
	addq	$16, %rcx
	movq	%rcx, -120(%rbp)
	movq	-1264(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-1256(%rbp), %rcx
	movq	%rcx, 8(%rax)
	movq	-112(%rbp), %rax
	movq	(%rax), %rcx
	movq	%rcx, -88(%rbp)
	movq	8(%rax), %rax
	movq	%rax, -80(%rbp)
	movq	-120(%rbp), %rax
	movq	(%rax), %rcx
	movq	%rcx, -104(%rbp)
	movq	8(%rax), %rax
	movq	%rax, -96(%rbp)
	leaq	-88(%rbp), %rsi
	leaq	-104(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3addERKS3_S6_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -1312(%rbp)
	movsd	%xmm1, -1304(%rbp)
	leaq	-1312(%rbp), %rsi
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE5guardERKS3_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -1296(%rbp)
	movsd	%xmm1, -1288(%rbp)
	movq	-112(%rbp), %rax
	movq	%rax, %rcx
	addq	$16, %rcx
	movq	%rcx, -112(%rbp)
	movq	-1296(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-1288(%rbp), %rcx
	movq	%rcx, 8(%rax)
	leaq	-88(%rbp), %rsi
	leaq	-104(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3subERKS3_S6_
	movq	-1352(%rbp), %rdi               # 8-byte Reload
	movsd	%xmm0, -1344(%rbp)
	movsd	%xmm1, -1336(%rbp)
	leaq	-1344(%rbp), %rsi
	leaq	-72(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE8mul_rootERKS3_S6_
	movsd	%xmm0, -1328(%rbp)
	movsd	%xmm1, -1320(%rbp)
	movq	-120(%rbp), %rax
	movq	%rax, %rcx
	addq	$16, %rcx
	movq	%rcx, -120(%rbp)
	movq	-1328(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-1320(%rbp), %rcx
	movq	%rcx, 8(%rax)
# %bb.47:                               #   in Loop: Header=BB718_45 Depth=1
	movq	-1088(%rbp), %rax
	addq	$4, %rax
	movq	%rax, -1088(%rbp)
	jmp	.LBB718_45
.LBB718_48:
	jmp	.LBB718_49
.LBB718_49:
	jmp	.LBB718_50
.LBB718_50:
	addq	$1360, %rsp                     # imm = 0x550
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end718:
	.size	_ZNK4seal4util10DWTHandlerISt7complexIdES3_dE18transform_from_revEPS3_iPKS3_PKdi, .Lfunc_end718-_ZNK4seal4util10DWTHandlerISt7complexIdES3_dE18transform_from_revEPS3_iPKS3_PKdi
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK4seal4util7PointerISt7complexIdEvE3getEv,"axG",@progbits,_ZNK4seal4util7PointerISt7complexIdEvE3getEv,comdat
	.weak	_ZNK4seal4util7PointerISt7complexIdEvE3getEv # -- Begin function _ZNK4seal4util7PointerISt7complexIdEvE3getEv
	.p2align	4, 0x90
	.type	_ZNK4seal4util7PointerISt7complexIdEvE3getEv,@function
_ZNK4seal4util7PointerISt7complexIdEvE3getEv: # @_ZNK4seal4util7PointerISt7complexIdEvE3getEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end719:
	.size	_ZNK4seal4util7PointerISt7complexIdEvE3getEv, .Lfunc_end719-_ZNK4seal4util7PointerISt7complexIdEvE3getEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal4util16get_power_of_twoEm,"axG",@progbits,_ZN4seal4util16get_power_of_twoEm,comdat
	.weak	_ZN4seal4util16get_power_of_twoEm # -- Begin function _ZN4seal4util16get_power_of_twoEm
	.p2align	4, 0x90
	.type	_ZN4seal4util16get_power_of_twoEm,@function
_ZN4seal4util16get_power_of_twoEm:      # @_ZN4seal4util16get_power_of_twoEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -16(%rbp)
	cmpq	$0, -16(%rbp)
	je	.LBB720_2
# %bb.1:
	movq	-16(%rbp), %rax
	movq	-16(%rbp), %rcx
	subq	$1, %rcx
	andq	%rcx, %rax
	cmpq	$0, %rax
	je	.LBB720_3
.LBB720_2:
	movl	$-1, -4(%rbp)
	jmp	.LBB720_4
.LBB720_3:
	movq	$0, -24(%rbp)
	movq	-16(%rbp), %rax
	bsrq	%rax, %rax
	xorq	$63, %rax
                                        # kill: def $eax killed $eax killed $rax
	movslq	%eax, %rcx
	movl	$63, %eax
	subq	%rcx, %rax
	movq	%rax, -24(%rbp)
	movq	-24(%rbp), %rax
                                        # kill: def $eax killed $eax killed $rax
	movl	%eax, -4(%rbp)
.LBB720_4:
	movl	-4(%rbp), %eax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end720:
	.size	_ZN4seal4util16get_power_of_twoEm, .Lfunc_end720-_ZN4seal4util16get_power_of_twoEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt3maxIdERKT_S2_S2_,"axG",@progbits,_ZSt3maxIdERKT_S2_S2_,comdat
	.weak	_ZSt3maxIdERKT_S2_S2_           # -- Begin function _ZSt3maxIdERKT_S2_S2_
	.p2align	4, 0x90
	.type	_ZSt3maxIdERKT_S2_S2_,@function
_ZSt3maxIdERKT_S2_S2_:                  # @_ZSt3maxIdERKT_S2_S2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	-16(%rbp), %rax
	movsd	(%rax), %xmm1                   # xmm1 = mem[0],zero
	movq	-24(%rbp), %rax
	movsd	(%rax), %xmm0                   # xmm0 = mem[0],zero
	ucomisd	%xmm1, %xmm0
	jbe	.LBB721_2
# %bb.1:
	movq	-24(%rbp), %rax
	movq	%rax, -8(%rbp)
	jmp	.LBB721_3
.LBB721_2:
	movq	-16(%rbp), %rax
	movq	%rax, -8(%rbp)
.LBB721_3:
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end721:
	.size	_ZSt3maxIdERKT_S2_S2_, .Lfunc_end721-_ZSt3maxIdERKT_S2_S2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt7complexIdE4realB5cxx11Ev,"axG",@progbits,_ZNKSt7complexIdE4realB5cxx11Ev,comdat
	.weak	_ZNKSt7complexIdE4realB5cxx11Ev # -- Begin function _ZNKSt7complexIdE4realB5cxx11Ev
	.p2align	4, 0x90
	.type	_ZNKSt7complexIdE4realB5cxx11Ev,@function
_ZNKSt7complexIdE4realB5cxx11Ev:        # @_ZNKSt7complexIdE4realB5cxx11Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movsd	(%rax), %xmm0                   # xmm0 = mem[0],zero
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end722:
	.size	_ZNKSt7complexIdE4realB5cxx11Ev, .Lfunc_end722-_ZNKSt7complexIdE4realB5cxx11Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal9Plaintext6resizeEm,"axG",@progbits,_ZN4seal9Plaintext6resizeEm,comdat
	.weak	_ZN4seal9Plaintext6resizeEm     # -- Begin function _ZN4seal9Plaintext6resizeEm
	.p2align	4, 0x90
	.type	_ZN4seal9Plaintext6resizeEm,@function
_ZN4seal9Plaintext6resizeEm:            # @_ZN4seal9Plaintext6resizeEm
.Lfunc_begin81:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception81
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	%rdi, -40(%rbp)                 # 8-byte Spill
	callq	_ZNK4seal9Plaintext11is_ntt_formEv
	testb	$1, %al
	jne	.LBB723_1
	jmp	.LBB723_4
.LBB723_1:
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rdi
	movq	%rdi, %rax
	movq	%rax, -48(%rbp)                 # 8-byte Spill
.Ltmp1093:
	leaq	.L.str.83(%rip), %rsi
	callq	_ZNSt11logic_errorC1EPKc@PLT
.Ltmp1094:
	jmp	.LBB723_2
.LBB723_2:
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	movq	_ZTISt11logic_error@GOTPCREL(%rip), %rsi
	movq	_ZNSt11logic_errorD1Ev@GOTPCREL(%rip), %rdx
	callq	__cxa_throw@PLT
.LBB723_3:
.Ltmp1095:
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -24(%rbp)
	movl	%eax, -28(%rbp)
	callq	__cxa_free_exception@PLT
	jmp	.LBB723_5
.LBB723_4:
	movq	-40(%rbp), %rdi                 # 8-byte Reload
	addq	$48, %rdi
	movq	-16(%rbp), %rsi
	movl	$1, %edx
	callq	_ZN4seal8DynArrayImE6resizeEmb
	movq	-40(%rbp), %rax                 # 8-byte Reload
	movq	-16(%rbp), %rcx
	movq	%rcx, 32(%rax)
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB723_5:
	.cfi_def_cfa %rbp, 16
	movq	-24(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end723:
	.size	_ZN4seal9Plaintext6resizeEm, .Lfunc_end723-_ZN4seal9Plaintext6resizeEm
	.cfi_endproc
	.section	.gcc_except_table._ZN4seal9Plaintext6resizeEm,"aG",@progbits,_ZN4seal9Plaintext6resizeEm,comdat
	.p2align	2
GCC_except_table723:
.Lexception81:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end81-.Lcst_begin81
.Lcst_begin81:
	.uleb128 .Lfunc_begin81-.Lfunc_begin81  # >> Call Site 1 <<
	.uleb128 .Ltmp1093-.Lfunc_begin81       #   Call between .Lfunc_begin81 and .Ltmp1093
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1093-.Lfunc_begin81       # >> Call Site 2 <<
	.uleb128 .Ltmp1094-.Ltmp1093            #   Call between .Ltmp1093 and .Ltmp1094
	.uleb128 .Ltmp1095-.Lfunc_begin81       #     jumps to .Ltmp1095
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1094-.Lfunc_begin81       # >> Call Site 3 <<
	.uleb128 .Lfunc_end723-.Ltmp1094        #   Call between .Ltmp1094 and .Lfunc_end723
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end81:
	.p2align	2
                                        # -- End function
	.section	.text._ZSt7signbitd,"axG",@progbits,_ZSt7signbitd,comdat
	.weak	_ZSt7signbitd                   # -- Begin function _ZSt7signbitd
	.p2align	4, 0x90
	.type	_ZSt7signbitd,@function
_ZSt7signbitd:                          # @_ZSt7signbitd
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movsd	%xmm0, -8(%rbp)
	movsd	-8(%rbp), %xmm0                 # xmm0 = mem[0],zero
	movq	%xmm0, %rax
	cmpq	$0, %rax
	setl	%al
	andb	$1, %al
	movzbl	%al, %eax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end724:
	.size	_ZSt7signbitd, .Lfunc_end724-_ZSt7signbitd
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal4util15negate_uint_modEmRKNS_7ModulusE,"axG",@progbits,_ZN4seal4util15negate_uint_modEmRKNS_7ModulusE,comdat
	.weak	_ZN4seal4util15negate_uint_modEmRKNS_7ModulusE # -- Begin function _ZN4seal4util15negate_uint_modEmRKNS_7ModulusE
	.p2align	4, 0x90
	.type	_ZN4seal4util15negate_uint_modEmRKNS_7ModulusE,@function
_ZN4seal4util15negate_uint_modEmRKNS_7ModulusE: # @_ZN4seal4util15negate_uint_modEmRKNS_7ModulusE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	cmpq	$0, -8(%rbp)
	setne	%al
	andb	$1, %al
	movzbl	%al, %eax
                                        # kill: def $rax killed $eax
	movq	%rax, -24(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZNK4seal7Modulus5valueEv
	subq	-8(%rbp), %rax
	xorl	%ecx, %ecx
                                        # kill: def $rcx killed $ecx
	subq	-24(%rbp), %rcx
	andq	%rcx, %rax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end725:
	.size	_ZN4seal4util15negate_uint_modEmRKNS_7ModulusE, .Lfunc_end725-_ZN4seal4util15negate_uint_modEmRKNS_7ModulusE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal4util17barrett_reduce_64ImvEEmT_RKNS_7ModulusE,"axG",@progbits,_ZN4seal4util17barrett_reduce_64ImvEEmT_RKNS_7ModulusE,comdat
	.weak	_ZN4seal4util17barrett_reduce_64ImvEEmT_RKNS_7ModulusE # -- Begin function _ZN4seal4util17barrett_reduce_64ImvEEmT_RKNS_7ModulusE
	.p2align	4, 0x90
	.type	_ZN4seal4util17barrett_reduce_64ImvEEmT_RKNS_7ModulusE,@function
_ZN4seal4util17barrett_reduce_64ImvEEmT_RKNS_7ModulusE: # @_ZN4seal4util17barrett_reduce_64ImvEEmT_RKNS_7ModulusE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZNK4seal7Modulus11const_ratioEv
	movq	%rax, %rdi
	callq	_ZNKSt5arrayImLm3EE4dataEv
	movq	%rax, -40(%rbp)
	movq	-8(%rbp), %rdi
	movq	-40(%rbp), %rax
	movq	8(%rax), %rsi
	leaq	-32(%rbp), %rdx
	addq	$8, %rdx
	callq	_ZN4seal4util20multiply_uint64_hw64ImmvEEvT_T0_Py
	movq	-8(%rbp), %rax
	movq	%rax, -56(%rbp)                 # 8-byte Spill
	movq	-24(%rbp), %rax
	movq	%rax, -64(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	callq	_ZNK4seal7Modulus5valueEv
	movq	-64(%rbp), %rcx                 # 8-byte Reload
	movq	%rax, %rdx
	movq	-56(%rbp), %rax                 # 8-byte Reload
	imulq	%rdx, %rcx
	subq	%rcx, %rax
	movq	%rax, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -48(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	callq	_ZNK4seal7Modulus5valueEv
	movq	%rax, %rcx
	movq	-48(%rbp), %rax                 # 8-byte Reload
	cmpq	%rcx, %rax
	jb	.LBB726_2
# %bb.1:
	movq	-32(%rbp), %rax
	movq	%rax, -80(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	callq	_ZNK4seal7Modulus5valueEv
	movq	%rax, %rcx
	movq	-80(%rbp), %rax                 # 8-byte Reload
	subq	%rcx, %rax
	movq	%rax, -72(%rbp)                 # 8-byte Spill
	jmp	.LBB726_3
.LBB726_2:
	movq	-32(%rbp), %rax
	movq	%rax, -72(%rbp)                 # 8-byte Spill
.LBB726_3:
	movq	-72(%rbp), %rax                 # 8-byte Reload
	addq	$80, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end726:
	.size	_ZN4seal4util17barrett_reduce_64ImvEEmT_RKNS_7ModulusE, .Lfunc_end726-_ZN4seal4util17barrett_reduce_64ImvEEmT_RKNS_7ModulusE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIN4seal7ModulusESaIS1_EEixEm,"axG",@progbits,_ZNKSt6vectorIN4seal7ModulusESaIS1_EEixEm,comdat
	.weak	_ZNKSt6vectorIN4seal7ModulusESaIS1_EEixEm # -- Begin function _ZNKSt6vectorIN4seal7ModulusESaIS1_EEixEm
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIN4seal7ModulusESaIS1_EEixEm,@function
_ZNKSt6vectorIN4seal7ModulusESaIS1_EEixEm: # @_ZNKSt6vectorIN4seal7ModulusESaIS1_EEixEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	imulq	$48, -16(%rbp), %rcx
	addq	%rcx, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end727:
	.size	_ZNKSt6vectorIN4seal7ModulusESaIS1_EEixEm, .Lfunc_end727-_ZNKSt6vectorIN4seal7ModulusESaIS1_EEixEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal9PlaintextixEm,"axG",@progbits,_ZN4seal9PlaintextixEm,comdat
	.weak	_ZN4seal9PlaintextixEm          # -- Begin function _ZN4seal9PlaintextixEm
	.p2align	4, 0x90
	.type	_ZN4seal9PlaintextixEm,@function
_ZN4seal9PlaintextixEm:                 # @_ZN4seal9PlaintextixEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	addq	$48, %rdi
	movq	-16(%rbp), %rsi
	callq	_ZN4seal8DynArrayImE2atEm
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end728:
	.size	_ZN4seal9PlaintextixEm, .Lfunc_end728-_ZN4seal9PlaintextixEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal4util18barrett_reduce_128ImvEEmPKT_RKNS_7ModulusE,"axG",@progbits,_ZN4seal4util18barrett_reduce_128ImvEEmPKT_RKNS_7ModulusE,comdat
	.weak	_ZN4seal4util18barrett_reduce_128ImvEEmPKT_RKNS_7ModulusE # -- Begin function _ZN4seal4util18barrett_reduce_128ImvEEmPKT_RKNS_7ModulusE
	.p2align	4, 0x90
	.type	_ZN4seal4util18barrett_reduce_128ImvEEmPKT_RKNS_7ModulusE,@function
_ZN4seal4util18barrett_reduce_128ImvEEmPKT_RKNS_7ModulusE: # @_ZN4seal4util18barrett_reduce_128ImvEEmPKT_RKNS_7ModulusE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$128, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZNK4seal7Modulus11const_ratioEv
	movq	%rax, %rdi
	callq	_ZNKSt5arrayImLm3EE4dataEv
	movq	%rax, -72(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rdi
	movq	-72(%rbp), %rax
	movq	(%rax), %rsi
	leaq	-64(%rbp), %rdx
	callq	_ZN4seal4util20multiply_uint64_hw64ImmvEEvT_T0_Py
	movq	-8(%rbp), %rax
	movq	(%rax), %rdi
	movq	-72(%rbp), %rax
	movq	8(%rax), %rsi
	leaq	-48(%rbp), %rdx
	callq	_ZN4seal4util15multiply_uint64ImmvEEvT_T0_Py
	movq	-40(%rbp), %rax
	movq	%rax, -112(%rbp)                # 8-byte Spill
	movq	-48(%rbp), %rdi
	movq	-64(%rbp), %rsi
	leaq	-24(%rbp), %rdx
	callq	_ZN4seal4util10add_uint64IyyyvEEhT_T0_PT1_
	movb	%al, %cl
	movq	-112(%rbp), %rax                # 8-byte Reload
	movzbl	%cl, %ecx
                                        # kill: def $rcx killed $ecx
	addq	%rcx, %rax
	movq	%rax, -56(%rbp)
	movq	-8(%rbp), %rax
	movq	8(%rax), %rdi
	movq	-72(%rbp), %rax
	movq	(%rax), %rsi
	leaq	-48(%rbp), %rdx
	callq	_ZN4seal4util15multiply_uint64ImmvEEvT_T0_Py
	movq	-40(%rbp), %rax
	movq	%rax, -104(%rbp)                # 8-byte Spill
	movq	-24(%rbp), %rdi
	movq	-48(%rbp), %rsi
	leaq	-24(%rbp), %rdx
	callq	_ZN4seal4util10add_uint64IyyyvEEhT_T0_PT1_
	movb	%al, %cl
	movq	-104(%rbp), %rax                # 8-byte Reload
	movzbl	%cl, %ecx
                                        # kill: def $rcx killed $ecx
	addq	%rcx, %rax
	movq	%rax, -64(%rbp)
	movq	-8(%rbp), %rax
	movq	8(%rax), %rax
	movq	-72(%rbp), %rcx
	imulq	8(%rcx), %rax
	addq	-56(%rbp), %rax
	addq	-64(%rbp), %rax
	movq	%rax, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, -88(%rbp)                 # 8-byte Spill
	movq	-24(%rbp), %rax
	movq	%rax, -96(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	callq	_ZNK4seal7Modulus5valueEv
	movq	-96(%rbp), %rcx                 # 8-byte Reload
	movq	%rax, %rdx
	movq	-88(%rbp), %rax                 # 8-byte Reload
	imulq	%rdx, %rcx
	subq	%rcx, %rax
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rax
	movq	%rax, -80(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	callq	_ZNK4seal7Modulus5valueEv
	movq	%rax, %rcx
	movq	-80(%rbp), %rax                 # 8-byte Reload
	cmpq	%rcx, %rax
	jb	.LBB729_2
# %bb.1:
	movq	-56(%rbp), %rax
	movq	%rax, -128(%rbp)                # 8-byte Spill
	movq	-16(%rbp), %rdi
	callq	_ZNK4seal7Modulus5valueEv
	movq	%rax, %rcx
	movq	-128(%rbp), %rax                # 8-byte Reload
	subq	%rcx, %rax
	movq	%rax, -120(%rbp)                # 8-byte Spill
	jmp	.LBB729_3
.LBB729_2:
	movq	-56(%rbp), %rax
	movq	%rax, -120(%rbp)                # 8-byte Spill
.LBB729_3:
	movq	-120(%rbp), %rax                # 8-byte Reload
	addq	$128, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end729:
	.size	_ZN4seal4util18barrett_reduce_128ImvEEmPKT_RKNS_7ModulusE, .Lfunc_end729-_ZN4seal4util18barrett_reduce_128ImvEEmPKT_RKNS_7ModulusE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal4util13allocate_uintEmRNS0_10MemoryPoolE,"axG",@progbits,_ZN4seal4util13allocate_uintEmRNS0_10MemoryPoolE,comdat
	.weak	_ZN4seal4util13allocate_uintEmRNS0_10MemoryPoolE # -- Begin function _ZN4seal4util13allocate_uintEmRNS0_10MemoryPoolE
	.p2align	4, 0x90
	.type	_ZN4seal4util13allocate_uintEmRNS0_10MemoryPoolE,@function
_ZN4seal4util13allocate_uintEmRNS0_10MemoryPoolE: # @_ZN4seal4util13allocate_uintEmRNS0_10MemoryPoolE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, %rax
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	movq	%rdi, %rax
	movq	%rax, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZN4seal4util8allocateImJEvEEDamRNS0_10MemoryPoolEDpOT0_
	movq	-32(%rbp), %rax                 # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end730:
	.size	_ZN4seal4util13allocate_uintEmRNS0_10MemoryPoolE, .Lfunc_end730-_ZN4seal4util13allocate_uintEmRNS0_10MemoryPoolE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal4util13set_zero_uintEmPm,"axG",@progbits,_ZN4seal4util13set_zero_uintEmPm,comdat
	.weak	_ZN4seal4util13set_zero_uintEmPm # -- Begin function _ZN4seal4util13set_zero_uintEmPm
	.p2align	4, 0x90
	.type	_ZN4seal4util13set_zero_uintEmPm,@function
_ZN4seal4util13set_zero_uintEmPm:       # @_ZN4seal4util13set_zero_uintEmPm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-16(%rbp), %rdi
	movq	-8(%rbp), %rsi
	movq	$0, -24(%rbp)
	leaq	-24(%rbp), %rdx
	callq	_ZSt6fill_nIPmmmET_S1_T0_RKT1_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end731:
	.size	_ZN4seal4util13set_zero_uintEmPm, .Lfunc_end731-_ZN4seal4util13set_zero_uintEmPm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK4seal11SEALContext11ContextData8rns_toolEv,"axG",@progbits,_ZNK4seal11SEALContext11ContextData8rns_toolEv,comdat
	.weak	_ZNK4seal11SEALContext11ContextData8rns_toolEv # -- Begin function _ZNK4seal11SEALContext11ContextData8rns_toolEv
	.p2align	4, 0x90
	.type	_ZNK4seal11SEALContext11ContextData8rns_toolEv,@function
_ZNK4seal11SEALContext11ContextData8rns_toolEv: # @_ZNK4seal11SEALContext11ContextData8rns_toolEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	addq	$184, %rdi
	callq	_ZNK4seal4util7PointerINS0_7RNSToolEvE3getEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end732:
	.size	_ZNK4seal11SEALContext11ContextData8rns_toolEv, .Lfunc_end732-_ZNK4seal11SEALContext11ContextData8rns_toolEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK4seal4util7RNSTool6base_qEv,"axG",@progbits,_ZNK4seal4util7RNSTool6base_qEv,comdat
	.weak	_ZNK4seal4util7RNSTool6base_qEv # -- Begin function _ZNK4seal4util7RNSTool6base_qEv
	.p2align	4, 0x90
	.type	_ZNK4seal4util7RNSTool6base_qEv,@function
_ZNK4seal4util7RNSTool6base_qEv:        # @_ZNK4seal4util7RNSTool6base_qEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	addq	$24, %rdi
	callq	_ZNK4seal4util7PointerINS0_7RNSBaseEvE3getEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end733:
	.size	_ZNK4seal4util7RNSTool6base_qEv, .Lfunc_end733-_ZNK4seal4util7RNSTool6base_qEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal4util21ntt_negacyclic_harveyENS0_7PtrIterIPmEERKNS0_9NTTTablesE,"axG",@progbits,_ZN4seal4util21ntt_negacyclic_harveyENS0_7PtrIterIPmEERKNS0_9NTTTablesE,comdat
	.weak	_ZN4seal4util21ntt_negacyclic_harveyENS0_7PtrIterIPmEERKNS0_9NTTTablesE # -- Begin function _ZN4seal4util21ntt_negacyclic_harveyENS0_7PtrIterIPmEERKNS0_9NTTTablesE
	.p2align	4, 0x90
	.type	_ZN4seal4util21ntt_negacyclic_harveyENS0_7PtrIterIPmEERKNS0_9NTTTablesE,@function
_ZN4seal4util21ntt_negacyclic_harveyENS0_7PtrIterIPmEERKNS0_9NTTTablesE: # @_ZN4seal4util21ntt_negacyclic_harveyENS0_7PtrIterIPmEERKNS0_9NTTTablesE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -24(%rbp)
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdi
	callq	_ZN4seal4util26ntt_negacyclic_harvey_lazyENS0_7PtrIterIPmEERKNS0_9NTTTablesE@PLT
	movq	-16(%rbp), %rdi
	callq	_ZNK4seal4util9NTTTables7modulusEv
	movq	%rax, %rdi
	callq	_ZNK4seal7Modulus5valueEv
	movq	%rax, -32(%rbp)
	movq	-32(%rbp), %rax
	shlq	$1, %rax
	movq	%rax, -40(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZNK4seal4util9NTTTables17coeff_count_powerEv
	movl	%eax, %eax
	movl	%eax, %ecx
	movl	$1, %eax
                                        # kill: def $cl killed $rcx
	shlq	%cl, %rax
	movq	%rax, -48(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-48(%rbp), %rsi
	leaq	-40(%rbp), %rax
	movq	%rax, -72(%rbp)
	leaq	-32(%rbp), %rax
	movq	%rax, -64(%rbp)
	movq	-56(%rbp), %rdi
	movq	-72(%rbp), %rdx
	movq	-64(%rbp), %rcx
	callq	_ZSt10for_each_nIN4seal4util7PtrIterIPmEEmZNS1_21ntt_negacyclic_harveyES4_RKNS1_9NTTTablesEEUlRT_E_ES8_S8_T0_T1_
	movq	%rax, -80(%rbp)
	addq	$80, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end734:
	.size	_ZN4seal4util21ntt_negacyclic_harveyENS0_7PtrIterIPmEERKNS0_9NTTTablesE, .Lfunc_end734-_ZN4seal4util21ntt_negacyclic_harveyENS0_7PtrIterIPmEERKNS0_9NTTTablesE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal9Plaintext4dataEm,"axG",@progbits,_ZN4seal9Plaintext4dataEm,comdat
	.weak	_ZN4seal9Plaintext4dataEm       # -- Begin function _ZN4seal9Plaintext4dataEm
	.p2align	4, 0x90
	.type	_ZN4seal9Plaintext4dataEm,@function
_ZN4seal9Plaintext4dataEm:              # @_ZN4seal9Plaintext4dataEm
.Lfunc_begin82:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception82
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -48(%rbp)                 # 8-byte Spill
	cmpq	$0, 32(%rax)
	jne	.LBB735_2
# %bb.1:
	movq	$0, -8(%rbp)
	jmp	.LBB735_7
.LBB735_2:
	movq	-48(%rbp), %rcx                 # 8-byte Reload
	movq	-24(%rbp), %rax
	cmpq	32(%rcx), %rax
	jb	.LBB735_6
# %bb.3:
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rdi
	movq	%rdi, %rax
	movq	%rax, -56(%rbp)                 # 8-byte Spill
.Ltmp1096:
	leaq	.L.str.85(%rip), %rsi
	callq	_ZNSt12out_of_rangeC1EPKc@PLT
.Ltmp1097:
	jmp	.LBB735_4
.LBB735_4:
	movq	-56(%rbp), %rdi                 # 8-byte Reload
	movq	_ZTISt12out_of_range@GOTPCREL(%rip), %rsi
	movq	_ZNSt12out_of_rangeD1Ev@GOTPCREL(%rip), %rdx
	callq	__cxa_throw@PLT
.LBB735_5:
.Ltmp1098:
	movq	-56(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -32(%rbp)
	movl	%eax, -36(%rbp)
	callq	__cxa_free_exception@PLT
	jmp	.LBB735_8
.LBB735_6:
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	addq	$48, %rdi
	callq	_ZN4seal8DynArrayImE5beginEv
	movq	-24(%rbp), %rcx
	shlq	$3, %rcx
	addq	%rcx, %rax
	movq	%rax, -8(%rbp)
.LBB735_7:
	movq	-8(%rbp), %rax
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB735_8:
	.cfi_def_cfa %rbp, 16
	movq	-32(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end735:
	.size	_ZN4seal9Plaintext4dataEm, .Lfunc_end735-_ZN4seal9Plaintext4dataEm
	.cfi_endproc
	.section	.gcc_except_table._ZN4seal9Plaintext4dataEm,"aG",@progbits,_ZN4seal9Plaintext4dataEm,comdat
	.p2align	2
GCC_except_table735:
.Lexception82:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end82-.Lcst_begin82
.Lcst_begin82:
	.uleb128 .Lfunc_begin82-.Lfunc_begin82  # >> Call Site 1 <<
	.uleb128 .Ltmp1096-.Lfunc_begin82       #   Call between .Lfunc_begin82 and .Ltmp1096
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1096-.Lfunc_begin82       # >> Call Site 2 <<
	.uleb128 .Ltmp1097-.Ltmp1096            #   Call between .Ltmp1096 and .Ltmp1097
	.uleb128 .Ltmp1098-.Lfunc_begin82       #     jumps to .Ltmp1098
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1097-.Lfunc_begin82       # >> Call Site 3 <<
	.uleb128 .Lfunc_end735-.Ltmp1097        #   Call between .Ltmp1097 and .Lfunc_end735
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end82:
	.p2align	2
                                        # -- End function
	.section	.text._ZN4seal4util7PtrIterIPmEC2ImEEPT_,"axG",@progbits,_ZN4seal4util7PtrIterIPmEC2ImEEPT_,comdat
	.weak	_ZN4seal4util7PtrIterIPmEC2ImEEPT_ # -- Begin function _ZN4seal4util7PtrIterIPmEC2ImEEPT_
	.p2align	4, 0x90
	.type	_ZN4seal4util7PtrIterIPmEC2ImEEPT_,@function
_ZN4seal4util7PtrIterIPmEC2ImEEPT_:     # @_ZN4seal4util7PtrIterIPmEC2ImEEPT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	%rcx, (%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end736:
	.size	_ZN4seal4util7PtrIterIPmEC2ImEEPT_, .Lfunc_end736-_ZN4seal4util7PtrIterIPmEC2ImEEPT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal4util7fits_inImmvvEEbT0_,"axG",@progbits,_ZN4seal4util7fits_inImmvvEEbT0_,comdat
	.weak	_ZN4seal4util7fits_inImmvvEEbT0_ # -- Begin function _ZN4seal4util7fits_inImmvvEEbT0_
	.p2align	4, 0x90
	.type	_ZN4seal4util7fits_inImmvvEEbT0_,@function
_ZN4seal4util7fits_inImmvvEEbT0_:       # @_ZN4seal4util7fits_inImmvvEEbT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movb	$0, -9(%rbp)
	movb	$1, -9(%rbp)
	cmpq	$0, -8(%rbp)
	jb	.LBB737_2
# %bb.1:
	movq	-8(%rbp), %rax
	movq	%rax, -24(%rbp)                 # 8-byte Spill
	callq	_ZNSt14numeric_limitsImE3maxEv
	movq	%rax, %rcx
	movq	-24(%rbp), %rax                 # 8-byte Reload
	cmpq	%rcx, %rax
	setbe	%al
	andb	$1, %al
	movb	%al, -9(%rbp)
	jmp	.LBB737_3
.LBB737_2:
	movq	-8(%rbp), %rax
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	callq	_ZNSt14numeric_limitsImE3minEv
	movq	%rax, %rcx
	movq	-32(%rbp), %rax                 # 8-byte Reload
	cmpq	%rcx, %rax
	setge	%al
	andb	$1, %al
	movb	%al, -9(%rbp)
.LBB737_3:
	movb	-9(%rbp), %al
	andb	$1, %al
	movzbl	%al, %eax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end737:
	.size	_ZN4seal4util7fits_inImmvvEEbT0_, .Lfunc_end737-_ZN4seal4util7fits_inImmvvEEbT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt7forwardIRmEOT_RNSt16remove_referenceIS1_E4typeE,"axG",@progbits,_ZSt7forwardIRmEOT_RNSt16remove_referenceIS1_E4typeE,comdat
	.weak	_ZSt7forwardIRmEOT_RNSt16remove_referenceIS1_E4typeE # -- Begin function _ZSt7forwardIRmEOT_RNSt16remove_referenceIS1_E4typeE
	.p2align	4, 0x90
	.type	_ZSt7forwardIRmEOT_RNSt16remove_referenceIS1_E4typeE,@function
_ZSt7forwardIRmEOT_RNSt16remove_referenceIS1_E4typeE: # @_ZSt7forwardIRmEOT_RNSt16remove_referenceIS1_E4typeE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end738:
	.size	_ZSt7forwardIRmEOT_RNSt16remove_referenceIS1_E4typeE, .Lfunc_end738-_ZSt7forwardIRmEOT_RNSt16remove_referenceIS1_E4typeE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt14numeric_limitsImE3minEv,"axG",@progbits,_ZNSt14numeric_limitsImE3minEv,comdat
	.weak	_ZNSt14numeric_limitsImE3minEv  # -- Begin function _ZNSt14numeric_limitsImE3minEv
	.p2align	4, 0x90
	.type	_ZNSt14numeric_limitsImE3minEv,@function
_ZNSt14numeric_limitsImE3minEv:         # @_ZNSt14numeric_limitsImE3minEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	xorl	%eax, %eax
                                        # kill: def $rax killed $eax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end739:
	.size	_ZNSt14numeric_limitsImE3minEv, .Lfunc_end739-_ZNSt14numeric_limitsImE3minEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK4seal4util7PointerINS0_9NTTTablesEvE3getEv,"axG",@progbits,_ZNK4seal4util7PointerINS0_9NTTTablesEvE3getEv,comdat
	.weak	_ZNK4seal4util7PointerINS0_9NTTTablesEvE3getEv # -- Begin function _ZNK4seal4util7PointerINS0_9NTTTablesEvE3getEv
	.p2align	4, 0x90
	.type	_ZNK4seal4util7PointerINS0_9NTTTablesEvE3getEv,@function
_ZNK4seal4util7PointerINS0_9NTTTablesEvE3getEv: # @_ZNK4seal4util7PointerINS0_9NTTTablesEvE3getEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end740:
	.size	_ZNK4seal4util7PointerINS0_9NTTTablesEvE3getEv, .Lfunc_end740-_ZNK4seal4util7PointerINS0_9NTTTablesEvE3getEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE,"axG",@progbits,_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE,comdat
	.weak	_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE # -- Begin function _ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE
	.p2align	4, 0x90
	.type	_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE,@function
_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE: # @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end741:
	.size	_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE, .Lfunc_end741-_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal4util7PointerISt7complexIdEvEC2IJiEEEONS1_ISt4bytevEEDpOT_,"axG",@progbits,_ZN4seal4util7PointerISt7complexIdEvEC2IJiEEEONS1_ISt4bytevEEDpOT_,comdat
	.weak	_ZN4seal4util7PointerISt7complexIdEvEC2IJiEEEONS1_ISt4bytevEEDpOT_ # -- Begin function _ZN4seal4util7PointerISt7complexIdEvEC2IJiEEEONS1_ISt4bytevEEDpOT_
	.p2align	4, 0x90
	.type	_ZN4seal4util7PointerISt7complexIdEvEC2IJiEEEONS1_ISt4bytevEEDpOT_,@function
_ZN4seal4util7PointerISt7complexIdEvEC2IJiEEEONS1_ISt4bytevEEDpOT_: # @_ZN4seal4util7PointerISt7complexIdEvEC2IJiEEEONS1_ISt4bytevEEDpOT_
.Lfunc_begin83:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception83
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -64(%rbp)                 # 8-byte Spill
	movq	$0, (%rax)
	movq	$0, 8(%rax)
	movq	$0, 16(%rax)
	movb	$0, 24(%rax)
	movq	-16(%rbp), %rax
	cmpq	$0, 8(%rax)
	jne	.LBB742_5
# %bb.1:
	movq	-16(%rbp), %rax
	cmpq	$0, (%rax)
	je	.LBB742_5
# %bb.2:
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rdi
	movq	%rdi, %rax
	movq	%rax, -72(%rbp)                 # 8-byte Spill
.Ltmp1099:
	leaq	.L.str.58(%rip), %rsi
	callq	_ZNSt16invalid_argumentC1EPKc@PLT
.Ltmp1100:
	jmp	.LBB742_3
.LBB742_3:
	movq	-72(%rbp), %rdi                 # 8-byte Reload
	movq	_ZTISt16invalid_argument@GOTPCREL(%rip), %rsi
	movq	_ZNSt16invalid_argumentD1Ev@GOTPCREL(%rip), %rdx
	callq	__cxa_throw@PLT
.LBB742_4:
.Ltmp1101:
	movq	-72(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -32(%rbp)
	movl	%eax, -36(%rbp)
	callq	__cxa_free_exception@PLT
	jmp	.LBB742_12
.LBB742_5:
	movq	-64(%rbp), %rax                 # 8-byte Reload
	movq	-16(%rbp), %rcx
	movq	8(%rcx), %rcx
	movq	%rcx, 8(%rax)
	movq	-16(%rbp), %rcx
	movq	16(%rcx), %rcx
	movq	%rcx, 16(%rax)
	cmpq	$0, 8(%rax)
	je	.LBB742_11
# %bb.6:
	movq	-64(%rbp), %rax                 # 8-byte Reload
	movq	16(%rax), %rdi
	callq	_ZN4seal4util14MemoryPoolItem4dataEv
	movq	%rax, %rcx
	movq	-64(%rbp), %rax                 # 8-byte Reload
	movq	%rcx, (%rax)
	movq	8(%rax), %rdi
	movq	(%rdi), %rax
	callq	*16(%rax)
	movq	%rax, %rcx
	movq	-64(%rbp), %rax                 # 8-byte Reload
	shrq	$4, %rcx
	movq	%rcx, -48(%rbp)
	movq	(%rax), %rax
	movq	%rax, -56(%rbp)
.LBB742_7:                              # =>This Inner Loop Header: Depth=1
	movq	-48(%rbp), %rax
	movq	%rax, %rcx
	addq	$-1, %rcx
	movq	%rcx, -48(%rbp)
	cmpq	$0, %rax
	je	.LBB742_10
# %bb.8:                                #   in Loop: Header=BB742_7 Depth=1
	movq	-56(%rbp), %rax
	movq	%rax, -80(%rbp)                 # 8-byte Spill
	movq	-24(%rbp), %rdi
	callq	_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE
	movq	-80(%rbp), %rdi                 # 8-byte Reload
	cvtsi2sdl	(%rax), %xmm0
	xorps	%xmm1, %xmm1
	callq	_ZNSt7complexIdEC2Edd
# %bb.9:                                #   in Loop: Header=BB742_7 Depth=1
	movq	-56(%rbp), %rax
	addq	$16, %rax
	movq	%rax, -56(%rbp)
	jmp	.LBB742_7
.LBB742_10:
	jmp	.LBB742_11
.LBB742_11:
	movq	-64(%rbp), %rax                 # 8-byte Reload
	movq	-16(%rbp), %rcx
	movb	24(%rcx), %cl
	andb	$1, %cl
	movb	%cl, 24(%rax)
	movq	-16(%rbp), %rax
	movq	$0, (%rax)
	movq	-16(%rbp), %rax
	movq	$0, 8(%rax)
	movq	-16(%rbp), %rax
	movq	$0, 16(%rax)
	movq	-16(%rbp), %rax
	movb	$0, 24(%rax)
	addq	$80, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB742_12:
	.cfi_def_cfa %rbp, 16
	movq	-32(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end742:
	.size	_ZN4seal4util7PointerISt7complexIdEvEC2IJiEEEONS1_ISt4bytevEEDpOT_, .Lfunc_end742-_ZN4seal4util7PointerISt7complexIdEvEC2IJiEEEONS1_ISt4bytevEEDpOT_
	.cfi_endproc
	.section	.gcc_except_table._ZN4seal4util7PointerISt7complexIdEvEC2IJiEEEONS1_ISt4bytevEEDpOT_,"aG",@progbits,_ZN4seal4util7PointerISt7complexIdEvEC2IJiEEEONS1_ISt4bytevEEDpOT_,comdat
	.p2align	2
GCC_except_table742:
.Lexception83:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end83-.Lcst_begin83
.Lcst_begin83:
	.uleb128 .Lfunc_begin83-.Lfunc_begin83  # >> Call Site 1 <<
	.uleb128 .Ltmp1099-.Lfunc_begin83       #   Call between .Lfunc_begin83 and .Ltmp1099
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1099-.Lfunc_begin83       # >> Call Site 2 <<
	.uleb128 .Ltmp1100-.Ltmp1099            #   Call between .Ltmp1099 and .Ltmp1100
	.uleb128 .Ltmp1101-.Lfunc_begin83       #     jumps to .Ltmp1101
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1100-.Lfunc_begin83       # >> Call Site 3 <<
	.uleb128 .Lfunc_end742-.Ltmp1100        #   Call between .Ltmp1100 and .Lfunc_end742
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end83:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt7complexIdEC2Edd,"axG",@progbits,_ZNSt7complexIdEC2Edd,comdat
	.weak	_ZNSt7complexIdEC2Edd           # -- Begin function _ZNSt7complexIdEC2Edd
	.p2align	4, 0x90
	.type	_ZNSt7complexIdEC2Edd,@function
_ZNSt7complexIdEC2Edd:                  # @_ZNSt7complexIdEC2Edd
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movsd	%xmm0, -16(%rbp)
	movsd	%xmm1, -24(%rbp)
	movq	-8(%rbp), %rax
	movsd	-16(%rbp), %xmm1                # xmm1 = mem[0],zero
	movsd	-24(%rbp), %xmm0                # xmm0 = mem[0],zero
	movsd	%xmm1, (%rax)
	movsd	%xmm0, 8(%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end743:
	.size	_ZNSt7complexIdEC2Edd, .Lfunc_end743-_ZNSt7complexIdEC2Edd
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK4seal4util10ArithmeticISt7complexIdES3_dE5guardERKS3_,"axG",@progbits,_ZNK4seal4util10ArithmeticISt7complexIdES3_dE5guardERKS3_,comdat
	.weak	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE5guardERKS3_ # -- Begin function _ZNK4seal4util10ArithmeticISt7complexIdES3_dE5guardERKS3_
	.p2align	4, 0x90
	.type	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE5guardERKS3_,@function
_ZNK4seal4util10ArithmeticISt7complexIdES3_dE5guardERKS3_: # @_ZNK4seal4util10ArithmeticISt7complexIdES3_dE5guardERKS3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rax
	movups	(%rax), %xmm0
	movaps	%xmm0, -16(%rbp)
	movsd	-16(%rbp), %xmm0                # xmm0 = mem[0],zero
	movsd	-8(%rbp), %xmm1                 # xmm1 = mem[0],zero
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end744:
	.size	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE5guardERKS3_, .Lfunc_end744-_ZNK4seal4util10ArithmeticISt7complexIdES3_dE5guardERKS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK4seal4util10ArithmeticISt7complexIdES3_dE3addERKS3_S6_,"axG",@progbits,_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3addERKS3_S6_,comdat
	.weak	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3addERKS3_S6_ # -- Begin function _ZNK4seal4util10ArithmeticISt7complexIdES3_dE3addERKS3_S6_
	.p2align	4, 0x90
	.type	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3addERKS3_S6_,@function
_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3addERKS3_S6_: # @_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3addERKS3_S6_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	%rdx, -40(%rbp)
	movq	-32(%rbp), %rdi
	movq	-40(%rbp), %rsi
	callq	_ZStplIdESt7complexIT_ERKS2_S4_
	movsd	%xmm0, -16(%rbp)
	movsd	%xmm1, -8(%rbp)
	movsd	-16(%rbp), %xmm0                # xmm0 = mem[0],zero
	movsd	-8(%rbp), %xmm1                 # xmm1 = mem[0],zero
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end745:
	.size	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3addERKS3_S6_, .Lfunc_end745-_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3addERKS3_S6_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK4seal4util10ArithmeticISt7complexIdES3_dE8mul_rootERKS3_S6_,"axG",@progbits,_ZNK4seal4util10ArithmeticISt7complexIdES3_dE8mul_rootERKS3_S6_,comdat
	.weak	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE8mul_rootERKS3_S6_ # -- Begin function _ZNK4seal4util10ArithmeticISt7complexIdES3_dE8mul_rootERKS3_S6_
	.p2align	4, 0x90
	.type	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE8mul_rootERKS3_S6_,@function
_ZNK4seal4util10ArithmeticISt7complexIdES3_dE8mul_rootERKS3_S6_: # @_ZNK4seal4util10ArithmeticISt7complexIdES3_dE8mul_rootERKS3_S6_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	%rdx, -40(%rbp)
	movq	-32(%rbp), %rdi
	movq	-40(%rbp), %rsi
	callq	_ZStmlIdESt7complexIT_ERKS2_S4_
	movsd	%xmm0, -16(%rbp)
	movsd	%xmm1, -8(%rbp)
	movsd	-16(%rbp), %xmm0                # xmm0 = mem[0],zero
	movsd	-8(%rbp), %xmm1                 # xmm1 = mem[0],zero
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end746:
	.size	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE8mul_rootERKS3_S6_, .Lfunc_end746-_ZNK4seal4util10ArithmeticISt7complexIdES3_dE8mul_rootERKS3_S6_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK4seal4util10ArithmeticISt7complexIdES3_dE3subERKS3_S6_,"axG",@progbits,_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3subERKS3_S6_,comdat
	.weak	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3subERKS3_S6_ # -- Begin function _ZNK4seal4util10ArithmeticISt7complexIdES3_dE3subERKS3_S6_
	.p2align	4, 0x90
	.type	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3subERKS3_S6_,@function
_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3subERKS3_S6_: # @_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3subERKS3_S6_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	%rdx, -40(%rbp)
	movq	-32(%rbp), %rdi
	movq	-40(%rbp), %rsi
	callq	_ZStmiIdESt7complexIT_ERKS2_S4_
	movsd	%xmm0, -16(%rbp)
	movsd	%xmm1, -8(%rbp)
	movsd	-16(%rbp), %xmm0                # xmm0 = mem[0],zero
	movsd	-8(%rbp), %xmm1                 # xmm1 = mem[0],zero
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end747:
	.size	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3subERKS3_S6_, .Lfunc_end747-_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3subERKS3_S6_
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3                               # -- Begin function _ZNK4seal4util10ArithmeticISt7complexIdES3_dE15mul_root_scalarERKS3_RKdi
.LCPI748_0:
	.quad	0x4000000000000000              # double 2
	.section	.text._ZNK4seal4util10ArithmeticISt7complexIdES3_dE15mul_root_scalarERKS3_RKdi,"axG",@progbits,_ZNK4seal4util10ArithmeticISt7complexIdES3_dE15mul_root_scalarERKS3_RKdi,comdat
	.weak	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE15mul_root_scalarERKS3_RKdi
	.p2align	4, 0x90
	.type	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE15mul_root_scalarERKS3_RKdi,@function
_ZNK4seal4util10ArithmeticISt7complexIdES3_dE15mul_root_scalarERKS3_RKdi: # @_ZNK4seal4util10ArithmeticISt7complexIdES3_dE15mul_root_scalarERKS3_RKdi
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	%rdx, -40(%rbp)
	movl	%ecx, -44(%rbp)
	cmpl	$0, -44(%rbp)
	jne	.LBB748_2
# %bb.1:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.81(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
	movq	%rax, %rdi
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
	movq	-32(%rbp), %rdi
	movq	-40(%rbp), %rsi
	callq	_ZStmlIdESt7complexIT_ERKS2_RKS1_
	movsd	%xmm0, -16(%rbp)
	movsd	%xmm1, -8(%rbp)
	jmp	.LBB748_3
.LBB748_2:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.82(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
	movq	%rax, %rdi
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
	movq	-32(%rbp), %rdi
	movq	-40(%rbp), %rsi
	callq	_ZStmlIdESt7complexIT_ERKS2_RKS1_
	movsd	%xmm0, -64(%rbp)
	movsd	%xmm1, -56(%rbp)
	movsd	.LCPI748_0(%rip), %xmm0         # xmm0 = mem[0],zero
	movsd	%xmm0, -72(%rbp)
	leaq	-64(%rbp), %rdi
	leaq	-72(%rbp), %rsi
	callq	_ZStmlIdESt7complexIT_ERKS2_RKS1_
	movsd	%xmm0, -16(%rbp)
	movsd	%xmm1, -8(%rbp)
.LBB748_3:
	movsd	-16(%rbp), %xmm0                # xmm0 = mem[0],zero
	movsd	-8(%rbp), %xmm1                 # xmm1 = mem[0],zero
	addq	$80, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end748:
	.size	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE15mul_root_scalarERKS3_RKdi, .Lfunc_end748-_ZNK4seal4util10ArithmeticISt7complexIdES3_dE15mul_root_scalarERKS3_RKdi
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK4seal4util10ArithmeticISt7complexIdES3_dE10mul_scalarERKS3_RKd,"axG",@progbits,_ZNK4seal4util10ArithmeticISt7complexIdES3_dE10mul_scalarERKS3_RKd,comdat
	.weak	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE10mul_scalarERKS3_RKd # -- Begin function _ZNK4seal4util10ArithmeticISt7complexIdES3_dE10mul_scalarERKS3_RKd
	.p2align	4, 0x90
	.type	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE10mul_scalarERKS3_RKd,@function
_ZNK4seal4util10ArithmeticISt7complexIdES3_dE10mul_scalarERKS3_RKd: # @_ZNK4seal4util10ArithmeticISt7complexIdES3_dE10mul_scalarERKS3_RKd
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	%rdx, -40(%rbp)
	movq	-32(%rbp), %rdi
	movq	-40(%rbp), %rsi
	callq	_ZStmlIdESt7complexIT_ERKS2_RKS1_
	movsd	%xmm0, -16(%rbp)
	movsd	%xmm1, -8(%rbp)
	movsd	-16(%rbp), %xmm0                # xmm0 = mem[0],zero
	movsd	-8(%rbp), %xmm1                 # xmm1 = mem[0],zero
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end749:
	.size	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE10mul_scalarERKS3_RKd, .Lfunc_end749-_ZNK4seal4util10ArithmeticISt7complexIdES3_dE10mul_scalarERKS3_RKd
	.cfi_endproc
                                        # -- End function
	.section	.text._ZStplIdESt7complexIT_ERKS2_S4_,"axG",@progbits,_ZStplIdESt7complexIT_ERKS2_S4_,comdat
	.weak	_ZStplIdESt7complexIT_ERKS2_S4_ # -- Begin function _ZStplIdESt7complexIT_ERKS2_S4_
	.p2align	4, 0x90
	.type	_ZStplIdESt7complexIT_ERKS2_S4_,@function
_ZStplIdESt7complexIT_ERKS2_S4_:        # @_ZStplIdESt7complexIT_ERKS2_S4_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movups	(%rax), %xmm0
	movaps	%xmm0, -16(%rbp)
	movq	-32(%rbp), %rsi
	leaq	-16(%rbp), %rdi
	callq	_ZNSt7complexIdEpLIdEERS0_RKS_IT_E
	movsd	-16(%rbp), %xmm0                # xmm0 = mem[0],zero
	movsd	-8(%rbp), %xmm1                 # xmm1 = mem[0],zero
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end750:
	.size	_ZStplIdESt7complexIT_ERKS2_S4_, .Lfunc_end750-_ZStplIdESt7complexIT_ERKS2_S4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt7complexIdEpLIdEERS0_RKS_IT_E,"axG",@progbits,_ZNSt7complexIdEpLIdEERS0_RKS_IT_E,comdat
	.weak	_ZNSt7complexIdEpLIdEERS0_RKS_IT_E # -- Begin function _ZNSt7complexIdEpLIdEERS0_RKS_IT_E
	.p2align	4, 0x90
	.type	_ZNSt7complexIdEpLIdEERS0_RKS_IT_E,@function
_ZNSt7complexIdEpLIdEERS0_RKS_IT_E:     # @_ZNSt7complexIdEpLIdEERS0_RKS_IT_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -24(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	callq	_ZNKSt7complexIdE5__repEv
	movq	-24(%rbp), %rax                 # 8-byte Reload
	movaps	%xmm0, %xmm3
	movaps	%xmm1, %xmm2
	movsd	(%rax), %xmm1                   # xmm1 = mem[0],zero
	movsd	8(%rax), %xmm0                  # xmm0 = mem[0],zero
	addsd	%xmm3, %xmm1
	addsd	%xmm2, %xmm0
	movsd	%xmm1, (%rax)
	movsd	%xmm0, 8(%rax)
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end751:
	.size	_ZNSt7complexIdEpLIdEERS0_RKS_IT_E, .Lfunc_end751-_ZNSt7complexIdEpLIdEERS0_RKS_IT_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt7complexIdE5__repEv,"axG",@progbits,_ZNKSt7complexIdE5__repEv,comdat
	.weak	_ZNKSt7complexIdE5__repEv       # -- Begin function _ZNKSt7complexIdE5__repEv
	.p2align	4, 0x90
	.type	_ZNKSt7complexIdE5__repEv,@function
_ZNKSt7complexIdE5__repEv:              # @_ZNKSt7complexIdE5__repEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	movsd	(%rax), %xmm1                   # xmm1 = mem[0],zero
	movsd	8(%rax), %xmm0                  # xmm0 = mem[0],zero
	movsd	%xmm1, -16(%rbp)
	movsd	%xmm0, -8(%rbp)
	movsd	-16(%rbp), %xmm0                # xmm0 = mem[0],zero
	movsd	-8(%rbp), %xmm1                 # xmm1 = mem[0],zero
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end752:
	.size	_ZNKSt7complexIdE5__repEv, .Lfunc_end752-_ZNKSt7complexIdE5__repEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZStmlIdESt7complexIT_ERKS2_S4_,"axG",@progbits,_ZStmlIdESt7complexIT_ERKS2_S4_,comdat
	.weak	_ZStmlIdESt7complexIT_ERKS2_S4_ # -- Begin function _ZStmlIdESt7complexIT_ERKS2_S4_
	.p2align	4, 0x90
	.type	_ZStmlIdESt7complexIT_ERKS2_S4_,@function
_ZStmlIdESt7complexIT_ERKS2_S4_:        # @_ZStmlIdESt7complexIT_ERKS2_S4_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movups	(%rax), %xmm0
	movaps	%xmm0, -16(%rbp)
	movq	-32(%rbp), %rsi
	leaq	-16(%rbp), %rdi
	callq	_ZNSt7complexIdEmLIdEERS0_RKS_IT_E
	movsd	-16(%rbp), %xmm0                # xmm0 = mem[0],zero
	movsd	-8(%rbp), %xmm1                 # xmm1 = mem[0],zero
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end753:
	.size	_ZStmlIdESt7complexIT_ERKS2_S4_, .Lfunc_end753-_ZStmlIdESt7complexIT_ERKS2_S4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt7complexIdEmLIdEERS0_RKS_IT_E,"axG",@progbits,_ZNSt7complexIdEmLIdEERS0_RKS_IT_E,comdat
	.weak	_ZNSt7complexIdEmLIdEERS0_RKS_IT_E # -- Begin function _ZNSt7complexIdEmLIdEERS0_RKS_IT_E
	.p2align	4, 0x90
	.type	_ZNSt7complexIdEmLIdEERS0_RKS_IT_E,@function
_ZNSt7complexIdEmLIdEERS0_RKS_IT_E:     # @_ZNSt7complexIdEmLIdEERS0_RKS_IT_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$112, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -104(%rbp)                # 8-byte Spill
	movq	-16(%rbp), %rdi
	callq	_ZNKSt7complexIdE5__repEv
	movq	-104(%rbp), %rax                # 8-byte Reload
	movsd	%xmm0, -32(%rbp)
	movsd	%xmm1, -24(%rbp)
	movsd	-32(%rbp), %xmm4                # xmm4 = mem[0],zero
	movsd	%xmm4, -96(%rbp)                # 8-byte Spill
	movsd	-24(%rbp), %xmm5                # xmm5 = mem[0],zero
	movsd	%xmm5, -88(%rbp)                # 8-byte Spill
	movsd	(%rax), %xmm1                   # xmm1 = mem[0],zero
	movsd	%xmm1, -80(%rbp)                # 8-byte Spill
	movsd	8(%rax), %xmm2                  # xmm2 = mem[0],zero
	movsd	%xmm2, -72(%rbp)                # 8-byte Spill
	movaps	%xmm1, %xmm0
	mulsd	%xmm4, %xmm0
	movaps	%xmm2, %xmm3
	mulsd	%xmm5, %xmm3
	mulsd	%xmm5, %xmm1
	mulsd	%xmm4, %xmm2
	subsd	%xmm3, %xmm0
	movsd	%xmm0, -64(%rbp)                # 8-byte Spill
	addsd	%xmm2, %xmm1
	movsd	%xmm1, -56(%rbp)                # 8-byte Spill
	ucomisd	%xmm0, %xmm0
	movsd	%xmm0, -48(%rbp)                # 8-byte Spill
	movsd	%xmm1, -40(%rbp)                # 8-byte Spill
	jnp	.LBB754_3
# %bb.1:
	movsd	-56(%rbp), %xmm1                # 8-byte Reload
                                        # xmm1 = mem[0],zero
	movsd	-64(%rbp), %xmm0                # 8-byte Reload
                                        # xmm0 = mem[0],zero
	ucomisd	%xmm1, %xmm1
	movsd	%xmm0, -48(%rbp)                # 8-byte Spill
	movsd	%xmm1, -40(%rbp)                # 8-byte Spill
	jnp	.LBB754_3
# %bb.2:
	movsd	-88(%rbp), %xmm3                # 8-byte Reload
                                        # xmm3 = mem[0],zero
	movsd	-96(%rbp), %xmm2                # 8-byte Reload
                                        # xmm2 = mem[0],zero
	movsd	-72(%rbp), %xmm1                # 8-byte Reload
                                        # xmm1 = mem[0],zero
	movsd	-80(%rbp), %xmm0                # 8-byte Reload
                                        # xmm0 = mem[0],zero
	callq	__muldc3@PLT
	movsd	%xmm0, -48(%rbp)                # 8-byte Spill
	movsd	%xmm1, -40(%rbp)                # 8-byte Spill
.LBB754_3:
	movq	-104(%rbp), %rax                # 8-byte Reload
	movsd	-48(%rbp), %xmm1                # 8-byte Reload
                                        # xmm1 = mem[0],zero
	movsd	-40(%rbp), %xmm0                # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movsd	%xmm1, (%rax)
	movsd	%xmm0, 8(%rax)
	addq	$112, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end754:
	.size	_ZNSt7complexIdEmLIdEERS0_RKS_IT_E, .Lfunc_end754-_ZNSt7complexIdEmLIdEERS0_RKS_IT_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZStmiIdESt7complexIT_ERKS2_S4_,"axG",@progbits,_ZStmiIdESt7complexIT_ERKS2_S4_,comdat
	.weak	_ZStmiIdESt7complexIT_ERKS2_S4_ # -- Begin function _ZStmiIdESt7complexIT_ERKS2_S4_
	.p2align	4, 0x90
	.type	_ZStmiIdESt7complexIT_ERKS2_S4_,@function
_ZStmiIdESt7complexIT_ERKS2_S4_:        # @_ZStmiIdESt7complexIT_ERKS2_S4_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movups	(%rax), %xmm0
	movaps	%xmm0, -16(%rbp)
	movq	-32(%rbp), %rsi
	leaq	-16(%rbp), %rdi
	callq	_ZNSt7complexIdEmIIdEERS0_RKS_IT_E
	movsd	-16(%rbp), %xmm0                # xmm0 = mem[0],zero
	movsd	-8(%rbp), %xmm1                 # xmm1 = mem[0],zero
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end755:
	.size	_ZStmiIdESt7complexIT_ERKS2_S4_, .Lfunc_end755-_ZStmiIdESt7complexIT_ERKS2_S4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt7complexIdEmIIdEERS0_RKS_IT_E,"axG",@progbits,_ZNSt7complexIdEmIIdEERS0_RKS_IT_E,comdat
	.weak	_ZNSt7complexIdEmIIdEERS0_RKS_IT_E # -- Begin function _ZNSt7complexIdEmIIdEERS0_RKS_IT_E
	.p2align	4, 0x90
	.type	_ZNSt7complexIdEmIIdEERS0_RKS_IT_E,@function
_ZNSt7complexIdEmIIdEERS0_RKS_IT_E:     # @_ZNSt7complexIdEmIIdEERS0_RKS_IT_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -24(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	callq	_ZNKSt7complexIdE5__repEv
	movq	-24(%rbp), %rax                 # 8-byte Reload
	movaps	%xmm0, %xmm3
	movaps	%xmm1, %xmm2
	movsd	(%rax), %xmm1                   # xmm1 = mem[0],zero
	movsd	8(%rax), %xmm0                  # xmm0 = mem[0],zero
	subsd	%xmm3, %xmm1
	subsd	%xmm2, %xmm0
	movsd	%xmm1, (%rax)
	movsd	%xmm0, 8(%rax)
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end756:
	.size	_ZNSt7complexIdEmIIdEERS0_RKS_IT_E, .Lfunc_end756-_ZNSt7complexIdEmIIdEERS0_RKS_IT_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZStmlIdESt7complexIT_ERKS2_RKS1_,"axG",@progbits,_ZStmlIdESt7complexIT_ERKS2_RKS1_,comdat
	.weak	_ZStmlIdESt7complexIT_ERKS2_RKS1_ # -- Begin function _ZStmlIdESt7complexIT_ERKS2_RKS1_
	.p2align	4, 0x90
	.type	_ZStmlIdESt7complexIT_ERKS2_RKS1_,@function
_ZStmlIdESt7complexIT_ERKS2_RKS1_:      # @_ZStmlIdESt7complexIT_ERKS2_RKS1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movups	(%rax), %xmm0
	movaps	%xmm0, -16(%rbp)
	movq	-32(%rbp), %rax
	movsd	(%rax), %xmm0                   # xmm0 = mem[0],zero
	leaq	-16(%rbp), %rdi
	callq	_ZNSt7complexIdEmLEd
	movsd	-16(%rbp), %xmm0                # xmm0 = mem[0],zero
	movsd	-8(%rbp), %xmm1                 # xmm1 = mem[0],zero
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end757:
	.size	_ZStmlIdESt7complexIT_ERKS2_RKS1_, .Lfunc_end757-_ZStmlIdESt7complexIT_ERKS2_RKS1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt7complexIdEmLEd,"axG",@progbits,_ZNSt7complexIdEmLEd,comdat
	.weak	_ZNSt7complexIdEmLEd            # -- Begin function _ZNSt7complexIdEmLEd
	.p2align	4, 0x90
	.type	_ZNSt7complexIdEmLEd,@function
_ZNSt7complexIdEmLEd:                   # @_ZNSt7complexIdEmLEd
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movsd	%xmm0, -16(%rbp)
	movq	-8(%rbp), %rax
	movsd	-16(%rbp), %xmm2                # xmm2 = mem[0],zero
	movsd	(%rax), %xmm1                   # xmm1 = mem[0],zero
	movsd	8(%rax), %xmm0                  # xmm0 = mem[0],zero
	mulsd	%xmm2, %xmm1
	mulsd	%xmm2, %xmm0
	movsd	%xmm1, (%rax)
	movsd	%xmm0, 8(%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end758:
	.size	_ZNSt7complexIdEmLEd, .Lfunc_end758-_ZNSt7complexIdEmLEd
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK4seal9Plaintext11is_ntt_formEv,"axG",@progbits,_ZNK4seal9Plaintext11is_ntt_formEv,comdat
	.weak	_ZNK4seal9Plaintext11is_ntt_formEv # -- Begin function _ZNK4seal9Plaintext11is_ntt_formEv
	.p2align	4, 0x90
	.type	_ZNK4seal9Plaintext11is_ntt_formEv,@function
_ZNK4seal9Plaintext11is_ntt_formEv:     # @_ZNK4seal9Plaintext11is_ntt_formEv
.Lfunc_begin84:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception84
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
.Ltmp1102:
	movq	_ZN4seal13parms_id_zeroE@GOTPCREL(%rip), %rsi
	callq	_ZStneImLm4EEbRKSt5arrayIT_XT0_EES4_
.Ltmp1103:
	movb	%al, -9(%rbp)                   # 1-byte Spill
	jmp	.LBB759_1
.LBB759_1:
	movb	-9(%rbp), %al                   # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %eax
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB759_2:
	.cfi_def_cfa %rbp, 16
.Ltmp1104:
	movq	%rax, %rdi
                                        # kill: def $eax killed $edx killed $rdx
	callq	__clang_call_terminate
.Lfunc_end759:
	.size	_ZNK4seal9Plaintext11is_ntt_formEv, .Lfunc_end759-_ZNK4seal9Plaintext11is_ntt_formEv
	.cfi_endproc
	.section	.gcc_except_table._ZNK4seal9Plaintext11is_ntt_formEv,"aG",@progbits,_ZNK4seal9Plaintext11is_ntt_formEv,comdat
	.p2align	2
GCC_except_table759:
.Lexception84:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase35-.Lttbaseref35
.Lttbaseref35:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end84-.Lcst_begin84
.Lcst_begin84:
	.uleb128 .Ltmp1102-.Lfunc_begin84       # >> Call Site 1 <<
	.uleb128 .Ltmp1103-.Ltmp1102            #   Call between .Ltmp1102 and .Ltmp1103
	.uleb128 .Ltmp1104-.Lfunc_begin84       #     jumps to .Ltmp1104
	.byte	1                               #   On action: 1
.Lcst_end84:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase35:
	.p2align	2
                                        # -- End function
	.section	.text._ZStneImLm4EEbRKSt5arrayIT_XT0_EES4_,"axG",@progbits,_ZStneImLm4EEbRKSt5arrayIT_XT0_EES4_,comdat
	.weak	_ZStneImLm4EEbRKSt5arrayIT_XT0_EES4_ # -- Begin function _ZStneImLm4EEbRKSt5arrayIT_XT0_EES4_
	.p2align	4, 0x90
	.type	_ZStneImLm4EEbRKSt5arrayIT_XT0_EES4_,@function
_ZStneImLm4EEbRKSt5arrayIT_XT0_EES4_:   # @_ZStneImLm4EEbRKSt5arrayIT_XT0_EES4_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZSteqImLm4EEbRKSt5arrayIT_XT0_EES4_
	xorb	$-1, %al
	andb	$1, %al
	movzbl	%al, %eax
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end760:
	.size	_ZStneImLm4EEbRKSt5arrayIT_XT0_EES4_, .Lfunc_end760-_ZStneImLm4EEbRKSt5arrayIT_XT0_EES4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK4seal7Modulus11const_ratioEv,"axG",@progbits,_ZNK4seal7Modulus11const_ratioEv,comdat
	.weak	_ZNK4seal7Modulus11const_ratioEv # -- Begin function _ZNK4seal7Modulus11const_ratioEv
	.p2align	4, 0x90
	.type	_ZNK4seal7Modulus11const_ratioEv,@function
_ZNK4seal7Modulus11const_ratioEv:       # @_ZNK4seal7Modulus11const_ratioEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	addq	$8, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end761:
	.size	_ZNK4seal7Modulus11const_ratioEv, .Lfunc_end761-_ZNK4seal7Modulus11const_ratioEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt5arrayImLm3EE4dataEv,"axG",@progbits,_ZNKSt5arrayImLm3EE4dataEv,comdat
	.weak	_ZNKSt5arrayImLm3EE4dataEv      # -- Begin function _ZNKSt5arrayImLm3EE4dataEv
	.p2align	4, 0x90
	.type	_ZNKSt5arrayImLm3EE4dataEv,@function
_ZNKSt5arrayImLm3EE4dataEv:             # @_ZNKSt5arrayImLm3EE4dataEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt14__array_traitsImLm3EE6_S_ptrERA3_Km
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end762:
	.size	_ZNKSt5arrayImLm3EE4dataEv, .Lfunc_end762-_ZNKSt5arrayImLm3EE4dataEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal4util20multiply_uint64_hw64ImmvEEvT_T0_Py,"axG",@progbits,_ZN4seal4util20multiply_uint64_hw64ImmvEEvT_T0_Py,comdat
	.weak	_ZN4seal4util20multiply_uint64_hw64ImmvEEvT_T0_Py # -- Begin function _ZN4seal4util20multiply_uint64_hw64ImmvEEvT_T0_Py
	.p2align	4, 0x90
	.type	_ZN4seal4util20multiply_uint64_hw64ImmvEEvT_T0_Py,@function
_ZN4seal4util20multiply_uint64_hw64ImmvEEvT_T0_Py: # @_ZN4seal4util20multiply_uint64_hw64ImmvEEvT_T0_Py
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
# %bb.1:
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
	mulq	%rcx
	movq	-24(%rbp), %rax
	movq	%rdx, (%rax)
# %bb.2:
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end763:
	.size	_ZN4seal4util20multiply_uint64_hw64ImmvEEvT_T0_Py, .Lfunc_end763-_ZN4seal4util20multiply_uint64_hw64ImmvEEvT_T0_Py
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt14__array_traitsImLm3EE6_S_ptrERA3_Km,"axG",@progbits,_ZNSt14__array_traitsImLm3EE6_S_ptrERA3_Km,comdat
	.weak	_ZNSt14__array_traitsImLm3EE6_S_ptrERA3_Km # -- Begin function _ZNSt14__array_traitsImLm3EE6_S_ptrERA3_Km
	.p2align	4, 0x90
	.type	_ZNSt14__array_traitsImLm3EE6_S_ptrERA3_Km,@function
_ZNSt14__array_traitsImLm3EE6_S_ptrERA3_Km: # @_ZNSt14__array_traitsImLm3EE6_S_ptrERA3_Km
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end764:
	.size	_ZNSt14__array_traitsImLm3EE6_S_ptrERA3_Km, .Lfunc_end764-_ZNSt14__array_traitsImLm3EE6_S_ptrERA3_Km
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal8DynArrayImE2atEm,"axG",@progbits,_ZN4seal8DynArrayImE2atEm,comdat
	.weak	_ZN4seal8DynArrayImE2atEm       # -- Begin function _ZN4seal8DynArrayImE2atEm
	.p2align	4, 0x90
	.type	_ZN4seal8DynArrayImE2atEm,@function
_ZN4seal8DynArrayImE2atEm:              # @_ZN4seal8DynArrayImE2atEm
.Lfunc_begin85:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception85
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rcx
	movq	%rcx, -40(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rax
	cmpq	24(%rcx), %rax
	jb	.LBB765_4
# %bb.1:
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rdi
	movq	%rdi, %rax
	movq	%rax, -48(%rbp)                 # 8-byte Spill
.Ltmp1105:
	leaq	.L.str.84(%rip), %rsi
	callq	_ZNSt12out_of_rangeC1EPKc@PLT
.Ltmp1106:
	jmp	.LBB765_2
.LBB765_2:
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	movq	_ZTISt12out_of_range@GOTPCREL(%rip), %rsi
	movq	_ZNSt12out_of_rangeD1Ev@GOTPCREL(%rip), %rdx
	callq	__cxa_throw@PLT
.LBB765_3:
.Ltmp1107:
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -24(%rbp)
	movl	%eax, -28(%rbp)
	callq	__cxa_free_exception@PLT
	jmp	.LBB765_5
.LBB765_4:
	movq	-40(%rbp), %rdi                 # 8-byte Reload
	addq	$32, %rdi
	movq	-16(%rbp), %rsi
	callq	_ZN4seal4util7PointerImvEixEm
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB765_5:
	.cfi_def_cfa %rbp, 16
	movq	-24(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end765:
	.size	_ZN4seal8DynArrayImE2atEm, .Lfunc_end765-_ZN4seal8DynArrayImE2atEm
	.cfi_endproc
	.section	.gcc_except_table._ZN4seal8DynArrayImE2atEm,"aG",@progbits,_ZN4seal8DynArrayImE2atEm,comdat
	.p2align	2
GCC_except_table765:
.Lexception85:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end85-.Lcst_begin85
.Lcst_begin85:
	.uleb128 .Lfunc_begin85-.Lfunc_begin85  # >> Call Site 1 <<
	.uleb128 .Ltmp1105-.Lfunc_begin85       #   Call between .Lfunc_begin85 and .Ltmp1105
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1105-.Lfunc_begin85       # >> Call Site 2 <<
	.uleb128 .Ltmp1106-.Ltmp1105            #   Call between .Ltmp1105 and .Ltmp1106
	.uleb128 .Ltmp1107-.Lfunc_begin85       #     jumps to .Ltmp1107
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1106-.Lfunc_begin85       # >> Call Site 3 <<
	.uleb128 .Lfunc_end765-.Ltmp1106        #   Call between .Ltmp1106 and .Lfunc_end765
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end85:
	.p2align	2
                                        # -- End function
	.section	.text._ZN4seal4util15multiply_uint64ImmvEEvT_T0_Py,"axG",@progbits,_ZN4seal4util15multiply_uint64ImmvEEvT_T0_Py,comdat
	.weak	_ZN4seal4util15multiply_uint64ImmvEEvT_T0_Py # -- Begin function _ZN4seal4util15multiply_uint64ImmvEEvT_T0_Py
	.p2align	4, 0x90
	.type	_ZN4seal4util15multiply_uint64ImmvEEvT_T0_Py,@function
_ZN4seal4util15multiply_uint64ImmvEEvT_T0_Py: # @_ZN4seal4util15multiply_uint64ImmvEEvT_T0_Py
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
# %bb.1:
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
	mulq	%rcx
	movq	%rdx, -40(%rbp)
	movq	%rax, -48(%rbp)
	movq	-48(%rbp), %rcx
	movq	-24(%rbp), %rax
	movq	%rcx, (%rax)
	movq	-40(%rbp), %rcx
	movq	-24(%rbp), %rax
	movq	%rcx, 8(%rax)
# %bb.2:
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end766:
	.size	_ZN4seal4util15multiply_uint64ImmvEEvT_T0_Py, .Lfunc_end766-_ZN4seal4util15multiply_uint64ImmvEEvT_T0_Py
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal4util10add_uint64IyyyvEEhT_T0_PT1_,"axG",@progbits,_ZN4seal4util10add_uint64IyyyvEEhT_T0_PT1_,comdat
	.weak	_ZN4seal4util10add_uint64IyyyvEEhT_T0_PT1_ # -- Begin function _ZN4seal4util10add_uint64IyyyvEEhT_T0_PT1_
	.p2align	4, 0x90
	.type	_ZN4seal4util10add_uint64IyyyvEEhT_T0_PT1_,@function
_ZN4seal4util10add_uint64IyyyvEEhT_T0_PT1_: # @_ZN4seal4util10add_uint64IyyyvEEhT_T0_PT1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rcx
	addq	-16(%rbp), %rcx
	movq	-24(%rbp), %rax
	movq	%rcx, (%rax)
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	cmpq	-8(%rbp), %rax
	setb	%al
	andb	$1, %al
	movzbl	%al, %eax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end767:
	.size	_ZN4seal4util10add_uint64IyyyvEEhT_T0_PT1_, .Lfunc_end767-_ZN4seal4util10add_uint64IyyyvEEhT_T0_PT1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt6fill_nIPmmmET_S1_T0_RKT1_,"axG",@progbits,_ZSt6fill_nIPmmmET_S1_T0_RKT1_,comdat
	.weak	_ZSt6fill_nIPmmmET_S1_T0_RKT1_  # -- Begin function _ZSt6fill_nIPmmmET_S1_T0_RKT1_
	.p2align	4, 0x90
	.type	_ZSt6fill_nIPmmmET_S1_T0_RKT1_,@function
_ZSt6fill_nIPmmmET_S1_T0_RKT1_:         # @_ZSt6fill_nIPmmmET_S1_T0_RKT1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -64(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	callq	_ZSt17__size_to_integerm
	movq	%rax, -56(%rbp)                 # 8-byte Spill
	movq	-24(%rbp), %rax
	movq	%rax, -48(%rbp)                 # 8-byte Spill
	leaq	-8(%rbp), %rdi
	callq	_ZSt19__iterator_categoryIPmENSt15iterator_traitsIT_E17iterator_categoryERKS2_
	movq	-64(%rbp), %rdi                 # 8-byte Reload
	movq	-56(%rbp), %rsi                 # 8-byte Reload
	movq	-48(%rbp), %rdx                 # 8-byte Reload
	callq	_ZSt10__fill_n_aIPmmmET_S1_T0_RKT1_St26random_access_iterator_tag
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end768:
	.size	_ZSt6fill_nIPmmmET_S1_T0_RKT1_, .Lfunc_end768-_ZSt6fill_nIPmmmET_S1_T0_RKT1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt10__fill_n_aIPmmmET_S1_T0_RKT1_St26random_access_iterator_tag,"axG",@progbits,_ZSt10__fill_n_aIPmmmET_S1_T0_RKT1_St26random_access_iterator_tag,comdat
	.weak	_ZSt10__fill_n_aIPmmmET_S1_T0_RKT1_St26random_access_iterator_tag # -- Begin function _ZSt10__fill_n_aIPmmmET_S1_T0_RKT1_St26random_access_iterator_tag
	.p2align	4, 0x90
	.type	_ZSt10__fill_n_aIPmmmET_S1_T0_RKT1_St26random_access_iterator_tag,@function
_ZSt10__fill_n_aIPmmmET_S1_T0_RKT1_St26random_access_iterator_tag: # @_ZSt10__fill_n_aIPmmmET_S1_T0_RKT1_St26random_access_iterator_tag
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	%rdx, -40(%rbp)
	cmpq	$0, -32(%rbp)
	ja	.LBB769_2
# %bb.1:
	movq	-24(%rbp), %rax
	movq	%rax, -8(%rbp)
	jmp	.LBB769_3
.LBB769_2:
	movq	-24(%rbp), %rdi
	movq	-24(%rbp), %rsi
	movq	-32(%rbp), %rax
	shlq	$3, %rax
	addq	%rax, %rsi
	movq	-40(%rbp), %rdx
	callq	_ZSt8__fill_aIPmmEvT_S1_RKT0_
	movq	-24(%rbp), %rax
	movq	-32(%rbp), %rcx
	shlq	$3, %rcx
	addq	%rcx, %rax
	movq	%rax, -8(%rbp)
.LBB769_3:
	movq	-8(%rbp), %rax
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end769:
	.size	_ZSt10__fill_n_aIPmmmET_S1_T0_RKT1_St26random_access_iterator_tag, .Lfunc_end769-_ZSt10__fill_n_aIPmmmET_S1_T0_RKT1_St26random_access_iterator_tag
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt19__iterator_categoryIPmENSt15iterator_traitsIT_E17iterator_categoryERKS2_,"axG",@progbits,_ZSt19__iterator_categoryIPmENSt15iterator_traitsIT_E17iterator_categoryERKS2_,comdat
	.weak	_ZSt19__iterator_categoryIPmENSt15iterator_traitsIT_E17iterator_categoryERKS2_ # -- Begin function _ZSt19__iterator_categoryIPmENSt15iterator_traitsIT_E17iterator_categoryERKS2_
	.p2align	4, 0x90
	.type	_ZSt19__iterator_categoryIPmENSt15iterator_traitsIT_E17iterator_categoryERKS2_,@function
_ZSt19__iterator_categoryIPmENSt15iterator_traitsIT_E17iterator_categoryERKS2_: # @_ZSt19__iterator_categoryIPmENSt15iterator_traitsIT_E17iterator_categoryERKS2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end770:
	.size	_ZSt19__iterator_categoryIPmENSt15iterator_traitsIT_E17iterator_categoryERKS2_, .Lfunc_end770-_ZSt19__iterator_categoryIPmENSt15iterator_traitsIT_E17iterator_categoryERKS2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK4seal4util7PointerINS0_7RNSToolEvE3getEv,"axG",@progbits,_ZNK4seal4util7PointerINS0_7RNSToolEvE3getEv,comdat
	.weak	_ZNK4seal4util7PointerINS0_7RNSToolEvE3getEv # -- Begin function _ZNK4seal4util7PointerINS0_7RNSToolEvE3getEv
	.p2align	4, 0x90
	.type	_ZNK4seal4util7PointerINS0_7RNSToolEvE3getEv,@function
_ZNK4seal4util7PointerINS0_7RNSToolEvE3getEv: # @_ZNK4seal4util7PointerINS0_7RNSToolEvE3getEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end771:
	.size	_ZNK4seal4util7PointerINS0_7RNSToolEvE3getEv, .Lfunc_end771-_ZNK4seal4util7PointerINS0_7RNSToolEvE3getEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK4seal4util7PointerINS0_7RNSBaseEvE3getEv,"axG",@progbits,_ZNK4seal4util7PointerINS0_7RNSBaseEvE3getEv,comdat
	.weak	_ZNK4seal4util7PointerINS0_7RNSBaseEvE3getEv # -- Begin function _ZNK4seal4util7PointerINS0_7RNSBaseEvE3getEv
	.p2align	4, 0x90
	.type	_ZNK4seal4util7PointerINS0_7RNSBaseEvE3getEv,@function
_ZNK4seal4util7PointerINS0_7RNSBaseEvE3getEv: # @_ZNK4seal4util7PointerINS0_7RNSBaseEvE3getEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end772:
	.size	_ZNK4seal4util7PointerINS0_7RNSBaseEvE3getEv, .Lfunc_end772-_ZNK4seal4util7PointerINS0_7RNSBaseEvE3getEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK4seal4util9NTTTables7modulusEv,"axG",@progbits,_ZNK4seal4util9NTTTables7modulusEv,comdat
	.weak	_ZNK4seal4util9NTTTables7modulusEv # -- Begin function _ZNK4seal4util9NTTTables7modulusEv
	.p2align	4, 0x90
	.type	_ZNK4seal4util9NTTTables7modulusEv,@function
_ZNK4seal4util9NTTTables7modulusEv:     # @_ZNK4seal4util9NTTTables7modulusEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	addq	$48, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end773:
	.size	_ZNK4seal4util9NTTTables7modulusEv, .Lfunc_end773-_ZNK4seal4util9NTTTables7modulusEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK4seal4util9NTTTables17coeff_count_powerEv,"axG",@progbits,_ZNK4seal4util9NTTTables17coeff_count_powerEv,comdat
	.weak	_ZNK4seal4util9NTTTables17coeff_count_powerEv # -- Begin function _ZNK4seal4util9NTTTables17coeff_count_powerEv
	.p2align	4, 0x90
	.type	_ZNK4seal4util9NTTTables17coeff_count_powerEv,@function
_ZNK4seal4util9NTTTables17coeff_count_powerEv: # @_ZNK4seal4util9NTTTables17coeff_count_powerEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movl	32(%rax), %eax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end774:
	.size	_ZNK4seal4util9NTTTables17coeff_count_powerEv, .Lfunc_end774-_ZNK4seal4util9NTTTables17coeff_count_powerEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt10for_each_nIN4seal4util7PtrIterIPmEEmZNS1_21ntt_negacyclic_harveyES4_RKNS1_9NTTTablesEEUlRT_E_ES8_S8_T0_T1_,"axG",@progbits,_ZSt10for_each_nIN4seal4util7PtrIterIPmEEmZNS1_21ntt_negacyclic_harveyES4_RKNS1_9NTTTablesEEUlRT_E_ES8_S8_T0_T1_,comdat
	.weak	_ZSt10for_each_nIN4seal4util7PtrIterIPmEEmZNS1_21ntt_negacyclic_harveyES4_RKNS1_9NTTTablesEEUlRT_E_ES8_S8_T0_T1_ # -- Begin function _ZSt10for_each_nIN4seal4util7PtrIterIPmEEmZNS1_21ntt_negacyclic_harveyES4_RKNS1_9NTTTablesEEUlRT_E_ES8_S8_T0_T1_
	.p2align	4, 0x90
	.type	_ZSt10for_each_nIN4seal4util7PtrIterIPmEEmZNS1_21ntt_negacyclic_harveyES4_RKNS1_9NTTTablesEEUlRT_E_ES8_S8_T0_T1_,@function
_ZSt10for_each_nIN4seal4util7PtrIterIPmEEmZNS1_21ntt_negacyclic_harveyES4_RKNS1_9NTTTablesEEUlRT_E_ES8_S8_T0_T1_: # @_ZSt10for_each_nIN4seal4util7PtrIterIPmEEmZNS1_21ntt_negacyclic_harveyES4_RKNS1_9NTTTablesEEUlRT_E_ES8_S8_T0_T1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$112, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rdx, -32(%rbp)
	movq	%rcx, -24(%rbp)
	movq	%rsi, -40(%rbp)
	movq	-40(%rbp), %rdi
	callq	_ZSt17__size_to_integerm
	movq	%rax, -48(%rbp)
	cmpq	$0, -48(%rbp)
	ja	.LBB775_2
# %bb.1:
	movq	-16(%rbp), %rax
	movq	%rax, -8(%rbp)
	jmp	.LBB775_3
.LBB775_2:
	movq	-48(%rbp), %rsi
	leaq	-16(%rbp), %rdi
	callq	_ZNK4seal4util7PtrIterIPmEplImEES3_T_
	movq	%rax, -56(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -64(%rbp)
	movq	-56(%rbp), %rax
	movq	%rax, -72(%rbp)
	leaq	-32(%rbp), %rdi
	callq	_ZSt4moveIRZN4seal4util21ntt_negacyclic_harveyENS1_7PtrIterIPmEERKNS1_9NTTTablesEEUlRT_E_EONSt16remove_referenceIS8_E4typeEOS8_
	movq	(%rax), %rcx
	movq	%rcx, -88(%rbp)
	movq	8(%rax), %rax
	movq	%rax, -80(%rbp)
	movq	-64(%rbp), %rdi
	movq	-72(%rbp), %rsi
	movq	-88(%rbp), %rdx
	movq	-80(%rbp), %rcx
	callq	_ZSt8for_eachIN4seal4util7PtrIterIPmEEZNS1_21ntt_negacyclic_harveyES4_RKNS1_9NTTTablesEEUlRT_E_ET0_S8_S8_SB_
	movq	%rax, -104(%rbp)
	movq	%rdx, -96(%rbp)
	movq	-56(%rbp), %rax
	movq	%rax, -8(%rbp)
.LBB775_3:
	movq	-8(%rbp), %rax
	addq	$112, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end775:
	.size	_ZSt10for_each_nIN4seal4util7PtrIterIPmEEmZNS1_21ntt_negacyclic_harveyES4_RKNS1_9NTTTablesEEUlRT_E_ES8_S8_T0_T1_, .Lfunc_end775-_ZSt10for_each_nIN4seal4util7PtrIterIPmEEmZNS1_21ntt_negacyclic_harveyES4_RKNS1_9NTTTablesEEUlRT_E_ES8_S8_T0_T1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK4seal4util7PtrIterIPmEplImEES3_T_,"axG",@progbits,_ZNK4seal4util7PtrIterIPmEplImEES3_T_,comdat
	.weak	_ZNK4seal4util7PtrIterIPmEplImEES3_T_ # -- Begin function _ZNK4seal4util7PtrIterIPmEplImEES3_T_
	.p2align	4, 0x90
	.type	_ZNK4seal4util7PtrIterIPmEplImEES3_T_,@function
_ZNK4seal4util7PtrIterIPmEplImEES3_T_:  # @_ZNK4seal4util7PtrIterIPmEplImEES3_T_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rsi
	movq	-24(%rbp), %rax
	shlq	$3, %rax
	addq	%rax, %rsi
	leaq	-8(%rbp), %rdi
	callq	_ZN4seal4util7PtrIterIPmEC2ImEEPT_
	movq	-8(%rbp), %rax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end776:
	.size	_ZNK4seal4util7PtrIterIPmEplImEES3_T_, .Lfunc_end776-_ZNK4seal4util7PtrIterIPmEplImEES3_T_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt8for_eachIN4seal4util7PtrIterIPmEEZNS1_21ntt_negacyclic_harveyES4_RKNS1_9NTTTablesEEUlRT_E_ET0_S8_S8_SB_,"axG",@progbits,_ZSt8for_eachIN4seal4util7PtrIterIPmEEZNS1_21ntt_negacyclic_harveyES4_RKNS1_9NTTTablesEEUlRT_E_ET0_S8_S8_SB_,comdat
	.weak	_ZSt8for_eachIN4seal4util7PtrIterIPmEEZNS1_21ntt_negacyclic_harveyES4_RKNS1_9NTTTablesEEUlRT_E_ET0_S8_S8_SB_ # -- Begin function _ZSt8for_eachIN4seal4util7PtrIterIPmEEZNS1_21ntt_negacyclic_harveyES4_RKNS1_9NTTTablesEEUlRT_E_ET0_S8_S8_SB_
	.p2align	4, 0x90
	.type	_ZSt8for_eachIN4seal4util7PtrIterIPmEEZNS1_21ntt_negacyclic_harveyES4_RKNS1_9NTTTablesEEUlRT_E_ET0_S8_S8_SB_,@function
_ZSt8for_eachIN4seal4util7PtrIterIPmEEZNS1_21ntt_negacyclic_harveyES4_RKNS1_9NTTTablesEEUlRT_E_ET0_S8_S8_SB_: # @_ZSt8for_eachIN4seal4util7PtrIterIPmEEZNS1_21ntt_negacyclic_harveyES4_RKNS1_9NTTTablesEEUlRT_E_ET0_S8_S8_SB_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rcx, -40(%rbp)
.LBB777_1:                              # =>This Inner Loop Header: Depth=1
	leaq	-24(%rbp), %rdi
	leaq	-32(%rbp), %rsi
	callq	_ZNK4seal4util7PtrIterIPmEneImEEbRKNS1_IPT_EE
	testb	$1, %al
	jne	.LBB777_2
	jmp	.LBB777_4
.LBB777_2:                              #   in Loop: Header=BB777_1 Depth=1
	leaq	-24(%rbp), %rdi
	callq	_ZNK4seal4util7PtrIterIPmEdeEv
	movq	%rax, %rsi
	leaq	-48(%rbp), %rdi
	callq	_ZZN4seal4util21ntt_negacyclic_harveyENS0_7PtrIterIPmEERKNS0_9NTTTablesEENKUlRT_E_clImEEDaS8_
# %bb.3:                                #   in Loop: Header=BB777_1 Depth=1
	leaq	-24(%rbp), %rdi
	callq	_ZN4seal4util7PtrIterIPmEppEv
	jmp	.LBB777_1
.LBB777_4:
	movups	-48(%rbp), %xmm0
	movaps	%xmm0, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	-8(%rbp), %rdx
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end777:
	.size	_ZSt8for_eachIN4seal4util7PtrIterIPmEEZNS1_21ntt_negacyclic_harveyES4_RKNS1_9NTTTablesEEUlRT_E_ET0_S8_S8_SB_, .Lfunc_end777-_ZSt8for_eachIN4seal4util7PtrIterIPmEEZNS1_21ntt_negacyclic_harveyES4_RKNS1_9NTTTablesEEUlRT_E_ET0_S8_S8_SB_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4moveIRZN4seal4util21ntt_negacyclic_harveyENS1_7PtrIterIPmEERKNS1_9NTTTablesEEUlRT_E_EONSt16remove_referenceIS8_E4typeEOS8_,"axG",@progbits,_ZSt4moveIRZN4seal4util21ntt_negacyclic_harveyENS1_7PtrIterIPmEERKNS1_9NTTTablesEEUlRT_E_EONSt16remove_referenceIS8_E4typeEOS8_,comdat
	.weak	_ZSt4moveIRZN4seal4util21ntt_negacyclic_harveyENS1_7PtrIterIPmEERKNS1_9NTTTablesEEUlRT_E_EONSt16remove_referenceIS8_E4typeEOS8_ # -- Begin function _ZSt4moveIRZN4seal4util21ntt_negacyclic_harveyENS1_7PtrIterIPmEERKNS1_9NTTTablesEEUlRT_E_EONSt16remove_referenceIS8_E4typeEOS8_
	.p2align	4, 0x90
	.type	_ZSt4moveIRZN4seal4util21ntt_negacyclic_harveyENS1_7PtrIterIPmEERKNS1_9NTTTablesEEUlRT_E_EONSt16remove_referenceIS8_E4typeEOS8_,@function
_ZSt4moveIRZN4seal4util21ntt_negacyclic_harveyENS1_7PtrIterIPmEERKNS1_9NTTTablesEEUlRT_E_EONSt16remove_referenceIS8_E4typeEOS8_: # @_ZSt4moveIRZN4seal4util21ntt_negacyclic_harveyENS1_7PtrIterIPmEERKNS1_9NTTTablesEEUlRT_E_EONSt16remove_referenceIS8_E4typeEOS8_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end778:
	.size	_ZSt4moveIRZN4seal4util21ntt_negacyclic_harveyENS1_7PtrIterIPmEERKNS1_9NTTTablesEEUlRT_E_EONSt16remove_referenceIS8_E4typeEOS8_, .Lfunc_end778-_ZSt4moveIRZN4seal4util21ntt_negacyclic_harveyENS1_7PtrIterIPmEERKNS1_9NTTTablesEEUlRT_E_EONSt16remove_referenceIS8_E4typeEOS8_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK4seal4util7PtrIterIPmEneImEEbRKNS1_IPT_EE,"axG",@progbits,_ZNK4seal4util7PtrIterIPmEneImEEbRKNS1_IPT_EE,comdat
	.weak	_ZNK4seal4util7PtrIterIPmEneImEEbRKNS1_IPT_EE # -- Begin function _ZNK4seal4util7PtrIterIPmEneImEEbRKNS1_IPT_EE
	.p2align	4, 0x90
	.type	_ZNK4seal4util7PtrIterIPmEneImEEbRKNS1_IPT_EE,@function
_ZNK4seal4util7PtrIterIPmEneImEEbRKNS1_IPT_EE: # @_ZNK4seal4util7PtrIterIPmEneImEEbRKNS1_IPT_EE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZNK4seal4util7PtrIterIPmEeqImEEbRKNS1_IPT_EE
	xorb	$-1, %al
	andb	$1, %al
	movzbl	%al, %eax
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end779:
	.size	_ZNK4seal4util7PtrIterIPmEneImEEbRKNS1_IPT_EE, .Lfunc_end779-_ZNK4seal4util7PtrIterIPmEneImEEbRKNS1_IPT_EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZZN4seal4util21ntt_negacyclic_harveyENS0_7PtrIterIPmEERKNS0_9NTTTablesEENKUlRT_E_clImEEDaS8_,"axG",@progbits,_ZZN4seal4util21ntt_negacyclic_harveyENS0_7PtrIterIPmEERKNS0_9NTTTablesEENKUlRT_E_clImEEDaS8_,comdat
	.weak	_ZZN4seal4util21ntt_negacyclic_harveyENS0_7PtrIterIPmEERKNS0_9NTTTablesEENKUlRT_E_clImEEDaS8_ # -- Begin function _ZZN4seal4util21ntt_negacyclic_harveyENS0_7PtrIterIPmEERKNS0_9NTTTablesEENKUlRT_E_clImEEDaS8_
	.p2align	4, 0x90
	.type	_ZZN4seal4util21ntt_negacyclic_harveyENS0_7PtrIterIPmEERKNS0_9NTTTablesEENKUlRT_E_clImEEDaS8_,@function
_ZZN4seal4util21ntt_negacyclic_harveyENS0_7PtrIterIPmEERKNS0_9NTTTablesEENKUlRT_E_clImEEDaS8_: # @_ZZN4seal4util21ntt_negacyclic_harveyENS0_7PtrIterIPmEERKNS0_9NTTTablesEENKUlRT_E_clImEEDaS8_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rcx
	movq	%rcx, -24(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	movq	(%rcx), %rcx
	cmpq	(%rcx), %rax
	jb	.LBB780_2
# %bb.1:
	movq	-24(%rbp), %rax                 # 8-byte Reload
	movq	(%rax), %rax
	movq	(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	(%rax), %rcx
	subq	%rdx, %rcx
	movq	%rcx, (%rax)
.LBB780_2:
	movq	-24(%rbp), %rcx                 # 8-byte Reload
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	movq	8(%rcx), %rcx
	cmpq	(%rcx), %rax
	jb	.LBB780_4
# %bb.3:
	movq	-24(%rbp), %rax                 # 8-byte Reload
	movq	8(%rax), %rax
	movq	(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	(%rax), %rcx
	subq	%rdx, %rcx
	movq	%rcx, (%rax)
.LBB780_4:
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end780:
	.size	_ZZN4seal4util21ntt_negacyclic_harveyENS0_7PtrIterIPmEERKNS0_9NTTTablesEENKUlRT_E_clImEEDaS8_, .Lfunc_end780-_ZZN4seal4util21ntt_negacyclic_harveyENS0_7PtrIterIPmEERKNS0_9NTTTablesEENKUlRT_E_clImEEDaS8_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK4seal4util7PtrIterIPmEdeEv,"axG",@progbits,_ZNK4seal4util7PtrIterIPmEdeEv,comdat
	.weak	_ZNK4seal4util7PtrIterIPmEdeEv  # -- Begin function _ZNK4seal4util7PtrIterIPmEdeEv
	.p2align	4, 0x90
	.type	_ZNK4seal4util7PtrIterIPmEdeEv,@function
_ZNK4seal4util7PtrIterIPmEdeEv:         # @_ZNK4seal4util7PtrIterIPmEdeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end781:
	.size	_ZNK4seal4util7PtrIterIPmEdeEv, .Lfunc_end781-_ZNK4seal4util7PtrIterIPmEdeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal4util7PtrIterIPmEppEv,"axG",@progbits,_ZN4seal4util7PtrIterIPmEppEv,comdat
	.weak	_ZN4seal4util7PtrIterIPmEppEv   # -- Begin function _ZN4seal4util7PtrIterIPmEppEv
	.p2align	4, 0x90
	.type	_ZN4seal4util7PtrIterIPmEppEv,@function
_ZN4seal4util7PtrIterIPmEppEv:          # @_ZN4seal4util7PtrIterIPmEppEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rcx
	addq	$8, %rcx
	movq	%rcx, (%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end782:
	.size	_ZN4seal4util7PtrIterIPmEppEv, .Lfunc_end782-_ZN4seal4util7PtrIterIPmEppEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK4seal4util7PtrIterIPmEeqImEEbRKNS1_IPT_EE,"axG",@progbits,_ZNK4seal4util7PtrIterIPmEeqImEEbRKNS1_IPT_EE,comdat
	.weak	_ZNK4seal4util7PtrIterIPmEeqImEEbRKNS1_IPT_EE # -- Begin function _ZNK4seal4util7PtrIterIPmEeqImEEbRKNS1_IPT_EE
	.p2align	4, 0x90
	.type	_ZNK4seal4util7PtrIterIPmEeqImEEbRKNS1_IPT_EE,@function
_ZNK4seal4util7PtrIterIPmEeqImEEbRKNS1_IPT_EE: # @_ZNK4seal4util7PtrIterIPmEeqImEEbRKNS1_IPT_EE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	movq	%rax, -24(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	callq	_ZNK4seal4util7PtrIterIPmE3ptrEv
	movq	%rax, %rcx
	movq	-24(%rbp), %rax                 # 8-byte Reload
	cmpq	%rcx, %rax
	sete	%al
	andb	$1, %al
	movzbl	%al, %eax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end783:
	.size	_ZNK4seal4util7PtrIterIPmEeqImEEbRKNS1_IPT_EE, .Lfunc_end783-_ZNK4seal4util7PtrIterIPmEeqImEEbRKNS1_IPT_EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK4seal4util7PtrIterIPmE3ptrEv,"axG",@progbits,_ZNK4seal4util7PtrIterIPmE3ptrEv,comdat
	.weak	_ZNK4seal4util7PtrIterIPmE3ptrEv # -- Begin function _ZNK4seal4util7PtrIterIPmE3ptrEv
	.p2align	4, 0x90
	.type	_ZNK4seal4util7PtrIterIPmE3ptrEv,@function
_ZNK4seal4util7PtrIterIPmE3ptrEv:       # @_ZNK4seal4util7PtrIterIPmE3ptrEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end784:
	.size	_ZNK4seal4util7PtrIterIPmE3ptrEv, .Lfunc_end784-_ZNK4seal4util7PtrIterIPmE3ptrEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIdSaIdEE11_M_data_ptrIdEEPT_S4_,"axG",@progbits,_ZNKSt6vectorIdSaIdEE11_M_data_ptrIdEEPT_S4_,comdat
	.weak	_ZNKSt6vectorIdSaIdEE11_M_data_ptrIdEEPT_S4_ # -- Begin function _ZNKSt6vectorIdSaIdEE11_M_data_ptrIdEEPT_S4_
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIdSaIdEE11_M_data_ptrIdEEPT_S4_,@function
_ZNKSt6vectorIdSaIdEE11_M_data_ptrIdEEPT_S4_: # @_ZNKSt6vectorIdSaIdEE11_M_data_ptrIdEEPT_S4_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-16(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end785:
	.size	_ZNKSt6vectorIdSaIdEE11_M_data_ptrIdEEPT_S4_, .Lfunc_end785-_ZNKSt6vectorIdSaIdEE11_M_data_ptrIdEEPT_S4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIdSaIdEE12emplace_backIJdEEERdDpOT_,"axG",@progbits,_ZNSt6vectorIdSaIdEE12emplace_backIJdEEERdDpOT_,comdat
	.weak	_ZNSt6vectorIdSaIdEE12emplace_backIJdEEERdDpOT_ # -- Begin function _ZNSt6vectorIdSaIdEE12emplace_backIJdEEERdDpOT_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIdSaIdEE12emplace_backIJdEEERdDpOT_,@function
_ZNSt6vectorIdSaIdEE12emplace_backIJdEEERdDpOT_: # @_ZNSt6vectorIdSaIdEE12emplace_backIJdEEERdDpOT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rcx
	movq	%rcx, -32(%rbp)                 # 8-byte Spill
	movq	8(%rcx), %rax
	cmpq	16(%rcx), %rax
	je	.LBB786_2
# %bb.1:
	movq	-32(%rbp), %rax                 # 8-byte Reload
	movq	%rax, %rcx
	movq	%rcx, -48(%rbp)                 # 8-byte Spill
	movq	8(%rax), %rax
	movq	%rax, -40(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	callq	_ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE
	movq	-48(%rbp), %rdi                 # 8-byte Reload
	movq	-40(%rbp), %rsi                 # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNSt16allocator_traitsISaIdEE9constructIdJdEEEvRS0_PT_DpOT0_
	movq	-32(%rbp), %rax                 # 8-byte Reload
	movq	8(%rax), %rcx
	addq	$8, %rcx
	movq	%rcx, 8(%rax)
	jmp	.LBB786_3
.LBB786_2:
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNSt6vectorIdSaIdEE3endEv
	movq	%rax, -24(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rdx
	movq	-24(%rbp), %rsi
	callq	_ZNSt6vectorIdSaIdEE17_M_realloc_insertIJdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_
.LBB786_3:
	movq	-32(%rbp), %rdi                 # 8-byte Reload
	callq	_ZNSt6vectorIdSaIdEE4backEv
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end786:
	.size	_ZNSt6vectorIdSaIdEE12emplace_backIJdEEERdDpOT_, .Lfunc_end786-_ZNSt6vectorIdSaIdEE12emplace_backIJdEEERdDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4moveIRdEONSt16remove_referenceIT_E4typeEOS2_,"axG",@progbits,_ZSt4moveIRdEONSt16remove_referenceIT_E4typeEOS2_,comdat
	.weak	_ZSt4moveIRdEONSt16remove_referenceIT_E4typeEOS2_ # -- Begin function _ZSt4moveIRdEONSt16remove_referenceIT_E4typeEOS2_
	.p2align	4, 0x90
	.type	_ZSt4moveIRdEONSt16remove_referenceIT_E4typeEOS2_,@function
_ZSt4moveIRdEONSt16remove_referenceIT_E4typeEOS2_: # @_ZSt4moveIRdEONSt16remove_referenceIT_E4typeEOS2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end787:
	.size	_ZSt4moveIRdEONSt16remove_referenceIT_E4typeEOS2_, .Lfunc_end787-_ZSt4moveIRdEONSt16remove_referenceIT_E4typeEOS2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIdEE9constructIdJdEEEvRS0_PT_DpOT0_,"axG",@progbits,_ZNSt16allocator_traitsISaIdEE9constructIdJdEEEvRS0_PT_DpOT0_,comdat
	.weak	_ZNSt16allocator_traitsISaIdEE9constructIdJdEEEvRS0_PT_DpOT0_ # -- Begin function _ZNSt16allocator_traitsISaIdEE9constructIdJdEEEvRS0_PT_DpOT0_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIdEE9constructIdJdEEEvRS0_PT_DpOT0_,@function
_ZNSt16allocator_traitsISaIdEE9constructIdJdEEEvRS0_PT_DpOT0_: # @_ZNSt16allocator_traitsISaIdEE9constructIdJdEEEvRS0_PT_DpOT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -40(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rax
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	movq	-24(%rbp), %rdi
	callq	_ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE
	movq	-40(%rbp), %rdi                 # 8-byte Reload
	movq	-32(%rbp), %rsi                 # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZN9__gnu_cxx13new_allocatorIdE9constructIdJdEEEvPT_DpOT0_
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end788:
	.size	_ZNSt16allocator_traitsISaIdEE9constructIdJdEEEvRS0_PT_DpOT0_, .Lfunc_end788-_ZNSt16allocator_traitsISaIdEE9constructIdJdEEEvRS0_PT_DpOT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE,"axG",@progbits,_ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE,comdat
	.weak	_ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE # -- Begin function _ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE
	.p2align	4, 0x90
	.type	_ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE,@function
_ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE: # @_ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end789:
	.size	_ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE, .Lfunc_end789-_ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIdSaIdEE17_M_realloc_insertIJdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_,"axG",@progbits,_ZNSt6vectorIdSaIdEE17_M_realloc_insertIJdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_,comdat
	.weak	_ZNSt6vectorIdSaIdEE17_M_realloc_insertIJdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_ # -- Begin function _ZNSt6vectorIdSaIdEE17_M_realloc_insertIJdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIdSaIdEE17_M_realloc_insertIJdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_,@function
_ZNSt6vectorIdSaIdEE17_M_realloc_insertIJdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_: # @_ZNSt6vectorIdSaIdEE17_M_realloc_insertIJdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$160, %rsp
	movq	%rsi, -8(%rbp)
	movq	%rdi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rdi
	movq	%rdi, -88(%rbp)                 # 8-byte Spill
	movl	$1, %esi
	leaq	.L.str.67(%rip), %rdx
	callq	_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc
	movq	-88(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, -32(%rbp)
	movq	(%rdi), %rax
	movq	%rax, -40(%rbp)
	movq	8(%rdi), %rax
	movq	%rax, -48(%rbp)
	callq	_ZNSt6vectorIdSaIdEE5beginEv
	movq	%rax, -64(%rbp)
	leaq	-8(%rbp), %rdi
	leaq	-64(%rbp), %rsi
	callq	_ZN9__gnu_cxxmiIPdSt6vectorIdSaIdEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_
	movq	-88(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, -56(%rbp)
	movq	-32(%rbp), %rsi
	callq	_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm
	movq	%rax, %rcx
	movq	-88(%rbp), %rax                 # 8-byte Reload
	movq	%rcx, -72(%rbp)
	movq	-72(%rbp), %rcx
	movq	%rcx, -80(%rbp)
	movq	%rax, -152(%rbp)                # 8-byte Spill
	movq	-72(%rbp), %rax
	movq	-56(%rbp), %rcx
	shlq	$3, %rcx
	addq	%rcx, %rax
	movq	%rax, -144(%rbp)                # 8-byte Spill
	movq	-24(%rbp), %rdi
	callq	_ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE
	movq	-152(%rbp), %rdi                # 8-byte Reload
	movq	-144(%rbp), %rsi                # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNSt16allocator_traitsISaIdEE9constructIdJdEEEvRS0_PT_DpOT0_
	movq	$0, -80(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -136(%rbp)                # 8-byte Spill
	leaq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv
	movq	-88(%rbp), %rdi                 # 8-byte Reload
	movq	(%rax), %rax
	movq	%rax, -128(%rbp)                # 8-byte Spill
	movq	-72(%rbp), %rax
	movq	%rax, -120(%rbp)                # 8-byte Spill
	callq	_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv
	movq	-136(%rbp), %rdi                # 8-byte Reload
	movq	-128(%rbp), %rsi                # 8-byte Reload
	movq	-120(%rbp), %rdx                # 8-byte Reload
	movq	%rax, %rcx
	callq	_ZNSt6vectorIdSaIdEE11_S_relocateEPdS2_S2_RS0_
	movq	%rax, -80(%rbp)
	movq	-80(%rbp), %rax
	addq	$8, %rax
	movq	%rax, -80(%rbp)
	leaq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv
	movq	-88(%rbp), %rdi                 # 8-byte Reload
	movq	(%rax), %rax
	movq	%rax, -112(%rbp)                # 8-byte Spill
	movq	-48(%rbp), %rax
	movq	%rax, -104(%rbp)                # 8-byte Spill
	movq	-80(%rbp), %rax
	movq	%rax, -96(%rbp)                 # 8-byte Spill
	callq	_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv
	movq	-112(%rbp), %rdi                # 8-byte Reload
	movq	-104(%rbp), %rsi                # 8-byte Reload
	movq	-96(%rbp), %rdx                 # 8-byte Reload
	movq	%rax, %rcx
	callq	_ZNSt6vectorIdSaIdEE11_S_relocateEPdS2_S2_RS0_
	movq	%rax, %rcx
	movq	-88(%rbp), %rax                 # 8-byte Reload
	movq	%rcx, -80(%rbp)
	movq	%rax, %rdi
	movq	-40(%rbp), %rsi
	movq	16(%rax), %rdx
	movq	-40(%rbp), %rax
	subq	%rax, %rdx
	sarq	$3, %rdx
	callq	_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm
	movq	-88(%rbp), %rax                 # 8-byte Reload
	movq	-72(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-80(%rbp), %rcx
	movq	%rcx, 8(%rax)
	movq	-72(%rbp), %rcx
	movq	-32(%rbp), %rdx
	shlq	$3, %rdx
	addq	%rdx, %rcx
	movq	%rcx, 16(%rax)
	addq	$160, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end790:
	.size	_ZNSt6vectorIdSaIdEE17_M_realloc_insertIJdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_, .Lfunc_end790-_ZNSt6vectorIdSaIdEE17_M_realloc_insertIJdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIdSaIdEE4backEv,"axG",@progbits,_ZNSt6vectorIdSaIdEE4backEv,comdat
	.weak	_ZNSt6vectorIdSaIdEE4backEv     # -- Begin function _ZNSt6vectorIdSaIdEE4backEv
	.p2align	4, 0x90
	.type	_ZNSt6vectorIdSaIdEE4backEv,@function
_ZNSt6vectorIdSaIdEE4backEv:            # @_ZNSt6vectorIdSaIdEE4backEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt6vectorIdSaIdEE3endEv
	movq	%rax, -24(%rbp)
	leaq	-24(%rbp), %rdi
	movl	$1, %esi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEmiEl
	movq	%rax, -16(%rbp)
	leaq	-16(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEdeEv
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end791:
	.size	_ZNSt6vectorIdSaIdEE4backEv, .Lfunc_end791-_ZNSt6vectorIdSaIdEE4backEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIdE9constructIdJdEEEvPT_DpOT0_,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIdE9constructIdJdEEEvPT_DpOT0_,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIdE9constructIdJdEEEvPT_DpOT0_ # -- Begin function _ZN9__gnu_cxx13new_allocatorIdE9constructIdJdEEEvPT_DpOT0_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIdE9constructIdJdEEEvPT_DpOT0_,@function
_ZN9__gnu_cxx13new_allocatorIdE9constructIdJdEEEvPT_DpOT0_: # @_ZN9__gnu_cxx13new_allocatorIdE9constructIdJdEEEvPT_DpOT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -32(%rbp)                 # 8-byte Spill
	movq	-24(%rbp), %rdi
	callq	_ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE
	movq	%rax, %rcx
	movq	-32(%rbp), %rax                 # 8-byte Reload
	movsd	(%rcx), %xmm0                   # xmm0 = mem[0],zero
	movsd	%xmm0, (%rax)
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end792:
	.size	_ZN9__gnu_cxx13new_allocatorIdE9constructIdJdEEEvPT_DpOT0_, .Lfunc_end792-_ZN9__gnu_cxx13new_allocatorIdE9constructIdJdEEEvPT_DpOT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEmiEl,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEmiEl,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEmiEl # -- Begin function _ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEmiEl
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEmiEl,@function
_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEmiEl: # @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEmiEl
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	xorl	%ecx, %ecx
                                        # kill: def $rcx killed $ecx
	subq	-24(%rbp), %rcx
	shlq	$3, %rcx
	addq	%rcx, %rax
	movq	%rax, -32(%rbp)
	leaq	-8(%rbp), %rdi
	leaq	-32(%rbp), %rsi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEC2ERKS1_
	movq	-8(%rbp), %rax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end793:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEmiEl, .Lfunc_end793-_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEmiEl
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEdeEv,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEdeEv,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEdeEv # -- Begin function _ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEdeEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEdeEv,@function
_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEdeEv: # @_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEdeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end794:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEdeEv, .Lfunc_end794-_ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEdeEv
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3                               # -- Begin function _ZN4seal11CKKSEncoder15decode_internalIdvEEvRKNS_9PlaintextEPT_NS_16MemoryPoolHandleE
.LCPI795_0:
	.quad	0x3ff0000000000000              # double 1
.LCPI795_1:
	.quad	0x4000000000000000              # double 2
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4
.LCPI795_2:
	.long	1127219200                      # 0x43300000
	.long	1160773632                      # 0x45300000
	.long	0                               # 0x0
	.long	0                               # 0x0
.LCPI795_3:
	.quad	0x4330000000000000              # double 4503599627370496
	.quad	0x4530000000000000              # double 1.9342813113834067E+25
	.section	.text._ZN4seal11CKKSEncoder15decode_internalIdvEEvRKNS_9PlaintextEPT_NS_16MemoryPoolHandleE,"axG",@progbits,_ZN4seal11CKKSEncoder15decode_internalIdvEEvRKNS_9PlaintextEPT_NS_16MemoryPoolHandleE,comdat
	.weak	_ZN4seal11CKKSEncoder15decode_internalIdvEEvRKNS_9PlaintextEPT_NS_16MemoryPoolHandleE
	.p2align	4, 0x90
	.type	_ZN4seal11CKKSEncoder15decode_internalIdvEEvRKNS_9PlaintextEPT_NS_16MemoryPoolHandleE,@function
_ZN4seal11CKKSEncoder15decode_internalIdvEEvRKNS_9PlaintextEPT_NS_16MemoryPoolHandleE: # @_ZN4seal11CKKSEncoder15decode_internalIdvEEvRKNS_9PlaintextEPT_NS_16MemoryPoolHandleE
.Lfunc_begin86:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception86
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$688, %rsp                      # imm = 0x2B0
	movq	%rcx, -384(%rbp)                # 8-byte Spill
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rsi
	movq	%rsi, -376(%rbp)                # 8-byte Spill
	movq	-16(%rbp), %rdi
	addq	$16, %rsi
	callq	_ZN4seal12is_valid_forERKNS_9PlaintextERKNS_11SEALContextE
	testb	$1, %al
	jne	.LBB795_4
# %bb.1:
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rdi
	movq	%rdi, %rax
	movq	%rax, -392(%rbp)                # 8-byte Spill
.Ltmp1108:
	leaq	.L.str.86(%rip), %rsi
	callq	_ZNSt16invalid_argumentC1EPKc@PLT
.Ltmp1109:
	jmp	.LBB795_2
.LBB795_2:
	movq	-392(%rbp), %rdi                # 8-byte Reload
	movq	_ZTISt16invalid_argument@GOTPCREL(%rip), %rsi
	movq	_ZNSt16invalid_argumentD1Ev@GOTPCREL(%rip), %rdx
	callq	__cxa_throw@PLT
.LBB795_3:
.Ltmp1110:
	movq	-392(%rbp), %rdi                # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -32(%rbp)
	movl	%eax, -36(%rbp)
	callq	__cxa_free_exception@PLT
	jmp	.LBB795_86
.LBB795_4:
	movq	-16(%rbp), %rdi
	callq	_ZNK4seal9Plaintext11is_ntt_formEv
	testb	$1, %al
	jne	.LBB795_8
# %bb.5:
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rdi
	movq	%rdi, %rax
	movq	%rax, -400(%rbp)                # 8-byte Spill
.Ltmp1111:
	leaq	.L.str.87(%rip), %rsi
	callq	_ZNSt16invalid_argumentC1EPKc@PLT
.Ltmp1112:
	jmp	.LBB795_6
.LBB795_6:
	movq	-400(%rbp), %rdi                # 8-byte Reload
	movq	_ZTISt16invalid_argument@GOTPCREL(%rip), %rsi
	movq	_ZNSt16invalid_argumentD1Ev@GOTPCREL(%rip), %rdx
	callq	__cxa_throw@PLT
.LBB795_7:
.Ltmp1113:
	movq	-400(%rbp), %rdi                # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -32(%rbp)
	movl	%eax, -36(%rbp)
	callq	__cxa_free_exception@PLT
	jmp	.LBB795_86
.LBB795_8:
	cmpq	$0, -24(%rbp)
	jne	.LBB795_12
# %bb.9:
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rdi
	movq	%rdi, %rax
	movq	%rax, -408(%rbp)                # 8-byte Spill
.Ltmp1114:
	leaq	.L.str.88(%rip), %rsi
	callq	_ZNSt16invalid_argumentC1EPKc@PLT
.Ltmp1115:
	jmp	.LBB795_10
.LBB795_10:
	movq	-408(%rbp), %rdi                # 8-byte Reload
	movq	_ZTISt16invalid_argument@GOTPCREL(%rip), %rsi
	movq	_ZNSt16invalid_argumentD1Ev@GOTPCREL(%rip), %rdx
	callq	__cxa_throw@PLT
.LBB795_11:
.Ltmp1116:
	movq	-408(%rbp), %rdi                # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -32(%rbp)
	movl	%eax, -36(%rbp)
	callq	__cxa_free_exception@PLT
	jmp	.LBB795_86
.LBB795_12:
	movq	-384(%rbp), %rdi                # 8-byte Reload
	callq	_ZNK4seal16MemoryPoolHandlecvbEv
	testb	$1, %al
	jne	.LBB795_16
# %bb.13:
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rdi
	movq	%rdi, %rax
	movq	%rax, -416(%rbp)                # 8-byte Spill
.Ltmp1117:
	leaq	.L.str.60(%rip), %rsi
	callq	_ZNSt16invalid_argumentC1EPKc@PLT
.Ltmp1118:
	jmp	.LBB795_14
.LBB795_14:
	movq	-416(%rbp), %rdi                # 8-byte Reload
	movq	_ZTISt16invalid_argument@GOTPCREL(%rip), %rsi
	movq	_ZNSt16invalid_argumentD1Ev@GOTPCREL(%rip), %rdx
	callq	__cxa_throw@PLT
.LBB795_15:
.Ltmp1119:
	movq	-416(%rbp), %rdi                # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -32(%rbp)
	movl	%eax, -36(%rbp)
	callq	__cxa_free_exception@PLT
	jmp	.LBB795_86
.LBB795_16:
	movq	-376(%rbp), %rax                # 8-byte Reload
	addq	$16, %rax
	movq	%rax, -432(%rbp)                # 8-byte Spill
	movq	-16(%rbp), %rdi
	callq	_ZNK4seal9Plaintext8parms_idEv
	movq	-432(%rbp), %rsi                # 8-byte Reload
	movq	(%rax), %rcx
	movq	%rcx, -96(%rbp)
	movq	8(%rax), %rcx
	movq	%rcx, -88(%rbp)
	movq	16(%rax), %rcx
	movq	%rcx, -80(%rbp)
	movq	24(%rax), %rax
	movq	%rax, -72(%rbp)
	leaq	-64(%rbp), %rdi
	leaq	-96(%rbp), %rax
	movq	(%rax), %rcx
	movq	%rcx, (%rsp)
	movq	8(%rax), %rcx
	movq	%rcx, 8(%rsp)
	movq	16(%rax), %rcx
	movq	%rcx, 16(%rsp)
	movq	24(%rax), %rax
	movq	%rax, 24(%rsp)
	callq	_ZNK4seal11SEALContext16get_context_dataESt5arrayImLm4EE
	leaq	-64(%rbp), %rdi
	callq	_ZNKSt19__shared_ptr_accessIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2ELb0ELb0EEdeEv
	movq	%rax, -424(%rbp)                # 8-byte Spill
	leaq	-64(%rbp), %rdi
	callq	_ZNSt10shared_ptrIKN4seal11SEALContext11ContextDataEED2Ev
	movq	-424(%rbp), %rax                # 8-byte Reload
	movq	%rax, -48(%rbp)
	movq	-48(%rbp), %rdi
	callq	_ZNK4seal11SEALContext11ContextData5parmsEv
	movq	%rax, -104(%rbp)
	movq	-104(%rbp), %rdi
	callq	_ZNK4seal20EncryptionParameters13coeff_modulusEv
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIN4seal7ModulusESaIS1_EE4sizeEv
	movq	%rax, -112(%rbp)
	movq	-104(%rbp), %rdi
	callq	_ZNK4seal20EncryptionParameters19poly_modulus_degreeEv
	movq	%rax, -120(%rbp)
	movq	-120(%rbp), %rdi
	movq	-112(%rbp), %rsi
	callq	_ZN4seal4util8mul_safeImvEET_S2_S2_
	movq	%rax, -128(%rbp)
	movq	-48(%rbp), %rdi
	callq	_ZNK4seal11SEALContext11ContextData16small_ntt_tablesEv
	movq	%rax, -136(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZNK4seal9Plaintext5scaleEv
	xorps	%xmm0, %xmm0
	ucomisd	(%rax), %xmm0
	jae	.LBB795_18
# %bb.17:
	movq	-16(%rbp), %rdi
	callq	_ZNK4seal9Plaintext5scaleEv
	movsd	(%rax), %xmm0                   # xmm0 = mem[0],zero
	callq	log2@PLT
	cvttsd2si	%xmm0, %eax
	movl	%eax, -436(%rbp)                # 4-byte Spill
	movq	-48(%rbp), %rdi
	callq	_ZNK4seal11SEALContext11ContextData29total_coeff_modulus_bit_countEv
	movl	%eax, %ecx
	movl	-436(%rbp), %eax                # 4-byte Reload
	cmpl	%ecx, %eax
	jl	.LBB795_21
.LBB795_18:
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rdi
	movq	%rdi, %rax
	movq	%rax, -448(%rbp)                # 8-byte Spill
.Ltmp1164:
	leaq	.L.str.78(%rip), %rsi
	callq	_ZNSt16invalid_argumentC1EPKc@PLT
.Ltmp1165:
	jmp	.LBB795_19
.LBB795_19:
	movq	-448(%rbp), %rdi                # 8-byte Reload
	movq	_ZTISt16invalid_argument@GOTPCREL(%rip), %rsi
	movq	_ZNSt16invalid_argumentD1Ev@GOTPCREL(%rip), %rdx
	callq	__cxa_throw@PLT
.LBB795_20:
.Ltmp1166:
	movq	-448(%rbp), %rdi                # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -32(%rbp)
	movl	%eax, -36(%rbp)
	callq	__cxa_free_exception@PLT
	jmp	.LBB795_86
.LBB795_21:
	movq	-48(%rbp), %rdi
	callq	_ZNK4seal11SEALContext11ContextData19total_coeff_modulusEv
	movq	%rax, -144(%rbp)
	movq	-48(%rbp), %rdi
	callq	_ZNK4seal11SEALContext11ContextData20upper_half_thresholdEv
	movq	%rax, -152(%rbp)
	movq	-120(%rbp), %rdi
	callq	_ZN4seal4util16get_power_of_twoEm
	movl	%eax, -156(%rbp)
	cmpl	$0, -156(%rbp)
	jl	.LBB795_24
# %bb.22:
	cmpq	$2, -120(%rbp)
	jb	.LBB795_24
# %bb.23:
	cmpq	$131072, -120(%rbp)             # imm = 0x20000
	jbe	.LBB795_27
.LBB795_24:
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rdi
	movq	%rdi, %rax
	movq	%rax, -456(%rbp)                # 8-byte Spill
.Ltmp1161:
	leaq	.L.str.77(%rip), %rsi
	callq	_ZNSt11logic_errorC1EPKc@PLT
.Ltmp1162:
	jmp	.LBB795_25
.LBB795_25:
	movq	-456(%rbp), %rdi                # 8-byte Reload
	movq	_ZTISt11logic_error@GOTPCREL(%rip), %rsi
	movq	_ZNSt11logic_errorD1Ev@GOTPCREL(%rip), %rdx
	callq	__cxa_throw@PLT
.LBB795_26:
.Ltmp1163:
	movq	-456(%rbp), %rdi                # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -32(%rbp)
	movl	%eax, -36(%rbp)
	callq	__cxa_free_exception@PLT
	jmp	.LBB795_86
.LBB795_27:
	movq	-16(%rbp), %rdi
	callq	_ZNK4seal9Plaintext5scaleEv
	movq	-384(%rbp), %rdi                # 8-byte Reload
	movsd	(%rax), %xmm1                   # xmm1 = mem[0],zero
	movsd	.LCPI795_0(%rip), %xmm0         # xmm0 = mem[0],zero
	divsd	%xmm1, %xmm0
	movsd	%xmm0, -168(%rbp)
	movq	-128(%rbp), %rax
	movq	%rax, -472(%rbp)                # 8-byte Spill
	callq	_ZNK4seal16MemoryPoolHandlecvRNS_4util10MemoryPoolEEv
	movq	-472(%rbp), %rsi                # 8-byte Reload
	movq	%rax, %rdx
	leaq	-200(%rbp), %rdi
	callq	_ZN4seal4util13allocate_uintEmRNS0_10MemoryPoolE
	movq	-16(%rbp), %rdi
.Ltmp1120:
	callq	_ZNK4seal9Plaintext4dataEv
.Ltmp1121:
	movq	%rax, -464(%rbp)                # 8-byte Spill
	jmp	.LBB795_28
.LBB795_28:
	movq	-128(%rbp), %rax
	movq	%rax, -480(%rbp)                # 8-byte Spill
	leaq	-200(%rbp), %rdi
	callq	_ZNK4seal4util7PointerImvE3getEv
	movq	-464(%rbp), %rdi                # 8-byte Reload
	movq	-480(%rbp), %rsi                # 8-byte Reload
	movq	%rax, %rdx
.Ltmp1122:
	callq	_ZN4seal4util8set_uintEPKmmPm
.Ltmp1123:
	jmp	.LBB795_29
.LBB795_29:
.Ltmp1124:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.89(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp1125:
	movq	%rax, -488(%rbp)                # 8-byte Spill
	jmp	.LBB795_30
.LBB795_30:
.Ltmp1126:
	movq	-488(%rbp), %rdi                # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp1127:
	jmp	.LBB795_31
.LBB795_31:
	movq	$0, -208(%rbp)
.LBB795_32:                             # =>This Inner Loop Header: Depth=1
	movq	-208(%rbp), %rax
	cmpq	-112(%rbp), %rax
	jae	.LBB795_40
# %bb.33:                               #   in Loop: Header=BB795_32 Depth=1
	leaq	-200(%rbp), %rdi
	callq	_ZNK4seal4util7PointerImvE3getEv
	movq	-208(%rbp), %rcx
	movq	-120(%rbp), %rdx
	imulq	%rdx, %rcx
	leaq	(%rax,%rcx,8), %rsi
	leaq	-216(%rbp), %rdi
	callq	_ZN4seal4util7PtrIterIPmEC2ImEEPT_
	movq	-136(%rbp), %rsi
	movq	-208(%rbp), %rax
	leaq	(%rax,%rax,8), %rax
	shlq	$5, %rax
	addq	%rax, %rsi
	movq	-216(%rbp), %rdi
.Ltmp1152:
	xorl	%edx, %edx
	callq	_ZN4seal4util29inverse_ntt_negacyclic_harveyENS0_7PtrIterIPmEERKNS0_9NTTTablesEi
.Ltmp1153:
	jmp	.LBB795_34
.LBB795_34:                             #   in Loop: Header=BB795_32 Depth=1
	movq	-136(%rbp), %rdi
	movq	-208(%rbp), %rax
	leaq	(%rax,%rax,8), %rax
	shlq	$5, %rax
	addq	%rax, %rdi
.Ltmp1154:
	callq	_ZNK4seal4util9NTTTables8get_rootEv
.Ltmp1155:
	movq	%rax, -496(%rbp)                # 8-byte Spill
	jmp	.LBB795_35
.LBB795_35:                             #   in Loop: Header=BB795_32 Depth=1
.Ltmp1156:
	movq	-496(%rbp), %rsi                # 8-byte Reload
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	callq	_ZNSolsEm@PLT
.Ltmp1157:
	movq	%rax, -504(%rbp)                # 8-byte Spill
	jmp	.LBB795_36
.LBB795_36:                             #   in Loop: Header=BB795_32 Depth=1
.Ltmp1158:
	movq	-504(%rbp), %rdi                # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp1159:
	jmp	.LBB795_37
.LBB795_37:                             #   in Loop: Header=BB795_32 Depth=1
	jmp	.LBB795_38
.LBB795_38:                             #   in Loop: Header=BB795_32 Depth=1
	movq	-208(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -208(%rbp)
	jmp	.LBB795_32
.LBB795_39:
.Ltmp1160:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -32(%rbp)
	movl	%eax, -36(%rbp)
	jmp	.LBB795_85
.LBB795_40:
.Ltmp1128:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.90(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
.Ltmp1129:
	movq	%rax, -512(%rbp)                # 8-byte Spill
	jmp	.LBB795_41
.LBB795_41:
.Ltmp1130:
	movq	-512(%rbp), %rdi                # 8-byte Reload
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
.Ltmp1131:
	jmp	.LBB795_42
.LBB795_42:
	movq	-48(%rbp), %rdi
	callq	_ZNK4seal11SEALContext11ContextData8rns_toolEv
	movq	%rax, %rdi
	callq	_ZNK4seal4util7RNSTool6base_qEv
	movq	%rax, -544(%rbp)                # 8-byte Spill
	leaq	-200(%rbp), %rdi
	callq	_ZNK4seal4util7PointerImvE3getEv
	movq	-384(%rbp), %rsi                # 8-byte Reload
	movq	%rax, -536(%rbp)                # 8-byte Spill
	movq	-120(%rbp), %rax
	movq	%rax, -528(%rbp)                # 8-byte Spill
	leaq	-232(%rbp), %rdi
	movq	%rdi, -520(%rbp)                # 8-byte Spill
	callq	_ZN4seal16MemoryPoolHandleC2ERKS0_
	movq	-544(%rbp), %rdi                # 8-byte Reload
	movq	-536(%rbp), %rsi                # 8-byte Reload
	movq	-528(%rbp), %rdx                # 8-byte Reload
	movq	-520(%rbp), %rcx                # 8-byte Reload
.Ltmp1132:
	callq	_ZNK4seal4util7RNSBase13compose_arrayEPmmNS_16MemoryPoolHandleE@PLT
.Ltmp1133:
	jmp	.LBB795_43
.LBB795_43:
	leaq	-232(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	movsd	.LCPI795_1(%rip), %xmm0         # xmm0 = mem[0],zero
	movl	$64, %edi
	callq	_ZSt3powIdiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_Xsr3std12__is_integerIS2_EE7__valueEE6__typeENS4_IS3_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEE6__typeES2_S3_
	movq	-384(%rbp), %rdi                # 8-byte Reload
	movsd	%xmm0, -240(%rbp)
	movq	-120(%rbp), %rax
	movq	%rax, -560(%rbp)                # 8-byte Spill
.Ltmp1135:
	callq	_ZNK4seal16MemoryPoolHandlecvRNS_4util10MemoryPoolEEv
.Ltmp1136:
	movq	%rax, -552(%rbp)                # 8-byte Spill
	jmp	.LBB795_44
.LBB795_44:
.Ltmp1137:
	movq	-552(%rbp), %rdx                # 8-byte Reload
	movq	-560(%rbp), %rsi                # 8-byte Reload
	leaq	-272(%rbp), %rdi
	callq	_ZN4seal4util8allocateISt7complexIdEJEvEEDamRNS0_10MemoryPoolEDpOT0_
.Ltmp1138:
	jmp	.LBB795_45
.LBB795_45:
	movq	$0, -280(%rbp)
.LBB795_46:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB795_68 Depth 2
                                        #     Child Loop BB795_50 Depth 2
	movq	-280(%rbp), %rax
	cmpq	-120(%rbp), %rax
	jae	.LBB795_78
# %bb.47:                               #   in Loop: Header=BB795_46 Depth=1
	movq	-280(%rbp), %rsi
	leaq	-272(%rbp), %rdi
	callq	_ZN4seal4util7PointerISt7complexIdEvEixEm
	movq	%rax, %rdi
	xorps	%xmm0, %xmm0
	callq	_ZNSt7complexIdEaSEd
	leaq	-200(%rbp), %rdi
	callq	_ZNK4seal4util7PointerImvE3getEv
	movq	-280(%rbp), %rcx
	movq	-112(%rbp), %rdx
	imulq	%rdx, %rcx
	leaq	(%rax,%rcx,8), %rdi
	movq	-152(%rbp), %rsi
.Ltmp1143:
	callq	_ZN4seal4util29is_greater_than_or_equal_uintEPKmS2_m
.Ltmp1144:
	movb	%al, -561(%rbp)                 # 1-byte Spill
	jmp	.LBB795_48
.LBB795_48:                             #   in Loop: Header=BB795_46 Depth=1
	movb	-561(%rbp), %al                 # 1-byte Reload
	testb	$1, %al
	jne	.LBB795_49
	jmp	.LBB795_67
.LBB795_49:                             #   in Loop: Header=BB795_46 Depth=1
	movsd	-168(%rbp), %xmm0               # xmm0 = mem[0],zero
	movsd	%xmm0, -288(%rbp)
	movq	$0, -296(%rbp)
.LBB795_50:                             #   Parent Loop BB795_46 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	-296(%rbp), %rax
	cmpq	-112(%rbp), %rax
	jae	.LBB795_66
# %bb.51:                               #   in Loop: Header=BB795_50 Depth=2
	movq	-280(%rbp), %rsi
	imulq	-112(%rbp), %rsi
	addq	-296(%rbp), %rsi
	leaq	-200(%rbp), %rdi
	callq	_ZN4seal4util7PointerImvEixEm
	movq	(%rax), %rax
	movq	-144(%rbp), %rcx
	movq	-296(%rbp), %rdx
	cmpq	(%rcx,%rdx,8), %rax
	jbe	.LBB795_59
# %bb.52:                               #   in Loop: Header=BB795_50 Depth=2
	movq	-280(%rbp), %rsi
	imulq	-112(%rbp), %rsi
	addq	-296(%rbp), %rsi
	leaq	-200(%rbp), %rdi
	callq	_ZN4seal4util7PointerImvEixEm
	movq	(%rax), %rax
	movq	-144(%rbp), %rcx
	movq	-296(%rbp), %rdx
	subq	(%rcx,%rdx,8), %rax
	movq	%rax, -304(%rbp)
	cmpq	$0, -304(%rbp)
	je	.LBB795_54
# %bb.53:                               #   in Loop: Header=BB795_50 Depth=2
	movaps	.LCPI795_2(%rip), %xmm1         # xmm1 = [1127219200,1160773632,0,0]
	movq	-304(%rbp), %xmm0               # xmm0 = mem[0],zero
	punpckldq	%xmm1, %xmm0            # xmm0 = xmm0[0],xmm1[0],xmm0[1],xmm1[1]
	movapd	.LCPI795_3(%rip), %xmm1         # xmm1 = [4.503599627370496E+15,1.9342813113834067E+25]
	subpd	%xmm1, %xmm0
	movaps	%xmm0, %xmm1
	unpckhpd	%xmm0, %xmm0                    # xmm0 = xmm0[1,1]
	addsd	%xmm1, %xmm0
	mulsd	-288(%rbp), %xmm0
	movsd	%xmm0, -576(%rbp)               # 8-byte Spill
	jmp	.LBB795_55
.LBB795_54:                             #   in Loop: Header=BB795_50 Depth=2
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -576(%rbp)               # 8-byte Spill
	jmp	.LBB795_55
.LBB795_55:                             #   in Loop: Header=BB795_50 Depth=2
	movsd	-576(%rbp), %xmm0               # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movsd	%xmm0, -584(%rbp)               # 8-byte Spill
	movq	-280(%rbp), %rsi
	leaq	-272(%rbp), %rdi
	callq	_ZN4seal4util7PointerISt7complexIdEvEixEm
	movsd	-584(%rbp), %xmm0               # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movq	%rax, %rdi
.Ltmp1149:
	callq	_ZNSt7complexIdEpLEd
.Ltmp1150:
	jmp	.LBB795_56
.LBB795_56:                             #   in Loop: Header=BB795_50 Depth=2
	jmp	.LBB795_64
.LBB795_57:
.Ltmp1134:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -32(%rbp)
	movl	%eax, -36(%rbp)
	leaq	-232(%rbp), %rdi
	callq	_ZN4seal16MemoryPoolHandleD2Ev
	jmp	.LBB795_85
.LBB795_58:
.Ltmp1151:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -32(%rbp)
	movl	%eax, -36(%rbp)
	leaq	-272(%rbp), %rdi
	callq	_ZN4seal4util7PointerISt7complexIdEvED2Ev
	jmp	.LBB795_85
.LBB795_59:                             #   in Loop: Header=BB795_50 Depth=2
	movq	-144(%rbp), %rax
	movq	-296(%rbp), %rcx
	movq	(%rax,%rcx,8), %rax
	movq	%rax, -592(%rbp)                # 8-byte Spill
	movq	-280(%rbp), %rsi
	imulq	-112(%rbp), %rsi
	addq	-296(%rbp), %rsi
	leaq	-200(%rbp), %rdi
	callq	_ZN4seal4util7PointerImvEixEm
	movq	%rax, %rcx
	movq	-592(%rbp), %rax                # 8-byte Reload
	subq	(%rcx), %rax
	movq	%rax, -312(%rbp)
	cmpq	$0, -312(%rbp)
	je	.LBB795_61
# %bb.60:                               #   in Loop: Header=BB795_50 Depth=2
	movaps	.LCPI795_2(%rip), %xmm1         # xmm1 = [1127219200,1160773632,0,0]
	movq	-312(%rbp), %xmm0               # xmm0 = mem[0],zero
	punpckldq	%xmm1, %xmm0            # xmm0 = xmm0[0],xmm1[0],xmm0[1],xmm1[1]
	movapd	.LCPI795_3(%rip), %xmm1         # xmm1 = [4.503599627370496E+15,1.9342813113834067E+25]
	subpd	%xmm1, %xmm0
	movaps	%xmm0, %xmm1
	unpckhpd	%xmm0, %xmm0                    # xmm0 = xmm0[1,1]
	addsd	%xmm1, %xmm0
	mulsd	-288(%rbp), %xmm0
	movsd	%xmm0, -600(%rbp)               # 8-byte Spill
	jmp	.LBB795_62
.LBB795_61:                             #   in Loop: Header=BB795_50 Depth=2
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -600(%rbp)               # 8-byte Spill
	jmp	.LBB795_62
.LBB795_62:                             #   in Loop: Header=BB795_50 Depth=2
	movsd	-600(%rbp), %xmm0               # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movsd	%xmm0, -608(%rbp)               # 8-byte Spill
	movq	-280(%rbp), %rsi
	leaq	-272(%rbp), %rdi
	callq	_ZN4seal4util7PointerISt7complexIdEvEixEm
	movsd	-608(%rbp), %xmm0               # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movq	%rax, %rdi
.Ltmp1147:
	callq	_ZNSt7complexIdEmIEd
.Ltmp1148:
	jmp	.LBB795_63
.LBB795_63:                             #   in Loop: Header=BB795_50 Depth=2
	jmp	.LBB795_64
.LBB795_64:                             #   in Loop: Header=BB795_50 Depth=2
	jmp	.LBB795_65
.LBB795_65:                             #   in Loop: Header=BB795_50 Depth=2
	movq	-296(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -296(%rbp)
	movsd	-240(%rbp), %xmm0               # xmm0 = mem[0],zero
	mulsd	-288(%rbp), %xmm0
	movsd	%xmm0, -288(%rbp)
	jmp	.LBB795_50
.LBB795_66:                             #   in Loop: Header=BB795_46 Depth=1
	jmp	.LBB795_76
.LBB795_67:                             #   in Loop: Header=BB795_46 Depth=1
	movsd	-168(%rbp), %xmm0               # xmm0 = mem[0],zero
	movsd	%xmm0, -320(%rbp)
	movq	$0, -328(%rbp)
.LBB795_68:                             #   Parent Loop BB795_46 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	-328(%rbp), %rax
	cmpq	-112(%rbp), %rax
	jae	.LBB795_75
# %bb.69:                               #   in Loop: Header=BB795_68 Depth=2
	movq	-280(%rbp), %rsi
	imulq	-112(%rbp), %rsi
	addq	-328(%rbp), %rsi
	leaq	-200(%rbp), %rdi
	callq	_ZN4seal4util7PointerImvEixEm
	movq	(%rax), %rax
	movq	%rax, -336(%rbp)
	cmpq	$0, -336(%rbp)
	je	.LBB795_71
# %bb.70:                               #   in Loop: Header=BB795_68 Depth=2
	movaps	.LCPI795_2(%rip), %xmm1         # xmm1 = [1127219200,1160773632,0,0]
	movq	-336(%rbp), %xmm0               # xmm0 = mem[0],zero
	punpckldq	%xmm1, %xmm0            # xmm0 = xmm0[0],xmm1[0],xmm0[1],xmm1[1]
	movapd	.LCPI795_3(%rip), %xmm1         # xmm1 = [4.503599627370496E+15,1.9342813113834067E+25]
	subpd	%xmm1, %xmm0
	movaps	%xmm0, %xmm1
	unpckhpd	%xmm0, %xmm0                    # xmm0 = xmm0[1,1]
	addsd	%xmm1, %xmm0
	mulsd	-320(%rbp), %xmm0
	movsd	%xmm0, -616(%rbp)               # 8-byte Spill
	jmp	.LBB795_72
.LBB795_71:                             #   in Loop: Header=BB795_68 Depth=2
	xorps	%xmm0, %xmm0
	movsd	%xmm0, -616(%rbp)               # 8-byte Spill
	jmp	.LBB795_72
.LBB795_72:                             #   in Loop: Header=BB795_68 Depth=2
	movsd	-616(%rbp), %xmm0               # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movsd	%xmm0, -624(%rbp)               # 8-byte Spill
	movq	-280(%rbp), %rsi
	leaq	-272(%rbp), %rdi
	callq	_ZN4seal4util7PointerISt7complexIdEvEixEm
	movsd	-624(%rbp), %xmm0               # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movq	%rax, %rdi
.Ltmp1145:
	callq	_ZNSt7complexIdEpLEd
.Ltmp1146:
	jmp	.LBB795_73
.LBB795_73:                             #   in Loop: Header=BB795_68 Depth=2
	jmp	.LBB795_74
.LBB795_74:                             #   in Loop: Header=BB795_68 Depth=2
	movq	-328(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -328(%rbp)
	movsd	-240(%rbp), %xmm0               # xmm0 = mem[0],zero
	mulsd	-320(%rbp), %xmm0
	movsd	%xmm0, -320(%rbp)
	jmp	.LBB795_68
.LBB795_75:                             #   in Loop: Header=BB795_46 Depth=1
	jmp	.LBB795_76
.LBB795_76:                             #   in Loop: Header=BB795_46 Depth=1
	jmp	.LBB795_77
.LBB795_77:                             #   in Loop: Header=BB795_46 Depth=1
	movq	-280(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -280(%rbp)
	jmp	.LBB795_46
.LBB795_78:
	movq	-376(%rbp), %rax                # 8-byte Reload
	addq	$313, %rax                      # imm = 0x139
	movq	%rax, -648(%rbp)                # 8-byte Spill
	leaq	-272(%rbp), %rdi
	callq	_ZNK4seal4util7PointerISt7complexIdEvE3getEv
	movq	-376(%rbp), %rdi                # 8-byte Reload
	movq	%rax, -640(%rbp)                # 8-byte Spill
	movl	-156(%rbp), %eax
	movl	%eax, -628(%rbp)                # 4-byte Spill
	addq	$216, %rdi
	callq	_ZNK4seal4util7PointerISt7complexIdEvE3getEv
	movq	-648(%rbp), %rdi                # 8-byte Reload
	movq	-640(%rbp), %rsi                # 8-byte Reload
	movl	-628(%rbp), %edx                # 4-byte Reload
	movq	%rax, %rcx
.Ltmp1139:
	xorl	%eax, %eax
	movl	%eax, %r8d
	callq	_ZNK4seal4util10DWTHandlerISt7complexIdES3_dE16transform_to_revEPS3_iPKS3_PKd
.Ltmp1140:
	jmp	.LBB795_79
.LBB795_79:
	movq	$0, -344(%rbp)
.LBB795_80:                             # =>This Inner Loop Header: Depth=1
	movq	-376(%rbp), %rcx                # 8-byte Reload
	movq	-344(%rbp), %rax
	cmpq	192(%rcx), %rax
	jae	.LBB795_84
# %bb.81:                               #   in Loop: Header=BB795_80 Depth=1
	movq	-376(%rbp), %rdi                # 8-byte Reload
	addq	$280, %rdi                      # imm = 0x118
	movq	-344(%rbp), %rsi
	callq	_ZN4seal4util7PointerImvEixEm
	movq	(%rax), %rsi
	leaq	-272(%rbp), %rdi
	callq	_ZN4seal4util7PointerISt7complexIdEvEixEm
	movups	(%rax), %xmm0
	movaps	%xmm0, -368(%rbp)
	movsd	-368(%rbp), %xmm0               # xmm0 = mem[0],zero
	movsd	-360(%rbp), %xmm1               # xmm1 = mem[0],zero
.Ltmp1141:
	callq	_ZN4seal12from_complexIdvEET_St7complexIdE
.Ltmp1142:
	movsd	%xmm0, -656(%rbp)               # 8-byte Spill
	jmp	.LBB795_82
.LBB795_82:                             #   in Loop: Header=BB795_80 Depth=1
	movsd	-656(%rbp), %xmm0               # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movq	-24(%rbp), %rax
	movq	-344(%rbp), %rcx
	movsd	%xmm0, (%rax,%rcx,8)
# %bb.83:                               #   in Loop: Header=BB795_80 Depth=1
	movq	-344(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -344(%rbp)
	jmp	.LBB795_80
.LBB795_84:
	leaq	-272(%rbp), %rdi
	callq	_ZN4seal4util7PointerISt7complexIdEvED2Ev
	leaq	-200(%rbp), %rdi
	callq	_ZN4seal4util7PointerImvED2Ev
	addq	$688, %rsp                      # imm = 0x2B0
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB795_85:
	.cfi_def_cfa %rbp, 16
	leaq	-200(%rbp), %rdi
	callq	_ZN4seal4util7PointerImvED2Ev
.LBB795_86:
	movq	-32(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end795:
	.size	_ZN4seal11CKKSEncoder15decode_internalIdvEEvRKNS_9PlaintextEPT_NS_16MemoryPoolHandleE, .Lfunc_end795-_ZN4seal11CKKSEncoder15decode_internalIdvEEvRKNS_9PlaintextEPT_NS_16MemoryPoolHandleE
	.cfi_endproc
	.section	.gcc_except_table._ZN4seal11CKKSEncoder15decode_internalIdvEEvRKNS_9PlaintextEPT_NS_16MemoryPoolHandleE,"aG",@progbits,_ZN4seal11CKKSEncoder15decode_internalIdvEEvRKNS_9PlaintextEPT_NS_16MemoryPoolHandleE,comdat
	.p2align	2
GCC_except_table795:
.Lexception86:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end86-.Lcst_begin86
.Lcst_begin86:
	.uleb128 .Lfunc_begin86-.Lfunc_begin86  # >> Call Site 1 <<
	.uleb128 .Ltmp1108-.Lfunc_begin86       #   Call between .Lfunc_begin86 and .Ltmp1108
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1108-.Lfunc_begin86       # >> Call Site 2 <<
	.uleb128 .Ltmp1109-.Ltmp1108            #   Call between .Ltmp1108 and .Ltmp1109
	.uleb128 .Ltmp1110-.Lfunc_begin86       #     jumps to .Ltmp1110
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1109-.Lfunc_begin86       # >> Call Site 3 <<
	.uleb128 .Ltmp1111-.Ltmp1109            #   Call between .Ltmp1109 and .Ltmp1111
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1111-.Lfunc_begin86       # >> Call Site 4 <<
	.uleb128 .Ltmp1112-.Ltmp1111            #   Call between .Ltmp1111 and .Ltmp1112
	.uleb128 .Ltmp1113-.Lfunc_begin86       #     jumps to .Ltmp1113
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1112-.Lfunc_begin86       # >> Call Site 5 <<
	.uleb128 .Ltmp1114-.Ltmp1112            #   Call between .Ltmp1112 and .Ltmp1114
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1114-.Lfunc_begin86       # >> Call Site 6 <<
	.uleb128 .Ltmp1115-.Ltmp1114            #   Call between .Ltmp1114 and .Ltmp1115
	.uleb128 .Ltmp1116-.Lfunc_begin86       #     jumps to .Ltmp1116
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1115-.Lfunc_begin86       # >> Call Site 7 <<
	.uleb128 .Ltmp1117-.Ltmp1115            #   Call between .Ltmp1115 and .Ltmp1117
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1117-.Lfunc_begin86       # >> Call Site 8 <<
	.uleb128 .Ltmp1118-.Ltmp1117            #   Call between .Ltmp1117 and .Ltmp1118
	.uleb128 .Ltmp1119-.Lfunc_begin86       #     jumps to .Ltmp1119
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1118-.Lfunc_begin86       # >> Call Site 9 <<
	.uleb128 .Ltmp1164-.Ltmp1118            #   Call between .Ltmp1118 and .Ltmp1164
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1164-.Lfunc_begin86       # >> Call Site 10 <<
	.uleb128 .Ltmp1165-.Ltmp1164            #   Call between .Ltmp1164 and .Ltmp1165
	.uleb128 .Ltmp1166-.Lfunc_begin86       #     jumps to .Ltmp1166
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1165-.Lfunc_begin86       # >> Call Site 11 <<
	.uleb128 .Ltmp1161-.Ltmp1165            #   Call between .Ltmp1165 and .Ltmp1161
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1161-.Lfunc_begin86       # >> Call Site 12 <<
	.uleb128 .Ltmp1162-.Ltmp1161            #   Call between .Ltmp1161 and .Ltmp1162
	.uleb128 .Ltmp1163-.Lfunc_begin86       #     jumps to .Ltmp1163
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1162-.Lfunc_begin86       # >> Call Site 13 <<
	.uleb128 .Ltmp1120-.Ltmp1162            #   Call between .Ltmp1162 and .Ltmp1120
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1120-.Lfunc_begin86       # >> Call Site 14 <<
	.uleb128 .Ltmp1131-.Ltmp1120            #   Call between .Ltmp1120 and .Ltmp1131
	.uleb128 .Ltmp1160-.Lfunc_begin86       #     jumps to .Ltmp1160
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1132-.Lfunc_begin86       # >> Call Site 15 <<
	.uleb128 .Ltmp1133-.Ltmp1132            #   Call between .Ltmp1132 and .Ltmp1133
	.uleb128 .Ltmp1134-.Lfunc_begin86       #     jumps to .Ltmp1134
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1135-.Lfunc_begin86       # >> Call Site 16 <<
	.uleb128 .Ltmp1138-.Ltmp1135            #   Call between .Ltmp1135 and .Ltmp1138
	.uleb128 .Ltmp1160-.Lfunc_begin86       #     jumps to .Ltmp1160
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1143-.Lfunc_begin86       # >> Call Site 17 <<
	.uleb128 .Ltmp1142-.Ltmp1143            #   Call between .Ltmp1143 and .Ltmp1142
	.uleb128 .Ltmp1151-.Lfunc_begin86       #     jumps to .Ltmp1151
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1142-.Lfunc_begin86       # >> Call Site 18 <<
	.uleb128 .Lfunc_end795-.Ltmp1142        #   Call between .Ltmp1142 and .Lfunc_end795
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end86:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt6vectorIdSaIdEE4dataEv,"axG",@progbits,_ZNSt6vectorIdSaIdEE4dataEv,comdat
	.weak	_ZNSt6vectorIdSaIdEE4dataEv     # -- Begin function _ZNSt6vectorIdSaIdEE4dataEv
	.p2align	4, 0x90
	.type	_ZNSt6vectorIdSaIdEE4dataEv,@function
_ZNSt6vectorIdSaIdEE4dataEv:            # @_ZNSt6vectorIdSaIdEE4dataEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	movq	(%rdi), %rsi
	callq	_ZNKSt6vectorIdSaIdEE11_M_data_ptrIdEEPT_S4_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end796:
	.size	_ZNSt6vectorIdSaIdEE4dataEv, .Lfunc_end796-_ZNSt6vectorIdSaIdEE4dataEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal12is_valid_forERKNS_9PlaintextERKNS_11SEALContextE,"axG",@progbits,_ZN4seal12is_valid_forERKNS_9PlaintextERKNS_11SEALContextE,comdat
	.weak	_ZN4seal12is_valid_forERKNS_9PlaintextERKNS_11SEALContextE # -- Begin function _ZN4seal12is_valid_forERKNS_9PlaintextERKNS_11SEALContextE
	.p2align	4, 0x90
	.type	_ZN4seal12is_valid_forERKNS_9PlaintextERKNS_11SEALContextE,@function
_ZN4seal12is_valid_forERKNS_9PlaintextERKNS_11SEALContextE: # @_ZN4seal12is_valid_forERKNS_9PlaintextERKNS_11SEALContextE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN4seal15is_buffer_validERKNS_9PlaintextE@PLT
	movb	%al, %cl
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	testb	$1, %cl
	movb	%al, -17(%rbp)                  # 1-byte Spill
	jne	.LBB797_1
	jmp	.LBB797_2
.LBB797_1:
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZN4seal17is_data_valid_forERKNS_9PlaintextERKNS_11SEALContextE@PLT
	movb	%al, -17(%rbp)                  # 1-byte Spill
.LBB797_2:
	movb	-17(%rbp), %al                  # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %eax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end797:
	.size	_ZN4seal12is_valid_forERKNS_9PlaintextERKNS_11SEALContextE, .Lfunc_end797-_ZN4seal12is_valid_forERKNS_9PlaintextERKNS_11SEALContextE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK4seal9Plaintext8parms_idEv,"axG",@progbits,_ZNK4seal9Plaintext8parms_idEv,comdat
	.weak	_ZNK4seal9Plaintext8parms_idEv  # -- Begin function _ZNK4seal9Plaintext8parms_idEv
	.p2align	4, 0x90
	.type	_ZNK4seal9Plaintext8parms_idEv,@function
_ZNK4seal9Plaintext8parms_idEv:         # @_ZNK4seal9Plaintext8parms_idEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end798:
	.size	_ZNK4seal9Plaintext8parms_idEv, .Lfunc_end798-_ZNK4seal9Plaintext8parms_idEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK4seal9Plaintext5scaleEv,"axG",@progbits,_ZNK4seal9Plaintext5scaleEv,comdat
	.weak	_ZNK4seal9Plaintext5scaleEv     # -- Begin function _ZNK4seal9Plaintext5scaleEv
	.p2align	4, 0x90
	.type	_ZNK4seal9Plaintext5scaleEv,@function
_ZNK4seal9Plaintext5scaleEv:            # @_ZNK4seal9Plaintext5scaleEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	addq	$40, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end799:
	.size	_ZNK4seal9Plaintext5scaleEv, .Lfunc_end799-_ZNK4seal9Plaintext5scaleEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK4seal11SEALContext11ContextData19total_coeff_modulusEv,"axG",@progbits,_ZNK4seal11SEALContext11ContextData19total_coeff_modulusEv,comdat
	.weak	_ZNK4seal11SEALContext11ContextData19total_coeff_modulusEv # -- Begin function _ZNK4seal11SEALContext11ContextData19total_coeff_modulusEv
	.p2align	4, 0x90
	.type	_ZNK4seal11SEALContext11ContextData19total_coeff_modulusEv,@function
_ZNK4seal11SEALContext11ContextData19total_coeff_modulusEv: # @_ZNK4seal11SEALContext11ContextData19total_coeff_modulusEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	addq	$312, %rdi                      # imm = 0x138
	callq	_ZNK4seal4util7PointerImvE3getEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end800:
	.size	_ZNK4seal11SEALContext11ContextData19total_coeff_modulusEv, .Lfunc_end800-_ZNK4seal11SEALContext11ContextData19total_coeff_modulusEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK4seal11SEALContext11ContextData20upper_half_thresholdEv,"axG",@progbits,_ZNK4seal11SEALContext11ContextData20upper_half_thresholdEv,comdat
	.weak	_ZNK4seal11SEALContext11ContextData20upper_half_thresholdEv # -- Begin function _ZNK4seal11SEALContext11ContextData20upper_half_thresholdEv
	.p2align	4, 0x90
	.type	_ZNK4seal11SEALContext11ContextData20upper_half_thresholdEv,@function
_ZNK4seal11SEALContext11ContextData20upper_half_thresholdEv: # @_ZNK4seal11SEALContext11ContextData20upper_half_thresholdEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	addq	$424, %rdi                      # imm = 0x1A8
	callq	_ZNK4seal4util7PointerImvE3getEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end801:
	.size	_ZNK4seal11SEALContext11ContextData20upper_half_thresholdEv, .Lfunc_end801-_ZNK4seal11SEALContext11ContextData20upper_half_thresholdEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal4util8set_uintEPKmmPm,"axG",@progbits,_ZN4seal4util8set_uintEPKmmPm,comdat
	.weak	_ZN4seal4util8set_uintEPKmmPm   # -- Begin function _ZN4seal4util8set_uintEPKmmPm
	.p2align	4, 0x90
	.type	_ZN4seal4util8set_uintEPKmmPm,@function
_ZN4seal4util8set_uintEPKmmPm:          # @_ZN4seal4util8set_uintEPKmmPm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	cmpq	-24(%rbp), %rax
	je	.LBB802_2
# %bb.1:
	cmpq	$0, -16(%rbp)
	jne	.LBB802_3
.LBB802_2:
	jmp	.LBB802_4
.LBB802_3:
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZSt6copy_nIPKmmPmET1_T_T0_S3_
.LBB802_4:
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end802:
	.size	_ZN4seal4util8set_uintEPKmmPm, .Lfunc_end802-_ZN4seal4util8set_uintEPKmmPm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK4seal9Plaintext4dataEv,"axG",@progbits,_ZNK4seal9Plaintext4dataEv,comdat
	.weak	_ZNK4seal9Plaintext4dataEv      # -- Begin function _ZNK4seal9Plaintext4dataEv
	.p2align	4, 0x90
	.type	_ZNK4seal9Plaintext4dataEv,@function
_ZNK4seal9Plaintext4dataEv:             # @_ZNK4seal9Plaintext4dataEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	addq	$48, %rdi
	callq	_ZNK4seal8DynArrayImE6cbeginEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end803:
	.size	_ZNK4seal9Plaintext4dataEv, .Lfunc_end803-_ZNK4seal9Plaintext4dataEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal4util29inverse_ntt_negacyclic_harveyENS0_7PtrIterIPmEERKNS0_9NTTTablesEi,"axG",@progbits,_ZN4seal4util29inverse_ntt_negacyclic_harveyENS0_7PtrIterIPmEERKNS0_9NTTTablesEi,comdat
	.weak	_ZN4seal4util29inverse_ntt_negacyclic_harveyENS0_7PtrIterIPmEERKNS0_9NTTTablesEi # -- Begin function _ZN4seal4util29inverse_ntt_negacyclic_harveyENS0_7PtrIterIPmEERKNS0_9NTTTablesEi
	.p2align	4, 0x90
	.type	_ZN4seal4util29inverse_ntt_negacyclic_harveyENS0_7PtrIterIPmEERKNS0_9NTTTablesEi,@function
_ZN4seal4util29inverse_ntt_negacyclic_harveyENS0_7PtrIterIPmEERKNS0_9NTTTablesEi: # @_ZN4seal4util29inverse_ntt_negacyclic_harveyENS0_7PtrIterIPmEERKNS0_9NTTTablesEi
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movl	%edx, -20(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -32(%rbp)
	movq	-16(%rbp), %rsi
	movl	-20(%rbp), %edx
	movq	-32(%rbp), %rdi
	callq	_ZN4seal4util34inverse_ntt_negacyclic_harvey_lazyENS0_7PtrIterIPmEERKNS0_9NTTTablesEi@PLT
	movq	-16(%rbp), %rdi
	callq	_ZNK4seal4util9NTTTables7modulusEv
	movq	%rax, %rdi
	callq	_ZNK4seal7Modulus5valueEv
	movq	%rax, -40(%rbp)
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.91(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
	movq	%rax, %rdi
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	callq	_ZNSolsEPFRSoS_E@PLT
	movq	-16(%rbp), %rdi
	callq	_ZNK4seal4util9NTTTables17coeff_count_powerEv
	movl	%eax, %eax
	movl	%eax, %ecx
	movl	$1, %eax
                                        # kill: def $cl killed $rcx
	shlq	%cl, %rax
	movq	%rax, -48(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-48(%rbp), %rsi
	leaq	-40(%rbp), %rax
	movq	%rax, -64(%rbp)
	movq	-56(%rbp), %rdi
	movq	-64(%rbp), %rdx
	callq	_ZSt10for_each_nIN4seal4util7PtrIterIPmEEmZNS1_29inverse_ntt_negacyclic_harveyES4_RKNS1_9NTTTablesEiEUlRT_E_ES8_S8_T0_T1_
	movq	%rax, -72(%rbp)
	addq	$80, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end804:
	.size	_ZN4seal4util29inverse_ntt_negacyclic_harveyENS0_7PtrIterIPmEERKNS0_9NTTTablesEi, .Lfunc_end804-_ZN4seal4util29inverse_ntt_negacyclic_harveyENS0_7PtrIterIPmEERKNS0_9NTTTablesEi
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK4seal4util9NTTTables8get_rootEv,"axG",@progbits,_ZNK4seal4util9NTTTables8get_rootEv,comdat
	.weak	_ZNK4seal4util9NTTTables8get_rootEv # -- Begin function _ZNK4seal4util9NTTTables8get_rootEv
	.p2align	4, 0x90
	.type	_ZNK4seal4util9NTTTables8get_rootEv,@function
_ZNK4seal4util9NTTTables8get_rootEv:    # @_ZNK4seal4util9NTTTables8get_rootEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	16(%rax), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end805:
	.size	_ZNK4seal4util9NTTTables8get_rootEv, .Lfunc_end805-_ZNK4seal4util9NTTTables8get_rootEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal4util8allocateISt7complexIdEJEvEEDamRNS0_10MemoryPoolEDpOT0_,"axG",@progbits,_ZN4seal4util8allocateISt7complexIdEJEvEEDamRNS0_10MemoryPoolEDpOT0_,comdat
	.weak	_ZN4seal4util8allocateISt7complexIdEJEvEEDamRNS0_10MemoryPoolEDpOT0_ # -- Begin function _ZN4seal4util8allocateISt7complexIdEJEvEEDamRNS0_10MemoryPoolEDpOT0_
	.p2align	4, 0x90
	.type	_ZN4seal4util8allocateISt7complexIdEJEvEEDamRNS0_10MemoryPoolEDpOT0_,@function
_ZN4seal4util8allocateISt7complexIdEJEvEEDamRNS0_10MemoryPoolEDpOT0_: # @_ZN4seal4util8allocateISt7complexIdEJEvEEDamRNS0_10MemoryPoolEDpOT0_
.Lfunc_begin87:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception87
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$112, %rsp
	movq	%rdi, -88(%rbp)                 # 8-byte Spill
	movq	%rdi, %rax
	movq	%rax, -104(%rbp)                # 8-byte Spill
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -96(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rdi
	movl	$16, %esi
	callq	_ZN4seal4util8mul_safeImvEET_S2_S2_
	movq	-96(%rbp), %rsi                 # 8-byte Reload
	movq	%rax, %rdx
	movq	(%rsi), %rax
	movq	16(%rax), %rax
	leaq	-56(%rbp), %rdi
	movq	%rdi, -80(%rbp)                 # 8-byte Spill
	callq	*%rax
	movq	-88(%rbp), %rdi                 # 8-byte Reload
	movq	-80(%rbp), %rsi                 # 8-byte Reload
.Ltmp1167:
	callq	_ZN4seal4util7PointerISt7complexIdEvEC2EONS1_ISt4bytevEE
.Ltmp1168:
	jmp	.LBB806_1
.LBB806_1:
	leaq	-56(%rbp), %rdi
	callq	_ZN4seal4util7PointerISt4bytevED2Ev
	movq	-104(%rbp), %rax                # 8-byte Reload
	addq	$112, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB806_2:
	.cfi_def_cfa %rbp, 16
.Ltmp1169:
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -64(%rbp)
	movl	%eax, -68(%rbp)
	leaq	-56(%rbp), %rdi
	callq	_ZN4seal4util7PointerISt4bytevED2Ev
# %bb.3:
	movq	-64(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end806:
	.size	_ZN4seal4util8allocateISt7complexIdEJEvEEDamRNS0_10MemoryPoolEDpOT0_, .Lfunc_end806-_ZN4seal4util8allocateISt7complexIdEJEvEEDamRNS0_10MemoryPoolEDpOT0_
	.cfi_endproc
	.section	.gcc_except_table._ZN4seal4util8allocateISt7complexIdEJEvEEDamRNS0_10MemoryPoolEDpOT0_,"aG",@progbits,_ZN4seal4util8allocateISt7complexIdEJEvEEDamRNS0_10MemoryPoolEDpOT0_,comdat
	.p2align	2
GCC_except_table806:
.Lexception87:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end87-.Lcst_begin87
.Lcst_begin87:
	.uleb128 .Lfunc_begin87-.Lfunc_begin87  # >> Call Site 1 <<
	.uleb128 .Ltmp1167-.Lfunc_begin87       #   Call between .Lfunc_begin87 and .Ltmp1167
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1167-.Lfunc_begin87       # >> Call Site 2 <<
	.uleb128 .Ltmp1168-.Ltmp1167            #   Call between .Ltmp1167 and .Ltmp1168
	.uleb128 .Ltmp1169-.Lfunc_begin87       #     jumps to .Ltmp1169
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1168-.Lfunc_begin87       # >> Call Site 3 <<
	.uleb128 .Lfunc_end806-.Ltmp1168        #   Call between .Ltmp1168 and .Lfunc_end806
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end87:
	.p2align	2
                                        # -- End function
	.section	.text._ZN4seal4util29is_greater_than_or_equal_uintEPKmS2_m,"axG",@progbits,_ZN4seal4util29is_greater_than_or_equal_uintEPKmS2_m,comdat
	.weak	_ZN4seal4util29is_greater_than_or_equal_uintEPKmS2_m # -- Begin function _ZN4seal4util29is_greater_than_or_equal_uintEPKmS2_m
	.p2align	4, 0x90
	.type	_ZN4seal4util29is_greater_than_or_equal_uintEPKmS2_m,@function
_ZN4seal4util29is_greater_than_or_equal_uintEPKmS2_m: # @_ZN4seal4util29is_greater_than_or_equal_uintEPKmS2_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZN4seal4util12compare_uintEPKmS2_m
	cmpl	$0, %eax
	setge	%al
	andb	$1, %al
	movzbl	%al, %eax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end807:
	.size	_ZN4seal4util29is_greater_than_or_equal_uintEPKmS2_m, .Lfunc_end807-_ZN4seal4util29is_greater_than_or_equal_uintEPKmS2_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt7complexIdEpLEd,"axG",@progbits,_ZNSt7complexIdEpLEd,comdat
	.weak	_ZNSt7complexIdEpLEd            # -- Begin function _ZNSt7complexIdEpLEd
	.p2align	4, 0x90
	.type	_ZNSt7complexIdEpLEd,@function
_ZNSt7complexIdEpLEd:                   # @_ZNSt7complexIdEpLEd
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movsd	%xmm0, -16(%rbp)
	movq	-8(%rbp), %rax
	movsd	-16(%rbp), %xmm2                # xmm2 = mem[0],zero
	movsd	(%rax), %xmm1                   # xmm1 = mem[0],zero
	movsd	8(%rax), %xmm0                  # xmm0 = mem[0],zero
	addsd	%xmm2, %xmm1
	movsd	%xmm1, (%rax)
	movsd	%xmm0, 8(%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end808:
	.size	_ZNSt7complexIdEpLEd, .Lfunc_end808-_ZNSt7complexIdEpLEd
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt7complexIdEmIEd,"axG",@progbits,_ZNSt7complexIdEmIEd,comdat
	.weak	_ZNSt7complexIdEmIEd            # -- Begin function _ZNSt7complexIdEmIEd
	.p2align	4, 0x90
	.type	_ZNSt7complexIdEmIEd,@function
_ZNSt7complexIdEmIEd:                   # @_ZNSt7complexIdEmIEd
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movsd	%xmm0, -16(%rbp)
	movq	-8(%rbp), %rax
	movsd	-16(%rbp), %xmm2                # xmm2 = mem[0],zero
	movsd	(%rax), %xmm1                   # xmm1 = mem[0],zero
	movsd	8(%rax), %xmm0                  # xmm0 = mem[0],zero
	subsd	%xmm2, %xmm1
	movsd	%xmm1, (%rax)
	movsd	%xmm0, 8(%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end809:
	.size	_ZNSt7complexIdEmIEd, .Lfunc_end809-_ZNSt7complexIdEmIEd
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK4seal4util10DWTHandlerISt7complexIdES3_dE16transform_to_revEPS3_iPKS3_PKd,"axG",@progbits,_ZNK4seal4util10DWTHandlerISt7complexIdES3_dE16transform_to_revEPS3_iPKS3_PKd,comdat
	.weak	_ZNK4seal4util10DWTHandlerISt7complexIdES3_dE16transform_to_revEPS3_iPKS3_PKd # -- Begin function _ZNK4seal4util10DWTHandlerISt7complexIdES3_dE16transform_to_revEPS3_iPKS3_PKd
	.p2align	4, 0x90
	.type	_ZNK4seal4util10DWTHandlerISt7complexIdES3_dE16transform_to_revEPS3_iPKS3_PKd,@function
_ZNK4seal4util10DWTHandlerISt7complexIdES3_dE16transform_to_revEPS3_iPKS3_PKd: # @_ZNK4seal4util10DWTHandlerISt7complexIdES3_dE16transform_to_revEPS3_iPKS3_PKd
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$688, %rsp                      # imm = 0x2B0
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movl	%edx, -20(%rbp)
	movq	%rcx, -32(%rbp)
	movq	%r8, -40(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -688(%rbp)                # 8-byte Spill
	movl	-20(%rbp), %eax
	movl	%eax, %ecx
	movl	$1, %eax
                                        # kill: def $cl killed $rcx
	shlq	%cl, %rax
	movq	%rax, -48(%rbp)
	leaq	-64(%rbp), %rdi
	xorps	%xmm1, %xmm1
	movaps	%xmm1, %xmm0
	callq	_ZNSt7complexIdEC2Edd
	leaq	-80(%rbp), %rdi
	xorps	%xmm1, %xmm1
	movaps	%xmm1, %xmm0
	callq	_ZNSt7complexIdEC2Edd
	leaq	-96(%rbp), %rdi
	xorps	%xmm1, %xmm1
	movaps	%xmm1, %xmm0
	callq	_ZNSt7complexIdEC2Edd
	movq	$0, -104(%rbp)
	movq	$0, -112(%rbp)
	movq	-48(%rbp), %rax
	shrq	$1, %rax
	movq	%rax, -120(%rbp)
	movq	$1, -128(%rbp)
.LBB810_1:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB810_4 Depth 2
                                        #       Child Loop BB810_6 Depth 3
                                        #     Child Loop BB810_13 Depth 2
                                        #       Child Loop BB810_15 Depth 3
	movq	-128(%rbp), %rax
	movq	-48(%rbp), %rcx
	shrq	$1, %rcx
	cmpq	%rcx, %rax
	jae	.LBB810_23
# %bb.2:                                #   in Loop: Header=BB810_1 Depth=1
	movq	$0, -136(%rbp)
	cmpq	$4, -120(%rbp)
	jae	.LBB810_12
# %bb.3:                                #   in Loop: Header=BB810_1 Depth=1
	movq	$0, -144(%rbp)
.LBB810_4:                              #   Parent Loop BB810_1 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB810_6 Depth 3
	movq	-144(%rbp), %rax
	cmpq	-128(%rbp), %rax
	jae	.LBB810_11
# %bb.5:                                #   in Loop: Header=BB810_4 Depth=2
	movq	-32(%rbp), %rax
	movq	%rax, %rcx
	addq	$16, %rcx
	movq	%rcx, -32(%rbp)
	movq	16(%rax), %rcx
	movq	%rcx, -64(%rbp)
	movq	24(%rax), %rax
	movq	%rax, -56(%rbp)
	movq	-16(%rbp), %rax
	movq	-136(%rbp), %rcx
	shlq	$4, %rcx
	addq	%rcx, %rax
	movq	%rax, -104(%rbp)
	movq	-104(%rbp), %rax
	movq	-120(%rbp), %rcx
	shlq	$4, %rcx
	addq	%rcx, %rax
	movq	%rax, -112(%rbp)
	movq	$0, -152(%rbp)
.LBB810_6:                              #   Parent Loop BB810_1 Depth=1
                                        #     Parent Loop BB810_4 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movq	-152(%rbp), %rax
	cmpq	-120(%rbp), %rax
	jae	.LBB810_9
# %bb.7:                                #   in Loop: Header=BB810_6 Depth=3
	movq	-688(%rbp), %rdi                # 8-byte Reload
	movq	-104(%rbp), %rsi
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE5guardERKS3_
	movq	-688(%rbp), %rdi                # 8-byte Reload
	movsd	%xmm0, -168(%rbp)
	movsd	%xmm1, -160(%rbp)
	movq	-168(%rbp), %rax
	movq	%rax, -80(%rbp)
	movq	-160(%rbp), %rax
	movq	%rax, -72(%rbp)
	movq	-112(%rbp), %rsi
	leaq	-64(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE8mul_rootERKS3_S6_
	movq	-688(%rbp), %rdi                # 8-byte Reload
	movsd	%xmm0, -184(%rbp)
	movsd	%xmm1, -176(%rbp)
	movq	-184(%rbp), %rax
	movq	%rax, -96(%rbp)
	movq	-176(%rbp), %rax
	movq	%rax, -88(%rbp)
	leaq	-80(%rbp), %rsi
	leaq	-96(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3addERKS3_S6_
	movq	-688(%rbp), %rdi                # 8-byte Reload
	movsd	%xmm0, -200(%rbp)
	movsd	%xmm1, -192(%rbp)
	movq	-104(%rbp), %rax
	movq	%rax, %rcx
	addq	$16, %rcx
	movq	%rcx, -104(%rbp)
	movq	-200(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-192(%rbp), %rcx
	movq	%rcx, 8(%rax)
	leaq	-80(%rbp), %rsi
	leaq	-96(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3subERKS3_S6_
	movsd	%xmm0, -216(%rbp)
	movsd	%xmm1, -208(%rbp)
	movq	-112(%rbp), %rax
	movq	%rax, %rcx
	addq	$16, %rcx
	movq	%rcx, -112(%rbp)
	movq	-216(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-208(%rbp), %rcx
	movq	%rcx, 8(%rax)
# %bb.8:                                #   in Loop: Header=BB810_6 Depth=3
	movq	-152(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -152(%rbp)
	jmp	.LBB810_6
.LBB810_9:                              #   in Loop: Header=BB810_4 Depth=2
	movq	-120(%rbp), %rax
	shlq	$1, %rax
	addq	-136(%rbp), %rax
	movq	%rax, -136(%rbp)
# %bb.10:                               #   in Loop: Header=BB810_4 Depth=2
	movq	-144(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -144(%rbp)
	jmp	.LBB810_4
.LBB810_11:                             #   in Loop: Header=BB810_1 Depth=1
	jmp	.LBB810_21
.LBB810_12:                             #   in Loop: Header=BB810_1 Depth=1
	movq	$0, -224(%rbp)
.LBB810_13:                             #   Parent Loop BB810_1 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB810_15 Depth 3
	movq	-224(%rbp), %rax
	cmpq	-128(%rbp), %rax
	jae	.LBB810_20
# %bb.14:                               #   in Loop: Header=BB810_13 Depth=2
	movq	-32(%rbp), %rax
	movq	%rax, %rcx
	addq	$16, %rcx
	movq	%rcx, -32(%rbp)
	movq	16(%rax), %rcx
	movq	%rcx, -64(%rbp)
	movq	24(%rax), %rax
	movq	%rax, -56(%rbp)
	movq	-16(%rbp), %rax
	movq	-136(%rbp), %rcx
	shlq	$4, %rcx
	addq	%rcx, %rax
	movq	%rax, -104(%rbp)
	movq	-104(%rbp), %rax
	movq	-120(%rbp), %rcx
	shlq	$4, %rcx
	addq	%rcx, %rax
	movq	%rax, -112(%rbp)
	movq	$0, -232(%rbp)
.LBB810_15:                             #   Parent Loop BB810_1 Depth=1
                                        #     Parent Loop BB810_13 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movq	-232(%rbp), %rax
	cmpq	-120(%rbp), %rax
	jae	.LBB810_18
# %bb.16:                               #   in Loop: Header=BB810_15 Depth=3
	movq	-688(%rbp), %rdi                # 8-byte Reload
	movq	-104(%rbp), %rsi
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE5guardERKS3_
	movq	-688(%rbp), %rdi                # 8-byte Reload
	movsd	%xmm0, -248(%rbp)
	movsd	%xmm1, -240(%rbp)
	movq	-248(%rbp), %rax
	movq	%rax, -80(%rbp)
	movq	-240(%rbp), %rax
	movq	%rax, -72(%rbp)
	movq	-112(%rbp), %rsi
	leaq	-64(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE8mul_rootERKS3_S6_
	movq	-688(%rbp), %rdi                # 8-byte Reload
	movsd	%xmm0, -264(%rbp)
	movsd	%xmm1, -256(%rbp)
	movq	-264(%rbp), %rax
	movq	%rax, -96(%rbp)
	movq	-256(%rbp), %rax
	movq	%rax, -88(%rbp)
	leaq	-80(%rbp), %rsi
	leaq	-96(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3addERKS3_S6_
	movq	-688(%rbp), %rdi                # 8-byte Reload
	movsd	%xmm0, -280(%rbp)
	movsd	%xmm1, -272(%rbp)
	movq	-104(%rbp), %rax
	movq	%rax, %rcx
	addq	$16, %rcx
	movq	%rcx, -104(%rbp)
	movq	-280(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-272(%rbp), %rcx
	movq	%rcx, 8(%rax)
	leaq	-80(%rbp), %rsi
	leaq	-96(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3subERKS3_S6_
	movq	-688(%rbp), %rdi                # 8-byte Reload
	movsd	%xmm0, -296(%rbp)
	movsd	%xmm1, -288(%rbp)
	movq	-112(%rbp), %rax
	movq	%rax, %rcx
	addq	$16, %rcx
	movq	%rcx, -112(%rbp)
	movq	-296(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-288(%rbp), %rcx
	movq	%rcx, 8(%rax)
	movq	-104(%rbp), %rsi
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE5guardERKS3_
	movq	-688(%rbp), %rdi                # 8-byte Reload
	movsd	%xmm0, -312(%rbp)
	movsd	%xmm1, -304(%rbp)
	movq	-312(%rbp), %rax
	movq	%rax, -80(%rbp)
	movq	-304(%rbp), %rax
	movq	%rax, -72(%rbp)
	movq	-112(%rbp), %rsi
	leaq	-64(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE8mul_rootERKS3_S6_
	movq	-688(%rbp), %rdi                # 8-byte Reload
	movsd	%xmm0, -328(%rbp)
	movsd	%xmm1, -320(%rbp)
	movq	-328(%rbp), %rax
	movq	%rax, -96(%rbp)
	movq	-320(%rbp), %rax
	movq	%rax, -88(%rbp)
	leaq	-80(%rbp), %rsi
	leaq	-96(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3addERKS3_S6_
	movq	-688(%rbp), %rdi                # 8-byte Reload
	movsd	%xmm0, -344(%rbp)
	movsd	%xmm1, -336(%rbp)
	movq	-104(%rbp), %rax
	movq	%rax, %rcx
	addq	$16, %rcx
	movq	%rcx, -104(%rbp)
	movq	-344(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-336(%rbp), %rcx
	movq	%rcx, 8(%rax)
	leaq	-80(%rbp), %rsi
	leaq	-96(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3subERKS3_S6_
	movq	-688(%rbp), %rdi                # 8-byte Reload
	movsd	%xmm0, -360(%rbp)
	movsd	%xmm1, -352(%rbp)
	movq	-112(%rbp), %rax
	movq	%rax, %rcx
	addq	$16, %rcx
	movq	%rcx, -112(%rbp)
	movq	-360(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-352(%rbp), %rcx
	movq	%rcx, 8(%rax)
	movq	-104(%rbp), %rsi
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE5guardERKS3_
	movq	-688(%rbp), %rdi                # 8-byte Reload
	movsd	%xmm0, -376(%rbp)
	movsd	%xmm1, -368(%rbp)
	movq	-376(%rbp), %rax
	movq	%rax, -80(%rbp)
	movq	-368(%rbp), %rax
	movq	%rax, -72(%rbp)
	movq	-112(%rbp), %rsi
	leaq	-64(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE8mul_rootERKS3_S6_
	movq	-688(%rbp), %rdi                # 8-byte Reload
	movsd	%xmm0, -392(%rbp)
	movsd	%xmm1, -384(%rbp)
	movq	-392(%rbp), %rax
	movq	%rax, -96(%rbp)
	movq	-384(%rbp), %rax
	movq	%rax, -88(%rbp)
	leaq	-80(%rbp), %rsi
	leaq	-96(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3addERKS3_S6_
	movq	-688(%rbp), %rdi                # 8-byte Reload
	movsd	%xmm0, -408(%rbp)
	movsd	%xmm1, -400(%rbp)
	movq	-104(%rbp), %rax
	movq	%rax, %rcx
	addq	$16, %rcx
	movq	%rcx, -104(%rbp)
	movq	-408(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-400(%rbp), %rcx
	movq	%rcx, 8(%rax)
	leaq	-80(%rbp), %rsi
	leaq	-96(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3subERKS3_S6_
	movq	-688(%rbp), %rdi                # 8-byte Reload
	movsd	%xmm0, -424(%rbp)
	movsd	%xmm1, -416(%rbp)
	movq	-112(%rbp), %rax
	movq	%rax, %rcx
	addq	$16, %rcx
	movq	%rcx, -112(%rbp)
	movq	-424(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-416(%rbp), %rcx
	movq	%rcx, 8(%rax)
	movq	-104(%rbp), %rsi
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE5guardERKS3_
	movq	-688(%rbp), %rdi                # 8-byte Reload
	movsd	%xmm0, -440(%rbp)
	movsd	%xmm1, -432(%rbp)
	movq	-440(%rbp), %rax
	movq	%rax, -80(%rbp)
	movq	-432(%rbp), %rax
	movq	%rax, -72(%rbp)
	movq	-112(%rbp), %rsi
	leaq	-64(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE8mul_rootERKS3_S6_
	movq	-688(%rbp), %rdi                # 8-byte Reload
	movsd	%xmm0, -456(%rbp)
	movsd	%xmm1, -448(%rbp)
	movq	-456(%rbp), %rax
	movq	%rax, -96(%rbp)
	movq	-448(%rbp), %rax
	movq	%rax, -88(%rbp)
	leaq	-80(%rbp), %rsi
	leaq	-96(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3addERKS3_S6_
	movq	-688(%rbp), %rdi                # 8-byte Reload
	movsd	%xmm0, -472(%rbp)
	movsd	%xmm1, -464(%rbp)
	movq	-104(%rbp), %rax
	movq	%rax, %rcx
	addq	$16, %rcx
	movq	%rcx, -104(%rbp)
	movq	-472(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-464(%rbp), %rcx
	movq	%rcx, 8(%rax)
	leaq	-80(%rbp), %rsi
	leaq	-96(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3subERKS3_S6_
	movsd	%xmm0, -488(%rbp)
	movsd	%xmm1, -480(%rbp)
	movq	-112(%rbp), %rax
	movq	%rax, %rcx
	addq	$16, %rcx
	movq	%rcx, -112(%rbp)
	movq	-488(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-480(%rbp), %rcx
	movq	%rcx, 8(%rax)
# %bb.17:                               #   in Loop: Header=BB810_15 Depth=3
	movq	-232(%rbp), %rax
	addq	$4, %rax
	movq	%rax, -232(%rbp)
	jmp	.LBB810_15
.LBB810_18:                             #   in Loop: Header=BB810_13 Depth=2
	movq	-120(%rbp), %rax
	shlq	$1, %rax
	addq	-136(%rbp), %rax
	movq	%rax, -136(%rbp)
# %bb.19:                               #   in Loop: Header=BB810_13 Depth=2
	movq	-224(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -224(%rbp)
	jmp	.LBB810_13
.LBB810_20:                             #   in Loop: Header=BB810_1 Depth=1
	jmp	.LBB810_21
.LBB810_21:                             #   in Loop: Header=BB810_1 Depth=1
	movq	-120(%rbp), %rax
	shrq	$1, %rax
	movq	%rax, -120(%rbp)
# %bb.22:                               #   in Loop: Header=BB810_1 Depth=1
	movq	-128(%rbp), %rax
	shlq	$1, %rax
	movq	%rax, -128(%rbp)
	jmp	.LBB810_1
.LBB810_23:
	cmpq	$0, -40(%rbp)
	je	.LBB810_29
# %bb.24:
	leaq	-504(%rbp), %rdi
	xorps	%xmm1, %xmm1
	movaps	%xmm1, %xmm0
	callq	_ZNSt7complexIdEC2Edd
	movq	$0, -512(%rbp)
.LBB810_25:                             # =>This Inner Loop Header: Depth=1
	movq	-512(%rbp), %rax
	cmpq	-128(%rbp), %rax
	jae	.LBB810_28
# %bb.26:                               #   in Loop: Header=BB810_25 Depth=1
	movq	-688(%rbp), %rdi                # 8-byte Reload
	movq	-32(%rbp), %rax
	movq	%rax, %rcx
	addq	$16, %rcx
	movq	%rcx, -32(%rbp)
	movq	16(%rax), %rcx
	movq	%rcx, -64(%rbp)
	movq	24(%rax), %rax
	movq	%rax, -56(%rbp)
	movq	-40(%rbp), %rdx
	leaq	-64(%rbp), %rsi
	xorl	%ecx, %ecx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE15mul_root_scalarERKS3_RKdi
	movq	-688(%rbp), %rdi                # 8-byte Reload
	movsd	%xmm0, -528(%rbp)
	movsd	%xmm1, -520(%rbp)
	movq	-528(%rbp), %rax
	movq	%rax, -504(%rbp)
	movq	-520(%rbp), %rax
	movq	%rax, -496(%rbp)
	movq	-16(%rbp), %rsi
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE5guardERKS3_
	movq	-688(%rbp), %rdi                # 8-byte Reload
	movsd	%xmm0, -560(%rbp)
	movsd	%xmm1, -552(%rbp)
	movq	-40(%rbp), %rdx
	leaq	-560(%rbp), %rsi
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE10mul_scalarERKS3_RKd
	movq	-688(%rbp), %rdi                # 8-byte Reload
	movsd	%xmm0, -544(%rbp)
	movsd	%xmm1, -536(%rbp)
	movq	-544(%rbp), %rax
	movq	%rax, -80(%rbp)
	movq	-536(%rbp), %rax
	movq	%rax, -72(%rbp)
	movq	-16(%rbp), %rsi
	addq	$16, %rsi
	leaq	-504(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE8mul_rootERKS3_S6_
	movq	-688(%rbp), %rdi                # 8-byte Reload
	movsd	%xmm0, -576(%rbp)
	movsd	%xmm1, -568(%rbp)
	movq	-576(%rbp), %rax
	movq	%rax, -96(%rbp)
	movq	-568(%rbp), %rax
	movq	%rax, -88(%rbp)
	leaq	-80(%rbp), %rsi
	leaq	-96(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3addERKS3_S6_
	movq	-688(%rbp), %rdi                # 8-byte Reload
	movsd	%xmm0, -592(%rbp)
	movsd	%xmm1, -584(%rbp)
	movq	-16(%rbp), %rax
	movq	-592(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-584(%rbp), %rcx
	movq	%rcx, 8(%rax)
	leaq	-80(%rbp), %rsi
	leaq	-96(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3subERKS3_S6_
	movsd	%xmm0, -608(%rbp)
	movsd	%xmm1, -600(%rbp)
	movq	-16(%rbp), %rax
	movq	-608(%rbp), %rcx
	movq	%rcx, 16(%rax)
	movq	-600(%rbp), %rcx
	movq	%rcx, 24(%rax)
	movq	-16(%rbp), %rax
	addq	$32, %rax
	movq	%rax, -16(%rbp)
# %bb.27:                               #   in Loop: Header=BB810_25 Depth=1
	movq	-512(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -512(%rbp)
	jmp	.LBB810_25
.LBB810_28:
	jmp	.LBB810_34
.LBB810_29:
	movq	$0, -616(%rbp)
.LBB810_30:                             # =>This Inner Loop Header: Depth=1
	movq	-616(%rbp), %rax
	cmpq	-128(%rbp), %rax
	jae	.LBB810_33
# %bb.31:                               #   in Loop: Header=BB810_30 Depth=1
	movq	-688(%rbp), %rdi                # 8-byte Reload
	movq	-32(%rbp), %rax
	movq	%rax, %rcx
	addq	$16, %rcx
	movq	%rcx, -32(%rbp)
	movq	16(%rax), %rcx
	movq	%rcx, -64(%rbp)
	movq	24(%rax), %rax
	movq	%rax, -56(%rbp)
	movq	-16(%rbp), %rsi
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE5guardERKS3_
	movq	-688(%rbp), %rdi                # 8-byte Reload
	movsd	%xmm0, -632(%rbp)
	movsd	%xmm1, -624(%rbp)
	movq	-632(%rbp), %rax
	movq	%rax, -80(%rbp)
	movq	-624(%rbp), %rax
	movq	%rax, -72(%rbp)
	movq	-16(%rbp), %rsi
	addq	$16, %rsi
	leaq	-64(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE8mul_rootERKS3_S6_
	movq	-688(%rbp), %rdi                # 8-byte Reload
	movsd	%xmm0, -648(%rbp)
	movsd	%xmm1, -640(%rbp)
	movq	-648(%rbp), %rax
	movq	%rax, -96(%rbp)
	movq	-640(%rbp), %rax
	movq	%rax, -88(%rbp)
	leaq	-80(%rbp), %rsi
	leaq	-96(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3addERKS3_S6_
	movq	-688(%rbp), %rdi                # 8-byte Reload
	movsd	%xmm0, -664(%rbp)
	movsd	%xmm1, -656(%rbp)
	movq	-16(%rbp), %rax
	movq	-664(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-656(%rbp), %rcx
	movq	%rcx, 8(%rax)
	leaq	-80(%rbp), %rsi
	leaq	-96(%rbp), %rdx
	callq	_ZNK4seal4util10ArithmeticISt7complexIdES3_dE3subERKS3_S6_
	movsd	%xmm0, -680(%rbp)
	movsd	%xmm1, -672(%rbp)
	movq	-16(%rbp), %rax
	movq	-680(%rbp), %rcx
	movq	%rcx, 16(%rax)
	movq	-672(%rbp), %rcx
	movq	%rcx, 24(%rax)
	movq	-16(%rbp), %rax
	addq	$32, %rax
	movq	%rax, -16(%rbp)
# %bb.32:                               #   in Loop: Header=BB810_30 Depth=1
	movq	-616(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -616(%rbp)
	jmp	.LBB810_30
.LBB810_33:
	jmp	.LBB810_34
.LBB810_34:
	addq	$688, %rsp                      # imm = 0x2B0
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end810:
	.size	_ZNK4seal4util10DWTHandlerISt7complexIdES3_dE16transform_to_revEPS3_iPKS3_PKd, .Lfunc_end810-_ZNK4seal4util10DWTHandlerISt7complexIdES3_dE16transform_to_revEPS3_iPKS3_PKd
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal12from_complexIdvEET_St7complexIdE,"axG",@progbits,_ZN4seal12from_complexIdvEET_St7complexIdE,comdat
	.weak	_ZN4seal12from_complexIdvEET_St7complexIdE # -- Begin function _ZN4seal12from_complexIdvEET_St7complexIdE
	.p2align	4, 0x90
	.type	_ZN4seal12from_complexIdvEET_St7complexIdE,@function
_ZN4seal12from_complexIdvEET_St7complexIdE: # @_ZN4seal12from_complexIdvEET_St7complexIdE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movsd	%xmm0, -16(%rbp)
	movsd	%xmm1, -8(%rbp)
	leaq	-16(%rbp), %rdi
	callq	_ZNKSt7complexIdE4realB5cxx11Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end811:
	.size	_ZN4seal12from_complexIdvEET_St7complexIdE, .Lfunc_end811-_ZN4seal12from_complexIdvEET_St7complexIdE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt6copy_nIPKmmPmET1_T_T0_S3_,"axG",@progbits,_ZSt6copy_nIPKmmPmET1_T_T0_S3_,comdat
	.weak	_ZSt6copy_nIPKmmPmET1_T_T0_S3_  # -- Begin function _ZSt6copy_nIPKmmPmET1_T_T0_S3_
	.p2align	4, 0x90
	.type	_ZSt6copy_nIPKmmPmET1_T_T0_S3_,@function
_ZSt6copy_nIPKmmPmET1_T_T0_S3_:         # @_ZSt6copy_nIPKmmPmET1_T_T0_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rdx, -32(%rbp)
	movq	-24(%rbp), %rdi
	callq	_ZSt17__size_to_integerm
	movq	%rax, -40(%rbp)
	cmpq	$0, -40(%rbp)
	ja	.LBB812_2
# %bb.1:
	movq	-32(%rbp), %rax
	movq	%rax, -8(%rbp)
	jmp	.LBB812_3
.LBB812_2:
	movq	-16(%rbp), %rax
	movq	%rax, -80(%rbp)                 # 8-byte Spill
	movq	-40(%rbp), %rax
	movq	%rax, -72(%rbp)                 # 8-byte Spill
	movq	-32(%rbp), %rax
	movq	%rax, -64(%rbp)                 # 8-byte Spill
	leaq	-16(%rbp), %rdi
	callq	_ZSt19__iterator_categoryIPKmENSt15iterator_traitsIT_E17iterator_categoryERKS3_
	movq	-80(%rbp), %rdi                 # 8-byte Reload
	movq	-72(%rbp), %rsi                 # 8-byte Reload
	movq	-64(%rbp), %rdx                 # 8-byte Reload
	callq	_ZSt8__copy_nIPKmmPmET1_T_T0_S3_St26random_access_iterator_tag
	movq	%rax, -8(%rbp)
.LBB812_3:
	movq	-8(%rbp), %rax
	addq	$80, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end812:
	.size	_ZSt6copy_nIPKmmPmET1_T_T0_S3_, .Lfunc_end812-_ZSt6copy_nIPKmmPmET1_T_T0_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt8__copy_nIPKmmPmET1_T_T0_S3_St26random_access_iterator_tag,"axG",@progbits,_ZSt8__copy_nIPKmmPmET1_T_T0_S3_St26random_access_iterator_tag,comdat
	.weak	_ZSt8__copy_nIPKmmPmET1_T_T0_S3_St26random_access_iterator_tag # -- Begin function _ZSt8__copy_nIPKmmPmET1_T_T0_S3_St26random_access_iterator_tag
	.p2align	4, 0x90
	.type	_ZSt8__copy_nIPKmmPmET1_T_T0_S3_St26random_access_iterator_tag,@function
_ZSt8__copy_nIPKmmPmET1_T_T0_S3_St26random_access_iterator_tag: # @_ZSt8__copy_nIPKmmPmET1_T_T0_S3_St26random_access_iterator_tag
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rdx, -32(%rbp)
	movq	-16(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rax
	shlq	$3, %rax
	addq	%rax, %rsi
	movq	-32(%rbp), %rdx
	callq	_ZSt4copyIPKmPmET0_T_S4_S3_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end813:
	.size	_ZSt8__copy_nIPKmmPmET1_T_T0_S3_St26random_access_iterator_tag, .Lfunc_end813-_ZSt8__copy_nIPKmmPmET1_T_T0_S3_St26random_access_iterator_tag
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt19__iterator_categoryIPKmENSt15iterator_traitsIT_E17iterator_categoryERKS3_,"axG",@progbits,_ZSt19__iterator_categoryIPKmENSt15iterator_traitsIT_E17iterator_categoryERKS3_,comdat
	.weak	_ZSt19__iterator_categoryIPKmENSt15iterator_traitsIT_E17iterator_categoryERKS3_ # -- Begin function _ZSt19__iterator_categoryIPKmENSt15iterator_traitsIT_E17iterator_categoryERKS3_
	.p2align	4, 0x90
	.type	_ZSt19__iterator_categoryIPKmENSt15iterator_traitsIT_E17iterator_categoryERKS3_,@function
_ZSt19__iterator_categoryIPKmENSt15iterator_traitsIT_E17iterator_categoryERKS3_: # @_ZSt19__iterator_categoryIPKmENSt15iterator_traitsIT_E17iterator_categoryERKS3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end814:
	.size	_ZSt19__iterator_categoryIPKmENSt15iterator_traitsIT_E17iterator_categoryERKS3_, .Lfunc_end814-_ZSt19__iterator_categoryIPKmENSt15iterator_traitsIT_E17iterator_categoryERKS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt10for_each_nIN4seal4util7PtrIterIPmEEmZNS1_29inverse_ntt_negacyclic_harveyES4_RKNS1_9NTTTablesEiEUlRT_E_ES8_S8_T0_T1_,"axG",@progbits,_ZSt10for_each_nIN4seal4util7PtrIterIPmEEmZNS1_29inverse_ntt_negacyclic_harveyES4_RKNS1_9NTTTablesEiEUlRT_E_ES8_S8_T0_T1_,comdat
	.weak	_ZSt10for_each_nIN4seal4util7PtrIterIPmEEmZNS1_29inverse_ntt_negacyclic_harveyES4_RKNS1_9NTTTablesEiEUlRT_E_ES8_S8_T0_T1_ # -- Begin function _ZSt10for_each_nIN4seal4util7PtrIterIPmEEmZNS1_29inverse_ntt_negacyclic_harveyES4_RKNS1_9NTTTablesEiEUlRT_E_ES8_S8_T0_T1_
	.p2align	4, 0x90
	.type	_ZSt10for_each_nIN4seal4util7PtrIterIPmEEmZNS1_29inverse_ntt_negacyclic_harveyES4_RKNS1_9NTTTablesEiEUlRT_E_ES8_S8_T0_T1_,@function
_ZSt10for_each_nIN4seal4util7PtrIterIPmEEmZNS1_29inverse_ntt_negacyclic_harveyES4_RKNS1_9NTTTablesEiEUlRT_E_ES8_S8_T0_T1_: # @_ZSt10for_each_nIN4seal4util7PtrIterIPmEEmZNS1_29inverse_ntt_negacyclic_harveyES4_RKNS1_9NTTTablesEiEUlRT_E_ES8_S8_T0_T1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-32(%rbp), %rdi
	callq	_ZSt17__size_to_integerm
	movq	%rax, -40(%rbp)
	cmpq	$0, -40(%rbp)
	ja	.LBB815_2
# %bb.1:
	movq	-16(%rbp), %rax
	movq	%rax, -8(%rbp)
	jmp	.LBB815_3
.LBB815_2:
	movq	-40(%rbp), %rsi
	leaq	-16(%rbp), %rdi
	callq	_ZNK4seal4util7PtrIterIPmEplImEES3_T_
	movq	%rax, -48(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -64(%rbp)
	leaq	-24(%rbp), %rdi
	callq	_ZSt4moveIRZN4seal4util29inverse_ntt_negacyclic_harveyENS1_7PtrIterIPmEERKNS1_9NTTTablesEiEUlRT_E_EONSt16remove_referenceIS8_E4typeEOS8_
	movq	(%rax), %rax
	movq	%rax, -72(%rbp)
	movq	-56(%rbp), %rdi
	movq	-64(%rbp), %rsi
	movq	-72(%rbp), %rdx
	callq	_ZSt8for_eachIN4seal4util7PtrIterIPmEEZNS1_29inverse_ntt_negacyclic_harveyES4_RKNS1_9NTTTablesEiEUlRT_E_ET0_S8_S8_SB_
	movq	%rax, -80(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -8(%rbp)
.LBB815_3:
	movq	-8(%rbp), %rax
	addq	$80, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end815:
	.size	_ZSt10for_each_nIN4seal4util7PtrIterIPmEEmZNS1_29inverse_ntt_negacyclic_harveyES4_RKNS1_9NTTTablesEiEUlRT_E_ES8_S8_T0_T1_, .Lfunc_end815-_ZSt10for_each_nIN4seal4util7PtrIterIPmEEmZNS1_29inverse_ntt_negacyclic_harveyES4_RKNS1_9NTTTablesEiEUlRT_E_ES8_S8_T0_T1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt8for_eachIN4seal4util7PtrIterIPmEEZNS1_29inverse_ntt_negacyclic_harveyES4_RKNS1_9NTTTablesEiEUlRT_E_ET0_S8_S8_SB_,"axG",@progbits,_ZSt8for_eachIN4seal4util7PtrIterIPmEEZNS1_29inverse_ntt_negacyclic_harveyES4_RKNS1_9NTTTablesEiEUlRT_E_ET0_S8_S8_SB_,comdat
	.weak	_ZSt8for_eachIN4seal4util7PtrIterIPmEEZNS1_29inverse_ntt_negacyclic_harveyES4_RKNS1_9NTTTablesEiEUlRT_E_ET0_S8_S8_SB_ # -- Begin function _ZSt8for_eachIN4seal4util7PtrIterIPmEEZNS1_29inverse_ntt_negacyclic_harveyES4_RKNS1_9NTTTablesEiEUlRT_E_ET0_S8_S8_SB_
	.p2align	4, 0x90
	.type	_ZSt8for_eachIN4seal4util7PtrIterIPmEEZNS1_29inverse_ntt_negacyclic_harveyES4_RKNS1_9NTTTablesEiEUlRT_E_ET0_S8_S8_SB_,@function
_ZSt8for_eachIN4seal4util7PtrIterIPmEEZNS1_29inverse_ntt_negacyclic_harveyES4_RKNS1_9NTTTablesEiEUlRT_E_ET0_S8_S8_SB_: # @_ZSt8for_eachIN4seal4util7PtrIterIPmEEZNS1_29inverse_ntt_negacyclic_harveyES4_RKNS1_9NTTTablesEiEUlRT_E_ET0_S8_S8_SB_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rdx, -32(%rbp)
.LBB816_1:                              # =>This Inner Loop Header: Depth=1
	leaq	-16(%rbp), %rdi
	leaq	-24(%rbp), %rsi
	callq	_ZNK4seal4util7PtrIterIPmEneImEEbRKNS1_IPT_EE
	testb	$1, %al
	jne	.LBB816_2
	jmp	.LBB816_4
.LBB816_2:                              #   in Loop: Header=BB816_1 Depth=1
	leaq	-16(%rbp), %rdi
	callq	_ZNK4seal4util7PtrIterIPmEdeEv
	movq	%rax, %rsi
	leaq	-32(%rbp), %rdi
	callq	_ZZN4seal4util29inverse_ntt_negacyclic_harveyENS0_7PtrIterIPmEERKNS0_9NTTTablesEiENKUlRT_E_clImEEDaS8_
# %bb.3:                                #   in Loop: Header=BB816_1 Depth=1
	leaq	-16(%rbp), %rdi
	callq	_ZN4seal4util7PtrIterIPmEppEv
	jmp	.LBB816_1
.LBB816_4:
	movq	-32(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-8(%rbp), %rax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end816:
	.size	_ZSt8for_eachIN4seal4util7PtrIterIPmEEZNS1_29inverse_ntt_negacyclic_harveyES4_RKNS1_9NTTTablesEiEUlRT_E_ET0_S8_S8_SB_, .Lfunc_end816-_ZSt8for_eachIN4seal4util7PtrIterIPmEEZNS1_29inverse_ntt_negacyclic_harveyES4_RKNS1_9NTTTablesEiEUlRT_E_ET0_S8_S8_SB_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4moveIRZN4seal4util29inverse_ntt_negacyclic_harveyENS1_7PtrIterIPmEERKNS1_9NTTTablesEiEUlRT_E_EONSt16remove_referenceIS8_E4typeEOS8_,"axG",@progbits,_ZSt4moveIRZN4seal4util29inverse_ntt_negacyclic_harveyENS1_7PtrIterIPmEERKNS1_9NTTTablesEiEUlRT_E_EONSt16remove_referenceIS8_E4typeEOS8_,comdat
	.weak	_ZSt4moveIRZN4seal4util29inverse_ntt_negacyclic_harveyENS1_7PtrIterIPmEERKNS1_9NTTTablesEiEUlRT_E_EONSt16remove_referenceIS8_E4typeEOS8_ # -- Begin function _ZSt4moveIRZN4seal4util29inverse_ntt_negacyclic_harveyENS1_7PtrIterIPmEERKNS1_9NTTTablesEiEUlRT_E_EONSt16remove_referenceIS8_E4typeEOS8_
	.p2align	4, 0x90
	.type	_ZSt4moveIRZN4seal4util29inverse_ntt_negacyclic_harveyENS1_7PtrIterIPmEERKNS1_9NTTTablesEiEUlRT_E_EONSt16remove_referenceIS8_E4typeEOS8_,@function
_ZSt4moveIRZN4seal4util29inverse_ntt_negacyclic_harveyENS1_7PtrIterIPmEERKNS1_9NTTTablesEiEUlRT_E_EONSt16remove_referenceIS8_E4typeEOS8_: # @_ZSt4moveIRZN4seal4util29inverse_ntt_negacyclic_harveyENS1_7PtrIterIPmEERKNS1_9NTTTablesEiEUlRT_E_EONSt16remove_referenceIS8_E4typeEOS8_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end817:
	.size	_ZSt4moveIRZN4seal4util29inverse_ntt_negacyclic_harveyENS1_7PtrIterIPmEERKNS1_9NTTTablesEiEUlRT_E_EONSt16remove_referenceIS8_E4typeEOS8_, .Lfunc_end817-_ZSt4moveIRZN4seal4util29inverse_ntt_negacyclic_harveyENS1_7PtrIterIPmEERKNS1_9NTTTablesEiEUlRT_E_EONSt16remove_referenceIS8_E4typeEOS8_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZZN4seal4util29inverse_ntt_negacyclic_harveyENS0_7PtrIterIPmEERKNS0_9NTTTablesEiENKUlRT_E_clImEEDaS8_,"axG",@progbits,_ZZN4seal4util29inverse_ntt_negacyclic_harveyENS0_7PtrIterIPmEERKNS0_9NTTTablesEiENKUlRT_E_clImEEDaS8_,comdat
	.weak	_ZZN4seal4util29inverse_ntt_negacyclic_harveyENS0_7PtrIterIPmEERKNS0_9NTTTablesEiENKUlRT_E_clImEEDaS8_ # -- Begin function _ZZN4seal4util29inverse_ntt_negacyclic_harveyENS0_7PtrIterIPmEERKNS0_9NTTTablesEiENKUlRT_E_clImEEDaS8_
	.p2align	4, 0x90
	.type	_ZZN4seal4util29inverse_ntt_negacyclic_harveyENS0_7PtrIterIPmEERKNS0_9NTTTablesEiENKUlRT_E_clImEEDaS8_,@function
_ZZN4seal4util29inverse_ntt_negacyclic_harveyENS0_7PtrIterIPmEERKNS0_9NTTTablesEiENKUlRT_E_clImEEDaS8_: # @_ZZN4seal4util29inverse_ntt_negacyclic_harveyENS0_7PtrIterIPmEERKNS0_9NTTTablesEiENKUlRT_E_clImEEDaS8_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rcx
	movq	%rcx, -24(%rbp)                 # 8-byte Spill
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	movq	(%rcx), %rcx
	cmpq	(%rcx), %rax
	jb	.LBB818_2
# %bb.1:
	movq	-24(%rbp), %rax                 # 8-byte Reload
	movq	(%rax), %rax
	movq	(%rax), %rdx
	movq	-16(%rbp), %rax
	movq	(%rax), %rcx
	subq	%rdx, %rcx
	movq	%rcx, (%rax)
.LBB818_2:
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end818:
	.size	_ZZN4seal4util29inverse_ntt_negacyclic_harveyENS0_7PtrIterIPmEERKNS0_9NTTTablesEiENKUlRT_E_clImEEDaS8_, .Lfunc_end818-_ZZN4seal4util29inverse_ntt_negacyclic_harveyENS0_7PtrIterIPmEERKNS0_9NTTTablesEiENKUlRT_E_clImEEDaS8_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN4seal4util7PointerISt7complexIdEvEC2EONS1_ISt4bytevEE,"axG",@progbits,_ZN4seal4util7PointerISt7complexIdEvEC2EONS1_ISt4bytevEE,comdat
	.weak	_ZN4seal4util7PointerISt7complexIdEvEC2EONS1_ISt4bytevEE # -- Begin function _ZN4seal4util7PointerISt7complexIdEvEC2EONS1_ISt4bytevEE
	.p2align	4, 0x90
	.type	_ZN4seal4util7PointerISt7complexIdEvEC2EONS1_ISt4bytevEE,@function
_ZN4seal4util7PointerISt7complexIdEvEC2EONS1_ISt4bytevEE: # @_ZN4seal4util7PointerISt7complexIdEvEC2EONS1_ISt4bytevEE
.Lfunc_begin88:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception88
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -56(%rbp)                 # 8-byte Spill
	movq	$0, (%rax)
	movq	$0, 8(%rax)
	movq	$0, 16(%rax)
	movb	$0, 24(%rax)
	movq	-16(%rbp), %rax
	cmpq	$0, 8(%rax)
	jne	.LBB819_5
# %bb.1:
	movq	-16(%rbp), %rax
	cmpq	$0, (%rax)
	je	.LBB819_5
# %bb.2:
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rdi
	movq	%rdi, %rax
	movq	%rax, -64(%rbp)                 # 8-byte Spill
.Ltmp1170:
	leaq	.L.str.58(%rip), %rsi
	callq	_ZNSt16invalid_argumentC1EPKc@PLT
.Ltmp1171:
	jmp	.LBB819_3
.LBB819_3:
	movq	-64(%rbp), %rdi                 # 8-byte Reload
	movq	_ZTISt16invalid_argument@GOTPCREL(%rip), %rsi
	movq	_ZNSt16invalid_argumentD1Ev@GOTPCREL(%rip), %rdx
	callq	__cxa_throw@PLT
.LBB819_4:
.Ltmp1172:
	movq	-64(%rbp), %rdi                 # 8-byte Reload
	movq	%rax, %rcx
	movl	%edx, %eax
	movq	%rcx, -24(%rbp)
	movl	%eax, -28(%rbp)
	callq	__cxa_free_exception@PLT
	jmp	.LBB819_12
.LBB819_5:
	movq	-56(%rbp), %rax                 # 8-byte Reload
	movq	-16(%rbp), %rcx
	movq	8(%rcx), %rcx
	movq	%rcx, 8(%rax)
	movq	-16(%rbp), %rcx
	movq	16(%rcx), %rcx
	movq	%rcx, 16(%rax)
	cmpq	$0, 8(%rax)
	je	.LBB819_11
# %bb.6:
	movq	-56(%rbp), %rax                 # 8-byte Reload
	movq	16(%rax), %rdi
	callq	_ZN4seal4util14MemoryPoolItem4dataEv
	movq	%rax, %rcx
	movq	-56(%rbp), %rax                 # 8-byte Reload
	movq	%rcx, (%rax)
	movq	8(%rax), %rdi
	movq	(%rdi), %rax
	callq	*16(%rax)
	movq	%rax, %rcx
	movq	-56(%rbp), %rax                 # 8-byte Reload
	shrq	$4, %rcx
	movq	%rcx, -40(%rbp)
	movq	(%rax), %rax
	movq	%rax, -48(%rbp)
.LBB819_7:                              # =>This Inner Loop Header: Depth=1
	movq	-40(%rbp), %rax
	movq	%rax, %rcx
	addq	$-1, %rcx
	movq	%rcx, -40(%rbp)
	cmpq	$0, %rax
	je	.LBB819_10
# %bb.8:                                #   in Loop: Header=BB819_7 Depth=1
	movq	-48(%rbp), %rdi
	xorps	%xmm1, %xmm1
	movaps	%xmm1, %xmm0
	callq	_ZNSt7complexIdEC2Edd
# %bb.9:                                #   in Loop: Header=BB819_7 Depth=1
	movq	-48(%rbp), %rax
	addq	$16, %rax
	movq	%rax, -48(%rbp)
	jmp	.LBB819_7
.LBB819_10:
	jmp	.LBB819_11
.LBB819_11:
	movq	-56(%rbp), %rax                 # 8-byte Reload
	movq	-16(%rbp), %rcx
	movb	24(%rcx), %cl
	andb	$1, %cl
	movb	%cl, 24(%rax)
	movq	-16(%rbp), %rax
	movq	$0, (%rax)
	movq	-16(%rbp), %rax
	movq	$0, 8(%rax)
	movq	-16(%rbp), %rax
	movq	$0, 16(%rax)
	movq	-16(%rbp), %rax
	movb	$0, 24(%rax)
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB819_12:
	.cfi_def_cfa %rbp, 16
	movq	-24(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end819:
	.size	_ZN4seal4util7PointerISt7complexIdEvEC2EONS1_ISt4bytevEE, .Lfunc_end819-_ZN4seal4util7PointerISt7complexIdEvEC2EONS1_ISt4bytevEE
	.cfi_endproc
	.section	.gcc_except_table._ZN4seal4util7PointerISt7complexIdEvEC2EONS1_ISt4bytevEE,"aG",@progbits,_ZN4seal4util7PointerISt7complexIdEvEC2EONS1_ISt4bytevEE,comdat
	.p2align	2
GCC_except_table819:
.Lexception88:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end88-.Lcst_begin88
.Lcst_begin88:
	.uleb128 .Lfunc_begin88-.Lfunc_begin88  # >> Call Site 1 <<
	.uleb128 .Ltmp1170-.Lfunc_begin88       #   Call between .Lfunc_begin88 and .Ltmp1170
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1170-.Lfunc_begin88       # >> Call Site 2 <<
	.uleb128 .Ltmp1171-.Ltmp1170            #   Call between .Ltmp1170 and .Ltmp1171
	.uleb128 .Ltmp1172-.Lfunc_begin88       #     jumps to .Ltmp1172
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1171-.Lfunc_begin88       # >> Call Site 3 <<
	.uleb128 .Lfunc_end819-.Ltmp1171        #   Call between .Ltmp1171 and .Lfunc_end819
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end88:
	.p2align	2
                                        # -- End function
	.section	.text._ZN4seal4util12compare_uintEPKmS2_m,"axG",@progbits,_ZN4seal4util12compare_uintEPKmS2_m,comdat
	.weak	_ZN4seal4util12compare_uintEPKmS2_m # -- Begin function _ZN4seal4util12compare_uintEPKmS2_m
	.p2align	4, 0x90
	.type	_ZN4seal4util12compare_uintEPKmS2_m,@function
_ZN4seal4util12compare_uintEPKmS2_m:    # @_ZN4seal4util12compare_uintEPKmS2_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movl	$0, -28(%rbp)
	movq	-24(%rbp), %rax
	subq	$1, %rax
	shlq	$3, %rax
	addq	-8(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-24(%rbp), %rax
	subq	$1, %rax
	shlq	$3, %rax
	addq	-16(%rbp), %rax
	movq	%rax, -16(%rbp)
.LBB820_1:                              # =>This Inner Loop Header: Depth=1
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	cmpl	$0, -28(%rbp)
	movb	%al, -29(%rbp)                  # 1-byte Spill
	jne	.LBB820_3
# %bb.2:                                #   in Loop: Header=BB820_1 Depth=1
	movq	-24(%rbp), %rax
	movq	%rax, %rcx
	addq	$-1, %rcx
	movq	%rcx, -24(%rbp)
	cmpq	$0, %rax
	setne	%al
	movb	%al, -29(%rbp)                  # 1-byte Spill
.LBB820_3:                              #   in Loop: Header=BB820_1 Depth=1
	movb	-29(%rbp), %al                  # 1-byte Reload
	testb	$1, %al
	jne	.LBB820_4
	jmp	.LBB820_6
.LBB820_4:                              #   in Loop: Header=BB820_1 Depth=1
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	movq	-16(%rbp), %rcx
	cmpq	(%rcx), %rax
	seta	%al
	andb	$1, %al
	movzbl	%al, %eax
	movq	-8(%rbp), %rcx
	movq	(%rcx), %rcx
	movq	-16(%rbp), %rdx
	cmpq	(%rdx), %rcx
	setb	%cl
	andb	$1, %cl
	movzbl	%cl, %ecx
	subl	%ecx, %eax
	movl	%eax, -28(%rbp)
# %bb.5:                                #   in Loop: Header=BB820_1 Depth=1
	movq	-8(%rbp), %rax
	addq	$-8, %rax
	movq	%rax, -8(%rbp)
	movq	-16(%rbp), %rax
	addq	$-8, %rax
	movq	%rax, -16(%rbp)
	jmp	.LBB820_1
.LBB820_6:
	movl	-28(%rbp), %eax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end820:
	.size	_ZN4seal4util12compare_uintEPKmS2_m, .Lfunc_end820-_ZN4seal4util12compare_uintEPKmS2_m
	.cfi_endproc
                                        # -- End function
	.section	.text.startup,"ax",@progbits
	.p2align	4, 0x90                         # -- Begin function _GLOBAL__sub_I_4_ckks_basics.cpp
	.type	_GLOBAL__sub_I_4_ckks_basics.cpp,@function
_GLOBAL__sub_I_4_ckks_basics.cpp:       # @_GLOBAL__sub_I_4_ckks_basics.cpp
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	callq	__cxx_global_var_init
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end821:
	.size	_GLOBAL__sub_I_4_ckks_basics.cpp, .Lfunc_end821-_GLOBAL__sub_I_4_ckks_basics.cpp
	.cfi_endproc
                                        # -- End function
	.type	_ZStL8__ioinit,@object          # @_ZStL8__ioinit
	.local	_ZStL8__ioinit
	.comm	_ZStL8__ioinit,1,1
	.hidden	__dso_handle
	.type	.L.str,@object                  # @.str
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str:
	.asciz	"0"
	.size	.L.str, 2

	.type	.L.str.1,@object                # @.str.1
.L.str.1:
	.asciz	"1"
	.size	.L.str.1, 2

	.type	.L.str.2,@object                # @.str.2
.L.str.2:
	.asciz	"Example: CKKS Basics"
	.size	.L.str.2, 21

	.type	.L.str.3,@object                # @.str.3
.L.str.3:
	.asciz	"effect_mult_depth_3.txt"
	.size	.L.str.3, 24

	.type	.L.str.4,@object                # @.str.4
.L.str.4:
	.asciz	"coefficient modulus"
	.size	.L.str.4, 20

	.type	.L.str.5,@object                # @.str.5
.L.str.5:
	.asciz	"Number of slots: "
	.size	.L.str.5, 18

	.type	.L.str.6,@object                # @.str.6
.L.str.6:
	.asciz	"Input vector: "
	.size	.L.str.6, 15

	.type	.L.str.7,@object                # @.str.7
.L.str.7:
	.asciz	"Evaluating polynomial PI*x^3 + 0.4x + 1 ..."
	.size	.L.str.7, 44

	.type	.L.str.8,@object                # @.str.8
.L.str.8:
	.asciz	"Encode input vectors."
	.size	.L.str.8, 22

	.type	.L.str.9,@object                # @.str.9
.L.str.9:
	.asciz	"Compute x^2 and relinearize:"
	.size	.L.str.9, 29

	.type	.L.str.10,@object               # @.str.10
.L.str.10:
	.asciz	"    + Scale of x^2 before rescale: "
	.size	.L.str.10, 36

	.type	.L.str.11,@object               # @.str.11
.L.str.11:
	.asciz	" bits"
	.size	.L.str.11, 6

	.type	.L.str.12,@object               # @.str.12
.L.str.12:
	.asciz	"Rescale x^2."
	.size	.L.str.12, 13

	.type	.L.str.13,@object               # @.str.13
.L.str.13:
	.asciz	"    + Scale of x^2 after rescale: "
	.size	.L.str.13, 35

	.type	.L.str.14,@object               # @.str.14
.L.str.14:
	.asciz	"Compute and rescale PI*x."
	.size	.L.str.14, 26

	.type	.L.str.15,@object               # @.str.15
.L.str.15:
	.asciz	"    + Scale of PI*x before rescale: "
	.size	.L.str.15, 37

	.type	.L.str.16,@object               # @.str.16
.L.str.16:
	.asciz	"    + Scale of PI*x after rescale: "
	.size	.L.str.16, 36

	.type	.L.str.17,@object               # @.str.17
.L.str.17:
	.asciz	"Compute, relinearize, and rescale (PI*x)*x^2."
	.size	.L.str.17, 46

	.type	.L.str.18,@object               # @.str.18
.L.str.18:
	.asciz	"    + Scale of PI*x^3 before rescale: "
	.size	.L.str.18, 39

	.type	.L.str.19,@object               # @.str.19
.L.str.19:
	.asciz	"print x3 before rescale"
	.size	.L.str.19, 24

	.type	.L.str.20,@object               # @.str.20
.L.str.20:
	.asciz	" "
	.size	.L.str.20, 2

	.type	.L.str.21,@object               # @.str.21
.L.str.21:
	.asciz	"    + Scale of PI*x^3 after rescale: "
	.size	.L.str.21, 38

	.type	.L.str.22,@object               # @.str.22
.L.str.22:
	.asciz	"Compute and rescale 0.4*x."
	.size	.L.str.22, 27

	.type	.L.str.23,@object               # @.str.23
.L.str.23:
	.asciz	"    + Scale of 0.4*x before rescale: "
	.size	.L.str.23, 38

	.type	.L.str.24,@object               # @.str.24
.L.str.24:
	.asciz	"    + Scale of 0.4*x after rescale: "
	.size	.L.str.24, 37

	.type	.L.str.25,@object               # @.str.25
.L.str.25:
	.asciz	"Parameters used by all three terms are different."
	.size	.L.str.25, 50

	.type	.L.str.26,@object               # @.str.26
.L.str.26:
	.asciz	"    + Modulus chain index for x3_encrypted: "
	.size	.L.str.26, 45

	.type	.L.str.27,@object               # @.str.27
.L.str.27:
	.asciz	"    + Modulus chain index for x1_encrypted: "
	.size	.L.str.27, 45

	.type	.L.str.28,@object               # @.str.28
.L.str.28:
	.asciz	"    + Modulus chain index for plain_coeff0: "
	.size	.L.str.28, 45

	.type	.L.str.29,@object               # @.str.29
.L.str.29:
	.asciz	"The exact scales of all three terms are different:"
	.size	.L.str.29, 51

	.type	.L.str.30,@object               # @.str.30
.L.str.30:
	.asciz	"    + Exact scale in PI*x^3: "
	.size	.L.str.30, 30

	.type	.L.str.31,@object               # @.str.31
.L.str.31:
	.asciz	"    + Exact scale in  0.4*x: "
	.size	.L.str.31, 30

	.type	.L.str.32,@object               # @.str.32
.L.str.32:
	.asciz	"    + Exact scale in      1: "
	.size	.L.str.32, 30

	.type	.L.str.33,@object               # @.str.33
.L.str.33:
	.asciz	"Normalize scales to 2^40."
	.size	.L.str.33, 26

	.type	.L.str.34,@object               # @.str.34
.L.str.34:
	.asciz	"Normalize encryption parameters to the lowest level."
	.size	.L.str.34, 53

	.type	.L.str.35,@object               # @.str.35
.L.str.35:
	.asciz	"Compute PI*x^3 + 0.4*x + 1."
	.size	.L.str.35, 28

	.type	.L.str.36,@object               # @.str.36
.L.str.36:
	.asciz	"Decrypt and decode PI*x^3 + 0.4x + 1."
	.size	.L.str.36, 38

	.type	.L.str.37,@object               # @.str.37
.L.str.37:
	.asciz	"    + Expected result:"
	.size	.L.str.37, 23

	.type	.L.str.38,@object               # @.str.38
.L.str.38:
	.asciz	"    + Computed result ...... Correct."
	.size	.L.str.38, 38

	.type	.L.str.39,@object               # @.str.39
.L.str.39:
	.asciz	"+"
	.size	.L.str.39, 2

	.type	.L.str.40,@object               # @.str.40
.L.str.40:
	.asciz	"|"
	.size	.L.str.40, 2

	.type	.Lconstinit,@object             # @constinit
	.local	.Lconstinit
	.comm	.Lconstinit,24,8
	.type	.L.str.41,@object               # @.str.41
.L.str.41:
	.asciz	"poly_modulus_degree is not supported for this scheme"
	.size	.L.str.41, 53

	.type	.L.str.42,@object               # @.str.42
.L.str.42:
	.asciz	"coeff_modulus is not supported for this scheme"
	.size	.L.str.42, 47

	.type	.L.str.43,@object               # @.str.43
.L.str.43:
	.asciz	"coeff_modulus is invalid"
	.size	.L.str.43, 25

	.type	.L.str.44,@object               # @.str.44
.L.str.44:
	.asciz	"BFV"
	.size	.L.str.44, 4

	.type	.L.str.45,@object               # @.str.45
.L.str.45:
	.asciz	"CKKS"
	.size	.L.str.45, 5

	.type	.L.str.46,@object               # @.str.46
.L.str.46:
	.asciz	"unsupported scheme"
	.size	.L.str.46, 19

	.type	.L.str.47,@object               # @.str.47
.L.str.47:
	.asciz	"/"
	.size	.L.str.47, 2

	.type	.L.str.48,@object               # @.str.48
.L.str.48:
	.asciz	"| Encryption parameters :"
	.size	.L.str.48, 26

	.type	.L.str.49,@object               # @.str.49
.L.str.49:
	.asciz	"|   scheme: "
	.size	.L.str.49, 13

	.type	.L.str.50,@object               # @.str.50
.L.str.50:
	.asciz	"|   poly_modulus_degree: "
	.size	.L.str.50, 26

	.type	.L.str.51,@object               # @.str.51
.L.str.51:
	.asciz	"|   coeff_modulus size: "
	.size	.L.str.51, 25

	.type	.L.str.52,@object               # @.str.52
.L.str.52:
	.asciz	" ("
	.size	.L.str.52, 3

	.type	.L.str.53,@object               # @.str.53
.L.str.53:
	.asciz	" + "
	.size	.L.str.53, 4

	.type	.L.str.54,@object               # @.str.54
.L.str.54:
	.asciz	") bits"
	.size	.L.str.54, 7

	.type	.L.str.55,@object               # @.str.55
.L.str.55:
	.asciz	"|   plain_modulus: "
	.size	.L.str.55, 20

	.type	.L.str.56,@object               # @.str.56
.L.str.56:
	.asciz	"\\"
	.size	.L.str.56, 2

	.type	_ZTVSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTVSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE
	.section	.data.rel.ro._ZTVSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE,"aGw",@progbits,_ZTVSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTVSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE
	.p2align	3
_ZTVSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE:
	.quad	0
	.quad	_ZTISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE
	.quad	_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EED2Ev
	.quad	_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.quad	_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.quad	_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.quad	_ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.size	_ZTVSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE, 56

	.type	_ZTSSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTSSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE
	.section	.rodata._ZTSSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE,"aG",@progbits,_ZTSSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTSSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE
_ZTSSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE:
	.asciz	"St23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE"
	.size	_ZTSSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE, 92

	.type	_ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.section	.rodata._ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE,"aG",@progbits,_ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
_ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE:
	.asciz	"St16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE"
	.size	_ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE, 52

	.type	_ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE
	.section	.rodata._ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE,"aG",@progbits,_ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE
_ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE:
	.asciz	"St11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE"
	.size	_ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE, 47

	.type	_ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE
	.section	.data.rel.ro._ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE,"aGw",@progbits,_ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE
	.p2align	3
_ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE:
	.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
	.quad	_ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE
	.size	_ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE, 16

	.type	_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.section	.data.rel.ro._ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE,"aGw",@progbits,_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.p2align	3
_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.quad	_ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE
	.size	_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE, 24

	.type	_ZTISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE
	.section	.data.rel.ro._ZTISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE,"aGw",@progbits,_ZTISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE
	.p2align	3
_ZTISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE
	.quad	_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.size	_ZTISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE, 24

	.type	_ZTVSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTVSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.section	.data.rel.ro._ZTVSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE,"aGw",@progbits,_ZTVSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTVSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.p2align	3
_ZTVSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE:
	.quad	0
	.quad	_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.quad	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev
	.quad	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED0Ev
	.quad	__cxa_pure_virtual
	.quad	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.quad	__cxa_pure_virtual
	.size	_ZTVSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE, 56

	.type	_ZTVN4seal4util10MemoryPoolE,@object # @_ZTVN4seal4util10MemoryPoolE
	.section	.data.rel.ro._ZTVN4seal4util10MemoryPoolE,"aGw",@progbits,_ZTVN4seal4util10MemoryPoolE,comdat
	.weak	_ZTVN4seal4util10MemoryPoolE
	.p2align	3
_ZTVN4seal4util10MemoryPoolE:
	.quad	0
	.quad	_ZTIN4seal4util10MemoryPoolE
	.quad	_ZN4seal4util10MemoryPoolD2Ev
	.quad	_ZN4seal4util10MemoryPoolD0Ev
	.quad	__cxa_pure_virtual
	.quad	__cxa_pure_virtual
	.quad	__cxa_pure_virtual
	.size	_ZTVN4seal4util10MemoryPoolE, 56

	.type	_ZTSN4seal4util10MemoryPoolE,@object # @_ZTSN4seal4util10MemoryPoolE
	.section	.rodata._ZTSN4seal4util10MemoryPoolE,"aG",@progbits,_ZTSN4seal4util10MemoryPoolE,comdat
	.weak	_ZTSN4seal4util10MemoryPoolE
_ZTSN4seal4util10MemoryPoolE:
	.asciz	"N4seal4util10MemoryPoolE"
	.size	_ZTSN4seal4util10MemoryPoolE, 25

	.type	_ZTIN4seal4util10MemoryPoolE,@object # @_ZTIN4seal4util10MemoryPoolE
	.section	.data.rel.ro._ZTIN4seal4util10MemoryPoolE,"aGw",@progbits,_ZTIN4seal4util10MemoryPoolE,comdat
	.weak	_ZTIN4seal4util10MemoryPoolE
	.p2align	3
_ZTIN4seal4util10MemoryPoolE:
	.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
	.quad	_ZTSN4seal4util10MemoryPoolE
	.size	_ZTIN4seal4util10MemoryPoolE, 16

	.type	_ZTSSt19_Sp_make_shared_tag,@object # @_ZTSSt19_Sp_make_shared_tag
	.section	.rodata._ZTSSt19_Sp_make_shared_tag,"aG",@progbits,_ZTSSt19_Sp_make_shared_tag,comdat
	.weak	_ZTSSt19_Sp_make_shared_tag
_ZTSSt19_Sp_make_shared_tag:
	.asciz	"St19_Sp_make_shared_tag"
	.size	_ZTSSt19_Sp_make_shared_tag, 24

	.type	_ZTISt19_Sp_make_shared_tag,@object # @_ZTISt19_Sp_make_shared_tag
	.section	.data.rel.ro._ZTISt19_Sp_make_shared_tag,"aGw",@progbits,_ZTISt19_Sp_make_shared_tag,comdat
	.weak	_ZTISt19_Sp_make_shared_tag
	.p2align	3
_ZTISt19_Sp_make_shared_tag:
	.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
	.quad	_ZTSSt19_Sp_make_shared_tag
	.size	_ZTISt19_Sp_make_shared_tag, 16

	.type	_ZZNSt19_Sp_make_shared_tag5_S_tiEvE5__tag,@object # @_ZZNSt19_Sp_make_shared_tag5_S_tiEvE5__tag
	.section	.rodata._ZZNSt19_Sp_make_shared_tag5_S_tiEvE5__tag,"aG",@progbits,_ZZNSt19_Sp_make_shared_tag5_S_tiEvE5__tag,comdat
	.weak	_ZZNSt19_Sp_make_shared_tag5_S_tiEvE5__tag
	.p2align	3
_ZZNSt19_Sp_make_shared_tag5_S_tiEvE5__tag:
	.zero	16
	.size	_ZZNSt19_Sp_make_shared_tag5_S_tiEvE5__tag, 16

	.type	_ZZN4seal13MemoryManager9GetMMProfEvE7mm_prof,@object # @_ZZN4seal13MemoryManager9GetMMProfEvE7mm_prof
	.section	.bss._ZZN4seal13MemoryManager9GetMMProfEvE7mm_prof,"aGw",@nobits,_ZZN4seal13MemoryManager9GetMMProfEvE7mm_prof,comdat
	.weak	_ZZN4seal13MemoryManager9GetMMProfEvE7mm_prof
	.p2align	3
_ZZN4seal13MemoryManager9GetMMProfEvE7mm_prof:
	.zero	8
	.size	_ZZN4seal13MemoryManager9GetMMProfEvE7mm_prof, 8

	.type	_ZGVZN4seal13MemoryManager9GetMMProfEvE7mm_prof,@object # @_ZGVZN4seal13MemoryManager9GetMMProfEvE7mm_prof
	.section	.bss._ZGVZN4seal13MemoryManager9GetMMProfEvE7mm_prof,"aGw",@nobits,_ZGVZN4seal13MemoryManager9GetMMProfEvE7mm_prof,comdat
	.weak	_ZGVZN4seal13MemoryManager9GetMMProfEvE7mm_prof
	.p2align	3
_ZGVZN4seal13MemoryManager9GetMMProfEvE7mm_prof:
	.quad	0                               # 0x0
	.size	_ZGVZN4seal13MemoryManager9GetMMProfEvE7mm_prof, 8

	.type	_ZTVN4seal12MMProfGlobalE,@object # @_ZTVN4seal12MMProfGlobalE
	.section	.data.rel.ro._ZTVN4seal12MMProfGlobalE,"aGw",@progbits,_ZTVN4seal12MMProfGlobalE,comdat
	.weak	_ZTVN4seal12MMProfGlobalE
	.p2align	3
_ZTVN4seal12MMProfGlobalE:
	.quad	0
	.quad	_ZTIN4seal12MMProfGlobalE
	.quad	_ZN4seal12MMProfGlobalD2Ev
	.quad	_ZN4seal12MMProfGlobalD0Ev
	.quad	_ZN4seal12MMProfGlobal8get_poolEm
	.size	_ZTVN4seal12MMProfGlobalE, 40

	.type	_ZTSN4seal12MMProfGlobalE,@object # @_ZTSN4seal12MMProfGlobalE
	.section	.rodata._ZTSN4seal12MMProfGlobalE,"aG",@progbits,_ZTSN4seal12MMProfGlobalE,comdat
	.weak	_ZTSN4seal12MMProfGlobalE
_ZTSN4seal12MMProfGlobalE:
	.asciz	"N4seal12MMProfGlobalE"
	.size	_ZTSN4seal12MMProfGlobalE, 22

	.type	_ZTSN4seal6MMProfE,@object      # @_ZTSN4seal6MMProfE
	.section	.rodata._ZTSN4seal6MMProfE,"aG",@progbits,_ZTSN4seal6MMProfE,comdat
	.weak	_ZTSN4seal6MMProfE
_ZTSN4seal6MMProfE:
	.asciz	"N4seal6MMProfE"
	.size	_ZTSN4seal6MMProfE, 15

	.type	_ZTIN4seal6MMProfE,@object      # @_ZTIN4seal6MMProfE
	.section	.data.rel.ro._ZTIN4seal6MMProfE,"aGw",@progbits,_ZTIN4seal6MMProfE,comdat
	.weak	_ZTIN4seal6MMProfE
	.p2align	3
_ZTIN4seal6MMProfE:
	.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
	.quad	_ZTSN4seal6MMProfE
	.size	_ZTIN4seal6MMProfE, 16

	.type	_ZTIN4seal12MMProfGlobalE,@object # @_ZTIN4seal12MMProfGlobalE
	.section	.data.rel.ro._ZTIN4seal12MMProfGlobalE,"aGw",@progbits,_ZTIN4seal12MMProfGlobalE,comdat
	.weak	_ZTIN4seal12MMProfGlobalE
	.p2align	3
_ZTIN4seal12MMProfGlobalE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN4seal12MMProfGlobalE
	.quad	_ZTIN4seal6MMProfE
	.size	_ZTIN4seal12MMProfGlobalE, 24

	.type	_ZTVN4seal6MMProfE,@object      # @_ZTVN4seal6MMProfE
	.section	.data.rel.ro._ZTVN4seal6MMProfE,"aGw",@progbits,_ZTVN4seal6MMProfE,comdat
	.weak	_ZTVN4seal6MMProfE
	.p2align	3
_ZTVN4seal6MMProfE:
	.quad	0
	.quad	_ZTIN4seal6MMProfE
	.quad	_ZN4seal6MMProfD2Ev
	.quad	_ZN4seal6MMProfD0Ev
	.quad	__cxa_pure_virtual
	.size	_ZTVN4seal6MMProfE, 40

	.type	.L.str.57,@object               # @.str.57
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.57:
	.asciz	"unsigned overflow"
	.size	.L.str.57, 18

	.type	.L.str.58,@object               # @.str.58
.L.str.58:
	.asciz	"cannot acquire a non-pool pointer of different type"
	.size	.L.str.58, 52

	.type	.L.str.59,@object               # @.str.59
.L.str.59:
	.asciz	"pool not initialized"
	.size	.L.str.59, 21

	.type	.L.str.60,@object               # @.str.60
.L.str.60:
	.asciz	"pool is uninitialized"
	.size	.L.str.60, 22

	.type	.L.str.61,@object               # @.str.61
.L.str.61:
	.asciz	"Line "
	.size	.L.str.61, 6

	.type	.L.str.62,@object               # @.str.62
.L.str.62:
	.asciz	" --> "
	.size	.L.str.62, 6

	.type	.L.str.63,@object               # @.str.63
.L.str.63:
	.asciz	"here in relinearize"
	.size	.L.str.63, 20

	.type	.L.str.64,@object               # @.str.64
.L.str.64:
	.asciz	"cannot create std::vector larger than max_size()"
	.size	.L.str.64, 49

	.type	.L.str.65,@object               # @.str.65
.L.str.65:
	.asciz	"basic_string::_M_construct null not valid"
	.size	.L.str.65, 42

	.type	.L.str.66,@object               # @.str.66
.L.str.66:
	.asciz	"vector::reserve"
	.size	.L.str.66, 16

	.type	.L.str.67,@object               # @.str.67
.L.str.67:
	.asciz	"vector::_M_realloc_insert"
	.size	.L.str.67, 26

	.type	.L.str.68,@object               # @.str.68
.L.str.68:
	.asciz	"    ["
	.size	.L.str.68, 6

	.type	.L.str.69,@object               # @.str.69
.L.str.69:
	.asciz	","
	.size	.L.str.69, 2

	.type	.L.str.70,@object               # @.str.70
.L.str.70:
	.asciz	" ]\n"
	.size	.L.str.70, 4

	.type	.L.str.71,@object               # @.str.71
.L.str.71:
	.asciz	" ...,"
	.size	.L.str.71, 6

	.type	.L.str.72,@object               # @.str.72
.L.str.72:
	.asciz	"vector::_M_default_append"
	.size	.L.str.72, 26

	.type	.L.str.73,@object               # @.str.73
.L.str.73:
	.asciz	"parms_id is not valid for encryption parameters"
	.size	.L.str.73, 48

	.type	.L.str.74,@object               # @.str.74
.L.str.74:
	.asciz	"values cannot be null"
	.size	.L.str.74, 22

	.type	.L.str.75,@object               # @.str.75
.L.str.75:
	.asciz	"values_size is too large"
	.size	.L.str.75, 25

	.type	.L.str.76,@object               # @.str.76
.L.str.76:
	.asciz	" here in encode"
	.size	.L.str.76, 16

	.type	.L.str.77,@object               # @.str.77
.L.str.77:
	.asciz	"invalid parameters"
	.size	.L.str.77, 19

	.type	.L.str.78,@object               # @.str.78
.L.str.78:
	.asciz	"scale out of bounds"
	.size	.L.str.78, 20

	.type	.L.str.79,@object               # @.str.79
.L.str.79:
	.asciz	"encoded values are too large"
	.size	.L.str.79, 29

	.type	.L.str.80,@object               # @.str.80
.L.str.80:
	.asciz	"before mul_root in dwthandler (flag = 1)"
	.size	.L.str.80, 41

	.type	.L.str.81,@object               # @.str.81
.L.str.81:
	.asciz	"corrupting intermediate (flag = 0)"
	.size	.L.str.81, 35

	.type	.L.str.82,@object               # @.str.82
.L.str.82:
	.asciz	"corrupting intermediate (flag = 1)"
	.size	.L.str.82, 35

	.type	.L.str.83,@object               # @.str.83
.L.str.83:
	.asciz	"cannot reserve for an NTT transformed Plaintext"
	.size	.L.str.83, 48

	.type	.L.str.84,@object               # @.str.84
.L.str.84:
	.asciz	"index must be within [0, size)"
	.size	.L.str.84, 31

	.type	.L.str.85,@object               # @.str.85
.L.str.85:
	.asciz	"coeff_index must be within [0, coeff_count)"
	.size	.L.str.85, 44

	.type	.L.str.86,@object               # @.str.86
.L.str.86:
	.asciz	"plain is not valid for encryption parameters"
	.size	.L.str.86, 45

	.type	.L.str.87,@object               # @.str.87
.L.str.87:
	.asciz	"plain is not in NTT form"
	.size	.L.str.87, 25

	.type	.L.str.88,@object               # @.str.88
.L.str.88:
	.asciz	"destination cannot be null"
	.size	.L.str.88, 27

	.type	.L.str.89,@object               # @.str.89
.L.str.89:
	.asciz	"ntt"
	.size	.L.str.89, 4

	.type	.L.str.90,@object               # @.str.90
.L.str.90:
	.asciz	" here1 in decode"
	.size	.L.str.90, 17

	.type	.L.str.91,@object               # @.str.91
.L.str.91:
	.asciz	"inverse ntt negacyclic before corrupt 2"
	.size	.L.str.91, 40

	.section	.init_array,"aw",@init_array
	.p2align	3
	.quad	_GLOBAL__sub_I_4_ckks_basics.cpp
	.hidden	DW.ref.__gxx_personality_v0
	.weak	DW.ref.__gxx_personality_v0
	.section	.data.DW.ref.__gxx_personality_v0,"aGw",@progbits,DW.ref.__gxx_personality_v0,comdat
	.p2align	3
	.type	DW.ref.__gxx_personality_v0,@object
	.size	DW.ref.__gxx_personality_v0, 8
DW.ref.__gxx_personality_v0:
	.quad	__gxx_personality_v0
	.weak	_ZTHN4seal4util16global_variables15tls_memory_poolE
	.ident	"Ubuntu clang version 14.0.0-1ubuntu1.1"
	.section	".note.GNU-stack","",@progbits
	.addrsig
	.addrsig_sym __cxx_global_var_init
	.addrsig_sym __cxa_atexit
	.addrsig_sym __gxx_personality_v0
	.addrsig_sym _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_
	.addrsig_sym _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_
	.addrsig_sym _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv
	.addrsig_sym _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm
	.addrsig_sym _ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_Xsr3std12__is_integerIS2_EE7__valueEE6__typeENS4_IS3_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEE6__typeES2_S3_
	.addrsig_sym _Z20print_example_bannerNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.addrsig_sym srand
	.addrsig_sym time
	.addrsig_sym _ZN4seal20EncryptionParameters23set_poly_modulus_degreeEm
	.addrsig_sym _ZN4seal20EncryptionParameters17set_coeff_modulusERKSt6vectorINS_7ModulusESaIS2_EE
	.addrsig_sym _ZN4seal12CoeffModulus6CreateEmSt6vectorIiSaIiEE
	.addrsig_sym _ZSt3powIdiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_Xsr3std12__is_integerIS2_EE7__valueEE6__typeENS4_IS3_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEE6__typeES2_S3_
	.addrsig_sym _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
	.addrsig_sym _ZNSolsEPFRSoS_E
	.addrsig_sym _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_
	.addrsig_sym _ZNK4seal20EncryptionParameters13coeff_modulusEv
	.addrsig_sym _ZNKSt6vectorIN4seal7ModulusESaIS1_EE5beginEv
	.addrsig_sym _ZNKSt6vectorIN4seal7ModulusESaIS1_EE3endEv
	.addrsig_sym _ZN9__gnu_cxxneIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_
	.addrsig_sym _ZNK9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEdeEv
	.addrsig_sym _ZNSolsEm
	.addrsig_sym _ZNK4seal7Modulus5valueEv
	.addrsig_sym _ZN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEppEv
	.addrsig_sym _Z16print_parametersRKN4seal11SEALContextE
	.addrsig_sym _ZNK4seal12KeyGenerator10secret_keyEv
	.addrsig_sym _ZNK4seal12KeyGenerator17create_public_keyERNS_9PublicKeyE
	.addrsig_sym _ZN4seal12KeyGenerator17create_relin_keysERNS_9RelinKeysE
	.addrsig_sym _ZN4seal12KeyGenerator18create_galois_keysERNS_10GaloisKeysE
	.addrsig_sym _ZNK4seal11CKKSEncoder10slot_countEv
	.addrsig_sym _ZNSt6vectorIdSaIdEE7reserveEm
	.addrsig_sym _ZNSt6vectorIdSaIdEE9push_backERKd
	.addrsig_sym _Z12print_vectorIdEvSt6vectorIT_SaIS1_EEmi
	.addrsig_sym _ZN4seal13MemoryManager7GetPoolEv
	.addrsig_sym _ZN4seal11CKKSEncoder6encodeEddRNS_9PlaintextENS_16MemoryPoolHandleE
	.addrsig_sym _Z10print_linei
	.addrsig_sym _ZN4seal11CKKSEncoder6encodeIdvEEvRKSt6vectorIT_SaIS3_EEdRNS_9PlaintextENS_16MemoryPoolHandleE
	.addrsig_sym _ZNK4seal9Encryptor7encryptERKNS_9PlaintextERNS_10CiphertextENS_16MemoryPoolHandleE
	.addrsig_sym _ZN4seal9Evaluator6squareERKNS_10CiphertextERS1_NS_16MemoryPoolHandleE
	.addrsig_sym _ZN4seal9Evaluator19relinearize_inplaceERNS_10CiphertextERKNS_9RelinKeysEddiNS_16MemoryPoolHandleE
	.addrsig_sym _ZNSolsEd
	.addrsig_sym log2
	.addrsig_sym _ZN4seal10Ciphertext5scaleEv
	.addrsig_sym _ZN4seal9Evaluator23rescale_to_next_inplaceERNS_10CiphertextEddiNS_16MemoryPoolHandleE
	.addrsig_sym _ZN4seal9Evaluator14multiply_plainERKNS_10CiphertextERKNS_9PlaintextERS1_NS_16MemoryPoolHandleE
	.addrsig_sym _ZN4seal9Evaluator16multiply_inplaceERNS_10CiphertextERKS1_NS_16MemoryPoolHandleE
	.addrsig_sym _ZNK4seal10Ciphertext9dyn_arrayEv
	.addrsig_sym _ZNK4seal8DynArrayImE4sizeEv
	.addrsig_sym _ZN4seal10Ciphertext4dataEv
	.addrsig_sym _ZN4seal9Evaluator22multiply_plain_inplaceERNS_10CiphertextERKNS_9PlaintextENS_16MemoryPoolHandleE
	.addrsig_sym _ZNK4seal11SEALContext16get_context_dataESt5arrayImLm4EE
	.addrsig_sym _ZN4seal10Ciphertext8parms_idEv
	.addrsig_sym _ZNKSt19__shared_ptr_accessIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2ELb0ELb0EEptEv
	.addrsig_sym _ZNK4seal11SEALContext11ContextData11chain_indexEv
	.addrsig_sym _ZN4seal9Plaintext8parms_idEv
	.addrsig_sym _ZNSt9basic_iosIcSt11char_traitsIcEE7copyfmtERKS2_
	.addrsig_sym _ZStlsIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_St13_Setprecision
	.addrsig_sym _ZNSolsEPFRSt8ios_baseS0_E
	.addrsig_sym _ZSt5fixedRSt8ios_base
	.addrsig_sym _ZSt12setprecisioni
	.addrsig_sym _ZN4seal9Plaintext5scaleEv
	.addrsig_sym _ZN4seal9Evaluator21mod_switch_to_inplaceERNS_10CiphertextESt5arrayImLm4EENS_16MemoryPoolHandleE
	.addrsig_sym _ZN4seal9Evaluator21mod_switch_to_inplaceERNS_9PlaintextESt5arrayImLm4EE
	.addrsig_sym _ZN4seal9Evaluator3addERKNS_10CiphertextES3_RS1_
	.addrsig_sym _ZN4seal9Evaluator17add_plain_inplaceERNS_10CiphertextERKNS_9PlaintextE
	.addrsig_sym _ZNKSt6vectorIdSaIdEE4sizeEv
	.addrsig_sym _ZNSt6vectorIdSaIdEEixEm
	.addrsig_sym _ZNSt6vectorIdSaIdEE9push_backEOd
	.addrsig_sym _ZN4seal9Decryptor7decryptERKNS_10CiphertextERNS_9PlaintextE
	.addrsig_sym _ZN4seal11CKKSEncoder6decodeIdvEEvRKNS_9PlaintextERSt6vectorIT_SaIS6_EENS_16MemoryPoolHandleE
	.addrsig_sym _ZNSolsEi
	.addrsig_sym pow
	.addrsig_sym _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5emptyEv
	.addrsig_sym _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv
	.addrsig_sym _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
	.addrsig_sym _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_
	.addrsig_sym _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_
	.addrsig_sym _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_
	.addrsig_sym _ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE
	.addrsig_sym _ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_
	.addrsig_sym _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc
	.addrsig_sym _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEmPKc
	.addrsig_sym _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv
	.addrsig_sym _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc
	.addrsig_sym _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv
	.addrsig_sym _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEmRKS4_
	.addrsig_sym _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_
	.addrsig_sym _ZN4seal20EncryptionParameters16compute_parms_idEv
	.addrsig_sym _ZN4seal7Modulus9set_valueEm
	.addrsig_sym _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv
	.addrsig_sym __clang_call_terminate
	.addrsig_sym __cxa_begin_catch
	.addrsig_sym _ZSt9terminatev
	.addrsig_sym __cxa_allocate_exception
	.addrsig_sym __cxa_free_exception
	.addrsig_sym __cxa_throw
	.addrsig_sym _ZNKSt6vectorIN4seal7ModulusESaIS1_EE5emptyEv
	.addrsig_sym _ZNKSt6vectorIN4seal7ModulusESaIS1_EE4sizeEv
	.addrsig_sym _ZNSt6vectorIN4seal7ModulusESaIS1_EEaSERKS3_
	.addrsig_sym _ZN9__gnu_cxxeqIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_
	.addrsig_sym _ZNK9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS2_SaIS2_EEE4baseEv
	.addrsig_sym _ZNKSt6vectorIN4seal7ModulusESaIS1_EE8capacityEv
	.addrsig_sym _ZNSt6vectorIN4seal7ModulusESaIS1_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEEEPS1_mT_SB_
	.addrsig_sym _ZSt8_DestroyIPN4seal7ModulusES1_EvT_S3_RSaIT0_E
	.addrsig_sym _ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE19_M_get_Tp_allocatorEv
	.addrsig_sym _ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE13_M_deallocateEPS1_m
	.addrsig_sym _ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS3_SaIS3_EEEES3_EvT_S9_RSaIT0_E
	.addrsig_sym _ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET0_T_SD_SC_
	.addrsig_sym _ZNSt6vectorIN4seal7ModulusESaIS1_EE5beginEv
	.addrsig_sym _ZNSt6vectorIN4seal7ModulusESaIS1_EE3endEv
	.addrsig_sym _ZSt4copyIPN4seal7ModulusES2_ET0_T_S4_S3_
	.addrsig_sym _ZSt22__uninitialized_copy_aIPN4seal7ModulusES2_S1_ET0_T_S4_S3_RSaIT1_E
	.addrsig_sym _ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE11_M_allocateEm
	.addrsig_sym _ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E
	.addrsig_sym __cxa_rethrow
	.addrsig_sym __cxa_end_catch
	.addrsig_sym _ZNSt16allocator_traitsISaIN4seal7ModulusEEE8allocateERS2_m
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEE8allocateEmPKv
	.addrsig_sym _ZNK9__gnu_cxx13new_allocatorIN4seal7ModulusEE11_M_max_sizeEv
	.addrsig_sym _ZSt28__throw_bad_array_new_lengthv
	.addrsig_sym _ZSt17__throw_bad_allocv
	.addrsig_sym _Znwm
	.addrsig_sym _ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_
	.addrsig_sym _ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_
	.addrsig_sym _ZSt10_ConstructIN4seal7ModulusEJRKS1_EEvPT_DpOT0_
	.addrsig_sym _ZSt11__addressofIN4seal7ModulusEEPT_RS2_
	.addrsig_sym _ZSt8_DestroyIPN4seal7ModulusEEvT_S3_
	.addrsig_sym _ZSt7forwardIRKN4seal7ModulusEEOT_RNSt16remove_referenceIS4_E4typeE
	.addrsig_sym _ZNSt12_Destroy_auxILb1EE9__destroyIPN4seal7ModulusEEEvT_S5_
	.addrsig_sym _ZNSt16allocator_traitsISaIN4seal7ModulusEEE10deallocateERS2_PS1_m
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIN4seal7ModulusEE10deallocateEPS2_m
	.addrsig_sym _ZdlPv
	.addrsig_sym _ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS3_SaIS3_EEEEEvT_S9_
	.addrsig_sym _ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS5_SaIS5_EEEEEEvT_SB_
	.addrsig_sym _ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET1_T0_SD_SC_
	.addrsig_sym _ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN4seal7ModulusESt6vectorIS3_SaIS3_EEEEET_SA_
	.addrsig_sym _ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_
	.addrsig_sym _ZSt14__copy_move_a1ILb0EPKN4seal7ModulusEPS1_ET1_T0_S6_S5_
	.addrsig_sym _ZSt12__niter_baseIPKN4seal7ModulusESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE
	.addrsig_sym _ZSt12__niter_baseIPN4seal7ModulusESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE
	.addrsig_sym _ZNK9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEEplEl
	.addrsig_sym _ZSt14__copy_move_a2ILb0EPKN4seal7ModulusEPS1_ET1_T0_S6_S5_
	.addrsig_sym _ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN4seal7ModulusEEEPT_PKS5_S8_S6_
	.addrsig_sym _ZNK9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEE4baseEv
	.addrsig_sym _ZSt13__copy_move_aILb0EPN4seal7ModulusES2_ET1_T0_S4_S3_
	.addrsig_sym _ZSt12__miter_baseIPN4seal7ModulusEET_S3_
	.addrsig_sym _ZSt12__niter_wrapIPN4seal7ModulusEET_RKS3_S3_
	.addrsig_sym _ZSt14__copy_move_a1ILb0EPN4seal7ModulusES2_ET1_T0_S4_S3_
	.addrsig_sym _ZSt12__niter_baseIPN4seal7ModulusEET_S3_
	.addrsig_sym _ZSt14__copy_move_a2ILb0EPN4seal7ModulusES2_ET1_T0_S4_S3_
	.addrsig_sym _ZSt18uninitialized_copyIPN4seal7ModulusES2_ET0_T_S4_S3_
	.addrsig_sym _ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN4seal7ModulusES4_EET0_T_S6_S5_
	.addrsig_sym _ZSt10_ConstructIN4seal7ModulusEJRS1_EEvPT_DpOT0_
	.addrsig_sym _ZSt7forwardIRN4seal7ModulusEEOT_RNSt16remove_referenceIS3_E4typeE
	.addrsig_sym _ZN4seal16MemoryPoolHandleaSERKS0_
	.addrsig_sym _ZNSt10shared_ptrIN4seal4util10MemoryPoolEEaSERKS3_
	.addrsig_sym _ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEaSERKS5_
	.addrsig_sym _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EEaSERKS2_
	.addrsig_sym _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE15_M_add_ref_copyEv
	.addrsig_sym _ZN9__gnu_cxx14__alloc_traitsISaIN4seal7ModulusEES2_E17_S_select_on_copyERKS3_
	.addrsig_sym _ZNKSt12_Vector_baseIN4seal7ModulusESaIS1_EE19_M_get_Tp_allocatorEv
	.addrsig_sym _ZNSt16allocator_traitsISaIN4seal7ModulusEEE37select_on_container_copy_constructionERKS2_
	.addrsig_sym _ZNSt12_Vector_baseIN4seal7ModulusESaIS1_EE17_M_create_storageEm
	.addrsig_sym _ZNK4seal11SEALContext16key_context_dataEv
	.addrsig_sym _ZNKSt19__shared_ptr_accessIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2ELb0ELb0EEdeEv
	.addrsig_sym _ZNK4seal11SEALContext11ContextData5parmsEv
	.addrsig_sym _ZNK4seal20EncryptionParameters6schemeEv
	.addrsig_sym _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc
	.addrsig_sym _ZNK4seal20EncryptionParameters19poly_modulus_degreeEv
	.addrsig_sym _ZNK4seal11SEALContext11ContextData29total_coeff_modulus_bit_countEv
	.addrsig_sym _ZNSt6vectorIN4seal7ModulusESaIS1_EEixEm
	.addrsig_sym _ZNK4seal7Modulus9bit_countEv
	.addrsig_sym _ZNSt6vectorIN4seal7ModulusESaIS1_EE4backEv
	.addrsig_sym _ZNK4seal20EncryptionParameters13plain_modulusEv
	.addrsig_sym _ZNKSt13unordered_mapISt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S7_EEE4findERSD_
	.addrsig_sym _ZNSt8__detailneERKNS_19_Node_iterator_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEESE_
	.addrsig_sym _ZNKSt13unordered_mapISt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S7_EEE3endEv
	.addrsig_sym _ZNKSt8__detail20_Node_const_iteratorISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb0ELb1EEptEv
	.addrsig_sym _ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE4findERS3_
	.addrsig_sym _ZNKSt8__detail15_Hash_code_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE12_M_hash_codeERS4_
	.addrsig_sym _ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexEm
	.addrsig_sym _ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE12_M_find_nodeEmRS3_m
	.addrsig_sym _ZNKSt8__detail15_Hash_code_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE7_M_hashEv
	.addrsig_sym _ZNKSt4hashISt5arrayImLm4EEEclERKS1_
	.addrsig_sym _ZNKSt8__detail21_Hashtable_ebo_helperILi1ESt4hashISt5arrayImLm4EEELb1EE7_M_cgetEv
	.addrsig_sym _ZNKSt5arrayImLm4EEixEm
	.addrsig_sym _ZNSt14__array_traitsImLm4EE6_S_refERA4_Kmm
	.addrsig_sym _ZNKSt8__detail15_Hash_code_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexEmm
	.addrsig_sym _ZNKSt8__detail18_Mod_range_hashingclEmm
	.addrsig_sym _ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE19_M_find_before_nodeEmRS3_m
	.addrsig_sym _ZNKSt8__detail15_Hashtable_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt8equal_toIS2_ESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE9_M_equalsERS4_mRKNS_16_Hash_node_valueISB_Lb1EEE
	.addrsig_sym _ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE15_M_bucket_indexERKNSC_16_Hash_node_valueISA_Lb1EEE
	.addrsig_sym _ZNKSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EE7_M_nextEv
	.addrsig_sym _ZNSt8__detail15_Hashtable_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt8equal_toIS2_ESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE9_S_equalsEmRKNS_21_Hash_node_code_cacheILb1EEE
	.addrsig_sym _ZNKSt8__detail15_Hashtable_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt8equal_toIS2_ESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb1ELb0ELb1EEEE5_M_eqEv
	.addrsig_sym _ZNKSt8equal_toISt5arrayImLm4EEEclERKS1_S4_
	.addrsig_sym _ZNKSt8__detail10_Select1stclIRKSt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEEEDTclsr3stdE3getILi0EEclsr3stdE7forwardIT_Efp_EEEOSF_
	.addrsig_sym _ZNKSt8__detail21_Hash_node_value_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE4_M_vEv
	.addrsig_sym _ZNKSt8__detail21_Hashtable_ebo_helperILi0ESt8equal_toISt5arrayImLm4EEELb1EE7_M_cgetEv
	.addrsig_sym _ZSteqImLm4EEbRKSt5arrayIT_XT0_EES4_
	.addrsig_sym _ZSt5equalIPKmS1_EbT_S2_T0_
	.addrsig_sym _ZNKSt5arrayImLm4EE5beginEv
	.addrsig_sym _ZNKSt5arrayImLm4EE3endEv
	.addrsig_sym _ZSt11__equal_auxIPKmS1_EbT_S2_T0_
	.addrsig_sym _ZSt12__equal_aux1IPKmS1_EbT_S2_T0_
	.addrsig_sym _ZSt12__niter_baseIPKmET_S2_
	.addrsig_sym _ZNSt7__equalILb1EE5equalImEEbPKT_S4_S4_
	.addrsig_sym _ZSt8__memcmpImmEiPKT_PKT0_m
	.addrsig_sym memcmp
	.addrsig_sym _ZNKSt5arrayImLm4EE4dataEv
	.addrsig_sym _ZNSt14__array_traitsImLm4EE6_S_ptrERA4_Km
	.addrsig_sym _ZSt3getILm0EKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEERKNSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeERKSD_
	.addrsig_sym _ZSt7forwardIRKSt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEEOT_RNSt16remove_referenceISD_E4typeE
	.addrsig_sym _ZNSt10__pair_getILm0EE11__const_getIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEERKT_RKSt4pairISB_T0_E
	.addrsig_sym _ZNKSt8__detail21_Hash_node_value_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE9_M_valptrEv
	.addrsig_sym _ZNK9__gnu_cxx16__aligned_bufferISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE6_M_ptrEv
	.addrsig_sym _ZNK9__gnu_cxx16__aligned_bufferISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE7_M_addrEv
	.addrsig_sym _ZNKSt8__detail15_Hash_code_baseISt5arrayImLm4EESt4pairIKS2_St10shared_ptrIKN4seal11SEALContext11ContextDataEEENS_10_Select1stESt4hashIS2_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb1EE15_M_bucket_indexERKNS_16_Hash_node_valueISB_Lb1EEEm
	.addrsig_sym _ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE3endEv
	.addrsig_sym _ZNSt8__detail21_Hash_node_value_baseISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE9_M_valptrEv
	.addrsig_sym _ZN9__gnu_cxx16__aligned_bufferISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE6_M_ptrEv
	.addrsig_sym _ZN9__gnu_cxx16__aligned_bufferISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEEE7_M_addrEv
	.addrsig_sym _ZSt4moveIRSt10shared_ptrIN4seal11SEALContext11ContextDataEEEONSt16remove_referenceIT_E4typeEOS7_
	.addrsig_sym _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EE7_M_swapERS2_
	.addrsig_sym _ZNKSt19__shared_ptr_accessIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2ELb0ELb0EE6_M_getEv
	.addrsig_sym _ZNKSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EE3getEv
	.addrsig_sym _ZNK9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEEmiEl
	.addrsig_sym _ZNK9__gnu_cxx17__normal_iteratorIPN4seal7ModulusESt6vectorIS2_SaIS2_EEEdeEv
	.addrsig_sym _ZN4seal13MemoryManager7GetPoolIJbEEENS_16MemoryPoolHandleEmDpOT_
	.addrsig_sym _ZN4seal9PlaintextaSERKS0_
	.addrsig_sym _ZN4seal16MemoryPoolHandle6GlobalEv
	.addrsig_sym _ZN4seal16MemoryPoolHandle3NewEb
	.addrsig_sym _ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE
	.addrsig_sym _ZN4seal16MemoryPoolHandle11ThreadLocalEv
	.addrsig_sym _ZN4seal13MemoryManager9GetMMProfEv
	.addrsig_sym _ZNKSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EEptEv
	.addrsig_sym _ZSt4moveIRSt10shared_ptrIN4seal4util10MemoryPoolEEEONSt16remove_referenceIT_E4typeEOS7_
	.addrsig_sym _ZSt11make_sharedIN4seal4util12MemoryPoolMTEJRbEESt10shared_ptrIT_EDpOT0_
	.addrsig_sym _ZSt15allocate_sharedIN4seal4util12MemoryPoolMTESaIS2_EJRbEESt10shared_ptrIT_ERKT0_DpOT1_
	.addrsig_sym _ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE
	.addrsig_sym _ZNSt12__shared_ptrIN4seal4util12MemoryPoolMTELN9__gnu_cxx12_Lock_policyE2EE31_M_enable_shared_from_this_withIS2_S2_EENSt9enable_ifIXntsr15__has_esft_baseIT0_EE5valueEvE4typeEPT_
	.addrsig_sym _ZSt18__allocate_guardedISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEESt15__allocated_ptrIT_ERSA_
	.addrsig_sym _ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEE3getEv
	.addrsig_sym _ZNSt15__allocated_ptrISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEEaSEDn
	.addrsig_sym _ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE6_M_ptrEv
	.addrsig_sym _ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEE8allocateERS8_m
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEE8allocateEmPKv
	.addrsig_sym _ZNK9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEE11_M_max_sizeEv
	.addrsig_sym _ZSt11__addressofISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEEPT_RS9_
	.addrsig_sym _ZSt12__to_addressISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEPT_S9_
	.addrsig_sym _ZNSt16allocator_traitsISaIN4seal4util12MemoryPoolMTEEE9constructIS2_JRbEEEvRS3_PT_DpOT0_
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEE9constructIS3_JRbEEEvPT_DpOT0_
	.addrsig_sym _ZNSt16allocator_traitsISaIN4seal4util12MemoryPoolMTEEE7destroyIS2_EEvRS3_PT_
	.addrsig_sym _ZNSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE5_Impl8_M_allocEv
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIN4seal4util12MemoryPoolMTEE7destroyIS3_EEvPT_
	.addrsig_sym _ZNSt14_Sp_ebo_helperILi0ESaIN4seal4util12MemoryPoolMTEELb1EE6_S_getERS4_
	.addrsig_sym _ZNSt19_Sp_make_shared_tag5_S_tiEv
	.addrsig_sym _ZNKSt9type_infoeqERKS_
	.addrsig_sym strcmp
	.addrsig_sym _ZN9__gnu_cxx16__aligned_bufferIN4seal4util12MemoryPoolMTEE6_M_ptrEv
	.addrsig_sym _ZN9__gnu_cxx16__aligned_bufferIN4seal4util12MemoryPoolMTEE7_M_addrEv
	.addrsig_sym _ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS3_ELN9__gnu_cxx12_Lock_policyE2EEEE10deallocateERS8_PS7_m
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS4_ELNS_12_Lock_policyE2EEE10deallocateEPS7_m
	.addrsig_sym _ZSt4moveIRSt10shared_ptrIN4seal4util12MemoryPoolMTEEEONSt16remove_referenceIT_E4typeEOS7_
	.addrsig_sym _ZTWN4seal4util16global_variables15tls_memory_poolE
	.addrsig_sym __cxa_guard_acquire
	.addrsig_sym __cxa_guard_abort
	.addrsig_sym __cxa_guard_release
	.addrsig_sym _ZNSt15__uniq_ptr_implIN4seal6MMProfESt14default_deleteIS1_EE6_M_ptrEv
	.addrsig_sym _ZSt3getILm0EJPN4seal6MMProfESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_
	.addrsig_sym _ZSt12__get_helperILm0EPN4seal6MMProfEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE
	.addrsig_sym _ZNSt11_Tuple_implILm0EJPN4seal6MMProfESt14default_deleteIS1_EEE7_M_headERS5_
	.addrsig_sym _ZNSt10_Head_baseILm0EPN4seal6MMProfELb0EE7_M_headERS3_
	.addrsig_sym _ZNSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EE11get_deleterEv
	.addrsig_sym _ZNKSt14default_deleteIN4seal6MMProfEEclEPS1_
	.addrsig_sym _ZSt4moveIRPN4seal6MMProfEEONSt16remove_referenceIT_E4typeEOS5_
	.addrsig_sym _ZNSt15__uniq_ptr_implIN4seal6MMProfESt14default_deleteIS1_EE10_M_deleterEv
	.addrsig_sym _ZSt3getILm1EJPN4seal6MMProfESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_
	.addrsig_sym _ZSt12__get_helperILm1ESt14default_deleteIN4seal6MMProfEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE
	.addrsig_sym _ZNSt11_Tuple_implILm1EJSt14default_deleteIN4seal6MMProfEEEE7_M_headERS4_
	.addrsig_sym _ZNSt10_Head_baseILm1ESt14default_deleteIN4seal6MMProfEELb1EE7_M_headERS4_
	.addrsig_sym _ZNKSt10unique_ptrIN4seal6MMProfESt14default_deleteIS1_EE3getEv
	.addrsig_sym _ZNKSt15__uniq_ptr_implIN4seal6MMProfESt14default_deleteIS1_EE6_M_ptrEv
	.addrsig_sym _ZSt3getILm0EJPN4seal6MMProfESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_
	.addrsig_sym _ZSt12__get_helperILm0EPN4seal6MMProfEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE
	.addrsig_sym _ZNSt11_Tuple_implILm0EJPN4seal6MMProfESt14default_deleteIS1_EEE7_M_headERKS5_
	.addrsig_sym _ZNSt10_Head_baseILm0EPN4seal6MMProfELb0EE7_M_headERKS3_
	.addrsig_sym _ZN4seal8DynArrayImEaSERKS1_
	.addrsig_sym _ZN4seal8DynArrayImE6resizeEmb
	.addrsig_sym _ZSt4copyIPKmPmET0_T_S4_S3_
	.addrsig_sym _ZNK4seal8DynArrayImE6cbeginEv
	.addrsig_sym _ZNK4seal8DynArrayImE4cendEv
	.addrsig_sym _ZN4seal8DynArrayImE5beginEv
	.addrsig_sym _ZSt4fillIPmmEvT_S1_RKT0_
	.addrsig_sym _ZN4seal8DynArrayImE3endEv
	.addrsig_sym _ZN4seal4util8allocateImJEvEEDamRNS0_10MemoryPoolEDpOT0_
	.addrsig_sym _ZNK4seal16MemoryPoolHandlecvRNS_4util10MemoryPoolEEv
	.addrsig_sym _ZNK4seal4util7PointerImvE3getEv
	.addrsig_sym _ZSt4swapIN4seal4util7PointerImvEEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS7_ESt18is_move_assignableIS7_EEE5valueEvE4typeERS7_SG_
	.addrsig_sym _ZSt8__fill_aIPmmEvT_S1_RKT0_
	.addrsig_sym _ZSt9__fill_a1IPmmEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_
	.addrsig_sym _ZN4seal4util8mul_safeImvEET_S2_S2_
	.addrsig_sym _ZNSt14numeric_limitsImE3maxEv
	.addrsig_sym _ZN4seal4util14MemoryPoolItem4dataEv
	.addrsig_sym _ZN4seal4util7PointerISt4bytevE7releaseEv
	.addrsig_sym _ZdaPv
	.addrsig_sym _ZNKSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEcvbEv
	.addrsig_sym _ZNKSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EE3getEv
	.addrsig_sym _ZSt4moveIRN4seal4util7PointerImvEEEONSt16remove_referenceIT_E4typeEOS6_
	.addrsig_sym _ZN4seal4util7PointerImvEaSEOS2_
	.addrsig_sym _ZN4seal4util7PointerImvE7acquireEOS2_
	.addrsig_sym _ZN4seal4util7PointerImvE7acquireERS2_
	.addrsig_sym _ZN4seal4util7PointerImvE7releaseEv
	.addrsig_sym _ZSt13__copy_move_aILb0EPKmPmET1_T0_S4_S3_
	.addrsig_sym _ZSt12__miter_baseIPKmET_S2_
	.addrsig_sym _ZSt12__niter_wrapIPmET_RKS1_S1_
	.addrsig_sym _ZSt14__copy_move_a1ILb0EPKmPmET1_T0_S4_S3_
	.addrsig_sym _ZSt12__niter_baseIPmET_S1_
	.addrsig_sym _ZSt14__copy_move_a2ILb0EPKmPmET1_T0_S4_S3_
	.addrsig_sym _ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_
	.addrsig_sym _ZNK4seal12KeyGenerator11generate_pkEb
	.addrsig_sym _ZN4seal9PublicKeyaSEOS0_
	.addrsig_sym _ZN4seal10CiphertextaSEOS0_
	.addrsig_sym _ZN4seal8DynArrayImEaSEOS1_
	.addrsig_sym _ZSt4moveIRN4seal16MemoryPoolHandleEEONSt16remove_referenceIT_E4typeEOS4_
	.addrsig_sym _ZN4seal16MemoryPoolHandleaSEOS0_
	.addrsig_sym _ZNSt10shared_ptrIN4seal4util10MemoryPoolEEaSEOS3_
	.addrsig_sym _ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEaSEOS5_
	.addrsig_sym _ZSt4moveIRSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EEEONSt16remove_referenceIT_E4typeEOS9_
	.addrsig_sym _ZNSt12__shared_ptrIN4seal4util10MemoryPoolELN9__gnu_cxx12_Lock_policyE2EE4swapERS5_
	.addrsig_sym _ZSt4swapIPN4seal4util10MemoryPoolEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS7_ESt18is_move_assignableIS7_EEE5valueEvE4typeERS7_SG_
	.addrsig_sym _ZSt4moveIRPN4seal4util10MemoryPoolEEONSt16remove_referenceIT_E4typeEOS6_
	.addrsig_sym _ZN4seal12KeyGenerator17create_relin_keysEmb
	.addrsig_sym _ZN4seal9RelinKeysaSEOS0_
	.addrsig_sym _ZN4seal11KSwitchKeysaSEOS0_
	.addrsig_sym _ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EEaSEOS5_
	.addrsig_sym _ZNSt6vectorIS_IN4seal9PublicKeyESaIS1_EESaIS3_EE14_M_move_assignEOS5_St17integral_constantIbLb1EE
	.addrsig_sym _ZSt4moveIRSt6vectorIS0_IN4seal9PublicKeyESaIS2_EESaIS4_EEEONSt16remove_referenceIT_E4typeEOS9_
	.addrsig_sym _ZNKSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE13get_allocatorEv
	.addrsig_sym _ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE17_Vector_impl_data12_M_swap_dataERS7_
	.addrsig_sym _ZSt15__alloc_on_moveISaISt6vectorIN4seal9PublicKeyESaIS2_EEEEvRT_S7_
	.addrsig_sym _ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv
	.addrsig_sym _ZNKSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv
	.addrsig_sym _ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE17_Vector_impl_data12_M_copy_dataERKS7_
	.addrsig_sym _ZSt4moveIRSaISt6vectorIN4seal9PublicKeyESaIS2_EEEEONSt16remove_referenceIT_E4typeEOS8_
	.addrsig_sym _ZSt8_DestroyIPSt6vectorIN4seal9PublicKeyESaIS2_EES4_EvT_S6_RSaIT0_E
	.addrsig_sym _ZSt8_DestroyIPSt6vectorIN4seal9PublicKeyESaIS2_EEEvT_S6_
	.addrsig_sym _ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN4seal9PublicKeyESaIS4_EEEEvT_S8_
	.addrsig_sym _ZSt8_DestroyISt6vectorIN4seal9PublicKeyESaIS2_EEEvPT_
	.addrsig_sym _ZSt11__addressofISt6vectorIN4seal9PublicKeyESaIS2_EEEPT_RS5_
	.addrsig_sym _ZSt8_DestroyIPN4seal9PublicKeyES1_EvT_S3_RSaIT0_E
	.addrsig_sym _ZNSt12_Vector_baseIN4seal9PublicKeyESaIS1_EE19_M_get_Tp_allocatorEv
	.addrsig_sym _ZSt8_DestroyIPN4seal9PublicKeyEEvT_S3_
	.addrsig_sym _ZNSt12_Destroy_auxILb0EE9__destroyIPN4seal9PublicKeyEEEvT_S5_
	.addrsig_sym _ZSt8_DestroyIN4seal9PublicKeyEEvPT_
	.addrsig_sym _ZSt11__addressofIN4seal9PublicKeyEEPT_RS2_
	.addrsig_sym _ZNSt12_Vector_baseIN4seal9PublicKeyESaIS1_EE13_M_deallocateEPS1_m
	.addrsig_sym _ZNSt16allocator_traitsISaIN4seal9PublicKeyEEE10deallocateERS2_PS1_m
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIN4seal9PublicKeyEE10deallocateEPS2_m
	.addrsig_sym _ZNSt12_Vector_baseISt6vectorIN4seal9PublicKeyESaIS2_EESaIS4_EE13_M_deallocateEPS4_m
	.addrsig_sym _ZNSt16allocator_traitsISaISt6vectorIN4seal9PublicKeyESaIS2_EEEE10deallocateERS5_PS4_m
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorISt6vectorIN4seal9PublicKeyESaIS3_EEE10deallocateEPS5_m
	.addrsig_sym _ZN4seal12KeyGenerator18create_galois_keysERKSt6vectorIjSaIjEERNS_10GaloisKeysE
	.addrsig_sym _ZNK4seal11SEALContext11ContextData11galois_toolEv
	.addrsig_sym _ZNK4seal4util10GaloisTool12get_elts_allEv
	.addrsig_sym _ZN4seal12KeyGenerator18create_galois_keysERKSt6vectorIjSaIjEEb
	.addrsig_sym _ZN4seal10GaloisKeysaSEOS0_
	.addrsig_sym _ZNK4seal4util7PointerINS0_10GaloisToolEvE3getEv
	.addrsig_sym _ZSt8_DestroyIPjjEvT_S1_RSaIT0_E
	.addrsig_sym _ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv
	.addrsig_sym _ZSt8_DestroyIPjEvT_S1_
	.addrsig_sym _ZNSt12_Destroy_auxILb1EE9__destroyIPjEEvT_S3_
	.addrsig_sym _ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm
	.addrsig_sym _ZNSt16allocator_traitsISaIjEE10deallocateERS0_Pjm
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIjE10deallocateEPjm
	.addrsig_sym _ZN4seal13MemoryManager7GetPoolIJEEENS_16MemoryPoolHandleEmDpOT_
	.addrsig_sym _ZNK4seal16MemoryPoolHandlecvbEv
	.addrsig_sym _ZN4seal11CKKSEncoder6encodeEdSt5arrayImLm4EEdRNS_9PlaintextENS_16MemoryPoolHandleE
	.addrsig_sym _ZNK4seal11SEALContext14first_parms_idEv
	.addrsig_sym _ZN4seal11CKKSEncoder15encode_internalEdSt5arrayImLm4EEdRNS_9PlaintextENS_16MemoryPoolHandleE
	.addrsig_sym _ZStlsIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_St5_Setw
	.addrsig_sym _ZSt4setwi
	.addrsig_sym _ZNK4seal9Encryptor16encrypt_internalERKNS_9PlaintextEbbRNS_10CiphertextENS_16MemoryPoolHandleE
	.addrsig_sym _ZN4seal10CiphertextaSERKS0_
	.addrsig_sym _ZN4seal9Evaluator14square_inplaceERNS_10CiphertextENS_16MemoryPoolHandleE
	.addrsig_sym _ZN4seal9Evaluator20relinearize_internalERNS_10CiphertextERKNS_9RelinKeysEmddiNS_16MemoryPoolHandleE
	.addrsig_sym _ZN4seal9Evaluator15rescale_to_nextERKNS_10CiphertextERS1_ddiNS_16MemoryPoolHandleE
	.addrsig_sym _ZNSt8ios_base4setfESt13_Ios_FmtflagsS0_
	.addrsig_sym _ZStaNRSt13_Ios_FmtflagsS_
	.addrsig_sym _ZStcoSt13_Ios_Fmtflags
	.addrsig_sym _ZStoRRSt13_Ios_FmtflagsS_
	.addrsig_sym _ZStanSt13_Ios_FmtflagsS_
	.addrsig_sym _ZStorSt13_Ios_FmtflagsS_
	.addrsig_sym _ZN4seal9Evaluator11add_inplaceERNS_10CiphertextERKS1_
	.addrsig_sym _ZN4seal8DynArrayImE7releaseEv
	.addrsig_sym _ZN4seal4util7PointerISt7complexIdEvE7releaseEv
	.addrsig_sym _ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E
	.addrsig_sym _ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE8_M_beginEv
	.addrsig_sym _ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base
	.addrsig_sym _ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base
	.addrsig_sym _ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS3_E
	.addrsig_sym _ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS3_E
	.addrsig_sym _ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS3_E
	.addrsig_sym _ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKmS1_ImmEEEEE7destroyIS4_EEvRS6_PT_
	.addrsig_sym _ZNSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE21_M_get_Node_allocatorEv
	.addrsig_sym _ZNSt13_Rb_tree_nodeISt4pairIKmS0_ImmEEE9_M_valptrEv
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmS2_ImmEEEE7destroyIS5_EEvPT_
	.addrsig_sym _ZN9__gnu_cxx16__aligned_membufISt4pairIKmS1_ImmEEE6_M_ptrEv
	.addrsig_sym _ZN9__gnu_cxx16__aligned_membufISt4pairIKmS1_ImmEEE7_M_addrEv
	.addrsig_sym _ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKmS1_ImmEEEEE10deallocateERS6_PS5_m
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKmS2_ImmEEEE10deallocateEPS6_m
	.addrsig_sym _ZNKSt8_Rb_treeImSt4pairIKmS0_ImmEESt10_Select1stIS3_ESt4lessImESaIS3_EE9_M_mbeginEv
	.addrsig_sym _ZNSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE5clearEv
	.addrsig_sym _ZNSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEv
	.addrsig_sym _ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE19_M_deallocate_nodesEPSD_
	.addrsig_sym _ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE8_M_beginEv
	.addrsig_sym _ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE18_M_deallocate_nodeEPSD_
	.addrsig_sym _ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE7destroyISC_EEvRSE_PT_
	.addrsig_sym _ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE17_M_node_allocatorEv
	.addrsig_sym _ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE22_M_deallocate_node_ptrEPSD_
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEE7destroyISD_EEvPT_
	.addrsig_sym _ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEELb1EE6_M_getEv
	.addrsig_sym _ZNSt14pointer_traitsIPNSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEE10pointer_toERSD_
	.addrsig_sym _ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE10deallocateERSE_PSD_m
	.addrsig_sym _ZSt9addressofINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEPT_RSE_
	.addrsig_sym _ZSt11__addressofINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEPT_RSE_
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEE10deallocateEPSE_m
	.addrsig_sym _ZNSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_deallocate_bucketsEPPNSC_15_Hash_node_baseEm
	.addrsig_sym _ZNKSt10_HashtableISt5arrayImLm4EESt4pairIKS1_St10shared_ptrIKN4seal11SEALContext11ContextDataEEESaISA_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSC_18_Mod_range_hashingENSC_20_Default_ranged_hashENSC_20_Prime_rehash_policyENSC_17_Hashtable_traitsILb1ELb0ELb1EEEE21_M_uses_single_bucketEPPNSC_15_Hash_node_baseE
	.addrsig_sym _ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt5arrayImLm4EESt10shared_ptrIKN4seal11SEALContext11ContextDataEEELb1EEEEE21_M_deallocate_bucketsEPPNS_15_Hash_node_baseEm
	.addrsig_sym _ZNSt14pointer_traitsIPPNSt8__detail15_Hash_node_baseEE10pointer_toERS2_
	.addrsig_sym _ZNSt16allocator_traitsISaIPNSt8__detail15_Hash_node_baseEEE10deallocateERS3_PS2_m
	.addrsig_sym _ZSt9addressofIPNSt8__detail15_Hash_node_baseEEPT_RS3_
	.addrsig_sym _ZSt11__addressofIPNSt8__detail15_Hash_node_baseEEPT_RS3_
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE10deallocateEPS3_m
	.addrsig_sym _ZNSt6vectorIiSaIiEE19_M_range_initializeIPKiEEvT_S5_St20forward_iterator_tag
	.addrsig_sym _ZNKSt16initializer_listIiE5beginEv
	.addrsig_sym _ZNKSt16initializer_listIiE3endEv
	.addrsig_sym _ZSt8distanceIPKiENSt15iterator_traitsIT_E15difference_typeES3_S3_
	.addrsig_sym _ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm
	.addrsig_sym _ZNSt6vectorIiSaIiEE17_S_check_init_lenEmRKS0_
	.addrsig_sym _ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv
	.addrsig_sym _ZSt22__uninitialized_copy_aIPKiPiiET0_T_S4_S3_RSaIT1_E
	.addrsig_sym _ZSt10__distanceIPKiENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag
	.addrsig_sym _ZSt19__iterator_categoryIPKiENSt15iterator_traitsIT_E17iterator_categoryERKS3_
	.addrsig_sym _ZNSt16allocator_traitsISaIiEE8allocateERS0_m
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv
	.addrsig_sym _ZNK9__gnu_cxx13new_allocatorIiE11_M_max_sizeEv
	.addrsig_sym _ZNSt6vectorIiSaIiEE11_S_max_sizeERKS0_
	.addrsig_sym _ZSt20__throw_length_errorPKc
	.addrsig_sym _ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_
	.addrsig_sym _ZSt3minImERKT_S2_S2_
	.addrsig_sym _ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv
	.addrsig_sym _ZSt18uninitialized_copyIPKiPiET0_T_S4_S3_
	.addrsig_sym _ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKiPiEET0_T_S6_S5_
	.addrsig_sym _ZSt4copyIPKiPiET0_T_S4_S3_
	.addrsig_sym _ZSt13__copy_move_aILb0EPKiPiET1_T0_S4_S3_
	.addrsig_sym _ZSt12__miter_baseIPKiET_S2_
	.addrsig_sym _ZSt12__niter_wrapIPiET_RKS1_S1_
	.addrsig_sym _ZSt14__copy_move_a1ILb0EPKiPiET1_T0_S4_S3_
	.addrsig_sym _ZSt12__niter_baseIPKiET_S2_
	.addrsig_sym _ZSt12__niter_baseIPiET_S1_
	.addrsig_sym _ZSt14__copy_move_a2ILb0EPKiPiET1_T0_S4_S3_
	.addrsig_sym _ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_
	.addrsig_sym _ZNKSt16initializer_listIiE4sizeEv
	.addrsig_sym _ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim
	.addrsig_sym _ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim
	.addrsig_sym _ZSt8_DestroyIPiiEvT_S1_RSaIT0_E
	.addrsig_sym _ZSt8_DestroyIPiEvT_S1_
	.addrsig_sym _ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_
	.addrsig_sym _ZNSt11char_traitsIcE6lengthEPKc
	.addrsig_sym _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag
	.addrsig_sym _ZN9__gnu_cxx11char_traitsIcE6lengthEPKc
	.addrsig_sym strlen
	.addrsig_sym _ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_
	.addrsig_sym _ZN9__gnu_cxx17__is_null_pointerIKcEEbPT_
	.addrsig_sym _ZSt19__throw_logic_errorPKc
	.addrsig_sym _ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_
	.addrsig_sym _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc
	.addrsig_sym _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
	.addrsig_sym _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm
	.addrsig_sym _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_
	.addrsig_sym _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv
	.addrsig_sym _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
	.addrsig_sym _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm
	.addrsig_sym _ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag
	.addrsig_sym _ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_
	.addrsig_sym _ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_
	.addrsig_sym _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv
	.addrsig_sym _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm
	.addrsig_sym _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm
	.addrsig_sym _ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_
	.addrsig_sym _ZSt8_DestroyIPddEvT_S1_RSaIT0_E
	.addrsig_sym _ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv
	.addrsig_sym _ZSt8_DestroyIPdEvT_S1_
	.addrsig_sym _ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_
	.addrsig_sym _ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm
	.addrsig_sym _ZNSt16allocator_traitsISaIdEE10deallocateERS0_Pdm
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm
	.addrsig_sym _ZNKSt6vectorIdSaIdEE8max_sizeEv
	.addrsig_sym _ZNKSt6vectorIdSaIdEE8capacityEv
	.addrsig_sym _ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm
	.addrsig_sym _ZNSt6vectorIdSaIdEE11_S_relocateEPdS2_S2_RS0_
	.addrsig_sym _ZNSt6vectorIdSaIdEE11_S_max_sizeERKS0_
	.addrsig_sym _ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv
	.addrsig_sym _ZNSt16allocator_traitsISaIdEE8max_sizeERKS0_
	.addrsig_sym _ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv
	.addrsig_sym _ZNK9__gnu_cxx13new_allocatorIdE11_M_max_sizeEv
	.addrsig_sym _ZNSt16allocator_traitsISaIdEE8allocateERS0_m
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIdE8allocateEmPKv
	.addrsig_sym _ZNSt6vectorIdSaIdEE14_S_do_relocateEPdS2_S2_RS0_St17integral_constantIbLb1EE
	.addrsig_sym _ZSt12__relocate_aIPdS0_SaIdEET0_T_S3_S2_RT1_
	.addrsig_sym _ZSt14__relocate_a_1IddENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS1_E4typeES2_S2_S2_RSaIT0_E
	.addrsig_sym _ZSt12__niter_baseIPdET_S1_
	.addrsig_sym _ZNSt16allocator_traitsISaIdEE9constructIdJRKdEEEvRS0_PT_DpOT0_
	.addrsig_sym _ZNSt6vectorIdSaIdEE17_M_realloc_insertIJRKdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_
	.addrsig_sym _ZNSt6vectorIdSaIdEE3endEv
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIdE9constructIdJRKdEEEvPT_DpOT0_
	.addrsig_sym _ZSt7forwardIRKdEOT_RNSt16remove_referenceIS2_E4typeE
	.addrsig_sym _ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc
	.addrsig_sym _ZN9__gnu_cxxmiIPdSt6vectorIdSaIdEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_
	.addrsig_sym _ZNSt6vectorIdSaIdEE5beginEv
	.addrsig_sym _ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEE4baseEv
	.addrsig_sym _ZSt3maxImERKT_S2_S2_
	.addrsig_sym _ZNSt6vectorIdSaIdEE6resizeEm
	.addrsig_sym _ZNSt6vectorIdSaIdEE17_M_default_appendEm
	.addrsig_sym _ZNSt6vectorIdSaIdEE15_M_erase_at_endEPd
	.addrsig_sym _ZSt27__uninitialized_default_n_aIPdmdET_S1_T0_RSaIT1_E
	.addrsig_sym _ZSt25__uninitialized_default_nIPdmET_S1_T0_
	.addrsig_sym _ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPdmEET_S3_T0_
	.addrsig_sym _ZSt11__addressofIdEPT_RS0_
	.addrsig_sym _ZSt10_ConstructIdJEEvPT_DpOT0_
	.addrsig_sym _ZSt6fill_nIPdmdET_S1_T0_RKT1_
	.addrsig_sym _ZSt10__fill_n_aIPdmdET_S1_T0_RKT1_St26random_access_iterator_tag
	.addrsig_sym _ZSt17__size_to_integerm
	.addrsig_sym _ZSt19__iterator_categoryIPdENSt15iterator_traitsIT_E17iterator_categoryERKS2_
	.addrsig_sym _ZSt8__fill_aIPddEvT_S1_RKT0_
	.addrsig_sym _ZSt9__fill_a1IPddEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_
	.addrsig_sym _ZN9__gnu_cxx14__alloc_traitsISaIdEdE17_S_select_on_copyERKS1_
	.addrsig_sym _ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPddET0_T_SA_S9_RSaIT1_E
	.addrsig_sym _ZNKSt6vectorIdSaIdEE5beginEv
	.addrsig_sym _ZNKSt6vectorIdSaIdEE3endEv
	.addrsig_sym _ZNSt16allocator_traitsISaIdEE37select_on_container_copy_constructionERKS0_
	.addrsig_sym _ZNSt12_Vector_baseIdSaIdEE17_M_create_storageEm
	.addrsig_sym _ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET0_T_SA_S9_
	.addrsig_sym _ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdEET0_T_SC_SB_
	.addrsig_sym _ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET0_T_SA_S9_
	.addrsig_sym _ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEPdET1_T0_SA_S9_
	.addrsig_sym _ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEEEET_S8_
	.addrsig_sym _ZSt12__niter_wrapIPdET_RKS1_S1_
	.addrsig_sym _ZSt14__copy_move_a1ILb0EPKdPdET1_T0_S4_S3_
	.addrsig_sym _ZSt12__niter_baseIPKdSt6vectorIdSaIdEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE
	.addrsig_sym _ZSt14__copy_move_a2ILb0EPKdPdET1_T0_S4_S3_
	.addrsig_sym _ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIdEEPT_PKS3_S6_S4_
	.addrsig_sym _ZNK9__gnu_cxx17__normal_iteratorIPKdSt6vectorIdSaIdEEE4baseEv
	.addrsig_sym _ZN4seal11CKKSEncoder6encodeIdvEEvRKSt6vectorIT_SaIS3_EESt5arrayImLm4EEdRNS_9PlaintextENS_16MemoryPoolHandleE
	.addrsig_sym _ZN4seal11CKKSEncoder15encode_internalIdvEEvPKT_mSt5arrayImLm4EEdRNS_9PlaintextENS_16MemoryPoolHandleE
	.addrsig_sym _ZNKSt6vectorIdSaIdEE4dataEv
	.addrsig_sym _ZNKSt12__shared_ptrIKN4seal11SEALContext11ContextDataELN9__gnu_cxx12_Lock_policyE2EEcvbEv
	.addrsig_sym _ZN4seal4util15product_fits_inImJRmEvEEbT_DpOT0_
	.addrsig_sym _ZNK4seal11SEALContext11ContextData16small_ntt_tablesEv
	.addrsig_sym _ZN4seal4util8allocateISt7complexIdEJiEvEEDamRNS0_10MemoryPoolEDpOT0_
	.addrsig_sym _ZN4seal4util7PointerISt7complexIdEvEixEm
	.addrsig_sym _ZN4seal4util7PointerImvEixEm
	.addrsig_sym _ZNSt7complexIdEaSEd
	.addrsig_sym _ZSt4conjIdESt7complexIN9__gnu_cxx9__promoteIT_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEES3_
	.addrsig_sym _ZNK4seal4util10DWTHandlerISt7complexIdES3_dE18transform_from_revEPS3_iPKS3_PKdi
	.addrsig_sym _ZNK4seal4util7PointerISt7complexIdEvE3getEv
	.addrsig_sym _ZN4seal4util16get_power_of_twoEm
	.addrsig_sym _ZSt3maxIdERKT_S2_S2_
	.addrsig_sym _ZNKSt7complexIdE4realB5cxx11Ev
	.addrsig_sym _ZN4seal9Plaintext6resizeEm
	.addrsig_sym _ZSt7signbitd
	.addrsig_sym _ZN4seal4util15negate_uint_modEmRKNS_7ModulusE
	.addrsig_sym _ZN4seal4util17barrett_reduce_64ImvEEmT_RKNS_7ModulusE
	.addrsig_sym _ZNKSt6vectorIN4seal7ModulusESaIS1_EEixEm
	.addrsig_sym _ZN4seal9PlaintextixEm
	.addrsig_sym fmod
	.addrsig_sym _ZN4seal4util18barrett_reduce_128ImvEEmPKT_RKNS_7ModulusE
	.addrsig_sym _ZN4seal4util13allocate_uintEmRNS0_10MemoryPoolE
	.addrsig_sym _ZN4seal4util13set_zero_uintEmPm
	.addrsig_sym _ZNK4seal11SEALContext11ContextData8rns_toolEv
	.addrsig_sym _ZNK4seal4util7RNSTool6base_qEv
	.addrsig_sym _ZNK4seal4util7RNSBase9decomposeEPmNS_16MemoryPoolHandleE
	.addrsig_sym _ZN4seal4util21ntt_negacyclic_harveyENS0_7PtrIterIPmEERKNS0_9NTTTablesE
	.addrsig_sym _ZN4seal9Plaintext4dataEm
	.addrsig_sym _ZN4seal4util7fits_inImmvvEEbT0_
	.addrsig_sym _ZSt7forwardIRmEOT_RNSt16remove_referenceIS1_E4typeE
	.addrsig_sym _ZNSt14numeric_limitsImE3minEv
	.addrsig_sym _ZNK4seal4util7PointerINS0_9NTTTablesEvE3getEv
	.addrsig_sym _ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE
	.addrsig_sym _ZNK4seal4util10ArithmeticISt7complexIdES3_dE5guardERKS3_
	.addrsig_sym _ZNK4seal4util10ArithmeticISt7complexIdES3_dE3addERKS3_S6_
	.addrsig_sym _ZNK4seal4util10ArithmeticISt7complexIdES3_dE8mul_rootERKS3_S6_
	.addrsig_sym _ZNK4seal4util10ArithmeticISt7complexIdES3_dE3subERKS3_S6_
	.addrsig_sym _ZNK4seal4util10ArithmeticISt7complexIdES3_dE15mul_root_scalarERKS3_RKdi
	.addrsig_sym _ZNK4seal4util10ArithmeticISt7complexIdES3_dE10mul_scalarERKS3_RKd
	.addrsig_sym _ZStplIdESt7complexIT_ERKS2_S4_
	.addrsig_sym _ZNSt7complexIdEpLIdEERS0_RKS_IT_E
	.addrsig_sym _ZNKSt7complexIdE5__repEv
	.addrsig_sym _ZStmlIdESt7complexIT_ERKS2_S4_
	.addrsig_sym _ZNSt7complexIdEmLIdEERS0_RKS_IT_E
	.addrsig_sym __muldc3
	.addrsig_sym _ZStmiIdESt7complexIT_ERKS2_S4_
	.addrsig_sym _ZNSt7complexIdEmIIdEERS0_RKS_IT_E
	.addrsig_sym _ZStmlIdESt7complexIT_ERKS2_RKS1_
	.addrsig_sym _ZNSt7complexIdEmLEd
	.addrsig_sym _ZNK4seal9Plaintext11is_ntt_formEv
	.addrsig_sym _ZStneImLm4EEbRKSt5arrayIT_XT0_EES4_
	.addrsig_sym _ZNK4seal7Modulus11const_ratioEv
	.addrsig_sym _ZNKSt5arrayImLm3EE4dataEv
	.addrsig_sym _ZN4seal4util20multiply_uint64_hw64ImmvEEvT_T0_Py
	.addrsig_sym _ZNSt14__array_traitsImLm3EE6_S_ptrERA3_Km
	.addrsig_sym _ZN4seal8DynArrayImE2atEm
	.addrsig_sym _ZN4seal4util15multiply_uint64ImmvEEvT_T0_Py
	.addrsig_sym _ZN4seal4util10add_uint64IyyyvEEhT_T0_PT1_
	.addrsig_sym _ZSt6fill_nIPmmmET_S1_T0_RKT1_
	.addrsig_sym _ZSt10__fill_n_aIPmmmET_S1_T0_RKT1_St26random_access_iterator_tag
	.addrsig_sym _ZSt19__iterator_categoryIPmENSt15iterator_traitsIT_E17iterator_categoryERKS2_
	.addrsig_sym _ZNK4seal4util7PointerINS0_7RNSToolEvE3getEv
	.addrsig_sym _ZNK4seal4util7PointerINS0_7RNSBaseEvE3getEv
	.addrsig_sym _ZN4seal4util26ntt_negacyclic_harvey_lazyENS0_7PtrIterIPmEERKNS0_9NTTTablesE
	.addrsig_sym _ZNK4seal4util9NTTTables7modulusEv
	.addrsig_sym _ZNK4seal4util9NTTTables17coeff_count_powerEv
	.addrsig_sym _ZSt10for_each_nIN4seal4util7PtrIterIPmEEmZNS1_21ntt_negacyclic_harveyES4_RKNS1_9NTTTablesEEUlRT_E_ES8_S8_T0_T1_
	.addrsig_sym _ZNK4seal4util7PtrIterIPmEplImEES3_T_
	.addrsig_sym _ZSt8for_eachIN4seal4util7PtrIterIPmEEZNS1_21ntt_negacyclic_harveyES4_RKNS1_9NTTTablesEEUlRT_E_ET0_S8_S8_SB_
	.addrsig_sym _ZSt4moveIRZN4seal4util21ntt_negacyclic_harveyENS1_7PtrIterIPmEERKNS1_9NTTTablesEEUlRT_E_EONSt16remove_referenceIS8_E4typeEOS8_
	.addrsig_sym _ZNK4seal4util7PtrIterIPmEneImEEbRKNS1_IPT_EE
	.addrsig_sym _ZZN4seal4util21ntt_negacyclic_harveyENS0_7PtrIterIPmEERKNS0_9NTTTablesEENKUlRT_E_clImEEDaS8_
	.addrsig_sym _ZNK4seal4util7PtrIterIPmEdeEv
	.addrsig_sym _ZN4seal4util7PtrIterIPmEppEv
	.addrsig_sym _ZNK4seal4util7PtrIterIPmEeqImEEbRKNS1_IPT_EE
	.addrsig_sym _ZNK4seal4util7PtrIterIPmE3ptrEv
	.addrsig_sym _ZNKSt6vectorIdSaIdEE11_M_data_ptrIdEEPT_S4_
	.addrsig_sym _ZNSt6vectorIdSaIdEE12emplace_backIJdEEERdDpOT_
	.addrsig_sym _ZSt4moveIRdEONSt16remove_referenceIT_E4typeEOS2_
	.addrsig_sym _ZNSt16allocator_traitsISaIdEE9constructIdJdEEEvRS0_PT_DpOT0_
	.addrsig_sym _ZSt7forwardIdEOT_RNSt16remove_referenceIS0_E4typeE
	.addrsig_sym _ZNSt6vectorIdSaIdEE17_M_realloc_insertIJdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_
	.addrsig_sym _ZNSt6vectorIdSaIdEE4backEv
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIdE9constructIdJdEEEvPT_DpOT0_
	.addrsig_sym _ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEmiEl
	.addrsig_sym _ZNK9__gnu_cxx17__normal_iteratorIPdSt6vectorIdSaIdEEEdeEv
	.addrsig_sym _ZN4seal11CKKSEncoder15decode_internalIdvEEvRKNS_9PlaintextEPT_NS_16MemoryPoolHandleE
	.addrsig_sym _ZNSt6vectorIdSaIdEE4dataEv
	.addrsig_sym _ZN4seal12is_valid_forERKNS_9PlaintextERKNS_11SEALContextE
	.addrsig_sym _ZNK4seal9Plaintext8parms_idEv
	.addrsig_sym _ZNK4seal9Plaintext5scaleEv
	.addrsig_sym _ZNK4seal11SEALContext11ContextData19total_coeff_modulusEv
	.addrsig_sym _ZNK4seal11SEALContext11ContextData20upper_half_thresholdEv
	.addrsig_sym _ZN4seal4util8set_uintEPKmmPm
	.addrsig_sym _ZNK4seal9Plaintext4dataEv
	.addrsig_sym _ZN4seal4util29inverse_ntt_negacyclic_harveyENS0_7PtrIterIPmEERKNS0_9NTTTablesEi
	.addrsig_sym _ZNK4seal4util9NTTTables8get_rootEv
	.addrsig_sym _ZNK4seal4util7RNSBase13compose_arrayEPmmNS_16MemoryPoolHandleE
	.addrsig_sym _ZN4seal4util8allocateISt7complexIdEJEvEEDamRNS0_10MemoryPoolEDpOT0_
	.addrsig_sym _ZN4seal4util29is_greater_than_or_equal_uintEPKmS2_m
	.addrsig_sym _ZNSt7complexIdEpLEd
	.addrsig_sym _ZNSt7complexIdEmIEd
	.addrsig_sym _ZNK4seal4util10DWTHandlerISt7complexIdES3_dE16transform_to_revEPS3_iPKS3_PKd
	.addrsig_sym _ZN4seal12from_complexIdvEET_St7complexIdE
	.addrsig_sym _ZN4seal15is_buffer_validERKNS_9PlaintextE
	.addrsig_sym _ZN4seal17is_data_valid_forERKNS_9PlaintextERKNS_11SEALContextE
	.addrsig_sym _ZSt6copy_nIPKmmPmET1_T_T0_S3_
	.addrsig_sym _ZSt8__copy_nIPKmmPmET1_T_T0_S3_St26random_access_iterator_tag
	.addrsig_sym _ZSt19__iterator_categoryIPKmENSt15iterator_traitsIT_E17iterator_categoryERKS3_
	.addrsig_sym _ZN4seal4util34inverse_ntt_negacyclic_harvey_lazyENS0_7PtrIterIPmEERKNS0_9NTTTablesEi
	.addrsig_sym _ZSt10for_each_nIN4seal4util7PtrIterIPmEEmZNS1_29inverse_ntt_negacyclic_harveyES4_RKNS1_9NTTTablesEiEUlRT_E_ES8_S8_T0_T1_
	.addrsig_sym _ZSt8for_eachIN4seal4util7PtrIterIPmEEZNS1_29inverse_ntt_negacyclic_harveyES4_RKNS1_9NTTTablesEiEUlRT_E_ET0_S8_S8_SB_
	.addrsig_sym _ZSt4moveIRZN4seal4util29inverse_ntt_negacyclic_harveyENS1_7PtrIterIPmEERKNS1_9NTTTablesEiEUlRT_E_EONSt16remove_referenceIS8_E4typeEOS8_
	.addrsig_sym _ZZN4seal4util29inverse_ntt_negacyclic_harveyENS0_7PtrIterIPmEERKNS0_9NTTTablesEiENKUlRT_E_clImEEDaS8_
	.addrsig_sym _ZN4seal4util12compare_uintEPKmS2_m
	.addrsig_sym _GLOBAL__sub_I_4_ckks_basics.cpp
	.addrsig_sym _ZTHN4seal4util16global_variables15tls_memory_poolE
	.addrsig_sym _Unwind_Resume
	.addrsig_sym _ZStL8__ioinit
	.addrsig_sym __dso_handle
	.addrsig_sym _ZSt4cout
	.addrsig_sym _ZN4seal13parms_id_zeroE
	.addrsig_sym .Lconstinit
	.addrsig_sym __libc_single_threaded
	.addrsig_sym _ZTISt11logic_error
	.addrsig_sym _ZTISt16invalid_argument
	.addrsig_sym _ZN4seal4util16global_variables18global_memory_poolE
	.addrsig_sym _ZTVN10__cxxabiv120__si_class_type_infoE
	.addrsig_sym _ZTSSt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE
	.addrsig_sym _ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.addrsig_sym _ZTVN10__cxxabiv117__class_type_infoE
	.addrsig_sym _ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE
	.addrsig_sym _ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE
	.addrsig_sym _ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.addrsig_sym _ZTISt23_Sp_counted_ptr_inplaceIN4seal4util12MemoryPoolMTESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE
	.addrsig_sym _ZTSN4seal4util10MemoryPoolE
	.addrsig_sym _ZTIN4seal4util10MemoryPoolE
	.addrsig_sym _ZTSSt19_Sp_make_shared_tag
	.addrsig_sym _ZTISt19_Sp_make_shared_tag
	.addrsig_sym _ZZNSt19_Sp_make_shared_tag5_S_tiEvE5__tag
	.addrsig_sym _ZZN4seal13MemoryManager9GetMMProfEvE7mm_prof
	.addrsig_sym _ZGVZN4seal13MemoryManager9GetMMProfEvE7mm_prof
	.addrsig_sym _ZTSN4seal12MMProfGlobalE
	.addrsig_sym _ZTSN4seal6MMProfE
	.addrsig_sym _ZTIN4seal6MMProfE
	.addrsig_sym _ZTIN4seal12MMProfGlobalE
	.addrsig_sym _ZTISt12out_of_range
